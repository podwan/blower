
focTemplate.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001254c  080001e0  080001e0  000011e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000005c8  08012730  08012730  00013730  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08012cf8  08012cf8  00014258  2**0
                  CONTENTS
  4 .ARM          00000008  08012cf8  08012cf8  00013cf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08012d00  08012d00  00014258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08012d00  08012d00  00013d00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08012d04  08012d04  00013d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000258  20000000  08012d08  00014000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000870  20000258  08012f60  00014258  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000ac8  08012f60  00014ac8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00014258  2**0
                  CONTENTS, READONLY
 12 .debug_info   00027d9a  00000000  00000000  00014288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000608d  00000000  00000000  0003c022  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002030  00000000  00000000  000420b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001873  00000000  00000000  000440e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00029763  00000000  00000000  00045953  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0002fec3  00000000  00000000  0006f0b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
<<<<<<< HEAD
 18 .debug_str    000eeefd  00000000  00000000  0009e8ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0018d7aa  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000099f4  00000000  00000000  0018d7f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005a  00000000  00000000  001971e4  2**0
=======
 18 .debug_str    000eeee3  00000000  00000000  0009ef79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0018de5c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000099f4  00000000  00000000  0018dea0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005a  00000000  00000000  00197894  2**0
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	@ (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	@ (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	@ (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	20000258 	.word	0x20000258
 80001fc:	00000000 	.word	0x00000000
 8000200:	08012714 	.word	0x08012714

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	@ (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	@ (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	@ (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	2000025c 	.word	0x2000025c
 800021c:	08012714 	.word	0x08012714

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <strlen>:
 80002c0:	4603      	mov	r3, r0
 80002c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002c6:	2a00      	cmp	r2, #0
 80002c8:	d1fb      	bne.n	80002c2 <strlen+0x2>
 80002ca:	1a18      	subs	r0, r3, r0
 80002cc:	3801      	subs	r0, #1
 80002ce:	4770      	bx	lr

080002d0 <__aeabi_drsub>:
 80002d0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002d4:	e002      	b.n	80002dc <__adddf3>
 80002d6:	bf00      	nop

080002d8 <__aeabi_dsub>:
 80002d8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002dc <__adddf3>:
 80002dc:	b530      	push	{r4, r5, lr}
 80002de:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002e2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002e6:	ea94 0f05 	teq	r4, r5
 80002ea:	bf08      	it	eq
 80002ec:	ea90 0f02 	teqeq	r0, r2
 80002f0:	bf1f      	itttt	ne
 80002f2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002f6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002fa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002fe:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000302:	f000 80e2 	beq.w	80004ca <__adddf3+0x1ee>
 8000306:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800030a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800030e:	bfb8      	it	lt
 8000310:	426d      	neglt	r5, r5
 8000312:	dd0c      	ble.n	800032e <__adddf3+0x52>
 8000314:	442c      	add	r4, r5
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	ea82 0000 	eor.w	r0, r2, r0
 8000322:	ea83 0101 	eor.w	r1, r3, r1
 8000326:	ea80 0202 	eor.w	r2, r0, r2
 800032a:	ea81 0303 	eor.w	r3, r1, r3
 800032e:	2d36      	cmp	r5, #54	@ 0x36
 8000330:	bf88      	it	hi
 8000332:	bd30      	pophi	{r4, r5, pc}
 8000334:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000338:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800033c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000340:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000344:	d002      	beq.n	800034c <__adddf3+0x70>
 8000346:	4240      	negs	r0, r0
 8000348:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800034c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000350:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000354:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000358:	d002      	beq.n	8000360 <__adddf3+0x84>
 800035a:	4252      	negs	r2, r2
 800035c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000360:	ea94 0f05 	teq	r4, r5
 8000364:	f000 80a7 	beq.w	80004b6 <__adddf3+0x1da>
 8000368:	f1a4 0401 	sub.w	r4, r4, #1
 800036c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000370:	db0d      	blt.n	800038e <__adddf3+0xb2>
 8000372:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000376:	fa22 f205 	lsr.w	r2, r2, r5
 800037a:	1880      	adds	r0, r0, r2
 800037c:	f141 0100 	adc.w	r1, r1, #0
 8000380:	fa03 f20e 	lsl.w	r2, r3, lr
 8000384:	1880      	adds	r0, r0, r2
 8000386:	fa43 f305 	asr.w	r3, r3, r5
 800038a:	4159      	adcs	r1, r3
 800038c:	e00e      	b.n	80003ac <__adddf3+0xd0>
 800038e:	f1a5 0520 	sub.w	r5, r5, #32
 8000392:	f10e 0e20 	add.w	lr, lr, #32
 8000396:	2a01      	cmp	r2, #1
 8000398:	fa03 fc0e 	lsl.w	ip, r3, lr
 800039c:	bf28      	it	cs
 800039e:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003a2:	fa43 f305 	asr.w	r3, r3, r5
 80003a6:	18c0      	adds	r0, r0, r3
 80003a8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003ac:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003b0:	d507      	bpl.n	80003c2 <__adddf3+0xe6>
 80003b2:	f04f 0e00 	mov.w	lr, #0
 80003b6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003ba:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003be:	eb6e 0101 	sbc.w	r1, lr, r1
 80003c2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003c6:	d31b      	bcc.n	8000400 <__adddf3+0x124>
 80003c8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003cc:	d30c      	bcc.n	80003e8 <__adddf3+0x10c>
 80003ce:	0849      	lsrs	r1, r1, #1
 80003d0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003d4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003d8:	f104 0401 	add.w	r4, r4, #1
 80003dc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003e0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003e4:	f080 809a 	bcs.w	800051c <__adddf3+0x240>
 80003e8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ec:	bf08      	it	eq
 80003ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003f2:	f150 0000 	adcs.w	r0, r0, #0
 80003f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003fa:	ea41 0105 	orr.w	r1, r1, r5
 80003fe:	bd30      	pop	{r4, r5, pc}
 8000400:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000404:	4140      	adcs	r0, r0
 8000406:	eb41 0101 	adc.w	r1, r1, r1
 800040a:	3c01      	subs	r4, #1
 800040c:	bf28      	it	cs
 800040e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000412:	d2e9      	bcs.n	80003e8 <__adddf3+0x10c>
 8000414:	f091 0f00 	teq	r1, #0
 8000418:	bf04      	itt	eq
 800041a:	4601      	moveq	r1, r0
 800041c:	2000      	moveq	r0, #0
 800041e:	fab1 f381 	clz	r3, r1
 8000422:	bf08      	it	eq
 8000424:	3320      	addeq	r3, #32
 8000426:	f1a3 030b 	sub.w	r3, r3, #11
 800042a:	f1b3 0220 	subs.w	r2, r3, #32
 800042e:	da0c      	bge.n	800044a <__adddf3+0x16e>
 8000430:	320c      	adds	r2, #12
 8000432:	dd08      	ble.n	8000446 <__adddf3+0x16a>
 8000434:	f102 0c14 	add.w	ip, r2, #20
 8000438:	f1c2 020c 	rsb	r2, r2, #12
 800043c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000440:	fa21 f102 	lsr.w	r1, r1, r2
 8000444:	e00c      	b.n	8000460 <__adddf3+0x184>
 8000446:	f102 0214 	add.w	r2, r2, #20
 800044a:	bfd8      	it	le
 800044c:	f1c2 0c20 	rsble	ip, r2, #32
 8000450:	fa01 f102 	lsl.w	r1, r1, r2
 8000454:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000458:	bfdc      	itt	le
 800045a:	ea41 010c 	orrle.w	r1, r1, ip
 800045e:	4090      	lslle	r0, r2
 8000460:	1ae4      	subs	r4, r4, r3
 8000462:	bfa2      	ittt	ge
 8000464:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000468:	4329      	orrge	r1, r5
 800046a:	bd30      	popge	{r4, r5, pc}
 800046c:	ea6f 0404 	mvn.w	r4, r4
 8000470:	3c1f      	subs	r4, #31
 8000472:	da1c      	bge.n	80004ae <__adddf3+0x1d2>
 8000474:	340c      	adds	r4, #12
 8000476:	dc0e      	bgt.n	8000496 <__adddf3+0x1ba>
 8000478:	f104 0414 	add.w	r4, r4, #20
 800047c:	f1c4 0220 	rsb	r2, r4, #32
 8000480:	fa20 f004 	lsr.w	r0, r0, r4
 8000484:	fa01 f302 	lsl.w	r3, r1, r2
 8000488:	ea40 0003 	orr.w	r0, r0, r3
 800048c:	fa21 f304 	lsr.w	r3, r1, r4
 8000490:	ea45 0103 	orr.w	r1, r5, r3
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f1c4 040c 	rsb	r4, r4, #12
 800049a:	f1c4 0220 	rsb	r2, r4, #32
 800049e:	fa20 f002 	lsr.w	r0, r0, r2
 80004a2:	fa01 f304 	lsl.w	r3, r1, r4
 80004a6:	ea40 0003 	orr.w	r0, r0, r3
 80004aa:	4629      	mov	r1, r5
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	fa21 f004 	lsr.w	r0, r1, r4
 80004b2:	4629      	mov	r1, r5
 80004b4:	bd30      	pop	{r4, r5, pc}
 80004b6:	f094 0f00 	teq	r4, #0
 80004ba:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004be:	bf06      	itte	eq
 80004c0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004c4:	3401      	addeq	r4, #1
 80004c6:	3d01      	subne	r5, #1
 80004c8:	e74e      	b.n	8000368 <__adddf3+0x8c>
 80004ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ce:	bf18      	it	ne
 80004d0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004d4:	d029      	beq.n	800052a <__adddf3+0x24e>
 80004d6:	ea94 0f05 	teq	r4, r5
 80004da:	bf08      	it	eq
 80004dc:	ea90 0f02 	teqeq	r0, r2
 80004e0:	d005      	beq.n	80004ee <__adddf3+0x212>
 80004e2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004e6:	bf04      	itt	eq
 80004e8:	4619      	moveq	r1, r3
 80004ea:	4610      	moveq	r0, r2
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	ea91 0f03 	teq	r1, r3
 80004f2:	bf1e      	ittt	ne
 80004f4:	2100      	movne	r1, #0
 80004f6:	2000      	movne	r0, #0
 80004f8:	bd30      	popne	{r4, r5, pc}
 80004fa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004fe:	d105      	bne.n	800050c <__adddf3+0x230>
 8000500:	0040      	lsls	r0, r0, #1
 8000502:	4149      	adcs	r1, r1
 8000504:	bf28      	it	cs
 8000506:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800050a:	bd30      	pop	{r4, r5, pc}
 800050c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000510:	bf3c      	itt	cc
 8000512:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000516:	bd30      	popcc	{r4, r5, pc}
 8000518:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800051c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000520:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000524:	f04f 0000 	mov.w	r0, #0
 8000528:	bd30      	pop	{r4, r5, pc}
 800052a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800052e:	bf1a      	itte	ne
 8000530:	4619      	movne	r1, r3
 8000532:	4610      	movne	r0, r2
 8000534:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000538:	bf1c      	itt	ne
 800053a:	460b      	movne	r3, r1
 800053c:	4602      	movne	r2, r0
 800053e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000542:	bf06      	itte	eq
 8000544:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000548:	ea91 0f03 	teqeq	r1, r3
 800054c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000550:	bd30      	pop	{r4, r5, pc}
 8000552:	bf00      	nop

08000554 <__aeabi_ui2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f04f 0500 	mov.w	r5, #0
 800056c:	f04f 0100 	mov.w	r1, #0
 8000570:	e750      	b.n	8000414 <__adddf3+0x138>
 8000572:	bf00      	nop

08000574 <__aeabi_i2d>:
 8000574:	f090 0f00 	teq	r0, #0
 8000578:	bf04      	itt	eq
 800057a:	2100      	moveq	r1, #0
 800057c:	4770      	bxeq	lr
 800057e:	b530      	push	{r4, r5, lr}
 8000580:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000584:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000588:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800058c:	bf48      	it	mi
 800058e:	4240      	negmi	r0, r0
 8000590:	f04f 0100 	mov.w	r1, #0
 8000594:	e73e      	b.n	8000414 <__adddf3+0x138>
 8000596:	bf00      	nop

08000598 <__aeabi_f2d>:
 8000598:	0042      	lsls	r2, r0, #1
 800059a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800059e:	ea4f 0131 	mov.w	r1, r1, rrx
 80005a2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005a6:	bf1f      	itttt	ne
 80005a8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80005ac:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005b0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005b4:	4770      	bxne	lr
 80005b6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005ba:	bf08      	it	eq
 80005bc:	4770      	bxeq	lr
 80005be:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005c2:	bf04      	itt	eq
 80005c4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005c8:	4770      	bxeq	lr
 80005ca:	b530      	push	{r4, r5, lr}
 80005cc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005d0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005d4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005d8:	e71c      	b.n	8000414 <__adddf3+0x138>
 80005da:	bf00      	nop

080005dc <__aeabi_ul2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f04f 0500 	mov.w	r5, #0
 80005ea:	e00a      	b.n	8000602 <__aeabi_l2d+0x16>

080005ec <__aeabi_l2d>:
 80005ec:	ea50 0201 	orrs.w	r2, r0, r1
 80005f0:	bf08      	it	eq
 80005f2:	4770      	bxeq	lr
 80005f4:	b530      	push	{r4, r5, lr}
 80005f6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005fa:	d502      	bpl.n	8000602 <__aeabi_l2d+0x16>
 80005fc:	4240      	negs	r0, r0
 80005fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000602:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000606:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800060a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800060e:	f43f aed8 	beq.w	80003c2 <__adddf3+0xe6>
 8000612:	f04f 0203 	mov.w	r2, #3
 8000616:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061a:	bf18      	it	ne
 800061c:	3203      	addne	r2, #3
 800061e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000622:	bf18      	it	ne
 8000624:	3203      	addne	r2, #3
 8000626:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800062a:	f1c2 0320 	rsb	r3, r2, #32
 800062e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000632:	fa20 f002 	lsr.w	r0, r0, r2
 8000636:	fa01 fe03 	lsl.w	lr, r1, r3
 800063a:	ea40 000e 	orr.w	r0, r0, lr
 800063e:	fa21 f102 	lsr.w	r1, r1, r2
 8000642:	4414      	add	r4, r2
 8000644:	e6bd      	b.n	80003c2 <__adddf3+0xe6>
 8000646:	bf00      	nop

08000648 <__aeabi_dmul>:
 8000648:	b570      	push	{r4, r5, r6, lr}
 800064a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800064e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000652:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000656:	bf1d      	ittte	ne
 8000658:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800065c:	ea94 0f0c 	teqne	r4, ip
 8000660:	ea95 0f0c 	teqne	r5, ip
 8000664:	f000 f8de 	bleq	8000824 <__aeabi_dmul+0x1dc>
 8000668:	442c      	add	r4, r5
 800066a:	ea81 0603 	eor.w	r6, r1, r3
 800066e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000672:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000676:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800067a:	bf18      	it	ne
 800067c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000680:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000684:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000688:	d038      	beq.n	80006fc <__aeabi_dmul+0xb4>
 800068a:	fba0 ce02 	umull	ip, lr, r0, r2
 800068e:	f04f 0500 	mov.w	r5, #0
 8000692:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000696:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800069a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800069e:	f04f 0600 	mov.w	r6, #0
 80006a2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006a6:	f09c 0f00 	teq	ip, #0
 80006aa:	bf18      	it	ne
 80006ac:	f04e 0e01 	orrne.w	lr, lr, #1
 80006b0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006b4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006b8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006bc:	d204      	bcs.n	80006c8 <__aeabi_dmul+0x80>
 80006be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006c2:	416d      	adcs	r5, r5
 80006c4:	eb46 0606 	adc.w	r6, r6, r6
 80006c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006dc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006e0:	bf88      	it	hi
 80006e2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006e6:	d81e      	bhi.n	8000726 <__aeabi_dmul+0xde>
 80006e8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ec:	bf08      	it	eq
 80006ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006f2:	f150 0000 	adcs.w	r0, r0, #0
 80006f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000700:	ea46 0101 	orr.w	r1, r6, r1
 8000704:	ea40 0002 	orr.w	r0, r0, r2
 8000708:	ea81 0103 	eor.w	r1, r1, r3
 800070c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000710:	bfc2      	ittt	gt
 8000712:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000716:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800071a:	bd70      	popgt	{r4, r5, r6, pc}
 800071c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000720:	f04f 0e00 	mov.w	lr, #0
 8000724:	3c01      	subs	r4, #1
 8000726:	f300 80ab 	bgt.w	8000880 <__aeabi_dmul+0x238>
 800072a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800072e:	bfde      	ittt	le
 8000730:	2000      	movle	r0, #0
 8000732:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000736:	bd70      	pople	{r4, r5, r6, pc}
 8000738:	f1c4 0400 	rsb	r4, r4, #0
 800073c:	3c20      	subs	r4, #32
 800073e:	da35      	bge.n	80007ac <__aeabi_dmul+0x164>
 8000740:	340c      	adds	r4, #12
 8000742:	dc1b      	bgt.n	800077c <__aeabi_dmul+0x134>
 8000744:	f104 0414 	add.w	r4, r4, #20
 8000748:	f1c4 0520 	rsb	r5, r4, #32
 800074c:	fa00 f305 	lsl.w	r3, r0, r5
 8000750:	fa20 f004 	lsr.w	r0, r0, r4
 8000754:	fa01 f205 	lsl.w	r2, r1, r5
 8000758:	ea40 0002 	orr.w	r0, r0, r2
 800075c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000760:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000764:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000768:	fa21 f604 	lsr.w	r6, r1, r4
 800076c:	eb42 0106 	adc.w	r1, r2, r6
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 040c 	rsb	r4, r4, #12
 8000780:	f1c4 0520 	rsb	r5, r4, #32
 8000784:	fa00 f304 	lsl.w	r3, r0, r4
 8000788:	fa20 f005 	lsr.w	r0, r0, r5
 800078c:	fa01 f204 	lsl.w	r2, r1, r4
 8000790:	ea40 0002 	orr.w	r0, r0, r2
 8000794:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000798:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800079c:	f141 0100 	adc.w	r1, r1, #0
 80007a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a4:	bf08      	it	eq
 80007a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007aa:	bd70      	pop	{r4, r5, r6, pc}
 80007ac:	f1c4 0520 	rsb	r5, r4, #32
 80007b0:	fa00 f205 	lsl.w	r2, r0, r5
 80007b4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007b8:	fa20 f304 	lsr.w	r3, r0, r4
 80007bc:	fa01 f205 	lsl.w	r2, r1, r5
 80007c0:	ea43 0302 	orr.w	r3, r3, r2
 80007c4:	fa21 f004 	lsr.w	r0, r1, r4
 80007c8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007cc:	fa21 f204 	lsr.w	r2, r1, r4
 80007d0:	ea20 0002 	bic.w	r0, r0, r2
 80007d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007dc:	bf08      	it	eq
 80007de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007e2:	bd70      	pop	{r4, r5, r6, pc}
 80007e4:	f094 0f00 	teq	r4, #0
 80007e8:	d10f      	bne.n	800080a <__aeabi_dmul+0x1c2>
 80007ea:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ee:	0040      	lsls	r0, r0, #1
 80007f0:	eb41 0101 	adc.w	r1, r1, r1
 80007f4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3c01      	subeq	r4, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1a6>
 80007fe:	ea41 0106 	orr.w	r1, r1, r6
 8000802:	f095 0f00 	teq	r5, #0
 8000806:	bf18      	it	ne
 8000808:	4770      	bxne	lr
 800080a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800080e:	0052      	lsls	r2, r2, #1
 8000810:	eb43 0303 	adc.w	r3, r3, r3
 8000814:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000818:	bf08      	it	eq
 800081a:	3d01      	subeq	r5, #1
 800081c:	d0f7      	beq.n	800080e <__aeabi_dmul+0x1c6>
 800081e:	ea43 0306 	orr.w	r3, r3, r6
 8000822:	4770      	bx	lr
 8000824:	ea94 0f0c 	teq	r4, ip
 8000828:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800082c:	bf18      	it	ne
 800082e:	ea95 0f0c 	teqne	r5, ip
 8000832:	d00c      	beq.n	800084e <__aeabi_dmul+0x206>
 8000834:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000838:	bf18      	it	ne
 800083a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083e:	d1d1      	bne.n	80007e4 <__aeabi_dmul+0x19c>
 8000840:	ea81 0103 	eor.w	r1, r1, r3
 8000844:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000848:	f04f 0000 	mov.w	r0, #0
 800084c:	bd70      	pop	{r4, r5, r6, pc}
 800084e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000852:	bf06      	itte	eq
 8000854:	4610      	moveq	r0, r2
 8000856:	4619      	moveq	r1, r3
 8000858:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800085c:	d019      	beq.n	8000892 <__aeabi_dmul+0x24a>
 800085e:	ea94 0f0c 	teq	r4, ip
 8000862:	d102      	bne.n	800086a <__aeabi_dmul+0x222>
 8000864:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000868:	d113      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800086a:	ea95 0f0c 	teq	r5, ip
 800086e:	d105      	bne.n	800087c <__aeabi_dmul+0x234>
 8000870:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000874:	bf1c      	itt	ne
 8000876:	4610      	movne	r0, r2
 8000878:	4619      	movne	r1, r3
 800087a:	d10a      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800087c:	ea81 0103 	eor.w	r1, r1, r3
 8000880:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000884:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000888:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800088c:	f04f 0000 	mov.w	r0, #0
 8000890:	bd70      	pop	{r4, r5, r6, pc}
 8000892:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000896:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800089a:	bd70      	pop	{r4, r5, r6, pc}

0800089c <__aeabi_ddiv>:
 800089c:	b570      	push	{r4, r5, r6, lr}
 800089e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80008a2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80008a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008aa:	bf1d      	ittte	ne
 80008ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008b0:	ea94 0f0c 	teqne	r4, ip
 80008b4:	ea95 0f0c 	teqne	r5, ip
 80008b8:	f000 f8a7 	bleq	8000a0a <__aeabi_ddiv+0x16e>
 80008bc:	eba4 0405 	sub.w	r4, r4, r5
 80008c0:	ea81 0e03 	eor.w	lr, r1, r3
 80008c4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008cc:	f000 8088 	beq.w	80009e0 <__aeabi_ddiv+0x144>
 80008d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008d4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008d8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008dc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008e0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008e4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008e8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ec:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008f0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008f4:	429d      	cmp	r5, r3
 80008f6:	bf08      	it	eq
 80008f8:	4296      	cmpeq	r6, r2
 80008fa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008fe:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000902:	d202      	bcs.n	800090a <__aeabi_ddiv+0x6e>
 8000904:	085b      	lsrs	r3, r3, #1
 8000906:	ea4f 0232 	mov.w	r2, r2, rrx
 800090a:	1ab6      	subs	r6, r6, r2
 800090c:	eb65 0503 	sbc.w	r5, r5, r3
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800091a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000948:	085b      	lsrs	r3, r3, #1
 800094a:	ea4f 0232 	mov.w	r2, r2, rrx
 800094e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000952:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000956:	bf22      	ittt	cs
 8000958:	1ab6      	subcs	r6, r6, r2
 800095a:	4675      	movcs	r5, lr
 800095c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000960:	085b      	lsrs	r3, r3, #1
 8000962:	ea4f 0232 	mov.w	r2, r2, rrx
 8000966:	ebb6 0e02 	subs.w	lr, r6, r2
 800096a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800096e:	bf22      	ittt	cs
 8000970:	1ab6      	subcs	r6, r6, r2
 8000972:	4675      	movcs	r5, lr
 8000974:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000978:	ea55 0e06 	orrs.w	lr, r5, r6
 800097c:	d018      	beq.n	80009b0 <__aeabi_ddiv+0x114>
 800097e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000982:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000986:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800098a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800098e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000992:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000996:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800099a:	d1c0      	bne.n	800091e <__aeabi_ddiv+0x82>
 800099c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a0:	d10b      	bne.n	80009ba <__aeabi_ddiv+0x11e>
 80009a2:	ea41 0100 	orr.w	r1, r1, r0
 80009a6:	f04f 0000 	mov.w	r0, #0
 80009aa:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80009ae:	e7b6      	b.n	800091e <__aeabi_ddiv+0x82>
 80009b0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009b4:	bf04      	itt	eq
 80009b6:	4301      	orreq	r1, r0
 80009b8:	2000      	moveq	r0, #0
 80009ba:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009be:	bf88      	it	hi
 80009c0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009c4:	f63f aeaf 	bhi.w	8000726 <__aeabi_dmul+0xde>
 80009c8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009cc:	bf04      	itt	eq
 80009ce:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009d6:	f150 0000 	adcs.w	r0, r0, #0
 80009da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009de:	bd70      	pop	{r4, r5, r6, pc}
 80009e0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ec:	bfc2      	ittt	gt
 80009ee:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009f6:	bd70      	popgt	{r4, r5, r6, pc}
 80009f8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009fc:	f04f 0e00 	mov.w	lr, #0
 8000a00:	3c01      	subs	r4, #1
 8000a02:	e690      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a04:	ea45 0e06 	orr.w	lr, r5, r6
 8000a08:	e68d      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a0a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a0e:	ea94 0f0c 	teq	r4, ip
 8000a12:	bf08      	it	eq
 8000a14:	ea95 0f0c 	teqeq	r5, ip
 8000a18:	f43f af3b 	beq.w	8000892 <__aeabi_dmul+0x24a>
 8000a1c:	ea94 0f0c 	teq	r4, ip
 8000a20:	d10a      	bne.n	8000a38 <__aeabi_ddiv+0x19c>
 8000a22:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a26:	f47f af34 	bne.w	8000892 <__aeabi_dmul+0x24a>
 8000a2a:	ea95 0f0c 	teq	r5, ip
 8000a2e:	f47f af25 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a32:	4610      	mov	r0, r2
 8000a34:	4619      	mov	r1, r3
 8000a36:	e72c      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a38:	ea95 0f0c 	teq	r5, ip
 8000a3c:	d106      	bne.n	8000a4c <__aeabi_ddiv+0x1b0>
 8000a3e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a42:	f43f aefd 	beq.w	8000840 <__aeabi_dmul+0x1f8>
 8000a46:	4610      	mov	r0, r2
 8000a48:	4619      	mov	r1, r3
 8000a4a:	e722      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a4c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a56:	f47f aec5 	bne.w	80007e4 <__aeabi_dmul+0x19c>
 8000a5a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a5e:	f47f af0d 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a62:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a66:	f47f aeeb 	bne.w	8000840 <__aeabi_dmul+0x1f8>
 8000a6a:	e712      	b.n	8000892 <__aeabi_dmul+0x24a>

08000a6c <__gedf2>:
 8000a6c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a70:	e006      	b.n	8000a80 <__cmpdf2+0x4>
 8000a72:	bf00      	nop

08000a74 <__ledf2>:
 8000a74:	f04f 0c01 	mov.w	ip, #1
 8000a78:	e002      	b.n	8000a80 <__cmpdf2+0x4>
 8000a7a:	bf00      	nop

08000a7c <__cmpdf2>:
 8000a7c:	f04f 0c01 	mov.w	ip, #1
 8000a80:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a90:	bf18      	it	ne
 8000a92:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a96:	d01b      	beq.n	8000ad0 <__cmpdf2+0x54>
 8000a98:	b001      	add	sp, #4
 8000a9a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a9e:	bf0c      	ite	eq
 8000aa0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000aa4:	ea91 0f03 	teqne	r1, r3
 8000aa8:	bf02      	ittt	eq
 8000aaa:	ea90 0f02 	teqeq	r0, r2
 8000aae:	2000      	moveq	r0, #0
 8000ab0:	4770      	bxeq	lr
 8000ab2:	f110 0f00 	cmn.w	r0, #0
 8000ab6:	ea91 0f03 	teq	r1, r3
 8000aba:	bf58      	it	pl
 8000abc:	4299      	cmppl	r1, r3
 8000abe:	bf08      	it	eq
 8000ac0:	4290      	cmpeq	r0, r2
 8000ac2:	bf2c      	ite	cs
 8000ac4:	17d8      	asrcs	r0, r3, #31
 8000ac6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aca:	f040 0001 	orr.w	r0, r0, #1
 8000ace:	4770      	bx	lr
 8000ad0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d102      	bne.n	8000ae0 <__cmpdf2+0x64>
 8000ada:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ade:	d107      	bne.n	8000af0 <__cmpdf2+0x74>
 8000ae0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae8:	d1d6      	bne.n	8000a98 <__cmpdf2+0x1c>
 8000aea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aee:	d0d3      	beq.n	8000a98 <__cmpdf2+0x1c>
 8000af0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000af4:	4770      	bx	lr
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdrcmple>:
 8000af8:	4684      	mov	ip, r0
 8000afa:	4610      	mov	r0, r2
 8000afc:	4662      	mov	r2, ip
 8000afe:	468c      	mov	ip, r1
 8000b00:	4619      	mov	r1, r3
 8000b02:	4663      	mov	r3, ip
 8000b04:	e000      	b.n	8000b08 <__aeabi_cdcmpeq>
 8000b06:	bf00      	nop

08000b08 <__aeabi_cdcmpeq>:
 8000b08:	b501      	push	{r0, lr}
 8000b0a:	f7ff ffb7 	bl	8000a7c <__cmpdf2>
 8000b0e:	2800      	cmp	r0, #0
 8000b10:	bf48      	it	mi
 8000b12:	f110 0f00 	cmnmi.w	r0, #0
 8000b16:	bd01      	pop	{r0, pc}

08000b18 <__aeabi_dcmpeq>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff fff4 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b20:	bf0c      	ite	eq
 8000b22:	2001      	moveq	r0, #1
 8000b24:	2000      	movne	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmplt>:
 8000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b30:	f7ff ffea 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b34:	bf34      	ite	cc
 8000b36:	2001      	movcc	r0, #1
 8000b38:	2000      	movcs	r0, #0
 8000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3e:	bf00      	nop

08000b40 <__aeabi_dcmple>:
 8000b40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b44:	f7ff ffe0 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b48:	bf94      	ite	ls
 8000b4a:	2001      	movls	r0, #1
 8000b4c:	2000      	movhi	r0, #0
 8000b4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b52:	bf00      	nop

08000b54 <__aeabi_dcmpge>:
 8000b54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b58:	f7ff ffce 	bl	8000af8 <__aeabi_cdrcmple>
 8000b5c:	bf94      	ite	ls
 8000b5e:	2001      	movls	r0, #1
 8000b60:	2000      	movhi	r0, #0
 8000b62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b66:	bf00      	nop

08000b68 <__aeabi_dcmpgt>:
 8000b68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b6c:	f7ff ffc4 	bl	8000af8 <__aeabi_cdrcmple>
 8000b70:	bf34      	ite	cc
 8000b72:	2001      	movcc	r0, #1
 8000b74:	2000      	movcs	r0, #0
 8000b76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7a:	bf00      	nop

08000b7c <__aeabi_dcmpun>:
 8000b7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x10>
 8000b86:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b8a:	d10a      	bne.n	8000ba2 <__aeabi_dcmpun+0x26>
 8000b8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b94:	d102      	bne.n	8000b9c <__aeabi_dcmpun+0x20>
 8000b96:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b9a:	d102      	bne.n	8000ba2 <__aeabi_dcmpun+0x26>
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	f04f 0001 	mov.w	r0, #1
 8000ba6:	4770      	bx	lr

08000ba8 <__aeabi_d2iz>:
 8000ba8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d215      	bcs.n	8000bde <__aeabi_d2iz+0x36>
 8000bb2:	d511      	bpl.n	8000bd8 <__aeabi_d2iz+0x30>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d912      	bls.n	8000be4 <__aeabi_d2iz+0x3c>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bce:	fa23 f002 	lsr.w	r0, r3, r2
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	4770      	bx	lr
 8000bd8:	f04f 0000 	mov.w	r0, #0
 8000bdc:	4770      	bx	lr
 8000bde:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be2:	d105      	bne.n	8000bf0 <__aeabi_d2iz+0x48>
 8000be4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000be8:	bf08      	it	eq
 8000bea:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_d2uiz>:
 8000bf8:	004a      	lsls	r2, r1, #1
 8000bfa:	d211      	bcs.n	8000c20 <__aeabi_d2uiz+0x28>
 8000bfc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000c00:	d211      	bcs.n	8000c26 <__aeabi_d2uiz+0x2e>
 8000c02:	d50d      	bpl.n	8000c20 <__aeabi_d2uiz+0x28>
 8000c04:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000c08:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c0c:	d40e      	bmi.n	8000c2c <__aeabi_d2uiz+0x34>
 8000c0e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c12:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c16:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c1a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c1e:	4770      	bx	lr
 8000c20:	f04f 0000 	mov.w	r0, #0
 8000c24:	4770      	bx	lr
 8000c26:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c2a:	d102      	bne.n	8000c32 <__aeabi_d2uiz+0x3a>
 8000c2c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c30:	4770      	bx	lr
 8000c32:	f04f 0000 	mov.w	r0, #0
 8000c36:	4770      	bx	lr

08000c38 <__aeabi_d2f>:
 8000c38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c3c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c40:	bf24      	itt	cs
 8000c42:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c46:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c4a:	d90d      	bls.n	8000c68 <__aeabi_d2f+0x30>
 8000c4c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c50:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c54:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c58:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c5c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c60:	bf08      	it	eq
 8000c62:	f020 0001 	biceq.w	r0, r0, #1
 8000c66:	4770      	bx	lr
 8000c68:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c6c:	d121      	bne.n	8000cb2 <__aeabi_d2f+0x7a>
 8000c6e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c72:	bfbc      	itt	lt
 8000c74:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c78:	4770      	bxlt	lr
 8000c7a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c7e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c82:	f1c2 0218 	rsb	r2, r2, #24
 8000c86:	f1c2 0c20 	rsb	ip, r2, #32
 8000c8a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c8e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c92:	bf18      	it	ne
 8000c94:	f040 0001 	orrne.w	r0, r0, #1
 8000c98:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c9c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ca0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ca4:	ea40 000c 	orr.w	r0, r0, ip
 8000ca8:	fa23 f302 	lsr.w	r3, r3, r2
 8000cac:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000cb0:	e7cc      	b.n	8000c4c <__aeabi_d2f+0x14>
 8000cb2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000cb6:	d107      	bne.n	8000cc8 <__aeabi_d2f+0x90>
 8000cb8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cbc:	bf1e      	ittt	ne
 8000cbe:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000cc2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000cc6:	4770      	bxne	lr
 8000cc8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000ccc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000cd0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cd4:	4770      	bx	lr
 8000cd6:	bf00      	nop

08000cd8 <__aeabi_uldivmod>:
 8000cd8:	b953      	cbnz	r3, 8000cf0 <__aeabi_uldivmod+0x18>
 8000cda:	b94a      	cbnz	r2, 8000cf0 <__aeabi_uldivmod+0x18>
 8000cdc:	2900      	cmp	r1, #0
 8000cde:	bf08      	it	eq
 8000ce0:	2800      	cmpeq	r0, #0
 8000ce2:	bf1c      	itt	ne
 8000ce4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ce8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cec:	f000 b9a0 	b.w	8001030 <__aeabi_idiv0>
 8000cf0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cf4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cf8:	f000 f83c 	bl	8000d74 <__udivmoddi4>
 8000cfc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d04:	b004      	add	sp, #16
 8000d06:	4770      	bx	lr

08000d08 <__aeabi_d2lz>:
 8000d08:	b538      	push	{r3, r4, r5, lr}
 8000d0a:	2200      	movs	r2, #0
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	4604      	mov	r4, r0
 8000d10:	460d      	mov	r5, r1
 8000d12:	f7ff ff0b 	bl	8000b2c <__aeabi_dcmplt>
 8000d16:	b928      	cbnz	r0, 8000d24 <__aeabi_d2lz+0x1c>
 8000d18:	4620      	mov	r0, r4
 8000d1a:	4629      	mov	r1, r5
 8000d1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d20:	f000 b80a 	b.w	8000d38 <__aeabi_d2ulz>
 8000d24:	4620      	mov	r0, r4
 8000d26:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000d2a:	f000 f805 	bl	8000d38 <__aeabi_d2ulz>
 8000d2e:	4240      	negs	r0, r0
 8000d30:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d34:	bd38      	pop	{r3, r4, r5, pc}
 8000d36:	bf00      	nop

08000d38 <__aeabi_d2ulz>:
 8000d38:	b5d0      	push	{r4, r6, r7, lr}
 8000d3a:	4b0c      	ldr	r3, [pc, #48]	@ (8000d6c <__aeabi_d2ulz+0x34>)
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	4606      	mov	r6, r0
 8000d40:	460f      	mov	r7, r1
 8000d42:	f7ff fc81 	bl	8000648 <__aeabi_dmul>
 8000d46:	f7ff ff57 	bl	8000bf8 <__aeabi_d2uiz>
 8000d4a:	4604      	mov	r4, r0
 8000d4c:	f7ff fc02 	bl	8000554 <__aeabi_ui2d>
 8000d50:	4b07      	ldr	r3, [pc, #28]	@ (8000d70 <__aeabi_d2ulz+0x38>)
 8000d52:	2200      	movs	r2, #0
 8000d54:	f7ff fc78 	bl	8000648 <__aeabi_dmul>
 8000d58:	4602      	mov	r2, r0
 8000d5a:	460b      	mov	r3, r1
 8000d5c:	4630      	mov	r0, r6
 8000d5e:	4639      	mov	r1, r7
 8000d60:	f7ff faba 	bl	80002d8 <__aeabi_dsub>
 8000d64:	f7ff ff48 	bl	8000bf8 <__aeabi_d2uiz>
 8000d68:	4621      	mov	r1, r4
 8000d6a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d6c:	3df00000 	.word	0x3df00000
 8000d70:	41f00000 	.word	0x41f00000

08000d74 <__udivmoddi4>:
 8000d74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d78:	9d08      	ldr	r5, [sp, #32]
 8000d7a:	460c      	mov	r4, r1
 8000d7c:	2b00      	cmp	r3, #0
 8000d7e:	d14e      	bne.n	8000e1e <__udivmoddi4+0xaa>
 8000d80:	4694      	mov	ip, r2
 8000d82:	458c      	cmp	ip, r1
 8000d84:	4686      	mov	lr, r0
 8000d86:	fab2 f282 	clz	r2, r2
 8000d8a:	d962      	bls.n	8000e52 <__udivmoddi4+0xde>
 8000d8c:	b14a      	cbz	r2, 8000da2 <__udivmoddi4+0x2e>
 8000d8e:	f1c2 0320 	rsb	r3, r2, #32
 8000d92:	4091      	lsls	r1, r2
 8000d94:	fa20 f303 	lsr.w	r3, r0, r3
 8000d98:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d9c:	4319      	orrs	r1, r3
 8000d9e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000da2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000da6:	fa1f f68c 	uxth.w	r6, ip
 8000daa:	fbb1 f4f7 	udiv	r4, r1, r7
 8000dae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000db2:	fb07 1114 	mls	r1, r7, r4, r1
 8000db6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000dba:	fb04 f106 	mul.w	r1, r4, r6
 8000dbe:	4299      	cmp	r1, r3
 8000dc0:	d90a      	bls.n	8000dd8 <__udivmoddi4+0x64>
 8000dc2:	eb1c 0303 	adds.w	r3, ip, r3
 8000dc6:	f104 30ff 	add.w	r0, r4, #4294967295
 8000dca:	f080 8112 	bcs.w	8000ff2 <__udivmoddi4+0x27e>
 8000dce:	4299      	cmp	r1, r3
 8000dd0:	f240 810f 	bls.w	8000ff2 <__udivmoddi4+0x27e>
 8000dd4:	3c02      	subs	r4, #2
 8000dd6:	4463      	add	r3, ip
 8000dd8:	1a59      	subs	r1, r3, r1
 8000dda:	fa1f f38e 	uxth.w	r3, lr
 8000dde:	fbb1 f0f7 	udiv	r0, r1, r7
 8000de2:	fb07 1110 	mls	r1, r7, r0, r1
 8000de6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000dea:	fb00 f606 	mul.w	r6, r0, r6
 8000dee:	429e      	cmp	r6, r3
 8000df0:	d90a      	bls.n	8000e08 <__udivmoddi4+0x94>
 8000df2:	eb1c 0303 	adds.w	r3, ip, r3
 8000df6:	f100 31ff 	add.w	r1, r0, #4294967295
 8000dfa:	f080 80fc 	bcs.w	8000ff6 <__udivmoddi4+0x282>
 8000dfe:	429e      	cmp	r6, r3
 8000e00:	f240 80f9 	bls.w	8000ff6 <__udivmoddi4+0x282>
 8000e04:	4463      	add	r3, ip
 8000e06:	3802      	subs	r0, #2
 8000e08:	1b9b      	subs	r3, r3, r6
 8000e0a:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000e0e:	2100      	movs	r1, #0
 8000e10:	b11d      	cbz	r5, 8000e1a <__udivmoddi4+0xa6>
 8000e12:	40d3      	lsrs	r3, r2
 8000e14:	2200      	movs	r2, #0
 8000e16:	e9c5 3200 	strd	r3, r2, [r5]
 8000e1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e1e:	428b      	cmp	r3, r1
 8000e20:	d905      	bls.n	8000e2e <__udivmoddi4+0xba>
 8000e22:	b10d      	cbz	r5, 8000e28 <__udivmoddi4+0xb4>
 8000e24:	e9c5 0100 	strd	r0, r1, [r5]
 8000e28:	2100      	movs	r1, #0
 8000e2a:	4608      	mov	r0, r1
 8000e2c:	e7f5      	b.n	8000e1a <__udivmoddi4+0xa6>
 8000e2e:	fab3 f183 	clz	r1, r3
 8000e32:	2900      	cmp	r1, #0
 8000e34:	d146      	bne.n	8000ec4 <__udivmoddi4+0x150>
 8000e36:	42a3      	cmp	r3, r4
 8000e38:	d302      	bcc.n	8000e40 <__udivmoddi4+0xcc>
 8000e3a:	4290      	cmp	r0, r2
 8000e3c:	f0c0 80f0 	bcc.w	8001020 <__udivmoddi4+0x2ac>
 8000e40:	1a86      	subs	r6, r0, r2
 8000e42:	eb64 0303 	sbc.w	r3, r4, r3
 8000e46:	2001      	movs	r0, #1
 8000e48:	2d00      	cmp	r5, #0
 8000e4a:	d0e6      	beq.n	8000e1a <__udivmoddi4+0xa6>
 8000e4c:	e9c5 6300 	strd	r6, r3, [r5]
 8000e50:	e7e3      	b.n	8000e1a <__udivmoddi4+0xa6>
 8000e52:	2a00      	cmp	r2, #0
 8000e54:	f040 8090 	bne.w	8000f78 <__udivmoddi4+0x204>
 8000e58:	eba1 040c 	sub.w	r4, r1, ip
 8000e5c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e60:	fa1f f78c 	uxth.w	r7, ip
 8000e64:	2101      	movs	r1, #1
 8000e66:	fbb4 f6f8 	udiv	r6, r4, r8
 8000e6a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000e6e:	fb08 4416 	mls	r4, r8, r6, r4
 8000e72:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e76:	fb07 f006 	mul.w	r0, r7, r6
 8000e7a:	4298      	cmp	r0, r3
 8000e7c:	d908      	bls.n	8000e90 <__udivmoddi4+0x11c>
 8000e7e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e82:	f106 34ff 	add.w	r4, r6, #4294967295
 8000e86:	d202      	bcs.n	8000e8e <__udivmoddi4+0x11a>
 8000e88:	4298      	cmp	r0, r3
 8000e8a:	f200 80cd 	bhi.w	8001028 <__udivmoddi4+0x2b4>
 8000e8e:	4626      	mov	r6, r4
 8000e90:	1a1c      	subs	r4, r3, r0
 8000e92:	fa1f f38e 	uxth.w	r3, lr
 8000e96:	fbb4 f0f8 	udiv	r0, r4, r8
 8000e9a:	fb08 4410 	mls	r4, r8, r0, r4
 8000e9e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000ea2:	fb00 f707 	mul.w	r7, r0, r7
 8000ea6:	429f      	cmp	r7, r3
 8000ea8:	d908      	bls.n	8000ebc <__udivmoddi4+0x148>
 8000eaa:	eb1c 0303 	adds.w	r3, ip, r3
 8000eae:	f100 34ff 	add.w	r4, r0, #4294967295
 8000eb2:	d202      	bcs.n	8000eba <__udivmoddi4+0x146>
 8000eb4:	429f      	cmp	r7, r3
 8000eb6:	f200 80b0 	bhi.w	800101a <__udivmoddi4+0x2a6>
 8000eba:	4620      	mov	r0, r4
 8000ebc:	1bdb      	subs	r3, r3, r7
 8000ebe:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000ec2:	e7a5      	b.n	8000e10 <__udivmoddi4+0x9c>
 8000ec4:	f1c1 0620 	rsb	r6, r1, #32
 8000ec8:	408b      	lsls	r3, r1
 8000eca:	fa22 f706 	lsr.w	r7, r2, r6
 8000ece:	431f      	orrs	r7, r3
 8000ed0:	fa20 fc06 	lsr.w	ip, r0, r6
 8000ed4:	fa04 f301 	lsl.w	r3, r4, r1
 8000ed8:	ea43 030c 	orr.w	r3, r3, ip
 8000edc:	40f4      	lsrs	r4, r6
 8000ede:	fa00 f801 	lsl.w	r8, r0, r1
 8000ee2:	0c38      	lsrs	r0, r7, #16
 8000ee4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000ee8:	fbb4 fef0 	udiv	lr, r4, r0
 8000eec:	fa1f fc87 	uxth.w	ip, r7
 8000ef0:	fb00 441e 	mls	r4, r0, lr, r4
 8000ef4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000ef8:	fb0e f90c 	mul.w	r9, lr, ip
 8000efc:	45a1      	cmp	r9, r4
 8000efe:	fa02 f201 	lsl.w	r2, r2, r1
 8000f02:	d90a      	bls.n	8000f1a <__udivmoddi4+0x1a6>
 8000f04:	193c      	adds	r4, r7, r4
 8000f06:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000f0a:	f080 8084 	bcs.w	8001016 <__udivmoddi4+0x2a2>
 8000f0e:	45a1      	cmp	r9, r4
 8000f10:	f240 8081 	bls.w	8001016 <__udivmoddi4+0x2a2>
 8000f14:	f1ae 0e02 	sub.w	lr, lr, #2
 8000f18:	443c      	add	r4, r7
 8000f1a:	eba4 0409 	sub.w	r4, r4, r9
 8000f1e:	fa1f f983 	uxth.w	r9, r3
 8000f22:	fbb4 f3f0 	udiv	r3, r4, r0
 8000f26:	fb00 4413 	mls	r4, r0, r3, r4
 8000f2a:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000f2e:	fb03 fc0c 	mul.w	ip, r3, ip
 8000f32:	45a4      	cmp	ip, r4
 8000f34:	d907      	bls.n	8000f46 <__udivmoddi4+0x1d2>
 8000f36:	193c      	adds	r4, r7, r4
 8000f38:	f103 30ff 	add.w	r0, r3, #4294967295
 8000f3c:	d267      	bcs.n	800100e <__udivmoddi4+0x29a>
 8000f3e:	45a4      	cmp	ip, r4
 8000f40:	d965      	bls.n	800100e <__udivmoddi4+0x29a>
 8000f42:	3b02      	subs	r3, #2
 8000f44:	443c      	add	r4, r7
 8000f46:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000f4a:	fba0 9302 	umull	r9, r3, r0, r2
 8000f4e:	eba4 040c 	sub.w	r4, r4, ip
 8000f52:	429c      	cmp	r4, r3
 8000f54:	46ce      	mov	lr, r9
 8000f56:	469c      	mov	ip, r3
 8000f58:	d351      	bcc.n	8000ffe <__udivmoddi4+0x28a>
 8000f5a:	d04e      	beq.n	8000ffa <__udivmoddi4+0x286>
 8000f5c:	b155      	cbz	r5, 8000f74 <__udivmoddi4+0x200>
 8000f5e:	ebb8 030e 	subs.w	r3, r8, lr
 8000f62:	eb64 040c 	sbc.w	r4, r4, ip
 8000f66:	fa04 f606 	lsl.w	r6, r4, r6
 8000f6a:	40cb      	lsrs	r3, r1
 8000f6c:	431e      	orrs	r6, r3
 8000f6e:	40cc      	lsrs	r4, r1
 8000f70:	e9c5 6400 	strd	r6, r4, [r5]
 8000f74:	2100      	movs	r1, #0
 8000f76:	e750      	b.n	8000e1a <__udivmoddi4+0xa6>
 8000f78:	f1c2 0320 	rsb	r3, r2, #32
 8000f7c:	fa20 f103 	lsr.w	r1, r0, r3
 8000f80:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f84:	fa24 f303 	lsr.w	r3, r4, r3
 8000f88:	4094      	lsls	r4, r2
 8000f8a:	430c      	orrs	r4, r1
 8000f8c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000f90:	fa00 fe02 	lsl.w	lr, r0, r2
 8000f94:	fa1f f78c 	uxth.w	r7, ip
 8000f98:	fbb3 f0f8 	udiv	r0, r3, r8
 8000f9c:	fb08 3110 	mls	r1, r8, r0, r3
 8000fa0:	0c23      	lsrs	r3, r4, #16
 8000fa2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000fa6:	fb00 f107 	mul.w	r1, r0, r7
 8000faa:	4299      	cmp	r1, r3
 8000fac:	d908      	bls.n	8000fc0 <__udivmoddi4+0x24c>
 8000fae:	eb1c 0303 	adds.w	r3, ip, r3
 8000fb2:	f100 36ff 	add.w	r6, r0, #4294967295
 8000fb6:	d22c      	bcs.n	8001012 <__udivmoddi4+0x29e>
 8000fb8:	4299      	cmp	r1, r3
 8000fba:	d92a      	bls.n	8001012 <__udivmoddi4+0x29e>
 8000fbc:	3802      	subs	r0, #2
 8000fbe:	4463      	add	r3, ip
 8000fc0:	1a5b      	subs	r3, r3, r1
 8000fc2:	b2a4      	uxth	r4, r4
 8000fc4:	fbb3 f1f8 	udiv	r1, r3, r8
 8000fc8:	fb08 3311 	mls	r3, r8, r1, r3
 8000fcc:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000fd0:	fb01 f307 	mul.w	r3, r1, r7
 8000fd4:	42a3      	cmp	r3, r4
 8000fd6:	d908      	bls.n	8000fea <__udivmoddi4+0x276>
 8000fd8:	eb1c 0404 	adds.w	r4, ip, r4
 8000fdc:	f101 36ff 	add.w	r6, r1, #4294967295
 8000fe0:	d213      	bcs.n	800100a <__udivmoddi4+0x296>
 8000fe2:	42a3      	cmp	r3, r4
 8000fe4:	d911      	bls.n	800100a <__udivmoddi4+0x296>
 8000fe6:	3902      	subs	r1, #2
 8000fe8:	4464      	add	r4, ip
 8000fea:	1ae4      	subs	r4, r4, r3
 8000fec:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ff0:	e739      	b.n	8000e66 <__udivmoddi4+0xf2>
 8000ff2:	4604      	mov	r4, r0
 8000ff4:	e6f0      	b.n	8000dd8 <__udivmoddi4+0x64>
 8000ff6:	4608      	mov	r0, r1
 8000ff8:	e706      	b.n	8000e08 <__udivmoddi4+0x94>
 8000ffa:	45c8      	cmp	r8, r9
 8000ffc:	d2ae      	bcs.n	8000f5c <__udivmoddi4+0x1e8>
 8000ffe:	ebb9 0e02 	subs.w	lr, r9, r2
 8001002:	eb63 0c07 	sbc.w	ip, r3, r7
 8001006:	3801      	subs	r0, #1
 8001008:	e7a8      	b.n	8000f5c <__udivmoddi4+0x1e8>
 800100a:	4631      	mov	r1, r6
 800100c:	e7ed      	b.n	8000fea <__udivmoddi4+0x276>
 800100e:	4603      	mov	r3, r0
 8001010:	e799      	b.n	8000f46 <__udivmoddi4+0x1d2>
 8001012:	4630      	mov	r0, r6
 8001014:	e7d4      	b.n	8000fc0 <__udivmoddi4+0x24c>
 8001016:	46d6      	mov	lr, sl
 8001018:	e77f      	b.n	8000f1a <__udivmoddi4+0x1a6>
 800101a:	4463      	add	r3, ip
 800101c:	3802      	subs	r0, #2
 800101e:	e74d      	b.n	8000ebc <__udivmoddi4+0x148>
 8001020:	4606      	mov	r6, r0
 8001022:	4623      	mov	r3, r4
 8001024:	4608      	mov	r0, r1
 8001026:	e70f      	b.n	8000e48 <__udivmoddi4+0xd4>
 8001028:	3e02      	subs	r6, #2
 800102a:	4463      	add	r3, ip
 800102c:	e730      	b.n	8000e90 <__udivmoddi4+0x11c>
 800102e:	bf00      	nop

08001030 <__aeabi_idiv0>:
 8001030:	4770      	bx	lr
 8001032:	bf00      	nop

08001034 <MX_ADC1_Init>:
 8001034:	b580      	push	{r7, lr}
 8001036:	b09a      	sub	sp, #104	@ 0x68
 8001038:	af00      	add	r7, sp, #0
 800103a:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800103e:	2200      	movs	r2, #0
 8001040:	601a      	str	r2, [r3, #0]
 8001042:	605a      	str	r2, [r3, #4]
 8001044:	609a      	str	r2, [r3, #8]
 8001046:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800104a:	2220      	movs	r2, #32
 800104c:	2100      	movs	r1, #0
 800104e:	4618      	mov	r0, r3
 8001050:	f00e fc5a 	bl	800f908 <memset>
 8001054:	463b      	mov	r3, r7
 8001056:	223c      	movs	r2, #60	@ 0x3c
 8001058:	2100      	movs	r1, #0
 800105a:	4618      	mov	r0, r3
 800105c:	f00e fc54 	bl	800f908 <memset>
 8001060:	4b4d      	ldr	r3, [pc, #308]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001062:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 8001066:	601a      	str	r2, [r3, #0]
 8001068:	4b4b      	ldr	r3, [pc, #300]	@ (8001198 <MX_ADC1_Init+0x164>)
 800106a:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 800106e:	605a      	str	r2, [r3, #4]
 8001070:	4b49      	ldr	r3, [pc, #292]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001072:	2200      	movs	r2, #0
 8001074:	609a      	str	r2, [r3, #8]
 8001076:	4b48      	ldr	r3, [pc, #288]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001078:	2200      	movs	r2, #0
 800107a:	60da      	str	r2, [r3, #12]
 800107c:	4b46      	ldr	r3, [pc, #280]	@ (8001198 <MX_ADC1_Init+0x164>)
 800107e:	2200      	movs	r2, #0
 8001080:	611a      	str	r2, [r3, #16]
 8001082:	4b45      	ldr	r3, [pc, #276]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001084:	2201      	movs	r2, #1
 8001086:	615a      	str	r2, [r3, #20]
 8001088:	4b43      	ldr	r3, [pc, #268]	@ (8001198 <MX_ADC1_Init+0x164>)
 800108a:	2204      	movs	r2, #4
 800108c:	619a      	str	r2, [r3, #24]
 800108e:	4b42      	ldr	r3, [pc, #264]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001090:	2200      	movs	r2, #0
 8001092:	771a      	strb	r2, [r3, #28]
 8001094:	4b40      	ldr	r3, [pc, #256]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001096:	2200      	movs	r2, #0
 8001098:	775a      	strb	r2, [r3, #29]
 800109a:	4b3f      	ldr	r3, [pc, #252]	@ (8001198 <MX_ADC1_Init+0x164>)
 800109c:	2201      	movs	r2, #1
 800109e:	621a      	str	r2, [r3, #32]
 80010a0:	4b3d      	ldr	r3, [pc, #244]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010a2:	2200      	movs	r2, #0
 80010a4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80010a8:	4b3b      	ldr	r3, [pc, #236]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010aa:	2200      	movs	r2, #0
 80010ac:	62da      	str	r2, [r3, #44]	@ 0x2c
 80010ae:	4b3a      	ldr	r3, [pc, #232]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010b0:	2200      	movs	r2, #0
 80010b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80010b4:	4b38      	ldr	r3, [pc, #224]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010b6:	2200      	movs	r2, #0
 80010b8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80010bc:	4b36      	ldr	r3, [pc, #216]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010be:	2200      	movs	r2, #0
 80010c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80010c2:	4b35      	ldr	r3, [pc, #212]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010c4:	2200      	movs	r2, #0
 80010c6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80010ca:	4833      	ldr	r0, [pc, #204]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010cc:	f001 fda8 	bl	8002c20 <HAL_ADC_Init>
 80010d0:	4603      	mov	r3, r0
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d001      	beq.n	80010da <MX_ADC1_Init+0xa6>
 80010d6:	f000 fca4 	bl	8001a22 <Error_Handler>
 80010da:	2300      	movs	r3, #0
 80010dc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80010de:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 80010e2:	4619      	mov	r1, r3
 80010e4:	482c      	ldr	r0, [pc, #176]	@ (8001198 <MX_ADC1_Init+0x164>)
 80010e6:	f003 ff9b 	bl	8005020 <HAL_ADCEx_MultiModeConfigChannel>
 80010ea:	4603      	mov	r3, r0
 80010ec:	2b00      	cmp	r3, #0
 80010ee:	d001      	beq.n	80010f4 <MX_ADC1_Init+0xc0>
 80010f0:	f000 fc97 	bl	8001a22 <Error_Handler>
 80010f4:	4b29      	ldr	r3, [pc, #164]	@ (800119c <MX_ADC1_Init+0x168>)
 80010f6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80010f8:	2306      	movs	r3, #6
 80010fa:	643b      	str	r3, [r7, #64]	@ 0x40
 80010fc:	2300      	movs	r3, #0
 80010fe:	647b      	str	r3, [r7, #68]	@ 0x44
 8001100:	237f      	movs	r3, #127	@ 0x7f
 8001102:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001104:	2304      	movs	r3, #4
 8001106:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001108:	2300      	movs	r3, #0
 800110a:	653b      	str	r3, [r7, #80]	@ 0x50
 800110c:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8001110:	4619      	mov	r1, r3
 8001112:	4821      	ldr	r0, [pc, #132]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001114:	f002 fa0a 	bl	800352c <HAL_ADC_ConfigChannel>
 8001118:	4603      	mov	r3, r0
 800111a:	2b00      	cmp	r3, #0
 800111c:	d001      	beq.n	8001122 <MX_ADC1_Init+0xee>
 800111e:	f000 fc80 	bl	8001a22 <Error_Handler>
 8001122:	4b1f      	ldr	r3, [pc, #124]	@ (80011a0 <MX_ADC1_Init+0x16c>)
 8001124:	603b      	str	r3, [r7, #0]
 8001126:	2309      	movs	r3, #9
 8001128:	607b      	str	r3, [r7, #4]
 800112a:	2301      	movs	r3, #1
 800112c:	60bb      	str	r3, [r7, #8]
 800112e:	237f      	movs	r3, #127	@ 0x7f
 8001130:	60fb      	str	r3, [r7, #12]
 8001132:	2304      	movs	r3, #4
 8001134:	613b      	str	r3, [r7, #16]
 8001136:	2300      	movs	r3, #0
 8001138:	617b      	str	r3, [r7, #20]
 800113a:	2302      	movs	r3, #2
 800113c:	623b      	str	r3, [r7, #32]
 800113e:	2300      	movs	r3, #0
 8001140:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
 8001144:	2300      	movs	r3, #0
 8001146:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 800114a:	2300      	movs	r3, #0
 800114c:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8001150:	2384      	movs	r3, #132	@ 0x84
 8001152:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001154:	2380      	movs	r3, #128	@ 0x80
 8001156:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001158:	2300      	movs	r3, #0
 800115a:	f887 3030 	strb.w	r3, [r7, #48]	@ 0x30
 800115e:	463b      	mov	r3, r7
 8001160:	4619      	mov	r1, r3
 8001162:	480d      	ldr	r0, [pc, #52]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001164:	f003 fa7c 	bl	8004660 <HAL_ADCEx_InjectedConfigChannel>
 8001168:	4603      	mov	r3, r0
 800116a:	2b00      	cmp	r3, #0
 800116c:	d001      	beq.n	8001172 <MX_ADC1_Init+0x13e>
 800116e:	f000 fc58 	bl	8001a22 <Error_Handler>
 8001172:	4b0c      	ldr	r3, [pc, #48]	@ (80011a4 <MX_ADC1_Init+0x170>)
 8001174:	603b      	str	r3, [r7, #0]
 8001176:	f240 130f 	movw	r3, #271	@ 0x10f
 800117a:	607b      	str	r3, [r7, #4]
 800117c:	463b      	mov	r3, r7
 800117e:	4619      	mov	r1, r3
 8001180:	4805      	ldr	r0, [pc, #20]	@ (8001198 <MX_ADC1_Init+0x164>)
 8001182:	f003 fa6d 	bl	8004660 <HAL_ADCEx_InjectedConfigChannel>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	d001      	beq.n	8001190 <MX_ADC1_Init+0x15c>
 800118c:	f000 fc49 	bl	8001a22 <Error_Handler>
 8001190:	bf00      	nop
 8001192:	3768      	adds	r7, #104	@ 0x68
 8001194:	46bd      	mov	sp, r7
 8001196:	bd80      	pop	{r7, pc}
 8001198:	20000274 	.word	0x20000274
 800119c:	2e300800 	.word	0x2e300800
 80011a0:	0c900008 	.word	0x0c900008
 80011a4:	32601000 	.word	0x32601000

080011a8 <MX_ADC2_Init>:
 80011a8:	b580      	push	{r7, lr}
 80011aa:	b098      	sub	sp, #96	@ 0x60
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80011b2:	223c      	movs	r2, #60	@ 0x3c
 80011b4:	2100      	movs	r1, #0
 80011b6:	4618      	mov	r0, r3
 80011b8:	f00e fba6 	bl	800f908 <memset>
 80011bc:	1d3b      	adds	r3, r7, #4
 80011be:	2220      	movs	r2, #32
 80011c0:	2100      	movs	r1, #0
 80011c2:	4618      	mov	r0, r3
 80011c4:	f00e fba0 	bl	800f908 <memset>
 80011c8:	4b3f      	ldr	r3, [pc, #252]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011ca:	4a40      	ldr	r2, [pc, #256]	@ (80012cc <MX_ADC2_Init+0x124>)
 80011cc:	601a      	str	r2, [r3, #0]
 80011ce:	4b3e      	ldr	r3, [pc, #248]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011d0:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 80011d4:	605a      	str	r2, [r3, #4]
 80011d6:	4b3c      	ldr	r3, [pc, #240]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011d8:	2200      	movs	r2, #0
 80011da:	609a      	str	r2, [r3, #8]
 80011dc:	4b3a      	ldr	r3, [pc, #232]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011de:	2200      	movs	r2, #0
 80011e0:	60da      	str	r2, [r3, #12]
 80011e2:	4b39      	ldr	r3, [pc, #228]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011e4:	2200      	movs	r2, #0
 80011e6:	611a      	str	r2, [r3, #16]
 80011e8:	4b37      	ldr	r3, [pc, #220]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	615a      	str	r2, [r3, #20]
 80011ee:	4b36      	ldr	r3, [pc, #216]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011f0:	2204      	movs	r2, #4
 80011f2:	619a      	str	r2, [r3, #24]
 80011f4:	4b34      	ldr	r3, [pc, #208]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011f6:	2200      	movs	r2, #0
 80011f8:	771a      	strb	r2, [r3, #28]
 80011fa:	4b33      	ldr	r3, [pc, #204]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80011fc:	2200      	movs	r2, #0
 80011fe:	775a      	strb	r2, [r3, #29]
 8001200:	4b31      	ldr	r3, [pc, #196]	@ (80012c8 <MX_ADC2_Init+0x120>)
 8001202:	2201      	movs	r2, #1
 8001204:	621a      	str	r2, [r3, #32]
 8001206:	4b30      	ldr	r3, [pc, #192]	@ (80012c8 <MX_ADC2_Init+0x120>)
 8001208:	2200      	movs	r2, #0
 800120a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800120e:	4b2e      	ldr	r3, [pc, #184]	@ (80012c8 <MX_ADC2_Init+0x120>)
 8001210:	2200      	movs	r2, #0
 8001212:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001214:	4b2c      	ldr	r3, [pc, #176]	@ (80012c8 <MX_ADC2_Init+0x120>)
 8001216:	2200      	movs	r2, #0
 8001218:	631a      	str	r2, [r3, #48]	@ 0x30
 800121a:	4b2b      	ldr	r3, [pc, #172]	@ (80012c8 <MX_ADC2_Init+0x120>)
 800121c:	2200      	movs	r2, #0
 800121e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001222:	4b29      	ldr	r3, [pc, #164]	@ (80012c8 <MX_ADC2_Init+0x120>)
 8001224:	2200      	movs	r2, #0
 8001226:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001228:	4b27      	ldr	r3, [pc, #156]	@ (80012c8 <MX_ADC2_Init+0x120>)
 800122a:	2200      	movs	r2, #0
 800122c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8001230:	4825      	ldr	r0, [pc, #148]	@ (80012c8 <MX_ADC2_Init+0x120>)
 8001232:	f001 fcf5 	bl	8002c20 <HAL_ADC_Init>
 8001236:	4603      	mov	r3, r0
 8001238:	2b00      	cmp	r3, #0
 800123a:	d001      	beq.n	8001240 <MX_ADC2_Init+0x98>
 800123c:	f000 fbf1 	bl	8001a22 <Error_Handler>
 8001240:	4b23      	ldr	r3, [pc, #140]	@ (80012d0 <MX_ADC2_Init+0x128>)
 8001242:	627b      	str	r3, [r7, #36]	@ 0x24
 8001244:	2309      	movs	r3, #9
 8001246:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001248:	2301      	movs	r3, #1
 800124a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800124c:	237f      	movs	r3, #127	@ 0x7f
 800124e:	633b      	str	r3, [r7, #48]	@ 0x30
 8001250:	2304      	movs	r3, #4
 8001252:	637b      	str	r3, [r7, #52]	@ 0x34
 8001254:	2300      	movs	r3, #0
 8001256:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001258:	2301      	movs	r3, #1
 800125a:	647b      	str	r3, [r7, #68]	@ 0x44
 800125c:	2300      	movs	r3, #0
 800125e:	f887 3048 	strb.w	r3, [r7, #72]	@ 0x48
 8001262:	2300      	movs	r3, #0
 8001264:	f887 3049 	strb.w	r3, [r7, #73]	@ 0x49
 8001268:	2300      	movs	r3, #0
 800126a:	f887 304a 	strb.w	r3, [r7, #74]	@ 0x4a
 800126e:	2384      	movs	r3, #132	@ 0x84
 8001270:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001272:	2380      	movs	r3, #128	@ 0x80
 8001274:	653b      	str	r3, [r7, #80]	@ 0x50
 8001276:	2300      	movs	r3, #0
 8001278:	f887 3054 	strb.w	r3, [r7, #84]	@ 0x54
 800127c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001280:	4619      	mov	r1, r3
 8001282:	4811      	ldr	r0, [pc, #68]	@ (80012c8 <MX_ADC2_Init+0x120>)
 8001284:	f003 f9ec 	bl	8004660 <HAL_ADCEx_InjectedConfigChannel>
 8001288:	4603      	mov	r3, r0
 800128a:	2b00      	cmp	r3, #0
 800128c:	d001      	beq.n	8001292 <MX_ADC2_Init+0xea>
 800128e:	f000 fbc8 	bl	8001a22 <Error_Handler>
 8001292:	4b10      	ldr	r3, [pc, #64]	@ (80012d4 <MX_ADC2_Init+0x12c>)
 8001294:	607b      	str	r3, [r7, #4]
 8001296:	2306      	movs	r3, #6
 8001298:	60bb      	str	r3, [r7, #8]
 800129a:	2300      	movs	r3, #0
 800129c:	60fb      	str	r3, [r7, #12]
 800129e:	237f      	movs	r3, #127	@ 0x7f
 80012a0:	613b      	str	r3, [r7, #16]
 80012a2:	2304      	movs	r3, #4
 80012a4:	617b      	str	r3, [r7, #20]
 80012a6:	2300      	movs	r3, #0
 80012a8:	61bb      	str	r3, [r7, #24]
 80012aa:	1d3b      	adds	r3, r7, #4
 80012ac:	4619      	mov	r1, r3
 80012ae:	4806      	ldr	r0, [pc, #24]	@ (80012c8 <MX_ADC2_Init+0x120>)
 80012b0:	f002 f93c 	bl	800352c <HAL_ADC_ConfigChannel>
 80012b4:	4603      	mov	r3, r0
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	d001      	beq.n	80012be <MX_ADC2_Init+0x116>
 80012ba:	f000 fbb2 	bl	8001a22 <Error_Handler>
 80012be:	bf00      	nop
 80012c0:	3760      	adds	r7, #96	@ 0x60
 80012c2:	46bd      	mov	sp, r7
 80012c4:	bd80      	pop	{r7, pc}
 80012c6:	bf00      	nop
 80012c8:	200002e0 	.word	0x200002e0
 80012cc:	50000100 	.word	0x50000100
 80012d0:	0c900008 	.word	0x0c900008
 80012d4:	04300002 	.word	0x04300002

080012d8 <HAL_ADC_MspInit>:
 80012d8:	b580      	push	{r7, lr}
 80012da:	b09e      	sub	sp, #120	@ 0x78
 80012dc:	af00      	add	r7, sp, #0
 80012de:	6078      	str	r0, [r7, #4]
 80012e0:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80012e4:	2200      	movs	r2, #0
 80012e6:	601a      	str	r2, [r3, #0]
 80012e8:	605a      	str	r2, [r3, #4]
 80012ea:	609a      	str	r2, [r3, #8]
 80012ec:	60da      	str	r2, [r3, #12]
 80012ee:	611a      	str	r2, [r3, #16]
 80012f0:	f107 0320 	add.w	r3, r7, #32
 80012f4:	2244      	movs	r2, #68	@ 0x44
 80012f6:	2100      	movs	r1, #0
 80012f8:	4618      	mov	r0, r3
 80012fa:	f00e fb05 	bl	800f908 <memset>
 80012fe:	687b      	ldr	r3, [r7, #4]
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8001306:	d15f      	bne.n	80013c8 <HAL_ADC_MspInit+0xf0>
 8001308:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800130c:	623b      	str	r3, [r7, #32]
 800130e:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 8001312:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8001314:	f107 0320 	add.w	r3, r7, #32
 8001318:	4618      	mov	r0, r3
 800131a:	f006 f967 	bl	80075ec <HAL_RCCEx_PeriphCLKConfig>
 800131e:	4603      	mov	r3, r0
 8001320:	2b00      	cmp	r3, #0
 8001322:	d001      	beq.n	8001328 <HAL_ADC_MspInit+0x50>
 8001324:	f000 fb7d 	bl	8001a22 <Error_Handler>
 8001328:	4b4f      	ldr	r3, [pc, #316]	@ (8001468 <HAL_ADC_MspInit+0x190>)
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	3301      	adds	r3, #1
 800132e:	4a4e      	ldr	r2, [pc, #312]	@ (8001468 <HAL_ADC_MspInit+0x190>)
 8001330:	6013      	str	r3, [r2, #0]
 8001332:	4b4d      	ldr	r3, [pc, #308]	@ (8001468 <HAL_ADC_MspInit+0x190>)
 8001334:	681b      	ldr	r3, [r3, #0]
 8001336:	2b01      	cmp	r3, #1
 8001338:	d10b      	bne.n	8001352 <HAL_ADC_MspInit+0x7a>
 800133a:	4b4c      	ldr	r3, [pc, #304]	@ (800146c <HAL_ADC_MspInit+0x194>)
 800133c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800133e:	4a4b      	ldr	r2, [pc, #300]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001340:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001344:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001346:	4b49      	ldr	r3, [pc, #292]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001348:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800134a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800134e:	61fb      	str	r3, [r7, #28]
 8001350:	69fb      	ldr	r3, [r7, #28]
 8001352:	4b46      	ldr	r3, [pc, #280]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001354:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001356:	4a45      	ldr	r2, [pc, #276]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001358:	f043 0301 	orr.w	r3, r3, #1
 800135c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800135e:	4b43      	ldr	r3, [pc, #268]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001360:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001362:	f003 0301 	and.w	r3, r3, #1
 8001366:	61bb      	str	r3, [r7, #24]
 8001368:	69bb      	ldr	r3, [r7, #24]
 800136a:	4b40      	ldr	r3, [pc, #256]	@ (800146c <HAL_ADC_MspInit+0x194>)
 800136c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800136e:	4a3f      	ldr	r2, [pc, #252]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001370:	f043 0302 	orr.w	r3, r3, #2
 8001374:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001376:	4b3d      	ldr	r3, [pc, #244]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001378:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800137a:	f003 0302 	and.w	r3, r3, #2
 800137e:	617b      	str	r3, [r7, #20]
 8001380:	697b      	ldr	r3, [r7, #20]
 8001382:	2304      	movs	r3, #4
 8001384:	667b      	str	r3, [r7, #100]	@ 0x64
 8001386:	2303      	movs	r3, #3
 8001388:	66bb      	str	r3, [r7, #104]	@ 0x68
 800138a:	2300      	movs	r3, #0
 800138c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800138e:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001392:	4619      	mov	r1, r3
 8001394:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001398:	f005 f892 	bl	80064c0 <HAL_GPIO_Init>
 800139c:	f241 0302 	movw	r3, #4098	@ 0x1002
 80013a0:	667b      	str	r3, [r7, #100]	@ 0x64
 80013a2:	2303      	movs	r3, #3
 80013a4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80013a6:	2300      	movs	r3, #0
 80013a8:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80013aa:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 80013ae:	4619      	mov	r1, r3
 80013b0:	482f      	ldr	r0, [pc, #188]	@ (8001470 <HAL_ADC_MspInit+0x198>)
 80013b2:	f005 f885 	bl	80064c0 <HAL_GPIO_Init>
 80013b6:	2200      	movs	r2, #0
 80013b8:	2100      	movs	r1, #0
 80013ba:	2012      	movs	r0, #18
 80013bc:	f004 f98f 	bl	80056de <HAL_NVIC_SetPriority>
 80013c0:	2012      	movs	r0, #18
 80013c2:	f004 f9a6 	bl	8005712 <HAL_NVIC_EnableIRQ>
 80013c6:	e04a      	b.n	800145e <HAL_ADC_MspInit+0x186>
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	681b      	ldr	r3, [r3, #0]
 80013cc:	4a29      	ldr	r2, [pc, #164]	@ (8001474 <HAL_ADC_MspInit+0x19c>)
 80013ce:	4293      	cmp	r3, r2
 80013d0:	d145      	bne.n	800145e <HAL_ADC_MspInit+0x186>
 80013d2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80013d6:	623b      	str	r3, [r7, #32]
 80013d8:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80013dc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80013de:	f107 0320 	add.w	r3, r7, #32
 80013e2:	4618      	mov	r0, r3
 80013e4:	f006 f902 	bl	80075ec <HAL_RCCEx_PeriphCLKConfig>
 80013e8:	4603      	mov	r3, r0
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d001      	beq.n	80013f2 <HAL_ADC_MspInit+0x11a>
 80013ee:	f000 fb18 	bl	8001a22 <Error_Handler>
 80013f2:	4b1d      	ldr	r3, [pc, #116]	@ (8001468 <HAL_ADC_MspInit+0x190>)
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	3301      	adds	r3, #1
 80013f8:	4a1b      	ldr	r2, [pc, #108]	@ (8001468 <HAL_ADC_MspInit+0x190>)
 80013fa:	6013      	str	r3, [r2, #0]
 80013fc:	4b1a      	ldr	r3, [pc, #104]	@ (8001468 <HAL_ADC_MspInit+0x190>)
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	2b01      	cmp	r3, #1
 8001402:	d10b      	bne.n	800141c <HAL_ADC_MspInit+0x144>
 8001404:	4b19      	ldr	r3, [pc, #100]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001406:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001408:	4a18      	ldr	r2, [pc, #96]	@ (800146c <HAL_ADC_MspInit+0x194>)
 800140a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800140e:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001410:	4b16      	ldr	r3, [pc, #88]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001412:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001414:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001418:	613b      	str	r3, [r7, #16]
 800141a:	693b      	ldr	r3, [r7, #16]
 800141c:	4b13      	ldr	r3, [pc, #76]	@ (800146c <HAL_ADC_MspInit+0x194>)
 800141e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001420:	4a12      	ldr	r2, [pc, #72]	@ (800146c <HAL_ADC_MspInit+0x194>)
 8001422:	f043 0301 	orr.w	r3, r3, #1
 8001426:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001428:	4b10      	ldr	r3, [pc, #64]	@ (800146c <HAL_ADC_MspInit+0x194>)
 800142a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800142c:	f003 0301 	and.w	r3, r3, #1
 8001430:	60fb      	str	r3, [r7, #12]
 8001432:	68fb      	ldr	r3, [r7, #12]
 8001434:	2341      	movs	r3, #65	@ 0x41
 8001436:	667b      	str	r3, [r7, #100]	@ 0x64
 8001438:	2303      	movs	r3, #3
 800143a:	66bb      	str	r3, [r7, #104]	@ 0x68
 800143c:	2300      	movs	r3, #0
 800143e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8001440:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 8001444:	4619      	mov	r1, r3
 8001446:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800144a:	f005 f839 	bl	80064c0 <HAL_GPIO_Init>
 800144e:	2200      	movs	r2, #0
 8001450:	2100      	movs	r1, #0
 8001452:	2012      	movs	r0, #18
 8001454:	f004 f943 	bl	80056de <HAL_NVIC_SetPriority>
 8001458:	2012      	movs	r0, #18
 800145a:	f004 f95a 	bl	8005712 <HAL_NVIC_EnableIRQ>
 800145e:	bf00      	nop
 8001460:	3778      	adds	r7, #120	@ 0x78
 8001462:	46bd      	mov	sp, r7
 8001464:	bd80      	pop	{r7, pc}
 8001466:	bf00      	nop
 8001468:	2000034c 	.word	0x2000034c
 800146c:	40021000 	.word	0x40021000
 8001470:	48000400 	.word	0x48000400
 8001474:	50000100 	.word	0x50000100

08001478 <MX_COMP1_Init>:
 8001478:	b580      	push	{r7, lr}
 800147a:	af00      	add	r7, sp, #0
 800147c:	4b0f      	ldr	r3, [pc, #60]	@ (80014bc <MX_COMP1_Init+0x44>)
 800147e:	4a10      	ldr	r2, [pc, #64]	@ (80014c0 <MX_COMP1_Init+0x48>)
 8001480:	601a      	str	r2, [r3, #0]
 8001482:	4b0e      	ldr	r3, [pc, #56]	@ (80014bc <MX_COMP1_Init+0x44>)
 8001484:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001488:	605a      	str	r2, [r3, #4]
 800148a:	4b0c      	ldr	r3, [pc, #48]	@ (80014bc <MX_COMP1_Init+0x44>)
 800148c:	2240      	movs	r2, #64	@ 0x40
 800148e:	609a      	str	r2, [r3, #8]
 8001490:	4b0a      	ldr	r3, [pc, #40]	@ (80014bc <MX_COMP1_Init+0x44>)
 8001492:	2200      	movs	r2, #0
 8001494:	611a      	str	r2, [r3, #16]
 8001496:	4b09      	ldr	r3, [pc, #36]	@ (80014bc <MX_COMP1_Init+0x44>)
 8001498:	2200      	movs	r2, #0
 800149a:	60da      	str	r2, [r3, #12]
 800149c:	4b07      	ldr	r3, [pc, #28]	@ (80014bc <MX_COMP1_Init+0x44>)
 800149e:	2200      	movs	r2, #0
 80014a0:	615a      	str	r2, [r3, #20]
 80014a2:	4b06      	ldr	r3, [pc, #24]	@ (80014bc <MX_COMP1_Init+0x44>)
 80014a4:	2211      	movs	r2, #17
 80014a6:	619a      	str	r2, [r3, #24]
 80014a8:	4804      	ldr	r0, [pc, #16]	@ (80014bc <MX_COMP1_Init+0x44>)
 80014aa:	f003 ff1b 	bl	80052e4 <HAL_COMP_Init>
 80014ae:	4603      	mov	r3, r0
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d001      	beq.n	80014b8 <MX_COMP1_Init+0x40>
 80014b4:	f000 fab5 	bl	8001a22 <Error_Handler>
 80014b8:	bf00      	nop
 80014ba:	bd80      	pop	{r7, pc}
 80014bc:	20000350 	.word	0x20000350
 80014c0:	40010200 	.word	0x40010200

080014c4 <HAL_COMP_MspInit>:
 80014c4:	b580      	push	{r7, lr}
 80014c6:	b088      	sub	sp, #32
 80014c8:	af00      	add	r7, sp, #0
 80014ca:	6078      	str	r0, [r7, #4]
 80014cc:	f107 030c 	add.w	r3, r7, #12
 80014d0:	2200      	movs	r2, #0
 80014d2:	601a      	str	r2, [r3, #0]
 80014d4:	605a      	str	r2, [r3, #4]
 80014d6:	609a      	str	r2, [r3, #8]
 80014d8:	60da      	str	r2, [r3, #12]
 80014da:	611a      	str	r2, [r3, #16]
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	4a13      	ldr	r2, [pc, #76]	@ (8001530 <HAL_COMP_MspInit+0x6c>)
 80014e2:	4293      	cmp	r3, r2
 80014e4:	d11f      	bne.n	8001526 <HAL_COMP_MspInit+0x62>
 80014e6:	4b13      	ldr	r3, [pc, #76]	@ (8001534 <HAL_COMP_MspInit+0x70>)
 80014e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80014ea:	4a12      	ldr	r2, [pc, #72]	@ (8001534 <HAL_COMP_MspInit+0x70>)
 80014ec:	f043 0302 	orr.w	r3, r3, #2
 80014f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80014f2:	4b10      	ldr	r3, [pc, #64]	@ (8001534 <HAL_COMP_MspInit+0x70>)
 80014f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80014f6:	f003 0302 	and.w	r3, r3, #2
 80014fa:	60bb      	str	r3, [r7, #8]
 80014fc:	68bb      	ldr	r3, [r7, #8]
 80014fe:	2302      	movs	r3, #2
 8001500:	60fb      	str	r3, [r7, #12]
 8001502:	2303      	movs	r3, #3
 8001504:	613b      	str	r3, [r7, #16]
 8001506:	2300      	movs	r3, #0
 8001508:	617b      	str	r3, [r7, #20]
 800150a:	f107 030c 	add.w	r3, r7, #12
 800150e:	4619      	mov	r1, r3
 8001510:	4809      	ldr	r0, [pc, #36]	@ (8001538 <HAL_COMP_MspInit+0x74>)
 8001512:	f004 ffd5 	bl	80064c0 <HAL_GPIO_Init>
 8001516:	2200      	movs	r2, #0
 8001518:	2101      	movs	r1, #1
 800151a:	2040      	movs	r0, #64	@ 0x40
 800151c:	f004 f8df 	bl	80056de <HAL_NVIC_SetPriority>
 8001520:	2040      	movs	r0, #64	@ 0x40
 8001522:	f004 f8f6 	bl	8005712 <HAL_NVIC_EnableIRQ>
 8001526:	bf00      	nop
 8001528:	3720      	adds	r7, #32
 800152a:	46bd      	mov	sp, r7
 800152c:	bd80      	pop	{r7, pc}
 800152e:	bf00      	nop
 8001530:	40010200 	.word	0x40010200
 8001534:	40021000 	.word	0x40021000
 8001538:	48000400 	.word	0x48000400

0800153c <MX_DAC3_Init>:
 800153c:	b580      	push	{r7, lr}
 800153e:	b08c      	sub	sp, #48	@ 0x30
 8001540:	af00      	add	r7, sp, #0
 8001542:	463b      	mov	r3, r7
 8001544:	2230      	movs	r2, #48	@ 0x30
 8001546:	2100      	movs	r1, #0
 8001548:	4618      	mov	r0, r3
 800154a:	f00e f9dd 	bl	800f908 <memset>
 800154e:	4b16      	ldr	r3, [pc, #88]	@ (80015a8 <MX_DAC3_Init+0x6c>)
 8001550:	4a16      	ldr	r2, [pc, #88]	@ (80015ac <MX_DAC3_Init+0x70>)
 8001552:	601a      	str	r2, [r3, #0]
 8001554:	4814      	ldr	r0, [pc, #80]	@ (80015a8 <MX_DAC3_Init+0x6c>)
 8001556:	f004 f8f6 	bl	8005746 <HAL_DAC_Init>
 800155a:	4603      	mov	r3, r0
 800155c:	2b00      	cmp	r3, #0
 800155e:	d001      	beq.n	8001564 <MX_DAC3_Init+0x28>
 8001560:	f000 fa5f 	bl	8001a22 <Error_Handler>
 8001564:	2302      	movs	r3, #2
 8001566:	603b      	str	r3, [r7, #0]
 8001568:	2300      	movs	r3, #0
 800156a:	713b      	strb	r3, [r7, #4]
 800156c:	2300      	movs	r3, #0
 800156e:	717b      	strb	r3, [r7, #5]
 8001570:	2300      	movs	r3, #0
 8001572:	60bb      	str	r3, [r7, #8]
 8001574:	2300      	movs	r3, #0
 8001576:	60fb      	str	r3, [r7, #12]
 8001578:	2300      	movs	r3, #0
 800157a:	613b      	str	r3, [r7, #16]
 800157c:	2302      	movs	r3, #2
 800157e:	617b      	str	r3, [r7, #20]
 8001580:	2302      	movs	r3, #2
 8001582:	61bb      	str	r3, [r7, #24]
 8001584:	2300      	movs	r3, #0
 8001586:	61fb      	str	r3, [r7, #28]
 8001588:	463b      	mov	r3, r7
 800158a:	2200      	movs	r2, #0
 800158c:	4619      	mov	r1, r3
 800158e:	4806      	ldr	r0, [pc, #24]	@ (80015a8 <MX_DAC3_Init+0x6c>)
 8001590:	f004 f8fc 	bl	800578c <HAL_DAC_ConfigChannel>
 8001594:	4603      	mov	r3, r0
 8001596:	2b00      	cmp	r3, #0
 8001598:	d001      	beq.n	800159e <MX_DAC3_Init+0x62>
 800159a:	f000 fa42 	bl	8001a22 <Error_Handler>
 800159e:	bf00      	nop
 80015a0:	3730      	adds	r7, #48	@ 0x30
 80015a2:	46bd      	mov	sp, r7
 80015a4:	bd80      	pop	{r7, pc}
 80015a6:	bf00      	nop
 80015a8:	20000374 	.word	0x20000374
 80015ac:	50001000 	.word	0x50001000

080015b0 <HAL_DAC_MspInit>:
 80015b0:	b480      	push	{r7}
 80015b2:	b085      	sub	sp, #20
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	687b      	ldr	r3, [r7, #4]
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	4a0a      	ldr	r2, [pc, #40]	@ (80015e8 <HAL_DAC_MspInit+0x38>)
 80015be:	4293      	cmp	r3, r2
 80015c0:	d10b      	bne.n	80015da <HAL_DAC_MspInit+0x2a>
 80015c2:	4b0a      	ldr	r3, [pc, #40]	@ (80015ec <HAL_DAC_MspInit+0x3c>)
 80015c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015c6:	4a09      	ldr	r2, [pc, #36]	@ (80015ec <HAL_DAC_MspInit+0x3c>)
 80015c8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80015cc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80015ce:	4b07      	ldr	r3, [pc, #28]	@ (80015ec <HAL_DAC_MspInit+0x3c>)
 80015d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015d2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80015d6:	60fb      	str	r3, [r7, #12]
 80015d8:	68fb      	ldr	r3, [r7, #12]
 80015da:	bf00      	nop
 80015dc:	3714      	adds	r7, #20
 80015de:	46bd      	mov	sp, r7
 80015e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015e4:	4770      	bx	lr
 80015e6:	bf00      	nop
 80015e8:	50001000 	.word	0x50001000
 80015ec:	40021000 	.word	0x40021000

080015f0 <MX_DMA_Init>:
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b082      	sub	sp, #8
 80015f4:	af00      	add	r7, sp, #0
 80015f6:	4b16      	ldr	r3, [pc, #88]	@ (8001650 <MX_DMA_Init+0x60>)
 80015f8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80015fa:	4a15      	ldr	r2, [pc, #84]	@ (8001650 <MX_DMA_Init+0x60>)
 80015fc:	f043 0304 	orr.w	r3, r3, #4
 8001600:	6493      	str	r3, [r2, #72]	@ 0x48
 8001602:	4b13      	ldr	r3, [pc, #76]	@ (8001650 <MX_DMA_Init+0x60>)
 8001604:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001606:	f003 0304 	and.w	r3, r3, #4
 800160a:	607b      	str	r3, [r7, #4]
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	4b10      	ldr	r3, [pc, #64]	@ (8001650 <MX_DMA_Init+0x60>)
 8001610:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001612:	4a0f      	ldr	r2, [pc, #60]	@ (8001650 <MX_DMA_Init+0x60>)
 8001614:	f043 0301 	orr.w	r3, r3, #1
 8001618:	6493      	str	r3, [r2, #72]	@ 0x48
 800161a:	4b0d      	ldr	r3, [pc, #52]	@ (8001650 <MX_DMA_Init+0x60>)
 800161c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800161e:	f003 0301 	and.w	r3, r3, #1
 8001622:	603b      	str	r3, [r7, #0]
 8001624:	683b      	ldr	r3, [r7, #0]
 8001626:	2200      	movs	r2, #0
 8001628:	2101      	movs	r1, #1
 800162a:	200b      	movs	r0, #11
 800162c:	f004 f857 	bl	80056de <HAL_NVIC_SetPriority>
 8001630:	200b      	movs	r0, #11
 8001632:	f004 f86e 	bl	8005712 <HAL_NVIC_EnableIRQ>
 8001636:	2200      	movs	r2, #0
 8001638:	2101      	movs	r1, #1
 800163a:	200c      	movs	r0, #12
 800163c:	f004 f84f 	bl	80056de <HAL_NVIC_SetPriority>
 8001640:	200c      	movs	r0, #12
 8001642:	f004 f866 	bl	8005712 <HAL_NVIC_EnableIRQ>
 8001646:	bf00      	nop
 8001648:	3708      	adds	r7, #8
 800164a:	46bd      	mov	sp, r7
 800164c:	bd80      	pop	{r7, pc}
 800164e:	bf00      	nop
 8001650:	40021000 	.word	0x40021000

08001654 <MX_FDCAN1_Init>:
 8001654:	b580      	push	{r7, lr}
 8001656:	af00      	add	r7, sp, #0
 8001658:	4b1f      	ldr	r3, [pc, #124]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 800165a:	4a20      	ldr	r2, [pc, #128]	@ (80016dc <MX_FDCAN1_Init+0x88>)
 800165c:	601a      	str	r2, [r3, #0]
 800165e:	4b1e      	ldr	r3, [pc, #120]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 8001660:	2200      	movs	r2, #0
 8001662:	605a      	str	r2, [r3, #4]
 8001664:	4b1c      	ldr	r3, [pc, #112]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 8001666:	2200      	movs	r2, #0
 8001668:	609a      	str	r2, [r3, #8]
 800166a:	4b1b      	ldr	r3, [pc, #108]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 800166c:	2200      	movs	r2, #0
 800166e:	60da      	str	r2, [r3, #12]
 8001670:	4b19      	ldr	r3, [pc, #100]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 8001672:	2200      	movs	r2, #0
 8001674:	741a      	strb	r2, [r3, #16]
 8001676:	4b18      	ldr	r3, [pc, #96]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 8001678:	2200      	movs	r2, #0
 800167a:	745a      	strb	r2, [r3, #17]
 800167c:	4b16      	ldr	r3, [pc, #88]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 800167e:	2200      	movs	r2, #0
 8001680:	749a      	strb	r2, [r3, #18]
 8001682:	4b15      	ldr	r3, [pc, #84]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 8001684:	2214      	movs	r2, #20
 8001686:	615a      	str	r2, [r3, #20]
 8001688:	4b13      	ldr	r3, [pc, #76]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 800168a:	2201      	movs	r2, #1
 800168c:	619a      	str	r2, [r3, #24]
 800168e:	4b12      	ldr	r3, [pc, #72]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 8001690:	220a      	movs	r2, #10
 8001692:	61da      	str	r2, [r3, #28]
 8001694:	4b10      	ldr	r3, [pc, #64]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 8001696:	2205      	movs	r2, #5
 8001698:	621a      	str	r2, [r3, #32]
 800169a:	4b0f      	ldr	r3, [pc, #60]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 800169c:	2214      	movs	r2, #20
 800169e:	625a      	str	r2, [r3, #36]	@ 0x24
 80016a0:	4b0d      	ldr	r3, [pc, #52]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 80016a2:	2201      	movs	r2, #1
 80016a4:	629a      	str	r2, [r3, #40]	@ 0x28
 80016a6:	4b0c      	ldr	r3, [pc, #48]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 80016a8:	220a      	movs	r2, #10
 80016aa:	62da      	str	r2, [r3, #44]	@ 0x2c
 80016ac:	4b0a      	ldr	r3, [pc, #40]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 80016ae:	2205      	movs	r2, #5
 80016b0:	631a      	str	r2, [r3, #48]	@ 0x30
 80016b2:	4b09      	ldr	r3, [pc, #36]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 80016b4:	2201      	movs	r2, #1
 80016b6:	635a      	str	r2, [r3, #52]	@ 0x34
 80016b8:	4b07      	ldr	r3, [pc, #28]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 80016ba:	2201      	movs	r2, #1
 80016bc:	639a      	str	r2, [r3, #56]	@ 0x38
 80016be:	4b06      	ldr	r3, [pc, #24]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80016c4:	4804      	ldr	r0, [pc, #16]	@ (80016d8 <MX_FDCAN1_Init+0x84>)
 80016c6:	f004 fd4b 	bl	8006160 <HAL_FDCAN_Init>
 80016ca:	4603      	mov	r3, r0
 80016cc:	2b00      	cmp	r3, #0
 80016ce:	d001      	beq.n	80016d4 <MX_FDCAN1_Init+0x80>
 80016d0:	f000 f9a7 	bl	8001a22 <Error_Handler>
 80016d4:	bf00      	nop
 80016d6:	bd80      	pop	{r7, pc}
 80016d8:	20000388 	.word	0x20000388
 80016dc:	40006400 	.word	0x40006400

080016e0 <HAL_FDCAN_MspInit>:
 80016e0:	b580      	push	{r7, lr}
 80016e2:	b09a      	sub	sp, #104	@ 0x68
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	6078      	str	r0, [r7, #4]
 80016e8:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80016ec:	2200      	movs	r2, #0
 80016ee:	601a      	str	r2, [r3, #0]
 80016f0:	605a      	str	r2, [r3, #4]
 80016f2:	609a      	str	r2, [r3, #8]
 80016f4:	60da      	str	r2, [r3, #12]
 80016f6:	611a      	str	r2, [r3, #16]
 80016f8:	f107 0310 	add.w	r3, r7, #16
 80016fc:	2244      	movs	r2, #68	@ 0x44
 80016fe:	2100      	movs	r1, #0
 8001700:	4618      	mov	r0, r3
 8001702:	f00e f901 	bl	800f908 <memset>
 8001706:	687b      	ldr	r3, [r7, #4]
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	4a20      	ldr	r2, [pc, #128]	@ (800178c <HAL_FDCAN_MspInit+0xac>)
 800170c:	4293      	cmp	r3, r2
 800170e:	d139      	bne.n	8001784 <HAL_FDCAN_MspInit+0xa4>
 8001710:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001714:	613b      	str	r3, [r7, #16]
 8001716:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800171a:	643b      	str	r3, [r7, #64]	@ 0x40
 800171c:	f107 0310 	add.w	r3, r7, #16
 8001720:	4618      	mov	r0, r3
 8001722:	f005 ff63 	bl	80075ec <HAL_RCCEx_PeriphCLKConfig>
 8001726:	4603      	mov	r3, r0
 8001728:	2b00      	cmp	r3, #0
 800172a:	d001      	beq.n	8001730 <HAL_FDCAN_MspInit+0x50>
 800172c:	f000 f979 	bl	8001a22 <Error_Handler>
 8001730:	4b17      	ldr	r3, [pc, #92]	@ (8001790 <HAL_FDCAN_MspInit+0xb0>)
 8001732:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001734:	4a16      	ldr	r2, [pc, #88]	@ (8001790 <HAL_FDCAN_MspInit+0xb0>)
 8001736:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800173a:	6593      	str	r3, [r2, #88]	@ 0x58
 800173c:	4b14      	ldr	r3, [pc, #80]	@ (8001790 <HAL_FDCAN_MspInit+0xb0>)
 800173e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001740:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001744:	60fb      	str	r3, [r7, #12]
 8001746:	68fb      	ldr	r3, [r7, #12]
 8001748:	4b11      	ldr	r3, [pc, #68]	@ (8001790 <HAL_FDCAN_MspInit+0xb0>)
 800174a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800174c:	4a10      	ldr	r2, [pc, #64]	@ (8001790 <HAL_FDCAN_MspInit+0xb0>)
 800174e:	f043 0301 	orr.w	r3, r3, #1
 8001752:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001754:	4b0e      	ldr	r3, [pc, #56]	@ (8001790 <HAL_FDCAN_MspInit+0xb0>)
 8001756:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001758:	f003 0301 	and.w	r3, r3, #1
 800175c:	60bb      	str	r3, [r7, #8]
 800175e:	68bb      	ldr	r3, [r7, #8]
 8001760:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8001764:	657b      	str	r3, [r7, #84]	@ 0x54
 8001766:	2302      	movs	r3, #2
 8001768:	65bb      	str	r3, [r7, #88]	@ 0x58
 800176a:	2300      	movs	r3, #0
 800176c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800176e:	2300      	movs	r3, #0
 8001770:	663b      	str	r3, [r7, #96]	@ 0x60
 8001772:	2309      	movs	r3, #9
 8001774:	667b      	str	r3, [r7, #100]	@ 0x64
 8001776:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800177a:	4619      	mov	r1, r3
 800177c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001780:	f004 fe9e 	bl	80064c0 <HAL_GPIO_Init>
 8001784:	bf00      	nop
 8001786:	3768      	adds	r7, #104	@ 0x68
 8001788:	46bd      	mov	sp, r7
 800178a:	bd80      	pop	{r7, pc}
 800178c:	40006400 	.word	0x40006400
 8001790:	40021000 	.word	0x40021000

08001794 <MX_GPIO_Init>:
 8001794:	b580      	push	{r7, lr}
 8001796:	b08a      	sub	sp, #40	@ 0x28
 8001798:	af00      	add	r7, sp, #0
 800179a:	f107 0314 	add.w	r3, r7, #20
 800179e:	2200      	movs	r2, #0
 80017a0:	601a      	str	r2, [r3, #0]
 80017a2:	605a      	str	r2, [r3, #4]
 80017a4:	609a      	str	r2, [r3, #8]
 80017a6:	60da      	str	r2, [r3, #12]
 80017a8:	611a      	str	r2, [r3, #16]
 80017aa:	4b38      	ldr	r3, [pc, #224]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80017ae:	4a37      	ldr	r2, [pc, #220]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017b0:	f043 0304 	orr.w	r3, r3, #4
 80017b4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80017b6:	4b35      	ldr	r3, [pc, #212]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80017ba:	f003 0304 	and.w	r3, r3, #4
 80017be:	613b      	str	r3, [r7, #16]
 80017c0:	693b      	ldr	r3, [r7, #16]
 80017c2:	4b32      	ldr	r3, [pc, #200]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80017c6:	4a31      	ldr	r2, [pc, #196]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017c8:	f043 0320 	orr.w	r3, r3, #32
 80017cc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80017ce:	4b2f      	ldr	r3, [pc, #188]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80017d2:	f003 0320 	and.w	r3, r3, #32
 80017d6:	60fb      	str	r3, [r7, #12]
 80017d8:	68fb      	ldr	r3, [r7, #12]
 80017da:	4b2c      	ldr	r3, [pc, #176]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80017de:	4a2b      	ldr	r2, [pc, #172]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017e0:	f043 0301 	orr.w	r3, r3, #1
 80017e4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80017e6:	4b29      	ldr	r3, [pc, #164]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80017ea:	f003 0301 	and.w	r3, r3, #1
 80017ee:	60bb      	str	r3, [r7, #8]
 80017f0:	68bb      	ldr	r3, [r7, #8]
 80017f2:	4b26      	ldr	r3, [pc, #152]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80017f6:	4a25      	ldr	r2, [pc, #148]	@ (800188c <MX_GPIO_Init+0xf8>)
 80017f8:	f043 0302 	orr.w	r3, r3, #2
 80017fc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80017fe:	4b23      	ldr	r3, [pc, #140]	@ (800188c <MX_GPIO_Init+0xf8>)
 8001800:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001802:	f003 0302 	and.w	r3, r3, #2
 8001806:	607b      	str	r3, [r7, #4]
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	2201      	movs	r2, #1
 800180c:	2110      	movs	r1, #16
 800180e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001812:	f004 ffef 	bl	80067f4 <HAL_GPIO_WritePin>
 8001816:	2200      	movs	r2, #0
 8001818:	2150      	movs	r1, #80	@ 0x50
 800181a:	481d      	ldr	r0, [pc, #116]	@ (8001890 <MX_GPIO_Init+0xfc>)
 800181c:	f004 ffea 	bl	80067f4 <HAL_GPIO_WritePin>
 8001820:	2200      	movs	r2, #0
 8001822:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001826:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800182a:	f004 ffe3 	bl	80067f4 <HAL_GPIO_WritePin>
 800182e:	f44f 5330 	mov.w	r3, #11264	@ 0x2c00
 8001832:	617b      	str	r3, [r7, #20]
 8001834:	2300      	movs	r3, #0
 8001836:	61bb      	str	r3, [r7, #24]
 8001838:	2300      	movs	r3, #0
 800183a:	61fb      	str	r3, [r7, #28]
 800183c:	f107 0314 	add.w	r3, r7, #20
 8001840:	4619      	mov	r1, r3
 8001842:	4813      	ldr	r0, [pc, #76]	@ (8001890 <MX_GPIO_Init+0xfc>)
 8001844:	f004 fe3c 	bl	80064c0 <HAL_GPIO_Init>
 8001848:	f248 0310 	movw	r3, #32784	@ 0x8010
 800184c:	617b      	str	r3, [r7, #20]
 800184e:	2301      	movs	r3, #1
 8001850:	61bb      	str	r3, [r7, #24]
 8001852:	2300      	movs	r3, #0
 8001854:	61fb      	str	r3, [r7, #28]
 8001856:	2303      	movs	r3, #3
 8001858:	623b      	str	r3, [r7, #32]
 800185a:	f107 0314 	add.w	r3, r7, #20
 800185e:	4619      	mov	r1, r3
 8001860:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001864:	f004 fe2c 	bl	80064c0 <HAL_GPIO_Init>
 8001868:	2350      	movs	r3, #80	@ 0x50
 800186a:	617b      	str	r3, [r7, #20]
 800186c:	2301      	movs	r3, #1
 800186e:	61bb      	str	r3, [r7, #24]
 8001870:	2300      	movs	r3, #0
 8001872:	61fb      	str	r3, [r7, #28]
 8001874:	2300      	movs	r3, #0
 8001876:	623b      	str	r3, [r7, #32]
 8001878:	f107 0314 	add.w	r3, r7, #20
 800187c:	4619      	mov	r1, r3
 800187e:	4804      	ldr	r0, [pc, #16]	@ (8001890 <MX_GPIO_Init+0xfc>)
 8001880:	f004 fe1e 	bl	80064c0 <HAL_GPIO_Init>
 8001884:	bf00      	nop
 8001886:	3728      	adds	r7, #40	@ 0x28
 8001888:	46bd      	mov	sp, r7
 800188a:	bd80      	pop	{r7, pc}
 800188c:	40021000 	.word	0x40021000
 8001890:	48000800 	.word	0x48000800

08001894 <main>:
 8001894:	b580      	push	{r7, lr}
 8001896:	af00      	add	r7, sp, #0
 8001898:	f000 feeb 	bl	8002672 <HAL_Init>
 800189c:	f000 f878 	bl	8001990 <SystemClock_Config>
 80018a0:	f7ff ff78 	bl	8001794 <MX_GPIO_Init>
 80018a4:	f7ff fea4 	bl	80015f0 <MX_DMA_Init>
 80018a8:	f000 fdb0 	bl	800240c <MX_USART3_UART_Init>
 80018ac:	f7ff fbc2 	bl	8001034 <MX_ADC1_Init>
 80018b0:	f7ff fc7a 	bl	80011a8 <MX_ADC2_Init>
 80018b4:	f000 f8bc 	bl	8001a30 <MX_OPAMP1_Init>
 80018b8:	f000 f8e2 	bl	8001a80 <MX_OPAMP2_Init>
 80018bc:	f000 f908 	bl	8001ad0 <MX_OPAMP3_Init>
 80018c0:	f000 fb88 	bl	8001fd4 <MX_TIM1_Init>
 80018c4:	f7ff fdd8 	bl	8001478 <MX_COMP1_Init>
 80018c8:	f7ff fe38 	bl	800153c <MX_DAC3_Init>
 80018cc:	f7ff fec2 	bl	8001654 <MX_FDCAN1_Init>
 80018d0:	f000 fc74 	bl	80021bc <MX_TIM4_Init>
 80018d4:	f000 f99a 	bl	8001c0c <MX_SPI1_Init>
<<<<<<< HEAD
 80018d8:	f00a f980 	bl	800bbdc <appInit>
=======
  /* USER CODE BEGIN 2 */
  appInit();
 80018d8:	f00b fb2a 	bl	800cf30 <appInit>
  HAL_OPAMP_Start(&hopamp1);
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
 80018dc:	4824      	ldr	r0, [pc, #144]	@ (8001970 <main+0xdc>)
 80018de:	f005 f871 	bl	80069c4 <HAL_OPAMP_Start>
 80018e2:	4824      	ldr	r0, [pc, #144]	@ (8001974 <main+0xe0>)
 80018e4:	f005 f86e 	bl	80069c4 <HAL_OPAMP_Start>
 80018e8:	4823      	ldr	r0, [pc, #140]	@ (8001978 <main+0xe4>)
 80018ea:	f005 f86b 	bl	80069c4 <HAL_OPAMP_Start>
 80018ee:	2264      	movs	r2, #100	@ 0x64
 80018f0:	4922      	ldr	r1, [pc, #136]	@ (800197c <main+0xe8>)
 80018f2:	4823      	ldr	r0, [pc, #140]	@ (8001980 <main+0xec>)
 80018f4:	f009 fefd 	bl	800b6f2 <HAL_UARTEx_ReceiveToIdle_DMA>
 80018f8:	217f      	movs	r1, #127	@ 0x7f
 80018fa:	4822      	ldr	r0, [pc, #136]	@ (8001984 <main+0xf0>)
 80018fc:	f002 fc90 	bl	8004220 <HAL_ADCEx_Calibration_Start>
 8001900:	217f      	movs	r1, #127	@ 0x7f
 8001902:	4821      	ldr	r0, [pc, #132]	@ (8001988 <main+0xf4>)
 8001904:	f002 fc8c 	bl	8004220 <HAL_ADCEx_Calibration_Start>
 8001908:	4b1e      	ldr	r3, [pc, #120]	@ (8001984 <main+0xf0>)
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	2220      	movs	r2, #32
 800190e:	601a      	str	r2, [r3, #0]
 8001910:	4b1c      	ldr	r3, [pc, #112]	@ (8001984 <main+0xf0>)
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	2204      	movs	r2, #4
 8001916:	601a      	str	r2, [r3, #0]
 8001918:	4b1b      	ldr	r3, [pc, #108]	@ (8001988 <main+0xf4>)
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	2220      	movs	r2, #32
 800191e:	601a      	str	r2, [r3, #0]
 8001920:	4818      	ldr	r0, [pc, #96]	@ (8001984 <main+0xf0>)
 8001922:	f002 fd8f 	bl	8004444 <HAL_ADCEx_InjectedStart_IT>
 8001926:	4818      	ldr	r0, [pc, #96]	@ (8001988 <main+0xf4>)
 8001928:	f002 fcdc 	bl	80042e4 <HAL_ADCEx_InjectedStart>
 800192c:	4817      	ldr	r0, [pc, #92]	@ (800198c <main+0xf8>)
 800192e:	f006 fce5 	bl	80082fc <HAL_TIM_Base_Start>
 8001932:	210c      	movs	r1, #12
 8001934:	4815      	ldr	r0, [pc, #84]	@ (800198c <main+0xf8>)
 8001936:	f006 fda5 	bl	8008484 <HAL_TIM_PWM_Start>
 800193a:	2100      	movs	r1, #0
 800193c:	4813      	ldr	r0, [pc, #76]	@ (800198c <main+0xf8>)
 800193e:	f006 fda1 	bl	8008484 <HAL_TIM_PWM_Start>
 8001942:	2104      	movs	r1, #4
 8001944:	4811      	ldr	r0, [pc, #68]	@ (800198c <main+0xf8>)
 8001946:	f006 fd9d 	bl	8008484 <HAL_TIM_PWM_Start>
 800194a:	2108      	movs	r1, #8
 800194c:	480f      	ldr	r0, [pc, #60]	@ (800198c <main+0xf8>)
 800194e:	f006 fd99 	bl	8008484 <HAL_TIM_PWM_Start>
 8001952:	2100      	movs	r1, #0
 8001954:	480d      	ldr	r0, [pc, #52]	@ (800198c <main+0xf8>)
 8001956:	f007 fead 	bl	80096b4 <HAL_TIMEx_PWMN_Start>
 800195a:	2104      	movs	r1, #4
 800195c:	480b      	ldr	r0, [pc, #44]	@ (800198c <main+0xf8>)
 800195e:	f007 fea9 	bl	80096b4 <HAL_TIMEx_PWMN_Start>
 8001962:	2108      	movs	r1, #8
 8001964:	4809      	ldr	r0, [pc, #36]	@ (800198c <main+0xf8>)
 8001966:	f007 fea5 	bl	80096b4 <HAL_TIMEx_PWMN_Start>
<<<<<<< HEAD
 800196a:	f00b ff45 	bl	800d7f8 <userMain>
=======
    //    HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData);
    //    HAL_Delay(10);
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
    userMain();
 800196a:	f00c f8b7 	bl	800dadc <userMain>
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
 800196e:	e7fc      	b.n	800196a <main+0xd6>
 8001970:	200003ec 	.word	0x200003ec
 8001974:	20000428 	.word	0x20000428
 8001978:	20000464 	.word	0x20000464
 800197c:	200008a4 	.word	0x200008a4
 8001980:	200005a0 	.word	0x200005a0
 8001984:	20000274 	.word	0x20000274
 8001988:	200002e0 	.word	0x200002e0
 800198c:	20000508 	.word	0x20000508

08001990 <SystemClock_Config>:
 8001990:	b580      	push	{r7, lr}
 8001992:	b094      	sub	sp, #80	@ 0x50
 8001994:	af00      	add	r7, sp, #0
 8001996:	f107 0318 	add.w	r3, r7, #24
 800199a:	2238      	movs	r2, #56	@ 0x38
 800199c:	2100      	movs	r1, #0
 800199e:	4618      	mov	r0, r3
 80019a0:	f00d ffb2 	bl	800f908 <memset>
 80019a4:	1d3b      	adds	r3, r7, #4
 80019a6:	2200      	movs	r2, #0
 80019a8:	601a      	str	r2, [r3, #0]
 80019aa:	605a      	str	r2, [r3, #4]
 80019ac:	609a      	str	r2, [r3, #8]
 80019ae:	60da      	str	r2, [r3, #12]
 80019b0:	611a      	str	r2, [r3, #16]
 80019b2:	2000      	movs	r0, #0
 80019b4:	f005 f838 	bl	8006a28 <HAL_PWREx_ControlVoltageScaling>
 80019b8:	2301      	movs	r3, #1
 80019ba:	61bb      	str	r3, [r7, #24]
 80019bc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80019c0:	61fb      	str	r3, [r7, #28]
 80019c2:	2302      	movs	r3, #2
 80019c4:	637b      	str	r3, [r7, #52]	@ 0x34
 80019c6:	2303      	movs	r3, #3
 80019c8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80019ca:	2303      	movs	r3, #3
 80019cc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80019ce:	2328      	movs	r3, #40	@ 0x28
 80019d0:	643b      	str	r3, [r7, #64]	@ 0x40
 80019d2:	2302      	movs	r3, #2
 80019d4:	647b      	str	r3, [r7, #68]	@ 0x44
 80019d6:	2302      	movs	r3, #2
 80019d8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80019da:	2302      	movs	r3, #2
 80019dc:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80019de:	f107 0318 	add.w	r3, r7, #24
 80019e2:	4618      	mov	r0, r3
 80019e4:	f005 f8d4 	bl	8006b90 <HAL_RCC_OscConfig>
 80019e8:	4603      	mov	r3, r0
 80019ea:	2b00      	cmp	r3, #0
 80019ec:	d001      	beq.n	80019f2 <SystemClock_Config+0x62>
 80019ee:	f000 f818 	bl	8001a22 <Error_Handler>
 80019f2:	230f      	movs	r3, #15
 80019f4:	607b      	str	r3, [r7, #4]
 80019f6:	2303      	movs	r3, #3
 80019f8:	60bb      	str	r3, [r7, #8]
 80019fa:	2300      	movs	r3, #0
 80019fc:	60fb      	str	r3, [r7, #12]
 80019fe:	2300      	movs	r3, #0
 8001a00:	613b      	str	r3, [r7, #16]
 8001a02:	2300      	movs	r3, #0
 8001a04:	617b      	str	r3, [r7, #20]
 8001a06:	1d3b      	adds	r3, r7, #4
 8001a08:	2104      	movs	r1, #4
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	f005 fbd2 	bl	80071b4 <HAL_RCC_ClockConfig>
 8001a10:	4603      	mov	r3, r0
 8001a12:	2b00      	cmp	r3, #0
 8001a14:	d001      	beq.n	8001a1a <SystemClock_Config+0x8a>
 8001a16:	f000 f804 	bl	8001a22 <Error_Handler>
 8001a1a:	bf00      	nop
 8001a1c:	3750      	adds	r7, #80	@ 0x50
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	bd80      	pop	{r7, pc}

08001a22 <Error_Handler>:
 8001a22:	b480      	push	{r7}
 8001a24:	af00      	add	r7, sp, #0
 8001a26:	b672      	cpsid	i
 8001a28:	bf00      	nop
 8001a2a:	bf00      	nop
 8001a2c:	e7fd      	b.n	8001a2a <Error_Handler+0x8>
	...

08001a30 <MX_OPAMP1_Init>:
 8001a30:	b580      	push	{r7, lr}
 8001a32:	af00      	add	r7, sp, #0
 8001a34:	4b10      	ldr	r3, [pc, #64]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a36:	4a11      	ldr	r2, [pc, #68]	@ (8001a7c <MX_OPAMP1_Init+0x4c>)
 8001a38:	601a      	str	r2, [r3, #0]
 8001a3a:	4b0f      	ldr	r3, [pc, #60]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a3c:	2200      	movs	r2, #0
 8001a3e:	605a      	str	r2, [r3, #4]
 8001a40:	4b0d      	ldr	r3, [pc, #52]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a42:	2200      	movs	r2, #0
 8001a44:	609a      	str	r2, [r3, #8]
 8001a46:	4b0c      	ldr	r3, [pc, #48]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a48:	2200      	movs	r2, #0
 8001a4a:	60da      	str	r2, [r3, #12]
 8001a4c:	4b0a      	ldr	r3, [pc, #40]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a4e:	2200      	movs	r2, #0
 8001a50:	611a      	str	r2, [r3, #16]
 8001a52:	4b09      	ldr	r3, [pc, #36]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a54:	2200      	movs	r2, #0
 8001a56:	751a      	strb	r2, [r3, #20]
 8001a58:	4b07      	ldr	r3, [pc, #28]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	619a      	str	r2, [r3, #24]
 8001a5e:	4b06      	ldr	r3, [pc, #24]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a60:	2200      	movs	r2, #0
 8001a62:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001a64:	4804      	ldr	r0, [pc, #16]	@ (8001a78 <MX_OPAMP1_Init+0x48>)
 8001a66:	f004 fedd 	bl	8006824 <HAL_OPAMP_Init>
 8001a6a:	4603      	mov	r3, r0
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	d001      	beq.n	8001a74 <MX_OPAMP1_Init+0x44>
 8001a70:	f7ff ffd7 	bl	8001a22 <Error_Handler>
 8001a74:	bf00      	nop
 8001a76:	bd80      	pop	{r7, pc}
 8001a78:	200003ec 	.word	0x200003ec
 8001a7c:	40010300 	.word	0x40010300

08001a80 <MX_OPAMP2_Init>:
 8001a80:	b580      	push	{r7, lr}
 8001a82:	af00      	add	r7, sp, #0
 8001a84:	4b10      	ldr	r3, [pc, #64]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001a86:	4a11      	ldr	r2, [pc, #68]	@ (8001acc <MX_OPAMP2_Init+0x4c>)
 8001a88:	601a      	str	r2, [r3, #0]
 8001a8a:	4b0f      	ldr	r3, [pc, #60]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	605a      	str	r2, [r3, #4]
 8001a90:	4b0d      	ldr	r3, [pc, #52]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001a92:	2200      	movs	r2, #0
 8001a94:	609a      	str	r2, [r3, #8]
 8001a96:	4b0c      	ldr	r3, [pc, #48]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001a98:	2200      	movs	r2, #0
 8001a9a:	60da      	str	r2, [r3, #12]
 8001a9c:	4b0a      	ldr	r3, [pc, #40]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001a9e:	2200      	movs	r2, #0
 8001aa0:	611a      	str	r2, [r3, #16]
 8001aa2:	4b09      	ldr	r3, [pc, #36]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001aa4:	2200      	movs	r2, #0
 8001aa6:	751a      	strb	r2, [r3, #20]
 8001aa8:	4b07      	ldr	r3, [pc, #28]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001aaa:	2200      	movs	r2, #0
 8001aac:	619a      	str	r2, [r3, #24]
 8001aae:	4b06      	ldr	r3, [pc, #24]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001ab4:	4804      	ldr	r0, [pc, #16]	@ (8001ac8 <MX_OPAMP2_Init+0x48>)
 8001ab6:	f004 feb5 	bl	8006824 <HAL_OPAMP_Init>
 8001aba:	4603      	mov	r3, r0
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	d001      	beq.n	8001ac4 <MX_OPAMP2_Init+0x44>
 8001ac0:	f7ff ffaf 	bl	8001a22 <Error_Handler>
 8001ac4:	bf00      	nop
 8001ac6:	bd80      	pop	{r7, pc}
 8001ac8:	20000428 	.word	0x20000428
 8001acc:	40010304 	.word	0x40010304

08001ad0 <MX_OPAMP3_Init>:
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	4b10      	ldr	r3, [pc, #64]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001ad6:	4a11      	ldr	r2, [pc, #68]	@ (8001b1c <MX_OPAMP3_Init+0x4c>)
 8001ad8:	601a      	str	r2, [r3, #0]
 8001ada:	4b0f      	ldr	r3, [pc, #60]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001adc:	2200      	movs	r2, #0
 8001ade:	605a      	str	r2, [r3, #4]
 8001ae0:	4b0d      	ldr	r3, [pc, #52]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	609a      	str	r2, [r3, #8]
 8001ae6:	4b0c      	ldr	r3, [pc, #48]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001ae8:	2200      	movs	r2, #0
 8001aea:	60da      	str	r2, [r3, #12]
 8001aec:	4b0a      	ldr	r3, [pc, #40]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001aee:	2200      	movs	r2, #0
 8001af0:	611a      	str	r2, [r3, #16]
 8001af2:	4b09      	ldr	r3, [pc, #36]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001af4:	2200      	movs	r2, #0
 8001af6:	751a      	strb	r2, [r3, #20]
 8001af8:	4b07      	ldr	r3, [pc, #28]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001afa:	2200      	movs	r2, #0
 8001afc:	619a      	str	r2, [r3, #24]
 8001afe:	4b06      	ldr	r3, [pc, #24]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001b00:	2200      	movs	r2, #0
 8001b02:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001b04:	4804      	ldr	r0, [pc, #16]	@ (8001b18 <MX_OPAMP3_Init+0x48>)
 8001b06:	f004 fe8d 	bl	8006824 <HAL_OPAMP_Init>
 8001b0a:	4603      	mov	r3, r0
 8001b0c:	2b00      	cmp	r3, #0
 8001b0e:	d001      	beq.n	8001b14 <MX_OPAMP3_Init+0x44>
 8001b10:	f7ff ff87 	bl	8001a22 <Error_Handler>
 8001b14:	bf00      	nop
 8001b16:	bd80      	pop	{r7, pc}
 8001b18:	20000464 	.word	0x20000464
 8001b1c:	40010308 	.word	0x40010308

08001b20 <HAL_OPAMP_MspInit>:
 8001b20:	b580      	push	{r7, lr}
 8001b22:	b08a      	sub	sp, #40	@ 0x28
 8001b24:	af00      	add	r7, sp, #0
 8001b26:	6078      	str	r0, [r7, #4]
 8001b28:	f107 0314 	add.w	r3, r7, #20
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	601a      	str	r2, [r3, #0]
 8001b30:	605a      	str	r2, [r3, #4]
 8001b32:	609a      	str	r2, [r3, #8]
 8001b34:	60da      	str	r2, [r3, #12]
 8001b36:	611a      	str	r2, [r3, #16]
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	681b      	ldr	r3, [r3, #0]
 8001b3c:	4a2e      	ldr	r2, [pc, #184]	@ (8001bf8 <HAL_OPAMP_MspInit+0xd8>)
 8001b3e:	4293      	cmp	r3, r2
 8001b40:	d119      	bne.n	8001b76 <HAL_OPAMP_MspInit+0x56>
 8001b42:	4b2e      	ldr	r3, [pc, #184]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001b44:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b46:	4a2d      	ldr	r2, [pc, #180]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001b48:	f043 0301 	orr.w	r3, r3, #1
 8001b4c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b4e:	4b2b      	ldr	r3, [pc, #172]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001b50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b52:	f003 0301 	and.w	r3, r3, #1
 8001b56:	613b      	str	r3, [r7, #16]
 8001b58:	693b      	ldr	r3, [r7, #16]
 8001b5a:	230e      	movs	r3, #14
 8001b5c:	617b      	str	r3, [r7, #20]
 8001b5e:	2303      	movs	r3, #3
 8001b60:	61bb      	str	r3, [r7, #24]
 8001b62:	2300      	movs	r3, #0
 8001b64:	61fb      	str	r3, [r7, #28]
 8001b66:	f107 0314 	add.w	r3, r7, #20
 8001b6a:	4619      	mov	r1, r3
 8001b6c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001b70:	f004 fca6 	bl	80064c0 <HAL_GPIO_Init>
 8001b74:	e03b      	b.n	8001bee <HAL_OPAMP_MspInit+0xce>
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	4a21      	ldr	r2, [pc, #132]	@ (8001c00 <HAL_OPAMP_MspInit+0xe0>)
 8001b7c:	4293      	cmp	r3, r2
 8001b7e:	d119      	bne.n	8001bb4 <HAL_OPAMP_MspInit+0x94>
 8001b80:	4b1e      	ldr	r3, [pc, #120]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001b82:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b84:	4a1d      	ldr	r2, [pc, #116]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001b86:	f043 0301 	orr.w	r3, r3, #1
 8001b8a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b8c:	4b1b      	ldr	r3, [pc, #108]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001b8e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b90:	f003 0301 	and.w	r3, r3, #1
 8001b94:	60fb      	str	r3, [r7, #12]
 8001b96:	68fb      	ldr	r3, [r7, #12]
 8001b98:	23e0      	movs	r3, #224	@ 0xe0
 8001b9a:	617b      	str	r3, [r7, #20]
 8001b9c:	2303      	movs	r3, #3
 8001b9e:	61bb      	str	r3, [r7, #24]
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	61fb      	str	r3, [r7, #28]
 8001ba4:	f107 0314 	add.w	r3, r7, #20
 8001ba8:	4619      	mov	r1, r3
 8001baa:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001bae:	f004 fc87 	bl	80064c0 <HAL_GPIO_Init>
 8001bb2:	e01c      	b.n	8001bee <HAL_OPAMP_MspInit+0xce>
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	4a12      	ldr	r2, [pc, #72]	@ (8001c04 <HAL_OPAMP_MspInit+0xe4>)
 8001bba:	4293      	cmp	r3, r2
 8001bbc:	d117      	bne.n	8001bee <HAL_OPAMP_MspInit+0xce>
 8001bbe:	4b0f      	ldr	r3, [pc, #60]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001bc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bc2:	4a0e      	ldr	r2, [pc, #56]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001bc4:	f043 0302 	orr.w	r3, r3, #2
 8001bc8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001bca:	4b0c      	ldr	r3, [pc, #48]	@ (8001bfc <HAL_OPAMP_MspInit+0xdc>)
 8001bcc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bce:	f003 0302 	and.w	r3, r3, #2
 8001bd2:	60bb      	str	r3, [r7, #8]
 8001bd4:	68bb      	ldr	r3, [r7, #8]
 8001bd6:	2307      	movs	r3, #7
 8001bd8:	617b      	str	r3, [r7, #20]
 8001bda:	2303      	movs	r3, #3
 8001bdc:	61bb      	str	r3, [r7, #24]
 8001bde:	2300      	movs	r3, #0
 8001be0:	61fb      	str	r3, [r7, #28]
 8001be2:	f107 0314 	add.w	r3, r7, #20
 8001be6:	4619      	mov	r1, r3
 8001be8:	4807      	ldr	r0, [pc, #28]	@ (8001c08 <HAL_OPAMP_MspInit+0xe8>)
 8001bea:	f004 fc69 	bl	80064c0 <HAL_GPIO_Init>
 8001bee:	bf00      	nop
 8001bf0:	3728      	adds	r7, #40	@ 0x28
 8001bf2:	46bd      	mov	sp, r7
 8001bf4:	bd80      	pop	{r7, pc}
 8001bf6:	bf00      	nop
 8001bf8:	40010300 	.word	0x40010300
 8001bfc:	40021000 	.word	0x40021000
 8001c00:	40010304 	.word	0x40010304
 8001c04:	40010308 	.word	0x40010308
 8001c08:	48000400 	.word	0x48000400

08001c0c <MX_SPI1_Init>:
 8001c0c:	b580      	push	{r7, lr}
 8001c0e:	af00      	add	r7, sp, #0
 8001c10:	4b1b      	ldr	r3, [pc, #108]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c12:	4a1c      	ldr	r2, [pc, #112]	@ (8001c84 <MX_SPI1_Init+0x78>)
 8001c14:	601a      	str	r2, [r3, #0]
 8001c16:	4b1a      	ldr	r3, [pc, #104]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c18:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001c1c:	605a      	str	r2, [r3, #4]
 8001c1e:	4b18      	ldr	r3, [pc, #96]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c20:	2200      	movs	r2, #0
 8001c22:	609a      	str	r2, [r3, #8]
 8001c24:	4b16      	ldr	r3, [pc, #88]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c26:	f44f 6270 	mov.w	r2, #3840	@ 0xf00
 8001c2a:	60da      	str	r2, [r3, #12]
 8001c2c:	4b14      	ldr	r3, [pc, #80]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c2e:	2200      	movs	r2, #0
 8001c30:	611a      	str	r2, [r3, #16]
 8001c32:	4b13      	ldr	r3, [pc, #76]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c34:	2201      	movs	r2, #1
 8001c36:	615a      	str	r2, [r3, #20]
 8001c38:	4b11      	ldr	r3, [pc, #68]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c3a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001c3e:	619a      	str	r2, [r3, #24]
 8001c40:	4b0f      	ldr	r3, [pc, #60]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c42:	2218      	movs	r2, #24
 8001c44:	61da      	str	r2, [r3, #28]
 8001c46:	4b0e      	ldr	r3, [pc, #56]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c48:	2200      	movs	r2, #0
 8001c4a:	621a      	str	r2, [r3, #32]
 8001c4c:	4b0c      	ldr	r3, [pc, #48]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c4e:	2200      	movs	r2, #0
 8001c50:	625a      	str	r2, [r3, #36]	@ 0x24
 8001c52:	4b0b      	ldr	r3, [pc, #44]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c54:	2200      	movs	r2, #0
 8001c56:	629a      	str	r2, [r3, #40]	@ 0x28
 8001c58:	4b09      	ldr	r3, [pc, #36]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c5a:	2207      	movs	r2, #7
 8001c5c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001c5e:	4b08      	ldr	r3, [pc, #32]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c60:	2200      	movs	r2, #0
 8001c62:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c64:	4b06      	ldr	r3, [pc, #24]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c66:	2200      	movs	r2, #0
 8001c68:	635a      	str	r2, [r3, #52]	@ 0x34
 8001c6a:	4805      	ldr	r0, [pc, #20]	@ (8001c80 <MX_SPI1_Init+0x74>)
 8001c6c:	f005 feae 	bl	80079cc <HAL_SPI_Init>
 8001c70:	4603      	mov	r3, r0
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d001      	beq.n	8001c7a <MX_SPI1_Init+0x6e>
 8001c76:	f7ff fed4 	bl	8001a22 <Error_Handler>
 8001c7a:	bf00      	nop
 8001c7c:	bd80      	pop	{r7, pc}
 8001c7e:	bf00      	nop
 8001c80:	200004a0 	.word	0x200004a0
 8001c84:	40013000 	.word	0x40013000

08001c88 <HAL_SPI_MspInit>:
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b08a      	sub	sp, #40	@ 0x28
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]
 8001c90:	f107 0314 	add.w	r3, r7, #20
 8001c94:	2200      	movs	r2, #0
 8001c96:	601a      	str	r2, [r3, #0]
 8001c98:	605a      	str	r2, [r3, #4]
 8001c9a:	609a      	str	r2, [r3, #8]
 8001c9c:	60da      	str	r2, [r3, #12]
 8001c9e:	611a      	str	r2, [r3, #16]
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	4a17      	ldr	r2, [pc, #92]	@ (8001d04 <HAL_SPI_MspInit+0x7c>)
 8001ca6:	4293      	cmp	r3, r2
 8001ca8:	d127      	bne.n	8001cfa <HAL_SPI_MspInit+0x72>
 8001caa:	4b17      	ldr	r3, [pc, #92]	@ (8001d08 <HAL_SPI_MspInit+0x80>)
 8001cac:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001cae:	4a16      	ldr	r2, [pc, #88]	@ (8001d08 <HAL_SPI_MspInit+0x80>)
 8001cb0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001cb4:	6613      	str	r3, [r2, #96]	@ 0x60
 8001cb6:	4b14      	ldr	r3, [pc, #80]	@ (8001d08 <HAL_SPI_MspInit+0x80>)
 8001cb8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001cba:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001cbe:	613b      	str	r3, [r7, #16]
 8001cc0:	693b      	ldr	r3, [r7, #16]
 8001cc2:	4b11      	ldr	r3, [pc, #68]	@ (8001d08 <HAL_SPI_MspInit+0x80>)
 8001cc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001cc6:	4a10      	ldr	r2, [pc, #64]	@ (8001d08 <HAL_SPI_MspInit+0x80>)
 8001cc8:	f043 0302 	orr.w	r3, r3, #2
 8001ccc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001cce:	4b0e      	ldr	r3, [pc, #56]	@ (8001d08 <HAL_SPI_MspInit+0x80>)
 8001cd0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001cd2:	f003 0302 	and.w	r3, r3, #2
 8001cd6:	60fb      	str	r3, [r7, #12]
 8001cd8:	68fb      	ldr	r3, [r7, #12]
 8001cda:	2338      	movs	r3, #56	@ 0x38
 8001cdc:	617b      	str	r3, [r7, #20]
 8001cde:	2302      	movs	r3, #2
 8001ce0:	61bb      	str	r3, [r7, #24]
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	61fb      	str	r3, [r7, #28]
 8001ce6:	2300      	movs	r3, #0
 8001ce8:	623b      	str	r3, [r7, #32]
 8001cea:	2305      	movs	r3, #5
 8001cec:	627b      	str	r3, [r7, #36]	@ 0x24
 8001cee:	f107 0314 	add.w	r3, r7, #20
 8001cf2:	4619      	mov	r1, r3
 8001cf4:	4805      	ldr	r0, [pc, #20]	@ (8001d0c <HAL_SPI_MspInit+0x84>)
 8001cf6:	f004 fbe3 	bl	80064c0 <HAL_GPIO_Init>
 8001cfa:	bf00      	nop
 8001cfc:	3728      	adds	r7, #40	@ 0x28
 8001cfe:	46bd      	mov	sp, r7
 8001d00:	bd80      	pop	{r7, pc}
 8001d02:	bf00      	nop
 8001d04:	40013000 	.word	0x40013000
 8001d08:	40021000 	.word	0x40021000
 8001d0c:	48000400 	.word	0x48000400

08001d10 <HAL_MspInit>:
 8001d10:	b580      	push	{r7, lr}
 8001d12:	b082      	sub	sp, #8
 8001d14:	af00      	add	r7, sp, #0
 8001d16:	4b0f      	ldr	r3, [pc, #60]	@ (8001d54 <HAL_MspInit+0x44>)
 8001d18:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001d1a:	4a0e      	ldr	r2, [pc, #56]	@ (8001d54 <HAL_MspInit+0x44>)
 8001d1c:	f043 0301 	orr.w	r3, r3, #1
 8001d20:	6613      	str	r3, [r2, #96]	@ 0x60
 8001d22:	4b0c      	ldr	r3, [pc, #48]	@ (8001d54 <HAL_MspInit+0x44>)
 8001d24:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001d26:	f003 0301 	and.w	r3, r3, #1
 8001d2a:	607b      	str	r3, [r7, #4]
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	4b09      	ldr	r3, [pc, #36]	@ (8001d54 <HAL_MspInit+0x44>)
 8001d30:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d32:	4a08      	ldr	r2, [pc, #32]	@ (8001d54 <HAL_MspInit+0x44>)
 8001d34:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001d38:	6593      	str	r3, [r2, #88]	@ 0x58
 8001d3a:	4b06      	ldr	r3, [pc, #24]	@ (8001d54 <HAL_MspInit+0x44>)
 8001d3c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d3e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001d42:	603b      	str	r3, [r7, #0]
 8001d44:	683b      	ldr	r3, [r7, #0]
 8001d46:	f004 ff13 	bl	8006b70 <HAL_PWREx_DisableUCPDDeadBattery>
 8001d4a:	bf00      	nop
 8001d4c:	3708      	adds	r7, #8
 8001d4e:	46bd      	mov	sp, r7
 8001d50:	bd80      	pop	{r7, pc}
 8001d52:	bf00      	nop
 8001d54:	40021000 	.word	0x40021000

08001d58 <NMI_Handler>:
 8001d58:	b480      	push	{r7}
 8001d5a:	af00      	add	r7, sp, #0
 8001d5c:	bf00      	nop
 8001d5e:	e7fd      	b.n	8001d5c <NMI_Handler+0x4>

08001d60 <HardFault_Handler>:
 8001d60:	b480      	push	{r7}
 8001d62:	af00      	add	r7, sp, #0
 8001d64:	bf00      	nop
 8001d66:	e7fd      	b.n	8001d64 <HardFault_Handler+0x4>

08001d68 <MemManage_Handler>:
 8001d68:	b480      	push	{r7}
 8001d6a:	af00      	add	r7, sp, #0
 8001d6c:	bf00      	nop
 8001d6e:	e7fd      	b.n	8001d6c <MemManage_Handler+0x4>

08001d70 <BusFault_Handler>:
 8001d70:	b480      	push	{r7}
 8001d72:	af00      	add	r7, sp, #0
 8001d74:	bf00      	nop
 8001d76:	e7fd      	b.n	8001d74 <BusFault_Handler+0x4>

08001d78 <UsageFault_Handler>:
 8001d78:	b480      	push	{r7}
 8001d7a:	af00      	add	r7, sp, #0
 8001d7c:	bf00      	nop
 8001d7e:	e7fd      	b.n	8001d7c <UsageFault_Handler+0x4>

08001d80 <SVC_Handler>:
 8001d80:	b480      	push	{r7}
 8001d82:	af00      	add	r7, sp, #0
 8001d84:	bf00      	nop
 8001d86:	46bd      	mov	sp, r7
 8001d88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d8c:	4770      	bx	lr

08001d8e <DebugMon_Handler>:
 8001d8e:	b480      	push	{r7}
 8001d90:	af00      	add	r7, sp, #0
 8001d92:	bf00      	nop
 8001d94:	46bd      	mov	sp, r7
 8001d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d9a:	4770      	bx	lr

08001d9c <PendSV_Handler>:
 8001d9c:	b480      	push	{r7}
 8001d9e:	af00      	add	r7, sp, #0
 8001da0:	bf00      	nop
 8001da2:	46bd      	mov	sp, r7
 8001da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001da8:	4770      	bx	lr

08001daa <SysTick_Handler>:
 8001daa:	b580      	push	{r7, lr}
 8001dac:	af00      	add	r7, sp, #0
 8001dae:	f000 fcb3 	bl	8002718 <HAL_IncTick>
 8001db2:	bf00      	nop
 8001db4:	bd80      	pop	{r7, pc}
	...

08001db8 <DMA1_Channel1_IRQHandler>:
 8001db8:	b580      	push	{r7, lr}
 8001dba:	af00      	add	r7, sp, #0
 8001dbc:	4802      	ldr	r0, [pc, #8]	@ (8001dc8 <DMA1_Channel1_IRQHandler+0x10>)
 8001dbe:	f004 f880 	bl	8005ec2 <HAL_DMA_IRQHandler>
 8001dc2:	bf00      	nop
 8001dc4:	bd80      	pop	{r7, pc}
 8001dc6:	bf00      	nop
 8001dc8:	20000634 	.word	0x20000634

08001dcc <DMA1_Channel2_IRQHandler>:
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	af00      	add	r7, sp, #0
 8001dd0:	4802      	ldr	r0, [pc, #8]	@ (8001ddc <DMA1_Channel2_IRQHandler+0x10>)
 8001dd2:	f004 f876 	bl	8005ec2 <HAL_DMA_IRQHandler>
 8001dd6:	bf00      	nop
 8001dd8:	bd80      	pop	{r7, pc}
 8001dda:	bf00      	nop
 8001ddc:	20000694 	.word	0x20000694

08001de0 <ADC1_2_IRQHandler>:
 8001de0:	b580      	push	{r7, lr}
 8001de2:	af00      	add	r7, sp, #0
 8001de4:	4803      	ldr	r0, [pc, #12]	@ (8001df4 <ADC1_2_IRQHandler+0x14>)
 8001de6:	f001 f969 	bl	80030bc <HAL_ADC_IRQHandler>
 8001dea:	4803      	ldr	r0, [pc, #12]	@ (8001df8 <ADC1_2_IRQHandler+0x18>)
 8001dec:	f001 f966 	bl	80030bc <HAL_ADC_IRQHandler>
 8001df0:	bf00      	nop
 8001df2:	bd80      	pop	{r7, pc}
 8001df4:	20000274 	.word	0x20000274
 8001df8:	200002e0 	.word	0x200002e0

08001dfc <USART3_IRQHandler>:
 8001dfc:	b580      	push	{r7, lr}
 8001dfe:	af00      	add	r7, sp, #0
 8001e00:	4802      	ldr	r0, [pc, #8]	@ (8001e0c <USART3_IRQHandler+0x10>)
 8001e02:	f008 f8d3 	bl	8009fac <HAL_UART_IRQHandler>
 8001e06:	bf00      	nop
 8001e08:	bd80      	pop	{r7, pc}
 8001e0a:	bf00      	nop
 8001e0c:	200005a0 	.word	0x200005a0

08001e10 <COMP1_2_3_IRQHandler>:
 8001e10:	b580      	push	{r7, lr}
 8001e12:	af00      	add	r7, sp, #0
 8001e14:	4802      	ldr	r0, [pc, #8]	@ (8001e20 <COMP1_2_3_IRQHandler+0x10>)
 8001e16:	f003 fb41 	bl	800549c <HAL_COMP_IRQHandler>
 8001e1a:	bf00      	nop
 8001e1c:	bd80      	pop	{r7, pc}
 8001e1e:	bf00      	nop
 8001e20:	20000350 	.word	0x20000350

08001e24 <_getpid>:
 8001e24:	b480      	push	{r7}
 8001e26:	af00      	add	r7, sp, #0
 8001e28:	2301      	movs	r3, #1
 8001e2a:	4618      	mov	r0, r3
 8001e2c:	46bd      	mov	sp, r7
 8001e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e32:	4770      	bx	lr

08001e34 <_kill>:
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b082      	sub	sp, #8
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	6078      	str	r0, [r7, #4]
 8001e3c:	6039      	str	r1, [r7, #0]
 8001e3e:	f00d fdc7 	bl	800f9d0 <__errno>
 8001e42:	4603      	mov	r3, r0
 8001e44:	2216      	movs	r2, #22
 8001e46:	601a      	str	r2, [r3, #0]
 8001e48:	f04f 33ff 	mov.w	r3, #4294967295
 8001e4c:	4618      	mov	r0, r3
 8001e4e:	3708      	adds	r7, #8
 8001e50:	46bd      	mov	sp, r7
 8001e52:	bd80      	pop	{r7, pc}

08001e54 <_exit>:
 8001e54:	b580      	push	{r7, lr}
 8001e56:	b082      	sub	sp, #8
 8001e58:	af00      	add	r7, sp, #0
 8001e5a:	6078      	str	r0, [r7, #4]
 8001e5c:	f04f 31ff 	mov.w	r1, #4294967295
 8001e60:	6878      	ldr	r0, [r7, #4]
 8001e62:	f7ff ffe7 	bl	8001e34 <_kill>
 8001e66:	bf00      	nop
 8001e68:	e7fd      	b.n	8001e66 <_exit+0x12>

08001e6a <_read>:
 8001e6a:	b580      	push	{r7, lr}
 8001e6c:	b086      	sub	sp, #24
 8001e6e:	af00      	add	r7, sp, #0
 8001e70:	60f8      	str	r0, [r7, #12]
 8001e72:	60b9      	str	r1, [r7, #8]
 8001e74:	607a      	str	r2, [r7, #4]
 8001e76:	2300      	movs	r3, #0
 8001e78:	617b      	str	r3, [r7, #20]
 8001e7a:	e00a      	b.n	8001e92 <_read+0x28>
 8001e7c:	f3af 8000 	nop.w
 8001e80:	4601      	mov	r1, r0
 8001e82:	68bb      	ldr	r3, [r7, #8]
 8001e84:	1c5a      	adds	r2, r3, #1
 8001e86:	60ba      	str	r2, [r7, #8]
 8001e88:	b2ca      	uxtb	r2, r1
 8001e8a:	701a      	strb	r2, [r3, #0]
 8001e8c:	697b      	ldr	r3, [r7, #20]
 8001e8e:	3301      	adds	r3, #1
 8001e90:	617b      	str	r3, [r7, #20]
 8001e92:	697a      	ldr	r2, [r7, #20]
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	429a      	cmp	r2, r3
 8001e98:	dbf0      	blt.n	8001e7c <_read+0x12>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	3718      	adds	r7, #24
 8001ea0:	46bd      	mov	sp, r7
 8001ea2:	bd80      	pop	{r7, pc}

08001ea4 <_write>:
 8001ea4:	b580      	push	{r7, lr}
 8001ea6:	b086      	sub	sp, #24
 8001ea8:	af00      	add	r7, sp, #0
 8001eaa:	60f8      	str	r0, [r7, #12]
 8001eac:	60b9      	str	r1, [r7, #8]
 8001eae:	607a      	str	r2, [r7, #4]
 8001eb0:	2300      	movs	r3, #0
 8001eb2:	617b      	str	r3, [r7, #20]
 8001eb4:	e009      	b.n	8001eca <_write+0x26>
 8001eb6:	68bb      	ldr	r3, [r7, #8]
 8001eb8:	1c5a      	adds	r2, r3, #1
 8001eba:	60ba      	str	r2, [r7, #8]
 8001ebc:	781b      	ldrb	r3, [r3, #0]
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	f3af 8000 	nop.w
 8001ec4:	697b      	ldr	r3, [r7, #20]
 8001ec6:	3301      	adds	r3, #1
 8001ec8:	617b      	str	r3, [r7, #20]
 8001eca:	697a      	ldr	r2, [r7, #20]
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	429a      	cmp	r2, r3
 8001ed0:	dbf1      	blt.n	8001eb6 <_write+0x12>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	4618      	mov	r0, r3
 8001ed6:	3718      	adds	r7, #24
 8001ed8:	46bd      	mov	sp, r7
 8001eda:	bd80      	pop	{r7, pc}

08001edc <_close>:
 8001edc:	b480      	push	{r7}
 8001ede:	b083      	sub	sp, #12
 8001ee0:	af00      	add	r7, sp, #0
 8001ee2:	6078      	str	r0, [r7, #4]
 8001ee4:	f04f 33ff 	mov.w	r3, #4294967295
 8001ee8:	4618      	mov	r0, r3
 8001eea:	370c      	adds	r7, #12
 8001eec:	46bd      	mov	sp, r7
 8001eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ef2:	4770      	bx	lr

08001ef4 <_fstat>:
 8001ef4:	b480      	push	{r7}
 8001ef6:	b083      	sub	sp, #12
 8001ef8:	af00      	add	r7, sp, #0
 8001efa:	6078      	str	r0, [r7, #4]
 8001efc:	6039      	str	r1, [r7, #0]
 8001efe:	683b      	ldr	r3, [r7, #0]
 8001f00:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f04:	605a      	str	r2, [r3, #4]
 8001f06:	2300      	movs	r3, #0
 8001f08:	4618      	mov	r0, r3
 8001f0a:	370c      	adds	r7, #12
 8001f0c:	46bd      	mov	sp, r7
 8001f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f12:	4770      	bx	lr

08001f14 <_isatty>:
 8001f14:	b480      	push	{r7}
 8001f16:	b083      	sub	sp, #12
 8001f18:	af00      	add	r7, sp, #0
 8001f1a:	6078      	str	r0, [r7, #4]
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	4618      	mov	r0, r3
 8001f20:	370c      	adds	r7, #12
 8001f22:	46bd      	mov	sp, r7
 8001f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f28:	4770      	bx	lr

08001f2a <_lseek>:
 8001f2a:	b480      	push	{r7}
 8001f2c:	b085      	sub	sp, #20
 8001f2e:	af00      	add	r7, sp, #0
 8001f30:	60f8      	str	r0, [r7, #12]
 8001f32:	60b9      	str	r1, [r7, #8]
 8001f34:	607a      	str	r2, [r7, #4]
 8001f36:	2300      	movs	r3, #0
 8001f38:	4618      	mov	r0, r3
 8001f3a:	3714      	adds	r7, #20
 8001f3c:	46bd      	mov	sp, r7
 8001f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f42:	4770      	bx	lr

08001f44 <_sbrk>:
 8001f44:	b580      	push	{r7, lr}
 8001f46:	b086      	sub	sp, #24
 8001f48:	af00      	add	r7, sp, #0
 8001f4a:	6078      	str	r0, [r7, #4]
 8001f4c:	4a14      	ldr	r2, [pc, #80]	@ (8001fa0 <_sbrk+0x5c>)
 8001f4e:	4b15      	ldr	r3, [pc, #84]	@ (8001fa4 <_sbrk+0x60>)
 8001f50:	1ad3      	subs	r3, r2, r3
 8001f52:	617b      	str	r3, [r7, #20]
 8001f54:	697b      	ldr	r3, [r7, #20]
 8001f56:	613b      	str	r3, [r7, #16]
 8001f58:	4b13      	ldr	r3, [pc, #76]	@ (8001fa8 <_sbrk+0x64>)
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	2b00      	cmp	r3, #0
 8001f5e:	d102      	bne.n	8001f66 <_sbrk+0x22>
 8001f60:	4b11      	ldr	r3, [pc, #68]	@ (8001fa8 <_sbrk+0x64>)
 8001f62:	4a12      	ldr	r2, [pc, #72]	@ (8001fac <_sbrk+0x68>)
 8001f64:	601a      	str	r2, [r3, #0]
 8001f66:	4b10      	ldr	r3, [pc, #64]	@ (8001fa8 <_sbrk+0x64>)
 8001f68:	681a      	ldr	r2, [r3, #0]
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	4413      	add	r3, r2
 8001f6e:	693a      	ldr	r2, [r7, #16]
 8001f70:	429a      	cmp	r2, r3
 8001f72:	d207      	bcs.n	8001f84 <_sbrk+0x40>
 8001f74:	f00d fd2c 	bl	800f9d0 <__errno>
 8001f78:	4603      	mov	r3, r0
 8001f7a:	220c      	movs	r2, #12
 8001f7c:	601a      	str	r2, [r3, #0]
 8001f7e:	f04f 33ff 	mov.w	r3, #4294967295
 8001f82:	e009      	b.n	8001f98 <_sbrk+0x54>
 8001f84:	4b08      	ldr	r3, [pc, #32]	@ (8001fa8 <_sbrk+0x64>)
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	60fb      	str	r3, [r7, #12]
 8001f8a:	4b07      	ldr	r3, [pc, #28]	@ (8001fa8 <_sbrk+0x64>)
 8001f8c:	681a      	ldr	r2, [r3, #0]
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	4413      	add	r3, r2
 8001f92:	4a05      	ldr	r2, [pc, #20]	@ (8001fa8 <_sbrk+0x64>)
 8001f94:	6013      	str	r3, [r2, #0]
 8001f96:	68fb      	ldr	r3, [r7, #12]
 8001f98:	4618      	mov	r0, r3
 8001f9a:	3718      	adds	r7, #24
 8001f9c:	46bd      	mov	sp, r7
 8001f9e:	bd80      	pop	{r7, pc}
 8001fa0:	20008000 	.word	0x20008000
 8001fa4:	00000400 	.word	0x00000400
 8001fa8:	20000504 	.word	0x20000504
 8001fac:	20000ac8 	.word	0x20000ac8

08001fb0 <SystemInit>:
 8001fb0:	b480      	push	{r7}
 8001fb2:	af00      	add	r7, sp, #0
 8001fb4:	4b06      	ldr	r3, [pc, #24]	@ (8001fd0 <SystemInit+0x20>)
 8001fb6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001fba:	4a05      	ldr	r2, [pc, #20]	@ (8001fd0 <SystemInit+0x20>)
 8001fbc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001fc0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001fc4:	bf00      	nop
 8001fc6:	46bd      	mov	sp, r7
 8001fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fcc:	4770      	bx	lr
 8001fce:	bf00      	nop
 8001fd0:	e000ed00 	.word	0xe000ed00

08001fd4 <MX_TIM1_Init>:
 8001fd4:	b580      	push	{r7, lr}
 8001fd6:	b09e      	sub	sp, #120	@ 0x78
 8001fd8:	af00      	add	r7, sp, #0
 8001fda:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 8001fde:	2200      	movs	r2, #0
 8001fe0:	601a      	str	r2, [r3, #0]
 8001fe2:	605a      	str	r2, [r3, #4]
 8001fe4:	609a      	str	r2, [r3, #8]
 8001fe6:	60da      	str	r2, [r3, #12]
 8001fe8:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001fec:	2200      	movs	r2, #0
 8001fee:	601a      	str	r2, [r3, #0]
 8001ff0:	605a      	str	r2, [r3, #4]
 8001ff2:	609a      	str	r2, [r3, #8]
 8001ff4:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 8001ff8:	2200      	movs	r2, #0
 8001ffa:	601a      	str	r2, [r3, #0]
 8001ffc:	605a      	str	r2, [r3, #4]
 8001ffe:	609a      	str	r2, [r3, #8]
 8002000:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002004:	2200      	movs	r2, #0
 8002006:	601a      	str	r2, [r3, #0]
 8002008:	605a      	str	r2, [r3, #4]
 800200a:	609a      	str	r2, [r3, #8]
 800200c:	60da      	str	r2, [r3, #12]
 800200e:	611a      	str	r2, [r3, #16]
 8002010:	615a      	str	r2, [r3, #20]
 8002012:	619a      	str	r2, [r3, #24]
 8002014:	463b      	mov	r3, r7
 8002016:	2234      	movs	r2, #52	@ 0x34
 8002018:	2100      	movs	r1, #0
 800201a:	4618      	mov	r0, r3
 800201c:	f00d fc74 	bl	800f908 <memset>
 8002020:	4b64      	ldr	r3, [pc, #400]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002022:	4a65      	ldr	r2, [pc, #404]	@ (80021b8 <MX_TIM1_Init+0x1e4>)
 8002024:	601a      	str	r2, [r3, #0]
 8002026:	4b63      	ldr	r3, [pc, #396]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002028:	2200      	movs	r2, #0
 800202a:	605a      	str	r2, [r3, #4]
 800202c:	4b61      	ldr	r3, [pc, #388]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 800202e:	2220      	movs	r2, #32
 8002030:	609a      	str	r2, [r3, #8]
 8002032:	4b60      	ldr	r3, [pc, #384]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002034:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 8002038:	60da      	str	r2, [r3, #12]
 800203a:	4b5e      	ldr	r3, [pc, #376]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 800203c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002040:	611a      	str	r2, [r3, #16]
 8002042:	4b5c      	ldr	r3, [pc, #368]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002044:	2201      	movs	r2, #1
 8002046:	615a      	str	r2, [r3, #20]
 8002048:	4b5a      	ldr	r3, [pc, #360]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 800204a:	2200      	movs	r2, #0
 800204c:	619a      	str	r2, [r3, #24]
 800204e:	4859      	ldr	r0, [pc, #356]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002050:	f006 f8fc 	bl	800824c <HAL_TIM_Base_Init>
 8002054:	4603      	mov	r3, r0
 8002056:	2b00      	cmp	r3, #0
 8002058:	d001      	beq.n	800205e <MX_TIM1_Init+0x8a>
 800205a:	f7ff fce2 	bl	8001a22 <Error_Handler>
 800205e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002062:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002064:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 8002068:	4619      	mov	r1, r3
 800206a:	4852      	ldr	r0, [pc, #328]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 800206c:	f006 fcb4 	bl	80089d8 <HAL_TIM_ConfigClockSource>
 8002070:	4603      	mov	r3, r0
 8002072:	2b00      	cmp	r3, #0
 8002074:	d001      	beq.n	800207a <MX_TIM1_Init+0xa6>
 8002076:	f7ff fcd4 	bl	8001a22 <Error_Handler>
 800207a:	484e      	ldr	r0, [pc, #312]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 800207c:	f006 f9a0 	bl	80083c0 <HAL_TIM_PWM_Init>
 8002080:	4603      	mov	r3, r0
 8002082:	2b00      	cmp	r3, #0
 8002084:	d001      	beq.n	800208a <MX_TIM1_Init+0xb6>
 8002086:	f7ff fccc 	bl	8001a22 <Error_Handler>
 800208a:	2370      	movs	r3, #112	@ 0x70
 800208c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800208e:	2300      	movs	r3, #0
 8002090:	663b      	str	r3, [r7, #96]	@ 0x60
 8002092:	2300      	movs	r3, #0
 8002094:	667b      	str	r3, [r7, #100]	@ 0x64
 8002096:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800209a:	4619      	mov	r1, r3
 800209c:	4845      	ldr	r0, [pc, #276]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 800209e:	f007 fc1b 	bl	80098d8 <HAL_TIMEx_MasterConfigSynchronization>
 80020a2:	4603      	mov	r3, r0
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d001      	beq.n	80020ac <MX_TIM1_Init+0xd8>
 80020a8:	f7ff fcbb 	bl	8001a22 <Error_Handler>
 80020ac:	2302      	movs	r3, #2
 80020ae:	653b      	str	r3, [r7, #80]	@ 0x50
 80020b0:	2301      	movs	r3, #1
 80020b2:	657b      	str	r3, [r7, #84]	@ 0x54
 80020b4:	2300      	movs	r3, #0
 80020b6:	65bb      	str	r3, [r7, #88]	@ 0x58
 80020b8:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 80020bc:	461a      	mov	r2, r3
 80020be:	2101      	movs	r1, #1
 80020c0:	483c      	ldr	r0, [pc, #240]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 80020c2:	f007 fd17 	bl	8009af4 <HAL_TIMEx_ConfigBreakInput>
 80020c6:	4603      	mov	r3, r0
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	d001      	beq.n	80020d0 <MX_TIM1_Init+0xfc>
 80020cc:	f7ff fca9 	bl	8001a22 <Error_Handler>
 80020d0:	2360      	movs	r3, #96	@ 0x60
 80020d2:	637b      	str	r3, [r7, #52]	@ 0x34
 80020d4:	2300      	movs	r3, #0
 80020d6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80020d8:	2300      	movs	r3, #0
 80020da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80020dc:	2300      	movs	r3, #0
 80020de:	643b      	str	r3, [r7, #64]	@ 0x40
 80020e0:	2300      	movs	r3, #0
 80020e2:	647b      	str	r3, [r7, #68]	@ 0x44
 80020e4:	2300      	movs	r3, #0
 80020e6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80020e8:	2300      	movs	r3, #0
 80020ea:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80020ec:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 80020f0:	2200      	movs	r2, #0
 80020f2:	4619      	mov	r1, r3
 80020f4:	482f      	ldr	r0, [pc, #188]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 80020f6:	f006 fb5b 	bl	80087b0 <HAL_TIM_PWM_ConfigChannel>
 80020fa:	4603      	mov	r3, r0
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	d001      	beq.n	8002104 <MX_TIM1_Init+0x130>
 8002100:	f7ff fc8f 	bl	8001a22 <Error_Handler>
 8002104:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002108:	2204      	movs	r2, #4
 800210a:	4619      	mov	r1, r3
 800210c:	4829      	ldr	r0, [pc, #164]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 800210e:	f006 fb4f 	bl	80087b0 <HAL_TIM_PWM_ConfigChannel>
 8002112:	4603      	mov	r3, r0
 8002114:	2b00      	cmp	r3, #0
 8002116:	d001      	beq.n	800211c <MX_TIM1_Init+0x148>
 8002118:	f7ff fc83 	bl	8001a22 <Error_Handler>
 800211c:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002120:	2208      	movs	r2, #8
 8002122:	4619      	mov	r1, r3
 8002124:	4823      	ldr	r0, [pc, #140]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002126:	f006 fb43 	bl	80087b0 <HAL_TIM_PWM_ConfigChannel>
 800212a:	4603      	mov	r3, r0
 800212c:	2b00      	cmp	r3, #0
 800212e:	d001      	beq.n	8002134 <MX_TIM1_Init+0x160>
 8002130:	f7ff fc77 	bl	8001a22 <Error_Handler>
 8002134:	2370      	movs	r3, #112	@ 0x70
 8002136:	637b      	str	r3, [r7, #52]	@ 0x34
 8002138:	f641 733e 	movw	r3, #7998	@ 0x1f3e
 800213c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800213e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8002142:	220c      	movs	r2, #12
 8002144:	4619      	mov	r1, r3
 8002146:	481b      	ldr	r0, [pc, #108]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002148:	f006 fb32 	bl	80087b0 <HAL_TIM_PWM_ConfigChannel>
 800214c:	4603      	mov	r3, r0
 800214e:	2b00      	cmp	r3, #0
 8002150:	d001      	beq.n	8002156 <MX_TIM1_Init+0x182>
 8002152:	f7ff fc66 	bl	8001a22 <Error_Handler>
 8002156:	2300      	movs	r3, #0
 8002158:	603b      	str	r3, [r7, #0]
 800215a:	2300      	movs	r3, #0
 800215c:	607b      	str	r3, [r7, #4]
 800215e:	2300      	movs	r3, #0
 8002160:	60bb      	str	r3, [r7, #8]
 8002162:	2378      	movs	r3, #120	@ 0x78
 8002164:	60fb      	str	r3, [r7, #12]
 8002166:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800216a:	613b      	str	r3, [r7, #16]
 800216c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002170:	617b      	str	r3, [r7, #20]
 8002172:	2302      	movs	r3, #2
 8002174:	61bb      	str	r3, [r7, #24]
 8002176:	2300      	movs	r3, #0
 8002178:	61fb      	str	r3, [r7, #28]
 800217a:	2300      	movs	r3, #0
 800217c:	623b      	str	r3, [r7, #32]
 800217e:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8002182:	627b      	str	r3, [r7, #36]	@ 0x24
 8002184:	2300      	movs	r3, #0
 8002186:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002188:	2300      	movs	r3, #0
 800218a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800218c:	2300      	movs	r3, #0
 800218e:	633b      	str	r3, [r7, #48]	@ 0x30
 8002190:	463b      	mov	r3, r7
 8002192:	4619      	mov	r1, r3
 8002194:	4807      	ldr	r0, [pc, #28]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 8002196:	f007 fc21 	bl	80099dc <HAL_TIMEx_ConfigBreakDeadTime>
 800219a:	4603      	mov	r3, r0
 800219c:	2b00      	cmp	r3, #0
 800219e:	d001      	beq.n	80021a4 <MX_TIM1_Init+0x1d0>
 80021a0:	f7ff fc3f 	bl	8001a22 <Error_Handler>
 80021a4:	4803      	ldr	r0, [pc, #12]	@ (80021b4 <MX_TIM1_Init+0x1e0>)
 80021a6:	f000 f8c9 	bl	800233c <HAL_TIM_MspPostInit>
 80021aa:	bf00      	nop
 80021ac:	3778      	adds	r7, #120	@ 0x78
 80021ae:	46bd      	mov	sp, r7
 80021b0:	bd80      	pop	{r7, pc}
 80021b2:	bf00      	nop
 80021b4:	20000508 	.word	0x20000508
 80021b8:	40012c00 	.word	0x40012c00

080021bc <MX_TIM4_Init>:
 80021bc:	b580      	push	{r7, lr}
 80021be:	b08c      	sub	sp, #48	@ 0x30
 80021c0:	af00      	add	r7, sp, #0
 80021c2:	f107 0320 	add.w	r3, r7, #32
 80021c6:	2200      	movs	r2, #0
 80021c8:	601a      	str	r2, [r3, #0]
 80021ca:	605a      	str	r2, [r3, #4]
 80021cc:	609a      	str	r2, [r3, #8]
 80021ce:	60da      	str	r2, [r3, #12]
 80021d0:	f107 0310 	add.w	r3, r7, #16
 80021d4:	2200      	movs	r2, #0
 80021d6:	601a      	str	r2, [r3, #0]
 80021d8:	605a      	str	r2, [r3, #4]
 80021da:	609a      	str	r2, [r3, #8]
 80021dc:	60da      	str	r2, [r3, #12]
 80021de:	1d3b      	adds	r3, r7, #4
 80021e0:	2200      	movs	r2, #0
 80021e2:	601a      	str	r2, [r3, #0]
 80021e4:	605a      	str	r2, [r3, #4]
 80021e6:	609a      	str	r2, [r3, #8]
 80021e8:	4b26      	ldr	r3, [pc, #152]	@ (8002284 <MX_TIM4_Init+0xc8>)
 80021ea:	4a27      	ldr	r2, [pc, #156]	@ (8002288 <MX_TIM4_Init+0xcc>)
 80021ec:	601a      	str	r2, [r3, #0]
 80021ee:	4b25      	ldr	r3, [pc, #148]	@ (8002284 <MX_TIM4_Init+0xc8>)
 80021f0:	220f      	movs	r2, #15
 80021f2:	605a      	str	r2, [r3, #4]
 80021f4:	4b23      	ldr	r3, [pc, #140]	@ (8002284 <MX_TIM4_Init+0xc8>)
 80021f6:	2200      	movs	r2, #0
 80021f8:	609a      	str	r2, [r3, #8]
 80021fa:	4b22      	ldr	r3, [pc, #136]	@ (8002284 <MX_TIM4_Init+0xc8>)
 80021fc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002200:	60da      	str	r2, [r3, #12]
 8002202:	4b20      	ldr	r3, [pc, #128]	@ (8002284 <MX_TIM4_Init+0xc8>)
 8002204:	2200      	movs	r2, #0
 8002206:	611a      	str	r2, [r3, #16]
 8002208:	4b1e      	ldr	r3, [pc, #120]	@ (8002284 <MX_TIM4_Init+0xc8>)
 800220a:	2200      	movs	r2, #0
 800220c:	619a      	str	r2, [r3, #24]
 800220e:	481d      	ldr	r0, [pc, #116]	@ (8002284 <MX_TIM4_Init+0xc8>)
 8002210:	f006 f81c 	bl	800824c <HAL_TIM_Base_Init>
 8002214:	4603      	mov	r3, r0
 8002216:	2b00      	cmp	r3, #0
 8002218:	d001      	beq.n	800221e <MX_TIM4_Init+0x62>
 800221a:	f7ff fc02 	bl	8001a22 <Error_Handler>
 800221e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002222:	623b      	str	r3, [r7, #32]
 8002224:	f107 0320 	add.w	r3, r7, #32
 8002228:	4619      	mov	r1, r3
 800222a:	4816      	ldr	r0, [pc, #88]	@ (8002284 <MX_TIM4_Init+0xc8>)
 800222c:	f006 fbd4 	bl	80089d8 <HAL_TIM_ConfigClockSource>
 8002230:	4603      	mov	r3, r0
 8002232:	2b00      	cmp	r3, #0
 8002234:	d001      	beq.n	800223a <MX_TIM4_Init+0x7e>
 8002236:	f7ff fbf4 	bl	8001a22 <Error_Handler>
 800223a:	2300      	movs	r3, #0
 800223c:	613b      	str	r3, [r7, #16]
 800223e:	2300      	movs	r3, #0
 8002240:	617b      	str	r3, [r7, #20]
 8002242:	230a      	movs	r3, #10
 8002244:	61bb      	str	r3, [r7, #24]
 8002246:	2305      	movs	r3, #5
 8002248:	61fb      	str	r3, [r7, #28]
 800224a:	f107 0310 	add.w	r3, r7, #16
 800224e:	4619      	mov	r1, r3
 8002250:	480c      	ldr	r0, [pc, #48]	@ (8002284 <MX_TIM4_Init+0xc8>)
 8002252:	f007 f976 	bl	8009542 <HAL_TIMEx_HallSensor_Init>
 8002256:	4603      	mov	r3, r0
 8002258:	2b00      	cmp	r3, #0
 800225a:	d001      	beq.n	8002260 <MX_TIM4_Init+0xa4>
 800225c:	f7ff fbe1 	bl	8001a22 <Error_Handler>
 8002260:	2350      	movs	r3, #80	@ 0x50
 8002262:	607b      	str	r3, [r7, #4]
 8002264:	2300      	movs	r3, #0
 8002266:	60fb      	str	r3, [r7, #12]
 8002268:	1d3b      	adds	r3, r7, #4
 800226a:	4619      	mov	r1, r3
 800226c:	4805      	ldr	r0, [pc, #20]	@ (8002284 <MX_TIM4_Init+0xc8>)
 800226e:	f007 fb33 	bl	80098d8 <HAL_TIMEx_MasterConfigSynchronization>
 8002272:	4603      	mov	r3, r0
 8002274:	2b00      	cmp	r3, #0
 8002276:	d001      	beq.n	800227c <MX_TIM4_Init+0xc0>
 8002278:	f7ff fbd3 	bl	8001a22 <Error_Handler>
 800227c:	bf00      	nop
 800227e:	3730      	adds	r7, #48	@ 0x30
 8002280:	46bd      	mov	sp, r7
 8002282:	bd80      	pop	{r7, pc}
 8002284:	20000554 	.word	0x20000554
 8002288:	40000800 	.word	0x40000800

0800228c <HAL_TIM_Base_MspInit>:
 800228c:	b580      	push	{r7, lr}
 800228e:	b08a      	sub	sp, #40	@ 0x28
 8002290:	af00      	add	r7, sp, #0
 8002292:	6078      	str	r0, [r7, #4]
 8002294:	f107 0314 	add.w	r3, r7, #20
 8002298:	2200      	movs	r2, #0
 800229a:	601a      	str	r2, [r3, #0]
 800229c:	605a      	str	r2, [r3, #4]
 800229e:	609a      	str	r2, [r3, #8]
 80022a0:	60da      	str	r2, [r3, #12]
 80022a2:	611a      	str	r2, [r3, #16]
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4a20      	ldr	r2, [pc, #128]	@ (800232c <HAL_TIM_Base_MspInit+0xa0>)
 80022aa:	4293      	cmp	r3, r2
 80022ac:	d10c      	bne.n	80022c8 <HAL_TIM_Base_MspInit+0x3c>
 80022ae:	4b20      	ldr	r3, [pc, #128]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022b0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80022b2:	4a1f      	ldr	r2, [pc, #124]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022b4:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80022b8:	6613      	str	r3, [r2, #96]	@ 0x60
 80022ba:	4b1d      	ldr	r3, [pc, #116]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022bc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80022be:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80022c2:	613b      	str	r3, [r7, #16]
 80022c4:	693b      	ldr	r3, [r7, #16]
 80022c6:	e02d      	b.n	8002324 <HAL_TIM_Base_MspInit+0x98>
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	4a19      	ldr	r2, [pc, #100]	@ (8002334 <HAL_TIM_Base_MspInit+0xa8>)
 80022ce:	4293      	cmp	r3, r2
 80022d0:	d128      	bne.n	8002324 <HAL_TIM_Base_MspInit+0x98>
 80022d2:	4b17      	ldr	r3, [pc, #92]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022d4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80022d6:	4a16      	ldr	r2, [pc, #88]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022d8:	f043 0304 	orr.w	r3, r3, #4
 80022dc:	6593      	str	r3, [r2, #88]	@ 0x58
 80022de:	4b14      	ldr	r3, [pc, #80]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022e0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80022e2:	f003 0304 	and.w	r3, r3, #4
 80022e6:	60fb      	str	r3, [r7, #12]
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	4b11      	ldr	r3, [pc, #68]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80022ee:	4a10      	ldr	r2, [pc, #64]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022f0:	f043 0302 	orr.w	r3, r3, #2
 80022f4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80022f6:	4b0e      	ldr	r3, [pc, #56]	@ (8002330 <HAL_TIM_Base_MspInit+0xa4>)
 80022f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80022fa:	f003 0302 	and.w	r3, r3, #2
 80022fe:	60bb      	str	r3, [r7, #8]
 8002300:	68bb      	ldr	r3, [r7, #8]
 8002302:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
 8002306:	617b      	str	r3, [r7, #20]
 8002308:	2302      	movs	r3, #2
 800230a:	61bb      	str	r3, [r7, #24]
 800230c:	2300      	movs	r3, #0
 800230e:	61fb      	str	r3, [r7, #28]
 8002310:	2300      	movs	r3, #0
 8002312:	623b      	str	r3, [r7, #32]
 8002314:	2302      	movs	r3, #2
 8002316:	627b      	str	r3, [r7, #36]	@ 0x24
 8002318:	f107 0314 	add.w	r3, r7, #20
 800231c:	4619      	mov	r1, r3
 800231e:	4806      	ldr	r0, [pc, #24]	@ (8002338 <HAL_TIM_Base_MspInit+0xac>)
 8002320:	f004 f8ce 	bl	80064c0 <HAL_GPIO_Init>
 8002324:	bf00      	nop
 8002326:	3728      	adds	r7, #40	@ 0x28
 8002328:	46bd      	mov	sp, r7
 800232a:	bd80      	pop	{r7, pc}
 800232c:	40012c00 	.word	0x40012c00
 8002330:	40021000 	.word	0x40021000
 8002334:	40000800 	.word	0x40000800
 8002338:	48000400 	.word	0x48000400

0800233c <HAL_TIM_MspPostInit>:
 800233c:	b580      	push	{r7, lr}
 800233e:	b08a      	sub	sp, #40	@ 0x28
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
 8002344:	f107 0314 	add.w	r3, r7, #20
 8002348:	2200      	movs	r2, #0
 800234a:	601a      	str	r2, [r3, #0]
 800234c:	605a      	str	r2, [r3, #4]
 800234e:	609a      	str	r2, [r3, #8]
 8002350:	60da      	str	r2, [r3, #12]
 8002352:	611a      	str	r2, [r3, #16]
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	4a29      	ldr	r2, [pc, #164]	@ (8002400 <HAL_TIM_MspPostInit+0xc4>)
 800235a:	4293      	cmp	r3, r2
 800235c:	d14b      	bne.n	80023f6 <HAL_TIM_MspPostInit+0xba>
 800235e:	4b29      	ldr	r3, [pc, #164]	@ (8002404 <HAL_TIM_MspPostInit+0xc8>)
 8002360:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002362:	4a28      	ldr	r2, [pc, #160]	@ (8002404 <HAL_TIM_MspPostInit+0xc8>)
 8002364:	f043 0302 	orr.w	r3, r3, #2
 8002368:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800236a:	4b26      	ldr	r3, [pc, #152]	@ (8002404 <HAL_TIM_MspPostInit+0xc8>)
 800236c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800236e:	f003 0302 	and.w	r3, r3, #2
 8002372:	613b      	str	r3, [r7, #16]
 8002374:	693b      	ldr	r3, [r7, #16]
 8002376:	4b23      	ldr	r3, [pc, #140]	@ (8002404 <HAL_TIM_MspPostInit+0xc8>)
 8002378:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800237a:	4a22      	ldr	r2, [pc, #136]	@ (8002404 <HAL_TIM_MspPostInit+0xc8>)
 800237c:	f043 0301 	orr.w	r3, r3, #1
 8002380:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002382:	4b20      	ldr	r3, [pc, #128]	@ (8002404 <HAL_TIM_MspPostInit+0xc8>)
 8002384:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002386:	f003 0301 	and.w	r3, r3, #1
 800238a:	60fb      	str	r3, [r7, #12]
 800238c:	68fb      	ldr	r3, [r7, #12]
 800238e:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
 8002392:	617b      	str	r3, [r7, #20]
 8002394:	2302      	movs	r3, #2
 8002396:	61bb      	str	r3, [r7, #24]
 8002398:	2300      	movs	r3, #0
 800239a:	61fb      	str	r3, [r7, #28]
 800239c:	2300      	movs	r3, #0
 800239e:	623b      	str	r3, [r7, #32]
 80023a0:	2306      	movs	r3, #6
 80023a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80023a4:	f107 0314 	add.w	r3, r7, #20
 80023a8:	4619      	mov	r1, r3
 80023aa:	4817      	ldr	r0, [pc, #92]	@ (8002408 <HAL_TIM_MspPostInit+0xcc>)
 80023ac:	f004 f888 	bl	80064c0 <HAL_GPIO_Init>
 80023b0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80023b4:	617b      	str	r3, [r7, #20]
 80023b6:	2302      	movs	r3, #2
 80023b8:	61bb      	str	r3, [r7, #24]
 80023ba:	2300      	movs	r3, #0
 80023bc:	61fb      	str	r3, [r7, #28]
 80023be:	2300      	movs	r3, #0
 80023c0:	623b      	str	r3, [r7, #32]
 80023c2:	2304      	movs	r3, #4
 80023c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80023c6:	f107 0314 	add.w	r3, r7, #20
 80023ca:	4619      	mov	r1, r3
 80023cc:	480e      	ldr	r0, [pc, #56]	@ (8002408 <HAL_TIM_MspPostInit+0xcc>)
 80023ce:	f004 f877 	bl	80064c0 <HAL_GPIO_Init>
 80023d2:	f44f 63e0 	mov.w	r3, #1792	@ 0x700
 80023d6:	617b      	str	r3, [r7, #20]
 80023d8:	2302      	movs	r3, #2
 80023da:	61bb      	str	r3, [r7, #24]
 80023dc:	2300      	movs	r3, #0
 80023de:	61fb      	str	r3, [r7, #28]
 80023e0:	2300      	movs	r3, #0
 80023e2:	623b      	str	r3, [r7, #32]
 80023e4:	2306      	movs	r3, #6
 80023e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80023e8:	f107 0314 	add.w	r3, r7, #20
 80023ec:	4619      	mov	r1, r3
 80023ee:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80023f2:	f004 f865 	bl	80064c0 <HAL_GPIO_Init>
 80023f6:	bf00      	nop
 80023f8:	3728      	adds	r7, #40	@ 0x28
 80023fa:	46bd      	mov	sp, r7
 80023fc:	bd80      	pop	{r7, pc}
 80023fe:	bf00      	nop
 8002400:	40012c00 	.word	0x40012c00
 8002404:	40021000 	.word	0x40021000
 8002408:	48000400 	.word	0x48000400

0800240c <MX_USART3_UART_Init>:
 800240c:	b580      	push	{r7, lr}
 800240e:	af00      	add	r7, sp, #0
 8002410:	4b22      	ldr	r3, [pc, #136]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002412:	4a23      	ldr	r2, [pc, #140]	@ (80024a0 <MX_USART3_UART_Init+0x94>)
 8002414:	601a      	str	r2, [r3, #0]
 8002416:	4b21      	ldr	r3, [pc, #132]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002418:	f44f 2261 	mov.w	r2, #921600	@ 0xe1000
 800241c:	605a      	str	r2, [r3, #4]
 800241e:	4b1f      	ldr	r3, [pc, #124]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002420:	2200      	movs	r2, #0
 8002422:	609a      	str	r2, [r3, #8]
 8002424:	4b1d      	ldr	r3, [pc, #116]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002426:	2200      	movs	r2, #0
 8002428:	60da      	str	r2, [r3, #12]
 800242a:	4b1c      	ldr	r3, [pc, #112]	@ (800249c <MX_USART3_UART_Init+0x90>)
 800242c:	2200      	movs	r2, #0
 800242e:	611a      	str	r2, [r3, #16]
 8002430:	4b1a      	ldr	r3, [pc, #104]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002432:	220c      	movs	r2, #12
 8002434:	615a      	str	r2, [r3, #20]
 8002436:	4b19      	ldr	r3, [pc, #100]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002438:	2200      	movs	r2, #0
 800243a:	619a      	str	r2, [r3, #24]
 800243c:	4b17      	ldr	r3, [pc, #92]	@ (800249c <MX_USART3_UART_Init+0x90>)
 800243e:	2200      	movs	r2, #0
 8002440:	61da      	str	r2, [r3, #28]
 8002442:	4b16      	ldr	r3, [pc, #88]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002444:	2200      	movs	r2, #0
 8002446:	621a      	str	r2, [r3, #32]
 8002448:	4b14      	ldr	r3, [pc, #80]	@ (800249c <MX_USART3_UART_Init+0x90>)
 800244a:	2200      	movs	r2, #0
 800244c:	625a      	str	r2, [r3, #36]	@ 0x24
 800244e:	4b13      	ldr	r3, [pc, #76]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002450:	2200      	movs	r2, #0
 8002452:	629a      	str	r2, [r3, #40]	@ 0x28
 8002454:	4811      	ldr	r0, [pc, #68]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002456:	f007 fc4a 	bl	8009cee <HAL_UART_Init>
 800245a:	4603      	mov	r3, r0
 800245c:	2b00      	cmp	r3, #0
 800245e:	d001      	beq.n	8002464 <MX_USART3_UART_Init+0x58>
 8002460:	f7ff fadf 	bl	8001a22 <Error_Handler>
 8002464:	2100      	movs	r1, #0
 8002466:	480d      	ldr	r0, [pc, #52]	@ (800249c <MX_USART3_UART_Init+0x90>)
 8002468:	f009 f8c7 	bl	800b5fa <HAL_UARTEx_SetTxFifoThreshold>
 800246c:	4603      	mov	r3, r0
 800246e:	2b00      	cmp	r3, #0
 8002470:	d001      	beq.n	8002476 <MX_USART3_UART_Init+0x6a>
 8002472:	f7ff fad6 	bl	8001a22 <Error_Handler>
 8002476:	2100      	movs	r1, #0
 8002478:	4808      	ldr	r0, [pc, #32]	@ (800249c <MX_USART3_UART_Init+0x90>)
 800247a:	f009 f8fc 	bl	800b676 <HAL_UARTEx_SetRxFifoThreshold>
 800247e:	4603      	mov	r3, r0
 8002480:	2b00      	cmp	r3, #0
 8002482:	d001      	beq.n	8002488 <MX_USART3_UART_Init+0x7c>
 8002484:	f7ff facd 	bl	8001a22 <Error_Handler>
 8002488:	4804      	ldr	r0, [pc, #16]	@ (800249c <MX_USART3_UART_Init+0x90>)
 800248a:	f009 f87d 	bl	800b588 <HAL_UARTEx_DisableFifoMode>
 800248e:	4603      	mov	r3, r0
 8002490:	2b00      	cmp	r3, #0
 8002492:	d001      	beq.n	8002498 <MX_USART3_UART_Init+0x8c>
 8002494:	f7ff fac5 	bl	8001a22 <Error_Handler>
 8002498:	bf00      	nop
 800249a:	bd80      	pop	{r7, pc}
 800249c:	200005a0 	.word	0x200005a0
 80024a0:	40004800 	.word	0x40004800

080024a4 <HAL_UART_MspInit>:
 80024a4:	b580      	push	{r7, lr}
 80024a6:	b09a      	sub	sp, #104	@ 0x68
 80024a8:	af00      	add	r7, sp, #0
 80024aa:	6078      	str	r0, [r7, #4]
 80024ac:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80024b0:	2200      	movs	r2, #0
 80024b2:	601a      	str	r2, [r3, #0]
 80024b4:	605a      	str	r2, [r3, #4]
 80024b6:	609a      	str	r2, [r3, #8]
 80024b8:	60da      	str	r2, [r3, #12]
 80024ba:	611a      	str	r2, [r3, #16]
 80024bc:	f107 0310 	add.w	r3, r7, #16
 80024c0:	2244      	movs	r2, #68	@ 0x44
 80024c2:	2100      	movs	r1, #0
 80024c4:	4618      	mov	r0, r3
 80024c6:	f00d fa1f 	bl	800f908 <memset>
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	4a4d      	ldr	r2, [pc, #308]	@ (8002604 <HAL_UART_MspInit+0x160>)
 80024d0:	4293      	cmp	r3, r2
 80024d2:	f040 8092 	bne.w	80025fa <HAL_UART_MspInit+0x156>
 80024d6:	2304      	movs	r3, #4
 80024d8:	613b      	str	r3, [r7, #16]
 80024da:	2300      	movs	r3, #0
 80024dc:	61fb      	str	r3, [r7, #28]
 80024de:	f107 0310 	add.w	r3, r7, #16
 80024e2:	4618      	mov	r0, r3
 80024e4:	f005 f882 	bl	80075ec <HAL_RCCEx_PeriphCLKConfig>
 80024e8:	4603      	mov	r3, r0
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d001      	beq.n	80024f2 <HAL_UART_MspInit+0x4e>
 80024ee:	f7ff fa98 	bl	8001a22 <Error_Handler>
 80024f2:	4b45      	ldr	r3, [pc, #276]	@ (8002608 <HAL_UART_MspInit+0x164>)
 80024f4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80024f6:	4a44      	ldr	r2, [pc, #272]	@ (8002608 <HAL_UART_MspInit+0x164>)
 80024f8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80024fc:	6593      	str	r3, [r2, #88]	@ 0x58
 80024fe:	4b42      	ldr	r3, [pc, #264]	@ (8002608 <HAL_UART_MspInit+0x164>)
 8002500:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002502:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002506:	60fb      	str	r3, [r7, #12]
 8002508:	68fb      	ldr	r3, [r7, #12]
 800250a:	4b3f      	ldr	r3, [pc, #252]	@ (8002608 <HAL_UART_MspInit+0x164>)
 800250c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800250e:	4a3e      	ldr	r2, [pc, #248]	@ (8002608 <HAL_UART_MspInit+0x164>)
 8002510:	f043 0302 	orr.w	r3, r3, #2
 8002514:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002516:	4b3c      	ldr	r3, [pc, #240]	@ (8002608 <HAL_UART_MspInit+0x164>)
 8002518:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800251a:	f003 0302 	and.w	r3, r3, #2
 800251e:	60bb      	str	r3, [r7, #8]
 8002520:	68bb      	ldr	r3, [r7, #8]
 8002522:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8002526:	657b      	str	r3, [r7, #84]	@ 0x54
 8002528:	2302      	movs	r3, #2
 800252a:	65bb      	str	r3, [r7, #88]	@ 0x58
 800252c:	2300      	movs	r3, #0
 800252e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002530:	2300      	movs	r3, #0
 8002532:	663b      	str	r3, [r7, #96]	@ 0x60
 8002534:	2307      	movs	r3, #7
 8002536:	667b      	str	r3, [r7, #100]	@ 0x64
 8002538:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800253c:	4619      	mov	r1, r3
 800253e:	4833      	ldr	r0, [pc, #204]	@ (800260c <HAL_UART_MspInit+0x168>)
 8002540:	f003 ffbe 	bl	80064c0 <HAL_GPIO_Init>
 8002544:	4b32      	ldr	r3, [pc, #200]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 8002546:	4a33      	ldr	r2, [pc, #204]	@ (8002614 <HAL_UART_MspInit+0x170>)
 8002548:	601a      	str	r2, [r3, #0]
 800254a:	4b31      	ldr	r3, [pc, #196]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 800254c:	221d      	movs	r2, #29
 800254e:	605a      	str	r2, [r3, #4]
 8002550:	4b2f      	ldr	r3, [pc, #188]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 8002552:	2210      	movs	r2, #16
 8002554:	609a      	str	r2, [r3, #8]
 8002556:	4b2e      	ldr	r3, [pc, #184]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 8002558:	2200      	movs	r2, #0
 800255a:	60da      	str	r2, [r3, #12]
 800255c:	4b2c      	ldr	r3, [pc, #176]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 800255e:	2280      	movs	r2, #128	@ 0x80
 8002560:	611a      	str	r2, [r3, #16]
 8002562:	4b2b      	ldr	r3, [pc, #172]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 8002564:	2200      	movs	r2, #0
 8002566:	615a      	str	r2, [r3, #20]
 8002568:	4b29      	ldr	r3, [pc, #164]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 800256a:	2200      	movs	r2, #0
 800256c:	619a      	str	r2, [r3, #24]
 800256e:	4b28      	ldr	r3, [pc, #160]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 8002570:	2200      	movs	r2, #0
 8002572:	61da      	str	r2, [r3, #28]
 8002574:	4b26      	ldr	r3, [pc, #152]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 8002576:	2200      	movs	r2, #0
 8002578:	621a      	str	r2, [r3, #32]
 800257a:	4825      	ldr	r0, [pc, #148]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 800257c:	f003 fabe 	bl	8005afc <HAL_DMA_Init>
 8002580:	4603      	mov	r3, r0
 8002582:	2b00      	cmp	r3, #0
 8002584:	d001      	beq.n	800258a <HAL_UART_MspInit+0xe6>
 8002586:	f7ff fa4c 	bl	8001a22 <Error_Handler>
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	4a20      	ldr	r2, [pc, #128]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 800258e:	67da      	str	r2, [r3, #124]	@ 0x7c
 8002590:	4a1f      	ldr	r2, [pc, #124]	@ (8002610 <HAL_UART_MspInit+0x16c>)
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	6293      	str	r3, [r2, #40]	@ 0x28
 8002596:	4b20      	ldr	r3, [pc, #128]	@ (8002618 <HAL_UART_MspInit+0x174>)
 8002598:	4a20      	ldr	r2, [pc, #128]	@ (800261c <HAL_UART_MspInit+0x178>)
 800259a:	601a      	str	r2, [r3, #0]
 800259c:	4b1e      	ldr	r3, [pc, #120]	@ (8002618 <HAL_UART_MspInit+0x174>)
 800259e:	221c      	movs	r2, #28
 80025a0:	605a      	str	r2, [r3, #4]
 80025a2:	4b1d      	ldr	r3, [pc, #116]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025a4:	2200      	movs	r2, #0
 80025a6:	609a      	str	r2, [r3, #8]
 80025a8:	4b1b      	ldr	r3, [pc, #108]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025aa:	2200      	movs	r2, #0
 80025ac:	60da      	str	r2, [r3, #12]
 80025ae:	4b1a      	ldr	r3, [pc, #104]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025b0:	2280      	movs	r2, #128	@ 0x80
 80025b2:	611a      	str	r2, [r3, #16]
 80025b4:	4b18      	ldr	r3, [pc, #96]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025b6:	2200      	movs	r2, #0
 80025b8:	615a      	str	r2, [r3, #20]
 80025ba:	4b17      	ldr	r3, [pc, #92]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025bc:	2200      	movs	r2, #0
 80025be:	619a      	str	r2, [r3, #24]
 80025c0:	4b15      	ldr	r3, [pc, #84]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025c2:	2200      	movs	r2, #0
 80025c4:	61da      	str	r2, [r3, #28]
 80025c6:	4b14      	ldr	r3, [pc, #80]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025c8:	2200      	movs	r2, #0
 80025ca:	621a      	str	r2, [r3, #32]
 80025cc:	4812      	ldr	r0, [pc, #72]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025ce:	f003 fa95 	bl	8005afc <HAL_DMA_Init>
 80025d2:	4603      	mov	r3, r0
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d001      	beq.n	80025dc <HAL_UART_MspInit+0x138>
 80025d8:	f7ff fa23 	bl	8001a22 <Error_Handler>
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	4a0e      	ldr	r2, [pc, #56]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025e0:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80025e4:	4a0c      	ldr	r2, [pc, #48]	@ (8002618 <HAL_UART_MspInit+0x174>)
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	6293      	str	r3, [r2, #40]	@ 0x28
 80025ea:	2200      	movs	r2, #0
 80025ec:	2101      	movs	r1, #1
 80025ee:	2027      	movs	r0, #39	@ 0x27
 80025f0:	f003 f875 	bl	80056de <HAL_NVIC_SetPriority>
 80025f4:	2027      	movs	r0, #39	@ 0x27
 80025f6:	f003 f88c 	bl	8005712 <HAL_NVIC_EnableIRQ>
 80025fa:	bf00      	nop
 80025fc:	3768      	adds	r7, #104	@ 0x68
 80025fe:	46bd      	mov	sp, r7
 8002600:	bd80      	pop	{r7, pc}
 8002602:	bf00      	nop
 8002604:	40004800 	.word	0x40004800
 8002608:	40021000 	.word	0x40021000
 800260c:	48000400 	.word	0x48000400
 8002610:	20000634 	.word	0x20000634
 8002614:	40020008 	.word	0x40020008
 8002618:	20000694 	.word	0x20000694
 800261c:	4002001c 	.word	0x4002001c

08002620 <Reset_Handler>:
 8002620:	480d      	ldr	r0, [pc, #52]	@ (8002658 <LoopForever+0x2>)
 8002622:	4685      	mov	sp, r0
 8002624:	f7ff fcc4 	bl	8001fb0 <SystemInit>
 8002628:	480c      	ldr	r0, [pc, #48]	@ (800265c <LoopForever+0x6>)
 800262a:	490d      	ldr	r1, [pc, #52]	@ (8002660 <LoopForever+0xa>)
 800262c:	4a0d      	ldr	r2, [pc, #52]	@ (8002664 <LoopForever+0xe>)
 800262e:	2300      	movs	r3, #0
 8002630:	e002      	b.n	8002638 <LoopCopyDataInit>

08002632 <CopyDataInit>:
 8002632:	58d4      	ldr	r4, [r2, r3]
 8002634:	50c4      	str	r4, [r0, r3]
 8002636:	3304      	adds	r3, #4

08002638 <LoopCopyDataInit>:
 8002638:	18c4      	adds	r4, r0, r3
 800263a:	428c      	cmp	r4, r1
 800263c:	d3f9      	bcc.n	8002632 <CopyDataInit>
 800263e:	4a0a      	ldr	r2, [pc, #40]	@ (8002668 <LoopForever+0x12>)
 8002640:	4c0a      	ldr	r4, [pc, #40]	@ (800266c <LoopForever+0x16>)
 8002642:	2300      	movs	r3, #0
 8002644:	e001      	b.n	800264a <LoopFillZerobss>

08002646 <FillZerobss>:
 8002646:	6013      	str	r3, [r2, #0]
 8002648:	3204      	adds	r2, #4

0800264a <LoopFillZerobss>:
 800264a:	42a2      	cmp	r2, r4
 800264c:	d3fb      	bcc.n	8002646 <FillZerobss>
 800264e:	f00d f9c5 	bl	800f9dc <__libc_init_array>
 8002652:	f7ff f91f 	bl	8001894 <main>

08002656 <LoopForever>:
 8002656:	e7fe      	b.n	8002656 <LoopForever>
 8002658:	20008000 	.word	0x20008000
 800265c:	20000000 	.word	0x20000000
 8002660:	20000258 	.word	0x20000258
 8002664:	08012d08 	.word	0x08012d08
 8002668:	20000258 	.word	0x20000258
 800266c:	20000ac8 	.word	0x20000ac8

08002670 <COMP4_IRQHandler>:
 8002670:	e7fe      	b.n	8002670 <COMP4_IRQHandler>

08002672 <HAL_Init>:
 8002672:	b580      	push	{r7, lr}
 8002674:	b082      	sub	sp, #8
 8002676:	af00      	add	r7, sp, #0
 8002678:	2300      	movs	r3, #0
 800267a:	71fb      	strb	r3, [r7, #7]
 800267c:	2003      	movs	r0, #3
 800267e:	f003 f823 	bl	80056c8 <HAL_NVIC_SetPriorityGrouping>
 8002682:	200f      	movs	r0, #15
 8002684:	f000 f80e 	bl	80026a4 <HAL_InitTick>
 8002688:	4603      	mov	r3, r0
 800268a:	2b00      	cmp	r3, #0
 800268c:	d002      	beq.n	8002694 <HAL_Init+0x22>
 800268e:	2301      	movs	r3, #1
 8002690:	71fb      	strb	r3, [r7, #7]
 8002692:	e001      	b.n	8002698 <HAL_Init+0x26>
 8002694:	f7ff fb3c 	bl	8001d10 <HAL_MspInit>
 8002698:	79fb      	ldrb	r3, [r7, #7]
 800269a:	4618      	mov	r0, r3
 800269c:	3708      	adds	r7, #8
 800269e:	46bd      	mov	sp, r7
 80026a0:	bd80      	pop	{r7, pc}
	...

080026a4 <HAL_InitTick>:
 80026a4:	b580      	push	{r7, lr}
 80026a6:	b084      	sub	sp, #16
 80026a8:	af00      	add	r7, sp, #0
 80026aa:	6078      	str	r0, [r7, #4]
 80026ac:	2300      	movs	r3, #0
 80026ae:	73fb      	strb	r3, [r7, #15]
 80026b0:	4b16      	ldr	r3, [pc, #88]	@ (800270c <HAL_InitTick+0x68>)
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	2b00      	cmp	r3, #0
 80026b6:	d022      	beq.n	80026fe <HAL_InitTick+0x5a>
 80026b8:	4b15      	ldr	r3, [pc, #84]	@ (8002710 <HAL_InitTick+0x6c>)
 80026ba:	681a      	ldr	r2, [r3, #0]
 80026bc:	4b13      	ldr	r3, [pc, #76]	@ (800270c <HAL_InitTick+0x68>)
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80026c4:	fbb1 f3f3 	udiv	r3, r1, r3
 80026c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80026cc:	4618      	mov	r0, r3
 80026ce:	f003 f82e 	bl	800572e <HAL_SYSTICK_Config>
 80026d2:	4603      	mov	r3, r0
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	d10f      	bne.n	80026f8 <HAL_InitTick+0x54>
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	2b0f      	cmp	r3, #15
 80026dc:	d809      	bhi.n	80026f2 <HAL_InitTick+0x4e>
 80026de:	2200      	movs	r2, #0
 80026e0:	6879      	ldr	r1, [r7, #4]
 80026e2:	f04f 30ff 	mov.w	r0, #4294967295
 80026e6:	f002 fffa 	bl	80056de <HAL_NVIC_SetPriority>
 80026ea:	4a0a      	ldr	r2, [pc, #40]	@ (8002714 <HAL_InitTick+0x70>)
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	6013      	str	r3, [r2, #0]
 80026f0:	e007      	b.n	8002702 <HAL_InitTick+0x5e>
 80026f2:	2301      	movs	r3, #1
 80026f4:	73fb      	strb	r3, [r7, #15]
 80026f6:	e004      	b.n	8002702 <HAL_InitTick+0x5e>
 80026f8:	2301      	movs	r3, #1
 80026fa:	73fb      	strb	r3, [r7, #15]
 80026fc:	e001      	b.n	8002702 <HAL_InitTick+0x5e>
 80026fe:	2301      	movs	r3, #1
 8002700:	73fb      	strb	r3, [r7, #15]
 8002702:	7bfb      	ldrb	r3, [r7, #15]
 8002704:	4618      	mov	r0, r3
 8002706:	3710      	adds	r7, #16
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}
 800270c:	20000008 	.word	0x20000008
 8002710:	20000000 	.word	0x20000000
 8002714:	20000004 	.word	0x20000004

08002718 <HAL_IncTick>:
 8002718:	b480      	push	{r7}
 800271a:	af00      	add	r7, sp, #0
 800271c:	4b05      	ldr	r3, [pc, #20]	@ (8002734 <HAL_IncTick+0x1c>)
 800271e:	681a      	ldr	r2, [r3, #0]
 8002720:	4b05      	ldr	r3, [pc, #20]	@ (8002738 <HAL_IncTick+0x20>)
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	4413      	add	r3, r2
 8002726:	4a03      	ldr	r2, [pc, #12]	@ (8002734 <HAL_IncTick+0x1c>)
 8002728:	6013      	str	r3, [r2, #0]
 800272a:	bf00      	nop
 800272c:	46bd      	mov	sp, r7
 800272e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002732:	4770      	bx	lr
 8002734:	200006f4 	.word	0x200006f4
 8002738:	20000008 	.word	0x20000008

0800273c <HAL_GetTick>:
 800273c:	b480      	push	{r7}
 800273e:	af00      	add	r7, sp, #0
 8002740:	4b03      	ldr	r3, [pc, #12]	@ (8002750 <HAL_GetTick+0x14>)
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	4618      	mov	r0, r3
 8002746:	46bd      	mov	sp, r7
 8002748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800274c:	4770      	bx	lr
 800274e:	bf00      	nop
 8002750:	200006f4 	.word	0x200006f4

08002754 <LL_ADC_SetCommonClock>:
 8002754:	b480      	push	{r7}
 8002756:	b083      	sub	sp, #12
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
 800275c:	6039      	str	r1, [r7, #0]
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	689b      	ldr	r3, [r3, #8]
 8002762:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8002766:	683b      	ldr	r3, [r7, #0]
 8002768:	431a      	orrs	r2, r3
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	609a      	str	r2, [r3, #8]
 800276e:	bf00      	nop
 8002770:	370c      	adds	r7, #12
 8002772:	46bd      	mov	sp, r7
 8002774:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002778:	4770      	bx	lr

0800277a <LL_ADC_SetCommonPathInternalCh>:
 800277a:	b480      	push	{r7}
 800277c:	b083      	sub	sp, #12
 800277e:	af00      	add	r7, sp, #0
 8002780:	6078      	str	r0, [r7, #4]
 8002782:	6039      	str	r1, [r7, #0]
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	689b      	ldr	r3, [r3, #8]
 8002788:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 800278c:	683b      	ldr	r3, [r7, #0]
 800278e:	431a      	orrs	r2, r3
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	609a      	str	r2, [r3, #8]
 8002794:	bf00      	nop
 8002796:	370c      	adds	r7, #12
 8002798:	46bd      	mov	sp, r7
 800279a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800279e:	4770      	bx	lr

080027a0 <LL_ADC_GetCommonPathInternalCh>:
 80027a0:	b480      	push	{r7}
 80027a2:	b083      	sub	sp, #12
 80027a4:	af00      	add	r7, sp, #0
 80027a6:	6078      	str	r0, [r7, #4]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	689b      	ldr	r3, [r3, #8]
 80027ac:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 80027b0:	4618      	mov	r0, r3
 80027b2:	370c      	adds	r7, #12
 80027b4:	46bd      	mov	sp, r7
 80027b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ba:	4770      	bx	lr

080027bc <LL_ADC_SetOffset>:
 80027bc:	b480      	push	{r7}
 80027be:	b087      	sub	sp, #28
 80027c0:	af00      	add	r7, sp, #0
 80027c2:	60f8      	str	r0, [r7, #12]
 80027c4:	60b9      	str	r1, [r7, #8]
 80027c6:	607a      	str	r2, [r7, #4]
 80027c8:	603b      	str	r3, [r7, #0]
 80027ca:	68fb      	ldr	r3, [r7, #12]
 80027cc:	3360      	adds	r3, #96	@ 0x60
 80027ce:	461a      	mov	r2, r3
 80027d0:	68bb      	ldr	r3, [r7, #8]
 80027d2:	009b      	lsls	r3, r3, #2
 80027d4:	4413      	add	r3, r2
 80027d6:	617b      	str	r3, [r7, #20]
 80027d8:	697b      	ldr	r3, [r7, #20]
 80027da:	681a      	ldr	r2, [r3, #0]
 80027dc:	4b08      	ldr	r3, [pc, #32]	@ (8002800 <LL_ADC_SetOffset+0x44>)
 80027de:	4013      	ands	r3, r2
 80027e0:	687a      	ldr	r2, [r7, #4]
 80027e2:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 80027e6:	683a      	ldr	r2, [r7, #0]
 80027e8:	430a      	orrs	r2, r1
 80027ea:	4313      	orrs	r3, r2
 80027ec:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 80027f0:	697b      	ldr	r3, [r7, #20]
 80027f2:	601a      	str	r2, [r3, #0]
 80027f4:	bf00      	nop
 80027f6:	371c      	adds	r7, #28
 80027f8:	46bd      	mov	sp, r7
 80027fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027fe:	4770      	bx	lr
 8002800:	03fff000 	.word	0x03fff000

08002804 <LL_ADC_GetOffsetChannel>:
 8002804:	b480      	push	{r7}
 8002806:	b085      	sub	sp, #20
 8002808:	af00      	add	r7, sp, #0
 800280a:	6078      	str	r0, [r7, #4]
 800280c:	6039      	str	r1, [r7, #0]
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	3360      	adds	r3, #96	@ 0x60
 8002812:	461a      	mov	r2, r3
 8002814:	683b      	ldr	r3, [r7, #0]
 8002816:	009b      	lsls	r3, r3, #2
 8002818:	4413      	add	r3, r2
 800281a:	60fb      	str	r3, [r7, #12]
 800281c:	68fb      	ldr	r3, [r7, #12]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 8002824:	4618      	mov	r0, r3
 8002826:	3714      	adds	r7, #20
 8002828:	46bd      	mov	sp, r7
 800282a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282e:	4770      	bx	lr

08002830 <LL_ADC_SetOffsetState>:
 8002830:	b480      	push	{r7}
 8002832:	b087      	sub	sp, #28
 8002834:	af00      	add	r7, sp, #0
 8002836:	60f8      	str	r0, [r7, #12]
 8002838:	60b9      	str	r1, [r7, #8]
 800283a:	607a      	str	r2, [r7, #4]
 800283c:	68fb      	ldr	r3, [r7, #12]
 800283e:	3360      	adds	r3, #96	@ 0x60
 8002840:	461a      	mov	r2, r3
 8002842:	68bb      	ldr	r3, [r7, #8]
 8002844:	009b      	lsls	r3, r3, #2
 8002846:	4413      	add	r3, r2
 8002848:	617b      	str	r3, [r7, #20]
 800284a:	697b      	ldr	r3, [r7, #20]
 800284c:	681b      	ldr	r3, [r3, #0]
 800284e:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	431a      	orrs	r2, r3
 8002856:	697b      	ldr	r3, [r7, #20]
 8002858:	601a      	str	r2, [r3, #0]
 800285a:	bf00      	nop
 800285c:	371c      	adds	r7, #28
 800285e:	46bd      	mov	sp, r7
 8002860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002864:	4770      	bx	lr

08002866 <LL_ADC_SetOffsetSign>:
 8002866:	b480      	push	{r7}
 8002868:	b087      	sub	sp, #28
 800286a:	af00      	add	r7, sp, #0
 800286c:	60f8      	str	r0, [r7, #12]
 800286e:	60b9      	str	r1, [r7, #8]
 8002870:	607a      	str	r2, [r7, #4]
 8002872:	68fb      	ldr	r3, [r7, #12]
 8002874:	3360      	adds	r3, #96	@ 0x60
 8002876:	461a      	mov	r2, r3
 8002878:	68bb      	ldr	r3, [r7, #8]
 800287a:	009b      	lsls	r3, r3, #2
 800287c:	4413      	add	r3, r2
 800287e:	617b      	str	r3, [r7, #20]
 8002880:	697b      	ldr	r3, [r7, #20]
 8002882:	681b      	ldr	r3, [r3, #0]
 8002884:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	431a      	orrs	r2, r3
 800288c:	697b      	ldr	r3, [r7, #20]
 800288e:	601a      	str	r2, [r3, #0]
 8002890:	bf00      	nop
 8002892:	371c      	adds	r7, #28
 8002894:	46bd      	mov	sp, r7
 8002896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800289a:	4770      	bx	lr

0800289c <LL_ADC_SetOffsetSaturation>:
 800289c:	b480      	push	{r7}
 800289e:	b087      	sub	sp, #28
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	60f8      	str	r0, [r7, #12]
 80028a4:	60b9      	str	r1, [r7, #8]
 80028a6:	607a      	str	r2, [r7, #4]
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	3360      	adds	r3, #96	@ 0x60
 80028ac:	461a      	mov	r2, r3
 80028ae:	68bb      	ldr	r3, [r7, #8]
 80028b0:	009b      	lsls	r3, r3, #2
 80028b2:	4413      	add	r3, r2
 80028b4:	617b      	str	r3, [r7, #20]
 80028b6:	697b      	ldr	r3, [r7, #20]
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	431a      	orrs	r2, r3
 80028c2:	697b      	ldr	r3, [r7, #20]
 80028c4:	601a      	str	r2, [r3, #0]
 80028c6:	bf00      	nop
 80028c8:	371c      	adds	r7, #28
 80028ca:	46bd      	mov	sp, r7
 80028cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d0:	4770      	bx	lr

080028d2 <LL_ADC_SetSamplingTimeCommonConfig>:
 80028d2:	b480      	push	{r7}
 80028d4:	b083      	sub	sp, #12
 80028d6:	af00      	add	r7, sp, #0
 80028d8:	6078      	str	r0, [r7, #4]
 80028da:	6039      	str	r1, [r7, #0]
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	695b      	ldr	r3, [r3, #20]
 80028e0:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	431a      	orrs	r2, r3
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	615a      	str	r2, [r3, #20]
 80028ec:	bf00      	nop
 80028ee:	370c      	adds	r7, #12
 80028f0:	46bd      	mov	sp, r7
 80028f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f6:	4770      	bx	lr

080028f8 <LL_ADC_REG_IsTriggerSourceSWStart>:
 80028f8:	b480      	push	{r7}
 80028fa:	b083      	sub	sp, #12
 80028fc:	af00      	add	r7, sp, #0
 80028fe:	6078      	str	r0, [r7, #4]
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	68db      	ldr	r3, [r3, #12]
 8002904:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8002908:	2b00      	cmp	r3, #0
 800290a:	d101      	bne.n	8002910 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 800290c:	2301      	movs	r3, #1
 800290e:	e000      	b.n	8002912 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8002910:	2300      	movs	r3, #0
 8002912:	4618      	mov	r0, r3
 8002914:	370c      	adds	r7, #12
 8002916:	46bd      	mov	sp, r7
 8002918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800291c:	4770      	bx	lr

0800291e <LL_ADC_REG_SetSequencerRanks>:
 800291e:	b480      	push	{r7}
 8002920:	b087      	sub	sp, #28
 8002922:	af00      	add	r7, sp, #0
 8002924:	60f8      	str	r0, [r7, #12]
 8002926:	60b9      	str	r1, [r7, #8]
 8002928:	607a      	str	r2, [r7, #4]
 800292a:	68fb      	ldr	r3, [r7, #12]
 800292c:	3330      	adds	r3, #48	@ 0x30
 800292e:	461a      	mov	r2, r3
 8002930:	68bb      	ldr	r3, [r7, #8]
 8002932:	0a1b      	lsrs	r3, r3, #8
 8002934:	009b      	lsls	r3, r3, #2
 8002936:	f003 030c 	and.w	r3, r3, #12
 800293a:	4413      	add	r3, r2
 800293c:	617b      	str	r3, [r7, #20]
 800293e:	697b      	ldr	r3, [r7, #20]
 8002940:	681a      	ldr	r2, [r3, #0]
 8002942:	68bb      	ldr	r3, [r7, #8]
 8002944:	f003 031f 	and.w	r3, r3, #31
 8002948:	211f      	movs	r1, #31
 800294a:	fa01 f303 	lsl.w	r3, r1, r3
 800294e:	43db      	mvns	r3, r3
 8002950:	401a      	ands	r2, r3
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	0e9b      	lsrs	r3, r3, #26
 8002956:	f003 011f 	and.w	r1, r3, #31
 800295a:	68bb      	ldr	r3, [r7, #8]
 800295c:	f003 031f 	and.w	r3, r3, #31
 8002960:	fa01 f303 	lsl.w	r3, r1, r3
 8002964:	431a      	orrs	r2, r3
 8002966:	697b      	ldr	r3, [r7, #20]
 8002968:	601a      	str	r2, [r3, #0]
 800296a:	bf00      	nop
 800296c:	371c      	adds	r7, #28
 800296e:	46bd      	mov	sp, r7
 8002970:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002974:	4770      	bx	lr

08002976 <LL_ADC_INJ_IsTriggerSourceSWStart>:
 8002976:	b480      	push	{r7}
 8002978:	b083      	sub	sp, #12
 800297a:	af00      	add	r7, sp, #0
 800297c:	6078      	str	r0, [r7, #4]
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002982:	f403 73c0 	and.w	r3, r3, #384	@ 0x180
 8002986:	2b00      	cmp	r3, #0
 8002988:	d101      	bne.n	800298e <LL_ADC_INJ_IsTriggerSourceSWStart+0x18>
 800298a:	2301      	movs	r3, #1
 800298c:	e000      	b.n	8002990 <LL_ADC_INJ_IsTriggerSourceSWStart+0x1a>
 800298e:	2300      	movs	r3, #0
 8002990:	4618      	mov	r0, r3
 8002992:	370c      	adds	r7, #12
 8002994:	46bd      	mov	sp, r7
 8002996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800299a:	4770      	bx	lr

0800299c <LL_ADC_SetChannelSamplingTime>:
 800299c:	b480      	push	{r7}
 800299e:	b087      	sub	sp, #28
 80029a0:	af00      	add	r7, sp, #0
 80029a2:	60f8      	str	r0, [r7, #12]
 80029a4:	60b9      	str	r1, [r7, #8]
 80029a6:	607a      	str	r2, [r7, #4]
 80029a8:	68fb      	ldr	r3, [r7, #12]
 80029aa:	3314      	adds	r3, #20
 80029ac:	461a      	mov	r2, r3
 80029ae:	68bb      	ldr	r3, [r7, #8]
 80029b0:	0e5b      	lsrs	r3, r3, #25
 80029b2:	009b      	lsls	r3, r3, #2
 80029b4:	f003 0304 	and.w	r3, r3, #4
 80029b8:	4413      	add	r3, r2
 80029ba:	617b      	str	r3, [r7, #20]
 80029bc:	697b      	ldr	r3, [r7, #20]
 80029be:	681a      	ldr	r2, [r3, #0]
 80029c0:	68bb      	ldr	r3, [r7, #8]
 80029c2:	0d1b      	lsrs	r3, r3, #20
 80029c4:	f003 031f 	and.w	r3, r3, #31
 80029c8:	2107      	movs	r1, #7
 80029ca:	fa01 f303 	lsl.w	r3, r1, r3
 80029ce:	43db      	mvns	r3, r3
 80029d0:	401a      	ands	r2, r3
 80029d2:	68bb      	ldr	r3, [r7, #8]
 80029d4:	0d1b      	lsrs	r3, r3, #20
 80029d6:	f003 031f 	and.w	r3, r3, #31
 80029da:	6879      	ldr	r1, [r7, #4]
 80029dc:	fa01 f303 	lsl.w	r3, r1, r3
 80029e0:	431a      	orrs	r2, r3
 80029e2:	697b      	ldr	r3, [r7, #20]
 80029e4:	601a      	str	r2, [r3, #0]
 80029e6:	bf00      	nop
 80029e8:	371c      	adds	r7, #28
 80029ea:	46bd      	mov	sp, r7
 80029ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029f0:	4770      	bx	lr
	...

080029f4 <LL_ADC_SetChannelSingleDiff>:
 80029f4:	b480      	push	{r7}
 80029f6:	b085      	sub	sp, #20
 80029f8:	af00      	add	r7, sp, #0
 80029fa:	60f8      	str	r0, [r7, #12]
 80029fc:	60b9      	str	r1, [r7, #8]
 80029fe:	607a      	str	r2, [r7, #4]
 8002a00:	68fb      	ldr	r3, [r7, #12]
 8002a02:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 8002a06:	68bb      	ldr	r3, [r7, #8]
 8002a08:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002a0c:	43db      	mvns	r3, r3
 8002a0e:	401a      	ands	r2, r3
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	f003 0318 	and.w	r3, r3, #24
 8002a16:	4908      	ldr	r1, [pc, #32]	@ (8002a38 <LL_ADC_SetChannelSingleDiff+0x44>)
 8002a18:	40d9      	lsrs	r1, r3
 8002a1a:	68bb      	ldr	r3, [r7, #8]
 8002a1c:	400b      	ands	r3, r1
 8002a1e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002a22:	431a      	orrs	r2, r3
 8002a24:	68fb      	ldr	r3, [r7, #12]
 8002a26:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 8002a2a:	bf00      	nop
 8002a2c:	3714      	adds	r7, #20
 8002a2e:	46bd      	mov	sp, r7
 8002a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a34:	4770      	bx	lr
 8002a36:	bf00      	nop
 8002a38:	0007ffff 	.word	0x0007ffff

08002a3c <LL_ADC_GetMultimode>:
 8002a3c:	b480      	push	{r7}
 8002a3e:	b083      	sub	sp, #12
 8002a40:	af00      	add	r7, sp, #0
 8002a42:	6078      	str	r0, [r7, #4]
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	689b      	ldr	r3, [r3, #8]
 8002a48:	f003 031f 	and.w	r3, r3, #31
 8002a4c:	4618      	mov	r0, r3
 8002a4e:	370c      	adds	r7, #12
 8002a50:	46bd      	mov	sp, r7
 8002a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a56:	4770      	bx	lr

08002a58 <LL_ADC_GetMultiDMATransfer>:
 8002a58:	b480      	push	{r7}
 8002a5a:	b083      	sub	sp, #12
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	6078      	str	r0, [r7, #4]
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	689b      	ldr	r3, [r3, #8]
 8002a64:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8002a68:	4618      	mov	r0, r3
 8002a6a:	370c      	adds	r7, #12
 8002a6c:	46bd      	mov	sp, r7
 8002a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a72:	4770      	bx	lr

08002a74 <LL_ADC_DisableDeepPowerDown>:
 8002a74:	b480      	push	{r7}
 8002a76:	b083      	sub	sp, #12
 8002a78:	af00      	add	r7, sp, #0
 8002a7a:	6078      	str	r0, [r7, #4]
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	689b      	ldr	r3, [r3, #8]
 8002a80:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8002a84:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002a88:	687a      	ldr	r2, [r7, #4]
 8002a8a:	6093      	str	r3, [r2, #8]
 8002a8c:	bf00      	nop
 8002a8e:	370c      	adds	r7, #12
 8002a90:	46bd      	mov	sp, r7
 8002a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a96:	4770      	bx	lr

08002a98 <LL_ADC_IsDeepPowerDownEnabled>:
 8002a98:	b480      	push	{r7}
 8002a9a:	b083      	sub	sp, #12
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	689b      	ldr	r3, [r3, #8]
 8002aa4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8002aa8:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8002aac:	d101      	bne.n	8002ab2 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8002aae:	2301      	movs	r3, #1
 8002ab0:	e000      	b.n	8002ab4 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8002ab2:	2300      	movs	r3, #0
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	370c      	adds	r7, #12
 8002ab8:	46bd      	mov	sp, r7
 8002aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002abe:	4770      	bx	lr

08002ac0 <LL_ADC_EnableInternalRegulator>:
 8002ac0:	b480      	push	{r7}
 8002ac2:	b083      	sub	sp, #12
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	689b      	ldr	r3, [r3, #8]
 8002acc:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 8002ad0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002ad4:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	609a      	str	r2, [r3, #8]
 8002adc:	bf00      	nop
 8002ade:	370c      	adds	r7, #12
 8002ae0:	46bd      	mov	sp, r7
 8002ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ae6:	4770      	bx	lr

08002ae8 <LL_ADC_IsInternalRegulatorEnabled>:
 8002ae8:	b480      	push	{r7}
 8002aea:	b083      	sub	sp, #12
 8002aec:	af00      	add	r7, sp, #0
 8002aee:	6078      	str	r0, [r7, #4]
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	689b      	ldr	r3, [r3, #8]
 8002af4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002af8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8002afc:	d101      	bne.n	8002b02 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8002afe:	2301      	movs	r3, #1
 8002b00:	e000      	b.n	8002b04 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8002b02:	2300      	movs	r3, #0
 8002b04:	4618      	mov	r0, r3
 8002b06:	370c      	adds	r7, #12
 8002b08:	46bd      	mov	sp, r7
 8002b0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b0e:	4770      	bx	lr

08002b10 <LL_ADC_Enable>:
 8002b10:	b480      	push	{r7}
 8002b12:	b083      	sub	sp, #12
 8002b14:	af00      	add	r7, sp, #0
 8002b16:	6078      	str	r0, [r7, #4]
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	689b      	ldr	r3, [r3, #8]
 8002b1c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002b20:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002b24:	f043 0201 	orr.w	r2, r3, #1
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	609a      	str	r2, [r3, #8]
 8002b2c:	bf00      	nop
 8002b2e:	370c      	adds	r7, #12
 8002b30:	46bd      	mov	sp, r7
 8002b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b36:	4770      	bx	lr

08002b38 <LL_ADC_Disable>:
 8002b38:	b480      	push	{r7}
 8002b3a:	b083      	sub	sp, #12
 8002b3c:	af00      	add	r7, sp, #0
 8002b3e:	6078      	str	r0, [r7, #4]
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	689b      	ldr	r3, [r3, #8]
 8002b44:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002b48:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002b4c:	f043 0202 	orr.w	r2, r3, #2
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	609a      	str	r2, [r3, #8]
 8002b54:	bf00      	nop
 8002b56:	370c      	adds	r7, #12
 8002b58:	46bd      	mov	sp, r7
 8002b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b5e:	4770      	bx	lr

08002b60 <LL_ADC_IsEnabled>:
 8002b60:	b480      	push	{r7}
 8002b62:	b083      	sub	sp, #12
 8002b64:	af00      	add	r7, sp, #0
 8002b66:	6078      	str	r0, [r7, #4]
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	689b      	ldr	r3, [r3, #8]
 8002b6c:	f003 0301 	and.w	r3, r3, #1
 8002b70:	2b01      	cmp	r3, #1
 8002b72:	d101      	bne.n	8002b78 <LL_ADC_IsEnabled+0x18>
 8002b74:	2301      	movs	r3, #1
 8002b76:	e000      	b.n	8002b7a <LL_ADC_IsEnabled+0x1a>
 8002b78:	2300      	movs	r3, #0
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	370c      	adds	r7, #12
 8002b7e:	46bd      	mov	sp, r7
 8002b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b84:	4770      	bx	lr

08002b86 <LL_ADC_IsDisableOngoing>:
 8002b86:	b480      	push	{r7}
 8002b88:	b083      	sub	sp, #12
 8002b8a:	af00      	add	r7, sp, #0
 8002b8c:	6078      	str	r0, [r7, #4]
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	689b      	ldr	r3, [r3, #8]
 8002b92:	f003 0302 	and.w	r3, r3, #2
 8002b96:	2b02      	cmp	r3, #2
 8002b98:	d101      	bne.n	8002b9e <LL_ADC_IsDisableOngoing+0x18>
 8002b9a:	2301      	movs	r3, #1
 8002b9c:	e000      	b.n	8002ba0 <LL_ADC_IsDisableOngoing+0x1a>
 8002b9e:	2300      	movs	r3, #0
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	370c      	adds	r7, #12
 8002ba4:	46bd      	mov	sp, r7
 8002ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002baa:	4770      	bx	lr

08002bac <LL_ADC_REG_StartConversion>:
 8002bac:	b480      	push	{r7}
 8002bae:	b083      	sub	sp, #12
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	689b      	ldr	r3, [r3, #8]
 8002bb8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002bbc:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002bc0:	f043 0204 	orr.w	r2, r3, #4
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	609a      	str	r2, [r3, #8]
 8002bc8:	bf00      	nop
 8002bca:	370c      	adds	r7, #12
 8002bcc:	46bd      	mov	sp, r7
 8002bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd2:	4770      	bx	lr

08002bd4 <LL_ADC_REG_IsConversionOngoing>:
 8002bd4:	b480      	push	{r7}
 8002bd6:	b083      	sub	sp, #12
 8002bd8:	af00      	add	r7, sp, #0
 8002bda:	6078      	str	r0, [r7, #4]
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	689b      	ldr	r3, [r3, #8]
 8002be0:	f003 0304 	and.w	r3, r3, #4
 8002be4:	2b04      	cmp	r3, #4
 8002be6:	d101      	bne.n	8002bec <LL_ADC_REG_IsConversionOngoing+0x18>
 8002be8:	2301      	movs	r3, #1
 8002bea:	e000      	b.n	8002bee <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002bec:	2300      	movs	r3, #0
 8002bee:	4618      	mov	r0, r3
 8002bf0:	370c      	adds	r7, #12
 8002bf2:	46bd      	mov	sp, r7
 8002bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bf8:	4770      	bx	lr

08002bfa <LL_ADC_INJ_IsConversionOngoing>:
 8002bfa:	b480      	push	{r7}
 8002bfc:	b083      	sub	sp, #12
 8002bfe:	af00      	add	r7, sp, #0
 8002c00:	6078      	str	r0, [r7, #4]
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	689b      	ldr	r3, [r3, #8]
 8002c06:	f003 0308 	and.w	r3, r3, #8
 8002c0a:	2b08      	cmp	r3, #8
 8002c0c:	d101      	bne.n	8002c12 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002c0e:	2301      	movs	r3, #1
 8002c10:	e000      	b.n	8002c14 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8002c12:	2300      	movs	r3, #0
 8002c14:	4618      	mov	r0, r3
 8002c16:	370c      	adds	r7, #12
 8002c18:	46bd      	mov	sp, r7
 8002c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c1e:	4770      	bx	lr

08002c20 <HAL_ADC_Init>:
 8002c20:	b590      	push	{r4, r7, lr}
 8002c22:	b089      	sub	sp, #36	@ 0x24
 8002c24:	af00      	add	r7, sp, #0
 8002c26:	6078      	str	r0, [r7, #4]
 8002c28:	2300      	movs	r3, #0
 8002c2a:	77fb      	strb	r3, [r7, #31]
 8002c2c:	2300      	movs	r3, #0
 8002c2e:	60fb      	str	r3, [r7, #12]
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	d101      	bne.n	8002c3a <HAL_ADC_Init+0x1a>
 8002c36:	2301      	movs	r3, #1
 8002c38:	e167      	b.n	8002f0a <HAL_ADC_Init+0x2ea>
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	695b      	ldr	r3, [r3, #20]
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d109      	bne.n	8002c5c <HAL_ADC_Init+0x3c>
 8002c48:	6878      	ldr	r0, [r7, #4]
 8002c4a:	f7fe fb45 	bl	80012d8 <HAL_ADC_MspInit>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	2200      	movs	r2, #0
 8002c52:	661a      	str	r2, [r3, #96]	@ 0x60
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	2200      	movs	r2, #0
 8002c58:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	4618      	mov	r0, r3
 8002c62:	f7ff ff19 	bl	8002a98 <LL_ADC_IsDeepPowerDownEnabled>
 8002c66:	4603      	mov	r3, r0
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d004      	beq.n	8002c76 <HAL_ADC_Init+0x56>
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	4618      	mov	r0, r3
 8002c72:	f7ff feff 	bl	8002a74 <LL_ADC_DisableDeepPowerDown>
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	681b      	ldr	r3, [r3, #0]
 8002c7a:	4618      	mov	r0, r3
 8002c7c:	f7ff ff34 	bl	8002ae8 <LL_ADC_IsInternalRegulatorEnabled>
 8002c80:	4603      	mov	r3, r0
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	d115      	bne.n	8002cb2 <HAL_ADC_Init+0x92>
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	f7ff ff18 	bl	8002ac0 <LL_ADC_EnableInternalRegulator>
 8002c90:	4ba0      	ldr	r3, [pc, #640]	@ (8002f14 <HAL_ADC_Init+0x2f4>)
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	099b      	lsrs	r3, r3, #6
 8002c96:	4aa0      	ldr	r2, [pc, #640]	@ (8002f18 <HAL_ADC_Init+0x2f8>)
 8002c98:	fba2 2303 	umull	r2, r3, r2, r3
 8002c9c:	099b      	lsrs	r3, r3, #6
 8002c9e:	3301      	adds	r3, #1
 8002ca0:	005b      	lsls	r3, r3, #1
 8002ca2:	60fb      	str	r3, [r7, #12]
 8002ca4:	e002      	b.n	8002cac <HAL_ADC_Init+0x8c>
 8002ca6:	68fb      	ldr	r3, [r7, #12]
 8002ca8:	3b01      	subs	r3, #1
 8002caa:	60fb      	str	r3, [r7, #12]
 8002cac:	68fb      	ldr	r3, [r7, #12]
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	d1f9      	bne.n	8002ca6 <HAL_ADC_Init+0x86>
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	4618      	mov	r0, r3
 8002cb8:	f7ff ff16 	bl	8002ae8 <LL_ADC_IsInternalRegulatorEnabled>
 8002cbc:	4603      	mov	r3, r0
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d10d      	bne.n	8002cde <HAL_ADC_Init+0xbe>
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002cc6:	f043 0210 	orr.w	r2, r3, #16
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002cd2:	f043 0201 	orr.w	r2, r3, #1
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	661a      	str	r2, [r3, #96]	@ 0x60
 8002cda:	2301      	movs	r3, #1
 8002cdc:	77fb      	strb	r3, [r7, #31]
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	4618      	mov	r0, r3
 8002ce4:	f7ff ff76 	bl	8002bd4 <LL_ADC_REG_IsConversionOngoing>
 8002ce8:	6178      	str	r0, [r7, #20]
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002cee:	f003 0310 	and.w	r3, r3, #16
 8002cf2:	2b00      	cmp	r3, #0
 8002cf4:	f040 8100 	bne.w	8002ef8 <HAL_ADC_Init+0x2d8>
 8002cf8:	697b      	ldr	r3, [r7, #20]
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	f040 80fc 	bne.w	8002ef8 <HAL_ADC_Init+0x2d8>
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d04:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8002d08:	f043 0202 	orr.w	r2, r3, #2
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	681b      	ldr	r3, [r3, #0]
 8002d14:	4618      	mov	r0, r3
 8002d16:	f7ff ff23 	bl	8002b60 <LL_ADC_IsEnabled>
 8002d1a:	4603      	mov	r3, r0
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d111      	bne.n	8002d44 <HAL_ADC_Init+0x124>
 8002d20:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 8002d24:	f7ff ff1c 	bl	8002b60 <LL_ADC_IsEnabled>
 8002d28:	4604      	mov	r4, r0
 8002d2a:	487c      	ldr	r0, [pc, #496]	@ (8002f1c <HAL_ADC_Init+0x2fc>)
 8002d2c:	f7ff ff18 	bl	8002b60 <LL_ADC_IsEnabled>
 8002d30:	4603      	mov	r3, r0
 8002d32:	4323      	orrs	r3, r4
 8002d34:	2b00      	cmp	r3, #0
 8002d36:	d105      	bne.n	8002d44 <HAL_ADC_Init+0x124>
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	685b      	ldr	r3, [r3, #4]
 8002d3c:	4619      	mov	r1, r3
 8002d3e:	4878      	ldr	r0, [pc, #480]	@ (8002f20 <HAL_ADC_Init+0x300>)
 8002d40:	f7ff fd08 	bl	8002754 <LL_ADC_SetCommonClock>
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	7f5b      	ldrb	r3, [r3, #29]
 8002d48:	035a      	lsls	r2, r3, #13
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002d4e:	431a      	orrs	r2, r3
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	68db      	ldr	r3, [r3, #12]
 8002d54:	431a      	orrs	r2, r3
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	689b      	ldr	r3, [r3, #8]
 8002d5a:	431a      	orrs	r2, r3
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002d62:	041b      	lsls	r3, r3, #16
 8002d64:	4313      	orrs	r3, r2
 8002d66:	61bb      	str	r3, [r7, #24]
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002d6e:	2b01      	cmp	r3, #1
 8002d70:	d106      	bne.n	8002d80 <HAL_ADC_Init+0x160>
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d76:	3b01      	subs	r3, #1
 8002d78:	045b      	lsls	r3, r3, #17
 8002d7a:	69ba      	ldr	r2, [r7, #24]
 8002d7c:	4313      	orrs	r3, r2
 8002d7e:	61bb      	str	r3, [r7, #24]
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d009      	beq.n	8002d9c <HAL_ADC_Init+0x17c>
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d8c:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d94:	4313      	orrs	r3, r2
 8002d96:	69ba      	ldr	r2, [r7, #24]
 8002d98:	4313      	orrs	r3, r2
 8002d9a:	61bb      	str	r3, [r7, #24]
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	68da      	ldr	r2, [r3, #12]
 8002da2:	4b60      	ldr	r3, [pc, #384]	@ (8002f24 <HAL_ADC_Init+0x304>)
 8002da4:	4013      	ands	r3, r2
 8002da6:	687a      	ldr	r2, [r7, #4]
 8002da8:	6812      	ldr	r2, [r2, #0]
 8002daa:	69b9      	ldr	r1, [r7, #24]
 8002dac:	430b      	orrs	r3, r1
 8002dae:	60d3      	str	r3, [r2, #12]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	691b      	ldr	r3, [r3, #16]
 8002db6:	f023 6140 	bic.w	r1, r3, #201326592	@ 0xc000000
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	681b      	ldr	r3, [r3, #0]
 8002dc2:	430a      	orrs	r2, r1
 8002dc4:	611a      	str	r2, [r3, #16]
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	4618      	mov	r0, r3
 8002dcc:	f7ff ff15 	bl	8002bfa <LL_ADC_INJ_IsConversionOngoing>
 8002dd0:	6138      	str	r0, [r7, #16]
 8002dd2:	697b      	ldr	r3, [r7, #20]
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	d16d      	bne.n	8002eb4 <HAL_ADC_Init+0x294>
 8002dd8:	693b      	ldr	r3, [r7, #16]
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d16a      	bne.n	8002eb4 <HAL_ADC_Init+0x294>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	7f1b      	ldrb	r3, [r3, #28]
 8002de2:	039a      	lsls	r2, r3, #14
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8002dea:	005b      	lsls	r3, r3, #1
 8002dec:	4313      	orrs	r3, r2
 8002dee:	61bb      	str	r3, [r7, #24]
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	68db      	ldr	r3, [r3, #12]
 8002df6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8002dfa:	f023 0302 	bic.w	r3, r3, #2
 8002dfe:	687a      	ldr	r2, [r7, #4]
 8002e00:	6812      	ldr	r2, [r2, #0]
 8002e02:	69b9      	ldr	r1, [r7, #24]
 8002e04:	430b      	orrs	r3, r1
 8002e06:	60d3      	str	r3, [r2, #12]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	691b      	ldr	r3, [r3, #16]
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d017      	beq.n	8002e40 <HAL_ADC_Init+0x220>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	691a      	ldr	r2, [r3, #16]
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8002e1e:	611a      	str	r2, [r3, #16]
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8002e28:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8002e2c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002e30:	687a      	ldr	r2, [r7, #4]
 8002e32:	6911      	ldr	r1, [r2, #16]
 8002e34:	687a      	ldr	r2, [r7, #4]
 8002e36:	6812      	ldr	r2, [r2, #0]
 8002e38:	430b      	orrs	r3, r1
 8002e3a:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8002e3e:	e013      	b.n	8002e68 <HAL_ADC_Init+0x248>
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	691a      	ldr	r2, [r3, #16]
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8002e4e:	611a      	str	r2, [r3, #16]
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8002e58:	687a      	ldr	r2, [r7, #4]
 8002e5a:	6812      	ldr	r2, [r2, #0]
 8002e5c:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8002e60:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002e64:	f8c2 30c0 	str.w	r3, [r2, #192]	@ 0xc0
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002e6e:	2b01      	cmp	r3, #1
 8002e70:	d118      	bne.n	8002ea4 <HAL_ADC_Init+0x284>
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	691b      	ldr	r3, [r3, #16]
 8002e78:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8002e7c:	f023 0304 	bic.w	r3, r3, #4
 8002e80:	687a      	ldr	r2, [r7, #4]
 8002e82:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 8002e84:	687a      	ldr	r2, [r7, #4]
 8002e86:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8002e88:	4311      	orrs	r1, r2
 8002e8a:	687a      	ldr	r2, [r7, #4]
 8002e8c:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8002e8e:	4311      	orrs	r1, r2
 8002e90:	687a      	ldr	r2, [r7, #4]
 8002e92:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8002e94:	430a      	orrs	r2, r1
 8002e96:	431a      	orrs	r2, r3
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f042 0201 	orr.w	r2, r2, #1
 8002ea0:	611a      	str	r2, [r3, #16]
 8002ea2:	e007      	b.n	8002eb4 <HAL_ADC_Init+0x294>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	691a      	ldr	r2, [r3, #16]
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	f022 0201 	bic.w	r2, r2, #1
 8002eb2:	611a      	str	r2, [r3, #16]
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	695b      	ldr	r3, [r3, #20]
 8002eb8:	2b01      	cmp	r3, #1
 8002eba:	d10c      	bne.n	8002ed6 <HAL_ADC_Init+0x2b6>
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ec2:	f023 010f 	bic.w	r1, r3, #15
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	6a1b      	ldr	r3, [r3, #32]
 8002eca:	1e5a      	subs	r2, r3, #1
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	430a      	orrs	r2, r1
 8002ed2:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ed4:	e007      	b.n	8002ee6 <HAL_ADC_Init+0x2c6>
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	f022 020f 	bic.w	r2, r2, #15
 8002ee4:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002eea:	f023 0303 	bic.w	r3, r3, #3
 8002eee:	f043 0201 	orr.w	r2, r3, #1
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002ef6:	e007      	b.n	8002f08 <HAL_ADC_Init+0x2e8>
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002efc:	f043 0210 	orr.w	r2, r3, #16
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002f04:	2301      	movs	r3, #1
 8002f06:	77fb      	strb	r3, [r7, #31]
 8002f08:	7ffb      	ldrb	r3, [r7, #31]
 8002f0a:	4618      	mov	r0, r3
 8002f0c:	3724      	adds	r7, #36	@ 0x24
 8002f0e:	46bd      	mov	sp, r7
 8002f10:	bd90      	pop	{r4, r7, pc}
 8002f12:	bf00      	nop
 8002f14:	20000000 	.word	0x20000000
 8002f18:	053e2d63 	.word	0x053e2d63
 8002f1c:	50000100 	.word	0x50000100
 8002f20:	50000300 	.word	0x50000300
 8002f24:	fff04007 	.word	0xfff04007

08002f28 <HAL_ADC_Start>:
 8002f28:	b580      	push	{r7, lr}
 8002f2a:	b086      	sub	sp, #24
 8002f2c:	af00      	add	r7, sp, #0
 8002f2e:	6078      	str	r0, [r7, #4]
 8002f30:	4859      	ldr	r0, [pc, #356]	@ (8003098 <HAL_ADC_Start+0x170>)
 8002f32:	f7ff fd83 	bl	8002a3c <LL_ADC_GetMultimode>
 8002f36:	6138      	str	r0, [r7, #16]
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	4618      	mov	r0, r3
 8002f3e:	f7ff fe49 	bl	8002bd4 <LL_ADC_REG_IsConversionOngoing>
 8002f42:	4603      	mov	r3, r0
 8002f44:	2b00      	cmp	r3, #0
 8002f46:	f040 809f 	bne.w	8003088 <HAL_ADC_Start+0x160>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8002f50:	2b01      	cmp	r3, #1
 8002f52:	d101      	bne.n	8002f58 <HAL_ADC_Start+0x30>
 8002f54:	2302      	movs	r3, #2
 8002f56:	e09a      	b.n	800308e <HAL_ADC_Start+0x166>
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	2201      	movs	r2, #1
 8002f5c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002f60:	6878      	ldr	r0, [r7, #4]
 8002f62:	f000 fed3 	bl	8003d0c <ADC_Enable>
 8002f66:	4603      	mov	r3, r0
 8002f68:	75fb      	strb	r3, [r7, #23]
 8002f6a:	7dfb      	ldrb	r3, [r7, #23]
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	f040 8086 	bne.w	800307e <HAL_ADC_Start+0x156>
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002f76:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8002f7a:	f023 0301 	bic.w	r3, r3, #1
 8002f7e:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	4a44      	ldr	r2, [pc, #272]	@ (800309c <HAL_ADC_Start+0x174>)
 8002f8c:	4293      	cmp	r3, r2
 8002f8e:	d002      	beq.n	8002f96 <HAL_ADC_Start+0x6e>
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	e001      	b.n	8002f9a <HAL_ADC_Start+0x72>
 8002f96:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002f9a:	687a      	ldr	r2, [r7, #4]
 8002f9c:	6812      	ldr	r2, [r2, #0]
 8002f9e:	4293      	cmp	r3, r2
 8002fa0:	d002      	beq.n	8002fa8 <HAL_ADC_Start+0x80>
 8002fa2:	693b      	ldr	r3, [r7, #16]
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d105      	bne.n	8002fb4 <HAL_ADC_Start+0x8c>
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002fac:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002fb8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002fbc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002fc0:	d106      	bne.n	8002fd0 <HAL_ADC_Start+0xa8>
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002fc6:	f023 0206 	bic.w	r2, r3, #6
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	661a      	str	r2, [r3, #96]	@ 0x60
 8002fce:	e002      	b.n	8002fd6 <HAL_ADC_Start+0xae>
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	2200      	movs	r2, #0
 8002fd4:	661a      	str	r2, [r3, #96]	@ 0x60
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	221c      	movs	r2, #28
 8002fdc:	601a      	str	r2, [r3, #0]
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	2200      	movs	r2, #0
 8002fe2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	4a2c      	ldr	r2, [pc, #176]	@ (800309c <HAL_ADC_Start+0x174>)
 8002fec:	4293      	cmp	r3, r2
 8002fee:	d002      	beq.n	8002ff6 <HAL_ADC_Start+0xce>
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	e001      	b.n	8002ffa <HAL_ADC_Start+0xd2>
 8002ff6:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8002ffa:	687a      	ldr	r2, [r7, #4]
 8002ffc:	6812      	ldr	r2, [r2, #0]
 8002ffe:	4293      	cmp	r3, r2
 8003000:	d008      	beq.n	8003014 <HAL_ADC_Start+0xec>
 8003002:	693b      	ldr	r3, [r7, #16]
 8003004:	2b00      	cmp	r3, #0
 8003006:	d005      	beq.n	8003014 <HAL_ADC_Start+0xec>
 8003008:	693b      	ldr	r3, [r7, #16]
 800300a:	2b05      	cmp	r3, #5
 800300c:	d002      	beq.n	8003014 <HAL_ADC_Start+0xec>
 800300e:	693b      	ldr	r3, [r7, #16]
 8003010:	2b09      	cmp	r3, #9
 8003012:	d114      	bne.n	800303e <HAL_ADC_Start+0x116>
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	68db      	ldr	r3, [r3, #12]
 800301a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800301e:	2b00      	cmp	r3, #0
 8003020:	d007      	beq.n	8003032 <HAL_ADC_Start+0x10a>
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003026:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800302a:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	4618      	mov	r0, r3
 8003038:	f7ff fdb8 	bl	8002bac <LL_ADC_REG_StartConversion>
 800303c:	e026      	b.n	800308c <HAL_ADC_Start+0x164>
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003042:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	65da      	str	r2, [r3, #92]	@ 0x5c
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	681b      	ldr	r3, [r3, #0]
 800304e:	4a13      	ldr	r2, [pc, #76]	@ (800309c <HAL_ADC_Start+0x174>)
 8003050:	4293      	cmp	r3, r2
 8003052:	d002      	beq.n	800305a <HAL_ADC_Start+0x132>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	e001      	b.n	800305e <HAL_ADC_Start+0x136>
 800305a:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 800305e:	60fb      	str	r3, [r7, #12]
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	68db      	ldr	r3, [r3, #12]
 8003064:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003068:	2b00      	cmp	r3, #0
 800306a:	d00f      	beq.n	800308c <HAL_ADC_Start+0x164>
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003070:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003074:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800307c:	e006      	b.n	800308c <HAL_ADC_Start+0x164>
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	2200      	movs	r2, #0
 8003082:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003086:	e001      	b.n	800308c <HAL_ADC_Start+0x164>
 8003088:	2302      	movs	r3, #2
 800308a:	75fb      	strb	r3, [r7, #23]
 800308c:	7dfb      	ldrb	r3, [r7, #23]
 800308e:	4618      	mov	r0, r3
 8003090:	3718      	adds	r7, #24
 8003092:	46bd      	mov	sp, r7
 8003094:	bd80      	pop	{r7, pc}
 8003096:	bf00      	nop
 8003098:	50000300 	.word	0x50000300
 800309c:	50000100 	.word	0x50000100

080030a0 <HAL_ADC_GetValue>:
 80030a0:	b480      	push	{r7}
 80030a2:	b083      	sub	sp, #12
 80030a4:	af00      	add	r7, sp, #0
 80030a6:	6078      	str	r0, [r7, #4]
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030ae:	4618      	mov	r0, r3
 80030b0:	370c      	adds	r7, #12
 80030b2:	46bd      	mov	sp, r7
 80030b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030b8:	4770      	bx	lr
	...

080030bc <HAL_ADC_IRQHandler>:
 80030bc:	b580      	push	{r7, lr}
 80030be:	b08a      	sub	sp, #40	@ 0x28
 80030c0:	af00      	add	r7, sp, #0
 80030c2:	6078      	str	r0, [r7, #4]
 80030c4:	2300      	movs	r3, #0
 80030c6:	627b      	str	r3, [r7, #36]	@ 0x24
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	61fb      	str	r3, [r7, #28]
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	685b      	ldr	r3, [r3, #4]
 80030d6:	61bb      	str	r3, [r7, #24]
 80030d8:	4883      	ldr	r0, [pc, #524]	@ (80032e8 <HAL_ADC_IRQHandler+0x22c>)
 80030da:	f7ff fcaf 	bl	8002a3c <LL_ADC_GetMultimode>
 80030de:	6178      	str	r0, [r7, #20]
 80030e0:	69fb      	ldr	r3, [r7, #28]
 80030e2:	f003 0302 	and.w	r3, r3, #2
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d017      	beq.n	800311a <HAL_ADC_IRQHandler+0x5e>
 80030ea:	69bb      	ldr	r3, [r7, #24]
 80030ec:	f003 0302 	and.w	r3, r3, #2
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d012      	beq.n	800311a <HAL_ADC_IRQHandler+0x5e>
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80030f8:	f003 0310 	and.w	r3, r3, #16
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	d105      	bne.n	800310c <HAL_ADC_IRQHandler+0x50>
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003104:	f443 6200 	orr.w	r2, r3, #2048	@ 0x800
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800310c:	6878      	ldr	r0, [r7, #4]
 800310e:	f001 fa9d 	bl	800464c <HAL_ADCEx_EndOfSamplingCallback>
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	2202      	movs	r2, #2
 8003118:	601a      	str	r2, [r3, #0]
 800311a:	69fb      	ldr	r3, [r7, #28]
 800311c:	f003 0304 	and.w	r3, r3, #4
 8003120:	2b00      	cmp	r3, #0
 8003122:	d004      	beq.n	800312e <HAL_ADC_IRQHandler+0x72>
 8003124:	69bb      	ldr	r3, [r7, #24]
 8003126:	f003 0304 	and.w	r3, r3, #4
 800312a:	2b00      	cmp	r3, #0
 800312c:	d10a      	bne.n	8003144 <HAL_ADC_IRQHandler+0x88>
 800312e:	69fb      	ldr	r3, [r7, #28]
 8003130:	f003 0308 	and.w	r3, r3, #8
 8003134:	2b00      	cmp	r3, #0
 8003136:	f000 8085 	beq.w	8003244 <HAL_ADC_IRQHandler+0x188>
 800313a:	69bb      	ldr	r3, [r7, #24]
 800313c:	f003 0308 	and.w	r3, r3, #8
 8003140:	2b00      	cmp	r3, #0
 8003142:	d07f      	beq.n	8003244 <HAL_ADC_IRQHandler+0x188>
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003148:	f003 0310 	and.w	r3, r3, #16
 800314c:	2b00      	cmp	r3, #0
 800314e:	d105      	bne.n	800315c <HAL_ADC_IRQHandler+0xa0>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003154:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	4618      	mov	r0, r3
 8003162:	f7ff fbc9 	bl	80028f8 <LL_ADC_REG_IsTriggerSourceSWStart>
 8003166:	4603      	mov	r3, r0
 8003168:	2b00      	cmp	r3, #0
 800316a:	d064      	beq.n	8003236 <HAL_ADC_IRQHandler+0x17a>
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	4a5e      	ldr	r2, [pc, #376]	@ (80032ec <HAL_ADC_IRQHandler+0x230>)
 8003172:	4293      	cmp	r3, r2
 8003174:	d002      	beq.n	800317c <HAL_ADC_IRQHandler+0xc0>
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	e001      	b.n	8003180 <HAL_ADC_IRQHandler+0xc4>
 800317c:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8003180:	687a      	ldr	r2, [r7, #4]
 8003182:	6812      	ldr	r2, [r2, #0]
 8003184:	4293      	cmp	r3, r2
 8003186:	d008      	beq.n	800319a <HAL_ADC_IRQHandler+0xde>
 8003188:	697b      	ldr	r3, [r7, #20]
 800318a:	2b00      	cmp	r3, #0
 800318c:	d005      	beq.n	800319a <HAL_ADC_IRQHandler+0xde>
 800318e:	697b      	ldr	r3, [r7, #20]
 8003190:	2b05      	cmp	r3, #5
 8003192:	d002      	beq.n	800319a <HAL_ADC_IRQHandler+0xde>
 8003194:	697b      	ldr	r3, [r7, #20]
 8003196:	2b09      	cmp	r3, #9
 8003198:	d104      	bne.n	80031a4 <HAL_ADC_IRQHandler+0xe8>
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	68db      	ldr	r3, [r3, #12]
 80031a0:	623b      	str	r3, [r7, #32]
 80031a2:	e00d      	b.n	80031c0 <HAL_ADC_IRQHandler+0x104>
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	4a50      	ldr	r2, [pc, #320]	@ (80032ec <HAL_ADC_IRQHandler+0x230>)
 80031aa:	4293      	cmp	r3, r2
 80031ac:	d002      	beq.n	80031b4 <HAL_ADC_IRQHandler+0xf8>
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	e001      	b.n	80031b8 <HAL_ADC_IRQHandler+0xfc>
 80031b4:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80031b8:	613b      	str	r3, [r7, #16]
 80031ba:	693b      	ldr	r3, [r7, #16]
 80031bc:	68db      	ldr	r3, [r3, #12]
 80031be:	623b      	str	r3, [r7, #32]
 80031c0:	6a3b      	ldr	r3, [r7, #32]
 80031c2:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	d135      	bne.n	8003236 <HAL_ADC_IRQHandler+0x17a>
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	f003 0308 	and.w	r3, r3, #8
 80031d4:	2b08      	cmp	r3, #8
 80031d6:	d12e      	bne.n	8003236 <HAL_ADC_IRQHandler+0x17a>
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	4618      	mov	r0, r3
 80031de:	f7ff fcf9 	bl	8002bd4 <LL_ADC_REG_IsConversionOngoing>
 80031e2:	4603      	mov	r3, r0
 80031e4:	2b00      	cmp	r3, #0
 80031e6:	d11a      	bne.n	800321e <HAL_ADC_IRQHandler+0x162>
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	685a      	ldr	r2, [r3, #4]
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	f022 020c 	bic.w	r2, r2, #12
 80031f6:	605a      	str	r2, [r3, #4]
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80031fc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003208:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800320c:	2b00      	cmp	r3, #0
 800320e:	d112      	bne.n	8003236 <HAL_ADC_IRQHandler+0x17a>
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003214:	f043 0201 	orr.w	r2, r3, #1
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800321c:	e00b      	b.n	8003236 <HAL_ADC_IRQHandler+0x17a>
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003222:	f043 0210 	orr.w	r2, r3, #16
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	65da      	str	r2, [r3, #92]	@ 0x5c
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800322e:	f043 0201 	orr.w	r2, r3, #1
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	661a      	str	r2, [r3, #96]	@ 0x60
 8003236:	6878      	ldr	r0, [r7, #4]
 8003238:	f000 f95a 	bl	80034f0 <HAL_ADC_ConvCpltCallback>
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	220c      	movs	r2, #12
 8003242:	601a      	str	r2, [r3, #0]
 8003244:	69fb      	ldr	r3, [r7, #28]
 8003246:	f003 0320 	and.w	r3, r3, #32
 800324a:	2b00      	cmp	r3, #0
 800324c:	d004      	beq.n	8003258 <HAL_ADC_IRQHandler+0x19c>
 800324e:	69bb      	ldr	r3, [r7, #24]
 8003250:	f003 0320 	and.w	r3, r3, #32
 8003254:	2b00      	cmp	r3, #0
 8003256:	d10b      	bne.n	8003270 <HAL_ADC_IRQHandler+0x1b4>
 8003258:	69fb      	ldr	r3, [r7, #28]
 800325a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800325e:	2b00      	cmp	r3, #0
 8003260:	f000 809e 	beq.w	80033a0 <HAL_ADC_IRQHandler+0x2e4>
 8003264:	69bb      	ldr	r3, [r7, #24]
 8003266:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800326a:	2b00      	cmp	r3, #0
 800326c:	f000 8098 	beq.w	80033a0 <HAL_ADC_IRQHandler+0x2e4>
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003274:	f003 0310 	and.w	r3, r3, #16
 8003278:	2b00      	cmp	r3, #0
 800327a:	d105      	bne.n	8003288 <HAL_ADC_IRQHandler+0x1cc>
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003280:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	4618      	mov	r0, r3
 800328e:	f7ff fb72 	bl	8002976 <LL_ADC_INJ_IsTriggerSourceSWStart>
 8003292:	60f8      	str	r0, [r7, #12]
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	4618      	mov	r0, r3
 800329a:	f7ff fb2d 	bl	80028f8 <LL_ADC_REG_IsTriggerSourceSWStart>
 800329e:	60b8      	str	r0, [r7, #8]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	4a11      	ldr	r2, [pc, #68]	@ (80032ec <HAL_ADC_IRQHandler+0x230>)
 80032a6:	4293      	cmp	r3, r2
 80032a8:	d002      	beq.n	80032b0 <HAL_ADC_IRQHandler+0x1f4>
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	e001      	b.n	80032b4 <HAL_ADC_IRQHandler+0x1f8>
 80032b0:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80032b4:	687a      	ldr	r2, [r7, #4]
 80032b6:	6812      	ldr	r2, [r2, #0]
 80032b8:	4293      	cmp	r3, r2
 80032ba:	d008      	beq.n	80032ce <HAL_ADC_IRQHandler+0x212>
 80032bc:	697b      	ldr	r3, [r7, #20]
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d005      	beq.n	80032ce <HAL_ADC_IRQHandler+0x212>
 80032c2:	697b      	ldr	r3, [r7, #20]
 80032c4:	2b06      	cmp	r3, #6
 80032c6:	d002      	beq.n	80032ce <HAL_ADC_IRQHandler+0x212>
 80032c8:	697b      	ldr	r3, [r7, #20]
 80032ca:	2b07      	cmp	r3, #7
 80032cc:	d104      	bne.n	80032d8 <HAL_ADC_IRQHandler+0x21c>
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	68db      	ldr	r3, [r3, #12]
 80032d4:	623b      	str	r3, [r7, #32]
 80032d6:	e011      	b.n	80032fc <HAL_ADC_IRQHandler+0x240>
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	4a03      	ldr	r2, [pc, #12]	@ (80032ec <HAL_ADC_IRQHandler+0x230>)
 80032de:	4293      	cmp	r3, r2
 80032e0:	d006      	beq.n	80032f0 <HAL_ADC_IRQHandler+0x234>
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	e005      	b.n	80032f4 <HAL_ADC_IRQHandler+0x238>
 80032e8:	50000300 	.word	0x50000300
 80032ec:	50000100 	.word	0x50000100
 80032f0:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80032f4:	613b      	str	r3, [r7, #16]
 80032f6:	693b      	ldr	r3, [r7, #16]
 80032f8:	68db      	ldr	r3, [r3, #12]
 80032fa:	623b      	str	r3, [r7, #32]
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	2b00      	cmp	r3, #0
 8003300:	d047      	beq.n	8003392 <HAL_ADC_IRQHandler+0x2d6>
 8003302:	6a3b      	ldr	r3, [r7, #32]
 8003304:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003308:	2b00      	cmp	r3, #0
 800330a:	d007      	beq.n	800331c <HAL_ADC_IRQHandler+0x260>
 800330c:	68bb      	ldr	r3, [r7, #8]
 800330e:	2b00      	cmp	r3, #0
 8003310:	d03f      	beq.n	8003392 <HAL_ADC_IRQHandler+0x2d6>
 8003312:	6a3b      	ldr	r3, [r7, #32]
 8003314:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003318:	2b00      	cmp	r3, #0
 800331a:	d13a      	bne.n	8003392 <HAL_ADC_IRQHandler+0x2d6>
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003326:	2b40      	cmp	r3, #64	@ 0x40
 8003328:	d133      	bne.n	8003392 <HAL_ADC_IRQHandler+0x2d6>
 800332a:	6a3b      	ldr	r3, [r7, #32]
 800332c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003330:	2b00      	cmp	r3, #0
 8003332:	d12e      	bne.n	8003392 <HAL_ADC_IRQHandler+0x2d6>
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	4618      	mov	r0, r3
 800333a:	f7ff fc5e 	bl	8002bfa <LL_ADC_INJ_IsConversionOngoing>
 800333e:	4603      	mov	r3, r0
 8003340:	2b00      	cmp	r3, #0
 8003342:	d11a      	bne.n	800337a <HAL_ADC_IRQHandler+0x2be>
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	685a      	ldr	r2, [r3, #4]
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8003352:	605a      	str	r2, [r3, #4]
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003358:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003364:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003368:	2b00      	cmp	r3, #0
 800336a:	d112      	bne.n	8003392 <HAL_ADC_IRQHandler+0x2d6>
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003370:	f043 0201 	orr.w	r2, r3, #1
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003378:	e00b      	b.n	8003392 <HAL_ADC_IRQHandler+0x2d6>
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800337e:	f043 0210 	orr.w	r2, r3, #16
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800338a:	f043 0201 	orr.w	r2, r3, #1
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	661a      	str	r2, [r3, #96]	@ 0x60
 8003392:	6878      	ldr	r0, [r7, #4]
<<<<<<< HEAD
 8003394:	f008 fdc8 	bl	800bf28 <HAL_ADCEx_InjectedConvCpltCallback>
=======
 8003394:	f009 ff72 	bl	800d27c <HAL_ADCEx_InjectedConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear injected group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	2260      	movs	r2, #96	@ 0x60
 800339e:	601a      	str	r2, [r3, #0]
 80033a0:	69fb      	ldr	r3, [r7, #28]
 80033a2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80033a6:	2b00      	cmp	r3, #0
 80033a8:	d011      	beq.n	80033ce <HAL_ADC_IRQHandler+0x312>
 80033aa:	69bb      	ldr	r3, [r7, #24]
 80033ac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80033b0:	2b00      	cmp	r3, #0
 80033b2:	d00c      	beq.n	80033ce <HAL_ADC_IRQHandler+0x312>
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80033b8:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	65da      	str	r2, [r3, #92]	@ 0x5c
 80033c0:	6878      	ldr	r0, [r7, #4]
 80033c2:	f000 f89f 	bl	8003504 <HAL_ADC_LevelOutOfWindowCallback>
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	2280      	movs	r2, #128	@ 0x80
 80033cc:	601a      	str	r2, [r3, #0]
 80033ce:	69fb      	ldr	r3, [r7, #28]
 80033d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80033d4:	2b00      	cmp	r3, #0
 80033d6:	d012      	beq.n	80033fe <HAL_ADC_IRQHandler+0x342>
 80033d8:	69bb      	ldr	r3, [r7, #24]
 80033da:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80033de:	2b00      	cmp	r3, #0
 80033e0:	d00d      	beq.n	80033fe <HAL_ADC_IRQHandler+0x342>
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80033e6:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	65da      	str	r2, [r3, #92]	@ 0x5c
 80033ee:	6878      	ldr	r0, [r7, #4]
 80033f0:	f001 f918 	bl	8004624 <HAL_ADCEx_LevelOutOfWindow2Callback>
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80033fc:	601a      	str	r2, [r3, #0]
 80033fe:	69fb      	ldr	r3, [r7, #28]
 8003400:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003404:	2b00      	cmp	r3, #0
 8003406:	d012      	beq.n	800342e <HAL_ADC_IRQHandler+0x372>
 8003408:	69bb      	ldr	r3, [r7, #24]
 800340a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800340e:	2b00      	cmp	r3, #0
 8003410:	d00d      	beq.n	800342e <HAL_ADC_IRQHandler+0x372>
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003416:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800341e:	6878      	ldr	r0, [r7, #4]
 8003420:	f001 f90a 	bl	8004638 <HAL_ADCEx_LevelOutOfWindow3Callback>
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800342c:	601a      	str	r2, [r3, #0]
 800342e:	69fb      	ldr	r3, [r7, #28]
 8003430:	f003 0310 	and.w	r3, r3, #16
 8003434:	2b00      	cmp	r3, #0
 8003436:	d036      	beq.n	80034a6 <HAL_ADC_IRQHandler+0x3ea>
 8003438:	69bb      	ldr	r3, [r7, #24]
 800343a:	f003 0310 	and.w	r3, r3, #16
 800343e:	2b00      	cmp	r3, #0
 8003440:	d031      	beq.n	80034a6 <HAL_ADC_IRQHandler+0x3ea>
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003446:	2b00      	cmp	r3, #0
 8003448:	d102      	bne.n	8003450 <HAL_ADC_IRQHandler+0x394>
 800344a:	2301      	movs	r3, #1
 800344c:	627b      	str	r3, [r7, #36]	@ 0x24
 800344e:	e014      	b.n	800347a <HAL_ADC_IRQHandler+0x3be>
 8003450:	697b      	ldr	r3, [r7, #20]
 8003452:	2b00      	cmp	r3, #0
 8003454:	d008      	beq.n	8003468 <HAL_ADC_IRQHandler+0x3ac>
 8003456:	4825      	ldr	r0, [pc, #148]	@ (80034ec <HAL_ADC_IRQHandler+0x430>)
 8003458:	f7ff fafe 	bl	8002a58 <LL_ADC_GetMultiDMATransfer>
 800345c:	4603      	mov	r3, r0
 800345e:	2b00      	cmp	r3, #0
 8003460:	d00b      	beq.n	800347a <HAL_ADC_IRQHandler+0x3be>
 8003462:	2301      	movs	r3, #1
 8003464:	627b      	str	r3, [r7, #36]	@ 0x24
 8003466:	e008      	b.n	800347a <HAL_ADC_IRQHandler+0x3be>
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	68db      	ldr	r3, [r3, #12]
 800346e:	f003 0301 	and.w	r3, r3, #1
 8003472:	2b00      	cmp	r3, #0
 8003474:	d001      	beq.n	800347a <HAL_ADC_IRQHandler+0x3be>
 8003476:	2301      	movs	r3, #1
 8003478:	627b      	str	r3, [r7, #36]	@ 0x24
 800347a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800347c:	2b01      	cmp	r3, #1
 800347e:	d10e      	bne.n	800349e <HAL_ADC_IRQHandler+0x3e2>
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003484:	f443 6280 	orr.w	r2, r3, #1024	@ 0x400
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003490:	f043 0202 	orr.w	r2, r3, #2
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	661a      	str	r2, [r3, #96]	@ 0x60
 8003498:	6878      	ldr	r0, [r7, #4]
 800349a:	f000 f83d 	bl	8003518 <HAL_ADC_ErrorCallback>
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	2210      	movs	r2, #16
 80034a4:	601a      	str	r2, [r3, #0]
 80034a6:	69fb      	ldr	r3, [r7, #28]
 80034a8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80034ac:	2b00      	cmp	r3, #0
 80034ae:	d018      	beq.n	80034e2 <HAL_ADC_IRQHandler+0x426>
 80034b0:	69bb      	ldr	r3, [r7, #24]
 80034b2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d013      	beq.n	80034e2 <HAL_ADC_IRQHandler+0x426>
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80034be:	f443 4280 	orr.w	r2, r3, #16384	@ 0x4000
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80034ca:	f043 0208 	orr.w	r2, r3, #8
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	661a      	str	r2, [r3, #96]	@ 0x60
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80034da:	601a      	str	r2, [r3, #0]
 80034dc:	6878      	ldr	r0, [r7, #4]
 80034de:	f001 f897 	bl	8004610 <HAL_ADCEx_InjectedQueueOverflowCallback>
 80034e2:	bf00      	nop
 80034e4:	3728      	adds	r7, #40	@ 0x28
 80034e6:	46bd      	mov	sp, r7
 80034e8:	bd80      	pop	{r7, pc}
 80034ea:	bf00      	nop
 80034ec:	50000300 	.word	0x50000300

080034f0 <HAL_ADC_ConvCpltCallback>:
 80034f0:	b480      	push	{r7}
 80034f2:	b083      	sub	sp, #12
 80034f4:	af00      	add	r7, sp, #0
 80034f6:	6078      	str	r0, [r7, #4]
 80034f8:	bf00      	nop
 80034fa:	370c      	adds	r7, #12
 80034fc:	46bd      	mov	sp, r7
 80034fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003502:	4770      	bx	lr

08003504 <HAL_ADC_LevelOutOfWindowCallback>:
 8003504:	b480      	push	{r7}
 8003506:	b083      	sub	sp, #12
 8003508:	af00      	add	r7, sp, #0
 800350a:	6078      	str	r0, [r7, #4]
 800350c:	bf00      	nop
 800350e:	370c      	adds	r7, #12
 8003510:	46bd      	mov	sp, r7
 8003512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003516:	4770      	bx	lr

08003518 <HAL_ADC_ErrorCallback>:
 8003518:	b480      	push	{r7}
 800351a:	b083      	sub	sp, #12
 800351c:	af00      	add	r7, sp, #0
 800351e:	6078      	str	r0, [r7, #4]
 8003520:	bf00      	nop
 8003522:	370c      	adds	r7, #12
 8003524:	46bd      	mov	sp, r7
 8003526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800352a:	4770      	bx	lr

0800352c <HAL_ADC_ConfigChannel>:
 800352c:	b580      	push	{r7, lr}
 800352e:	b0b6      	sub	sp, #216	@ 0xd8
 8003530:	af00      	add	r7, sp, #0
 8003532:	6078      	str	r0, [r7, #4]
 8003534:	6039      	str	r1, [r7, #0]
 8003536:	2300      	movs	r3, #0
 8003538:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 800353c:	2300      	movs	r3, #0
 800353e:	60fb      	str	r3, [r7, #12]
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8003546:	2b01      	cmp	r3, #1
 8003548:	d101      	bne.n	800354e <HAL_ADC_ConfigChannel+0x22>
 800354a:	2302      	movs	r3, #2
 800354c:	e3c8      	b.n	8003ce0 <HAL_ADC_ConfigChannel+0x7b4>
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	2201      	movs	r2, #1
 8003552:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	4618      	mov	r0, r3
 800355c:	f7ff fb3a 	bl	8002bd4 <LL_ADC_REG_IsConversionOngoing>
 8003560:	4603      	mov	r3, r0
 8003562:	2b00      	cmp	r3, #0
 8003564:	f040 83ad 	bne.w	8003cc2 <HAL_ADC_ConfigChannel+0x796>
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	6818      	ldr	r0, [r3, #0]
 800356c:	683b      	ldr	r3, [r7, #0]
 800356e:	6859      	ldr	r1, [r3, #4]
 8003570:	683b      	ldr	r3, [r7, #0]
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	461a      	mov	r2, r3
 8003576:	f7ff f9d2 	bl	800291e <LL_ADC_REG_SetSequencerRanks>
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	4618      	mov	r0, r3
 8003580:	f7ff fb28 	bl	8002bd4 <LL_ADC_REG_IsConversionOngoing>
 8003584:	f8c7 00d0 	str.w	r0, [r7, #208]	@ 0xd0
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	4618      	mov	r0, r3
 800358e:	f7ff fb34 	bl	8002bfa <LL_ADC_INJ_IsConversionOngoing>
 8003592:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8003596:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800359a:	2b00      	cmp	r3, #0
 800359c:	f040 81d9 	bne.w	8003952 <HAL_ADC_ConfigChannel+0x426>
 80035a0:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	f040 81d4 	bne.w	8003952 <HAL_ADC_ConfigChannel+0x426>
 80035aa:	683b      	ldr	r3, [r7, #0]
 80035ac:	689b      	ldr	r3, [r3, #8]
 80035ae:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80035b2:	d10f      	bne.n	80035d4 <HAL_ADC_ConfigChannel+0xa8>
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	6818      	ldr	r0, [r3, #0]
 80035b8:	683b      	ldr	r3, [r7, #0]
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	2200      	movs	r2, #0
 80035be:	4619      	mov	r1, r3
 80035c0:	f7ff f9ec 	bl	800299c <LL_ADC_SetChannelSamplingTime>
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 80035cc:	4618      	mov	r0, r3
 80035ce:	f7ff f980 	bl	80028d2 <LL_ADC_SetSamplingTimeCommonConfig>
 80035d2:	e00e      	b.n	80035f2 <HAL_ADC_ConfigChannel+0xc6>
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	6818      	ldr	r0, [r3, #0]
 80035d8:	683b      	ldr	r3, [r7, #0]
 80035da:	6819      	ldr	r1, [r3, #0]
 80035dc:	683b      	ldr	r3, [r7, #0]
 80035de:	689b      	ldr	r3, [r3, #8]
 80035e0:	461a      	mov	r2, r3
 80035e2:	f7ff f9db 	bl	800299c <LL_ADC_SetChannelSamplingTime>
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	2100      	movs	r1, #0
 80035ec:	4618      	mov	r0, r3
 80035ee:	f7ff f970 	bl	80028d2 <LL_ADC_SetSamplingTimeCommonConfig>
 80035f2:	683b      	ldr	r3, [r7, #0]
 80035f4:	695a      	ldr	r2, [r3, #20]
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	68db      	ldr	r3, [r3, #12]
 80035fc:	08db      	lsrs	r3, r3, #3
 80035fe:	f003 0303 	and.w	r3, r3, #3
 8003602:	005b      	lsls	r3, r3, #1
 8003604:	fa02 f303 	lsl.w	r3, r2, r3
 8003608:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800360c:	683b      	ldr	r3, [r7, #0]
 800360e:	691b      	ldr	r3, [r3, #16]
 8003610:	2b04      	cmp	r3, #4
 8003612:	d022      	beq.n	800365a <HAL_ADC_ConfigChannel+0x12e>
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	6818      	ldr	r0, [r3, #0]
 8003618:	683b      	ldr	r3, [r7, #0]
 800361a:	6919      	ldr	r1, [r3, #16]
 800361c:	683b      	ldr	r3, [r7, #0]
 800361e:	681a      	ldr	r2, [r3, #0]
 8003620:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8003624:	f7ff f8ca 	bl	80027bc <LL_ADC_SetOffset>
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	6818      	ldr	r0, [r3, #0]
 800362c:	683b      	ldr	r3, [r7, #0]
 800362e:	6919      	ldr	r1, [r3, #16]
 8003630:	683b      	ldr	r3, [r7, #0]
 8003632:	699b      	ldr	r3, [r3, #24]
 8003634:	461a      	mov	r2, r3
 8003636:	f7ff f916 	bl	8002866 <LL_ADC_SetOffsetSign>
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	6818      	ldr	r0, [r3, #0]
 800363e:	683b      	ldr	r3, [r7, #0]
 8003640:	6919      	ldr	r1, [r3, #16]
 8003642:	683b      	ldr	r3, [r7, #0]
 8003644:	7f1b      	ldrb	r3, [r3, #28]
 8003646:	2b01      	cmp	r3, #1
 8003648:	d102      	bne.n	8003650 <HAL_ADC_ConfigChannel+0x124>
 800364a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800364e:	e000      	b.n	8003652 <HAL_ADC_ConfigChannel+0x126>
 8003650:	2300      	movs	r3, #0
 8003652:	461a      	mov	r2, r3
 8003654:	f7ff f922 	bl	800289c <LL_ADC_SetOffsetSaturation>
 8003658:	e17b      	b.n	8003952 <HAL_ADC_ConfigChannel+0x426>
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	2100      	movs	r1, #0
 8003660:	4618      	mov	r0, r3
 8003662:	f7ff f8cf 	bl	8002804 <LL_ADC_GetOffsetChannel>
 8003666:	4603      	mov	r3, r0
 8003668:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800366c:	2b00      	cmp	r3, #0
 800366e:	d10a      	bne.n	8003686 <HAL_ADC_ConfigChannel+0x15a>
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	2100      	movs	r1, #0
 8003676:	4618      	mov	r0, r3
 8003678:	f7ff f8c4 	bl	8002804 <LL_ADC_GetOffsetChannel>
 800367c:	4603      	mov	r3, r0
 800367e:	0e9b      	lsrs	r3, r3, #26
 8003680:	f003 021f 	and.w	r2, r3, #31
 8003684:	e01e      	b.n	80036c4 <HAL_ADC_ConfigChannel+0x198>
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	2100      	movs	r1, #0
 800368c:	4618      	mov	r0, r3
 800368e:	f7ff f8b9 	bl	8002804 <LL_ADC_GetOffsetChannel>
 8003692:	4603      	mov	r3, r0
 8003694:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8003698:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800369c:	fa93 f3a3 	rbit	r3, r3
 80036a0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80036a4:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80036a8:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80036ac:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	d101      	bne.n	80036b8 <HAL_ADC_ConfigChannel+0x18c>
 80036b4:	2320      	movs	r3, #32
 80036b6:	e004      	b.n	80036c2 <HAL_ADC_ConfigChannel+0x196>
 80036b8:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80036bc:	fab3 f383 	clz	r3, r3
 80036c0:	b2db      	uxtb	r3, r3
 80036c2:	461a      	mov	r2, r3
 80036c4:	683b      	ldr	r3, [r7, #0]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80036cc:	2b00      	cmp	r3, #0
 80036ce:	d105      	bne.n	80036dc <HAL_ADC_ConfigChannel+0x1b0>
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	0e9b      	lsrs	r3, r3, #26
 80036d6:	f003 031f 	and.w	r3, r3, #31
 80036da:	e018      	b.n	800370e <HAL_ADC_ConfigChannel+0x1e2>
 80036dc:	683b      	ldr	r3, [r7, #0]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80036e4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80036e8:	fa93 f3a3 	rbit	r3, r3
 80036ec:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80036f0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80036f4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80036f8:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80036fc:	2b00      	cmp	r3, #0
 80036fe:	d101      	bne.n	8003704 <HAL_ADC_ConfigChannel+0x1d8>
 8003700:	2320      	movs	r3, #32
 8003702:	e004      	b.n	800370e <HAL_ADC_ConfigChannel+0x1e2>
 8003704:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8003708:	fab3 f383 	clz	r3, r3
 800370c:	b2db      	uxtb	r3, r3
 800370e:	429a      	cmp	r2, r3
 8003710:	d106      	bne.n	8003720 <HAL_ADC_ConfigChannel+0x1f4>
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	681b      	ldr	r3, [r3, #0]
 8003716:	2200      	movs	r2, #0
 8003718:	2100      	movs	r1, #0
 800371a:	4618      	mov	r0, r3
 800371c:	f7ff f888 	bl	8002830 <LL_ADC_SetOffsetState>
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	2101      	movs	r1, #1
 8003726:	4618      	mov	r0, r3
 8003728:	f7ff f86c 	bl	8002804 <LL_ADC_GetOffsetChannel>
 800372c:	4603      	mov	r3, r0
 800372e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003732:	2b00      	cmp	r3, #0
 8003734:	d10a      	bne.n	800374c <HAL_ADC_ConfigChannel+0x220>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	2101      	movs	r1, #1
 800373c:	4618      	mov	r0, r3
 800373e:	f7ff f861 	bl	8002804 <LL_ADC_GetOffsetChannel>
 8003742:	4603      	mov	r3, r0
 8003744:	0e9b      	lsrs	r3, r3, #26
 8003746:	f003 021f 	and.w	r2, r3, #31
 800374a:	e01e      	b.n	800378a <HAL_ADC_ConfigChannel+0x25e>
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	2101      	movs	r1, #1
 8003752:	4618      	mov	r0, r3
 8003754:	f7ff f856 	bl	8002804 <LL_ADC_GetOffsetChannel>
 8003758:	4603      	mov	r3, r0
 800375a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800375e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8003762:	fa93 f3a3 	rbit	r3, r3
 8003766:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800376a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800376e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003772:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8003776:	2b00      	cmp	r3, #0
 8003778:	d101      	bne.n	800377e <HAL_ADC_ConfigChannel+0x252>
 800377a:	2320      	movs	r3, #32
 800377c:	e004      	b.n	8003788 <HAL_ADC_ConfigChannel+0x25c>
 800377e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8003782:	fab3 f383 	clz	r3, r3
 8003786:	b2db      	uxtb	r3, r3
 8003788:	461a      	mov	r2, r3
 800378a:	683b      	ldr	r3, [r7, #0]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003792:	2b00      	cmp	r3, #0
 8003794:	d105      	bne.n	80037a2 <HAL_ADC_ConfigChannel+0x276>
 8003796:	683b      	ldr	r3, [r7, #0]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	0e9b      	lsrs	r3, r3, #26
 800379c:	f003 031f 	and.w	r3, r3, #31
 80037a0:	e018      	b.n	80037d4 <HAL_ADC_ConfigChannel+0x2a8>
 80037a2:	683b      	ldr	r3, [r7, #0]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80037aa:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80037ae:	fa93 f3a3 	rbit	r3, r3
 80037b2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80037b6:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 80037ba:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80037be:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d101      	bne.n	80037ca <HAL_ADC_ConfigChannel+0x29e>
 80037c6:	2320      	movs	r3, #32
 80037c8:	e004      	b.n	80037d4 <HAL_ADC_ConfigChannel+0x2a8>
 80037ca:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80037ce:	fab3 f383 	clz	r3, r3
 80037d2:	b2db      	uxtb	r3, r3
 80037d4:	429a      	cmp	r2, r3
 80037d6:	d106      	bne.n	80037e6 <HAL_ADC_ConfigChannel+0x2ba>
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	2200      	movs	r2, #0
 80037de:	2101      	movs	r1, #1
 80037e0:	4618      	mov	r0, r3
 80037e2:	f7ff f825 	bl	8002830 <LL_ADC_SetOffsetState>
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	681b      	ldr	r3, [r3, #0]
 80037ea:	2102      	movs	r1, #2
 80037ec:	4618      	mov	r0, r3
 80037ee:	f7ff f809 	bl	8002804 <LL_ADC_GetOffsetChannel>
 80037f2:	4603      	mov	r3, r0
 80037f4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	d10a      	bne.n	8003812 <HAL_ADC_ConfigChannel+0x2e6>
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	2102      	movs	r1, #2
 8003802:	4618      	mov	r0, r3
 8003804:	f7fe fffe 	bl	8002804 <LL_ADC_GetOffsetChannel>
 8003808:	4603      	mov	r3, r0
 800380a:	0e9b      	lsrs	r3, r3, #26
 800380c:	f003 021f 	and.w	r2, r3, #31
 8003810:	e01e      	b.n	8003850 <HAL_ADC_ConfigChannel+0x324>
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	2102      	movs	r1, #2
 8003818:	4618      	mov	r0, r3
 800381a:	f7fe fff3 	bl	8002804 <LL_ADC_GetOffsetChannel>
 800381e:	4603      	mov	r3, r0
 8003820:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003824:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003828:	fa93 f3a3 	rbit	r3, r3
 800382c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003830:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003834:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003838:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800383c:	2b00      	cmp	r3, #0
 800383e:	d101      	bne.n	8003844 <HAL_ADC_ConfigChannel+0x318>
 8003840:	2320      	movs	r3, #32
 8003842:	e004      	b.n	800384e <HAL_ADC_ConfigChannel+0x322>
 8003844:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8003848:	fab3 f383 	clz	r3, r3
 800384c:	b2db      	uxtb	r3, r3
 800384e:	461a      	mov	r2, r3
 8003850:	683b      	ldr	r3, [r7, #0]
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003858:	2b00      	cmp	r3, #0
 800385a:	d105      	bne.n	8003868 <HAL_ADC_ConfigChannel+0x33c>
 800385c:	683b      	ldr	r3, [r7, #0]
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	0e9b      	lsrs	r3, r3, #26
 8003862:	f003 031f 	and.w	r3, r3, #31
 8003866:	e016      	b.n	8003896 <HAL_ADC_ConfigChannel+0x36a>
 8003868:	683b      	ldr	r3, [r7, #0]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003870:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003874:	fa93 f3a3 	rbit	r3, r3
 8003878:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800387a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800387c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003880:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003884:	2b00      	cmp	r3, #0
 8003886:	d101      	bne.n	800388c <HAL_ADC_ConfigChannel+0x360>
 8003888:	2320      	movs	r3, #32
 800388a:	e004      	b.n	8003896 <HAL_ADC_ConfigChannel+0x36a>
 800388c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003890:	fab3 f383 	clz	r3, r3
 8003894:	b2db      	uxtb	r3, r3
 8003896:	429a      	cmp	r2, r3
 8003898:	d106      	bne.n	80038a8 <HAL_ADC_ConfigChannel+0x37c>
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	2200      	movs	r2, #0
 80038a0:	2102      	movs	r1, #2
 80038a2:	4618      	mov	r0, r3
 80038a4:	f7fe ffc4 	bl	8002830 <LL_ADC_SetOffsetState>
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	2103      	movs	r1, #3
 80038ae:	4618      	mov	r0, r3
 80038b0:	f7fe ffa8 	bl	8002804 <LL_ADC_GetOffsetChannel>
 80038b4:	4603      	mov	r3, r0
 80038b6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d10a      	bne.n	80038d4 <HAL_ADC_ConfigChannel+0x3a8>
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	2103      	movs	r1, #3
 80038c4:	4618      	mov	r0, r3
 80038c6:	f7fe ff9d 	bl	8002804 <LL_ADC_GetOffsetChannel>
 80038ca:	4603      	mov	r3, r0
 80038cc:	0e9b      	lsrs	r3, r3, #26
 80038ce:	f003 021f 	and.w	r2, r3, #31
 80038d2:	e017      	b.n	8003904 <HAL_ADC_ConfigChannel+0x3d8>
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	2103      	movs	r1, #3
 80038da:	4618      	mov	r0, r3
 80038dc:	f7fe ff92 	bl	8002804 <LL_ADC_GetOffsetChannel>
 80038e0:	4603      	mov	r3, r0
 80038e2:	677b      	str	r3, [r7, #116]	@ 0x74
 80038e4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80038e6:	fa93 f3a3 	rbit	r3, r3
 80038ea:	673b      	str	r3, [r7, #112]	@ 0x70
 80038ec:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80038ee:	67bb      	str	r3, [r7, #120]	@ 0x78
 80038f0:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d101      	bne.n	80038fa <HAL_ADC_ConfigChannel+0x3ce>
 80038f6:	2320      	movs	r3, #32
 80038f8:	e003      	b.n	8003902 <HAL_ADC_ConfigChannel+0x3d6>
 80038fa:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80038fc:	fab3 f383 	clz	r3, r3
 8003900:	b2db      	uxtb	r3, r3
 8003902:	461a      	mov	r2, r3
 8003904:	683b      	ldr	r3, [r7, #0]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800390c:	2b00      	cmp	r3, #0
 800390e:	d105      	bne.n	800391c <HAL_ADC_ConfigChannel+0x3f0>
 8003910:	683b      	ldr	r3, [r7, #0]
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	0e9b      	lsrs	r3, r3, #26
 8003916:	f003 031f 	and.w	r3, r3, #31
 800391a:	e011      	b.n	8003940 <HAL_ADC_ConfigChannel+0x414>
 800391c:	683b      	ldr	r3, [r7, #0]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003922:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003924:	fa93 f3a3 	rbit	r3, r3
 8003928:	667b      	str	r3, [r7, #100]	@ 0x64
 800392a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800392c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800392e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003930:	2b00      	cmp	r3, #0
 8003932:	d101      	bne.n	8003938 <HAL_ADC_ConfigChannel+0x40c>
 8003934:	2320      	movs	r3, #32
 8003936:	e003      	b.n	8003940 <HAL_ADC_ConfigChannel+0x414>
 8003938:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800393a:	fab3 f383 	clz	r3, r3
 800393e:	b2db      	uxtb	r3, r3
 8003940:	429a      	cmp	r2, r3
 8003942:	d106      	bne.n	8003952 <HAL_ADC_ConfigChannel+0x426>
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	2200      	movs	r2, #0
 800394a:	2103      	movs	r1, #3
 800394c:	4618      	mov	r0, r3
 800394e:	f7fe ff6f 	bl	8002830 <LL_ADC_SetOffsetState>
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	4618      	mov	r0, r3
 8003958:	f7ff f902 	bl	8002b60 <LL_ADC_IsEnabled>
 800395c:	4603      	mov	r3, r0
 800395e:	2b00      	cmp	r3, #0
 8003960:	f040 8140 	bne.w	8003be4 <HAL_ADC_ConfigChannel+0x6b8>
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	6818      	ldr	r0, [r3, #0]
 8003968:	683b      	ldr	r3, [r7, #0]
 800396a:	6819      	ldr	r1, [r3, #0]
 800396c:	683b      	ldr	r3, [r7, #0]
 800396e:	68db      	ldr	r3, [r3, #12]
 8003970:	461a      	mov	r2, r3
 8003972:	f7ff f83f 	bl	80029f4 <LL_ADC_SetChannelSingleDiff>
 8003976:	683b      	ldr	r3, [r7, #0]
 8003978:	68db      	ldr	r3, [r3, #12]
 800397a:	4a8f      	ldr	r2, [pc, #572]	@ (8003bb8 <HAL_ADC_ConfigChannel+0x68c>)
 800397c:	4293      	cmp	r3, r2
 800397e:	f040 8131 	bne.w	8003be4 <HAL_ADC_ConfigChannel+0x6b8>
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	6818      	ldr	r0, [r3, #0]
 8003986:	683b      	ldr	r3, [r7, #0]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800398e:	2b00      	cmp	r3, #0
 8003990:	d10b      	bne.n	80039aa <HAL_ADC_ConfigChannel+0x47e>
 8003992:	683b      	ldr	r3, [r7, #0]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	0e9b      	lsrs	r3, r3, #26
 8003998:	3301      	adds	r3, #1
 800399a:	f003 031f 	and.w	r3, r3, #31
 800399e:	2b09      	cmp	r3, #9
 80039a0:	bf94      	ite	ls
 80039a2:	2301      	movls	r3, #1
 80039a4:	2300      	movhi	r3, #0
 80039a6:	b2db      	uxtb	r3, r3
 80039a8:	e019      	b.n	80039de <HAL_ADC_ConfigChannel+0x4b2>
 80039aa:	683b      	ldr	r3, [r7, #0]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80039b0:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80039b2:	fa93 f3a3 	rbit	r3, r3
 80039b6:	65bb      	str	r3, [r7, #88]	@ 0x58
 80039b8:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80039ba:	663b      	str	r3, [r7, #96]	@ 0x60
 80039bc:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d101      	bne.n	80039c6 <HAL_ADC_ConfigChannel+0x49a>
 80039c2:	2320      	movs	r3, #32
 80039c4:	e003      	b.n	80039ce <HAL_ADC_ConfigChannel+0x4a2>
 80039c6:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80039c8:	fab3 f383 	clz	r3, r3
 80039cc:	b2db      	uxtb	r3, r3
 80039ce:	3301      	adds	r3, #1
 80039d0:	f003 031f 	and.w	r3, r3, #31
 80039d4:	2b09      	cmp	r3, #9
 80039d6:	bf94      	ite	ls
 80039d8:	2301      	movls	r3, #1
 80039da:	2300      	movhi	r3, #0
 80039dc:	b2db      	uxtb	r3, r3
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d079      	beq.n	8003ad6 <HAL_ADC_ConfigChannel+0x5aa>
 80039e2:	683b      	ldr	r3, [r7, #0]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d107      	bne.n	80039fe <HAL_ADC_ConfigChannel+0x4d2>
 80039ee:	683b      	ldr	r3, [r7, #0]
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	0e9b      	lsrs	r3, r3, #26
 80039f4:	3301      	adds	r3, #1
 80039f6:	069b      	lsls	r3, r3, #26
 80039f8:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80039fc:	e015      	b.n	8003a2a <HAL_ADC_ConfigChannel+0x4fe>
 80039fe:	683b      	ldr	r3, [r7, #0]
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	653b      	str	r3, [r7, #80]	@ 0x50
 8003a04:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003a06:	fa93 f3a3 	rbit	r3, r3
 8003a0a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003a0c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003a0e:	657b      	str	r3, [r7, #84]	@ 0x54
 8003a10:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a12:	2b00      	cmp	r3, #0
 8003a14:	d101      	bne.n	8003a1a <HAL_ADC_ConfigChannel+0x4ee>
 8003a16:	2320      	movs	r3, #32
 8003a18:	e003      	b.n	8003a22 <HAL_ADC_ConfigChannel+0x4f6>
 8003a1a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003a1c:	fab3 f383 	clz	r3, r3
 8003a20:	b2db      	uxtb	r3, r3
 8003a22:	3301      	adds	r3, #1
 8003a24:	069b      	lsls	r3, r3, #26
 8003a26:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003a2a:	683b      	ldr	r3, [r7, #0]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003a32:	2b00      	cmp	r3, #0
 8003a34:	d109      	bne.n	8003a4a <HAL_ADC_ConfigChannel+0x51e>
 8003a36:	683b      	ldr	r3, [r7, #0]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	0e9b      	lsrs	r3, r3, #26
 8003a3c:	3301      	adds	r3, #1
 8003a3e:	f003 031f 	and.w	r3, r3, #31
 8003a42:	2101      	movs	r1, #1
 8003a44:	fa01 f303 	lsl.w	r3, r1, r3
 8003a48:	e017      	b.n	8003a7a <HAL_ADC_ConfigChannel+0x54e>
 8003a4a:	683b      	ldr	r3, [r7, #0]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	647b      	str	r3, [r7, #68]	@ 0x44
 8003a50:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003a52:	fa93 f3a3 	rbit	r3, r3
 8003a56:	643b      	str	r3, [r7, #64]	@ 0x40
 8003a58:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003a5a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003a5c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003a5e:	2b00      	cmp	r3, #0
 8003a60:	d101      	bne.n	8003a66 <HAL_ADC_ConfigChannel+0x53a>
 8003a62:	2320      	movs	r3, #32
 8003a64:	e003      	b.n	8003a6e <HAL_ADC_ConfigChannel+0x542>
 8003a66:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003a68:	fab3 f383 	clz	r3, r3
 8003a6c:	b2db      	uxtb	r3, r3
 8003a6e:	3301      	adds	r3, #1
 8003a70:	f003 031f 	and.w	r3, r3, #31
 8003a74:	2101      	movs	r1, #1
 8003a76:	fa01 f303 	lsl.w	r3, r1, r3
 8003a7a:	ea42 0103 	orr.w	r1, r2, r3
 8003a7e:	683b      	ldr	r3, [r7, #0]
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	d10a      	bne.n	8003aa0 <HAL_ADC_ConfigChannel+0x574>
 8003a8a:	683b      	ldr	r3, [r7, #0]
 8003a8c:	681b      	ldr	r3, [r3, #0]
 8003a8e:	0e9b      	lsrs	r3, r3, #26
 8003a90:	3301      	adds	r3, #1
 8003a92:	f003 021f 	and.w	r2, r3, #31
 8003a96:	4613      	mov	r3, r2
 8003a98:	005b      	lsls	r3, r3, #1
 8003a9a:	4413      	add	r3, r2
 8003a9c:	051b      	lsls	r3, r3, #20
 8003a9e:	e018      	b.n	8003ad2 <HAL_ADC_ConfigChannel+0x5a6>
 8003aa0:	683b      	ldr	r3, [r7, #0]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003aa6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003aa8:	fa93 f3a3 	rbit	r3, r3
 8003aac:	637b      	str	r3, [r7, #52]	@ 0x34
 8003aae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003ab0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003ab2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d101      	bne.n	8003abc <HAL_ADC_ConfigChannel+0x590>
 8003ab8:	2320      	movs	r3, #32
 8003aba:	e003      	b.n	8003ac4 <HAL_ADC_ConfigChannel+0x598>
 8003abc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003abe:	fab3 f383 	clz	r3, r3
 8003ac2:	b2db      	uxtb	r3, r3
 8003ac4:	3301      	adds	r3, #1
 8003ac6:	f003 021f 	and.w	r2, r3, #31
 8003aca:	4613      	mov	r3, r2
 8003acc:	005b      	lsls	r3, r3, #1
 8003ace:	4413      	add	r3, r2
 8003ad0:	051b      	lsls	r3, r3, #20
 8003ad2:	430b      	orrs	r3, r1
 8003ad4:	e081      	b.n	8003bda <HAL_ADC_ConfigChannel+0x6ae>
 8003ad6:	683b      	ldr	r3, [r7, #0]
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d107      	bne.n	8003af2 <HAL_ADC_ConfigChannel+0x5c6>
 8003ae2:	683b      	ldr	r3, [r7, #0]
 8003ae4:	681b      	ldr	r3, [r3, #0]
 8003ae6:	0e9b      	lsrs	r3, r3, #26
 8003ae8:	3301      	adds	r3, #1
 8003aea:	069b      	lsls	r3, r3, #26
 8003aec:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003af0:	e015      	b.n	8003b1e <HAL_ADC_ConfigChannel+0x5f2>
 8003af2:	683b      	ldr	r3, [r7, #0]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003af8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003afa:	fa93 f3a3 	rbit	r3, r3
 8003afe:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003b00:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003b02:	633b      	str	r3, [r7, #48]	@ 0x30
 8003b04:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d101      	bne.n	8003b0e <HAL_ADC_ConfigChannel+0x5e2>
 8003b0a:	2320      	movs	r3, #32
 8003b0c:	e003      	b.n	8003b16 <HAL_ADC_ConfigChannel+0x5ea>
 8003b0e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003b10:	fab3 f383 	clz	r3, r3
 8003b14:	b2db      	uxtb	r3, r3
 8003b16:	3301      	adds	r3, #1
 8003b18:	069b      	lsls	r3, r3, #26
 8003b1a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8003b1e:	683b      	ldr	r3, [r7, #0]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d109      	bne.n	8003b3e <HAL_ADC_ConfigChannel+0x612>
 8003b2a:	683b      	ldr	r3, [r7, #0]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	0e9b      	lsrs	r3, r3, #26
 8003b30:	3301      	adds	r3, #1
 8003b32:	f003 031f 	and.w	r3, r3, #31
 8003b36:	2101      	movs	r1, #1
 8003b38:	fa01 f303 	lsl.w	r3, r1, r3
 8003b3c:	e017      	b.n	8003b6e <HAL_ADC_ConfigChannel+0x642>
 8003b3e:	683b      	ldr	r3, [r7, #0]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	623b      	str	r3, [r7, #32]
 8003b44:	6a3b      	ldr	r3, [r7, #32]
 8003b46:	fa93 f3a3 	rbit	r3, r3
 8003b4a:	61fb      	str	r3, [r7, #28]
 8003b4c:	69fb      	ldr	r3, [r7, #28]
 8003b4e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b50:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	d101      	bne.n	8003b5a <HAL_ADC_ConfigChannel+0x62e>
 8003b56:	2320      	movs	r3, #32
 8003b58:	e003      	b.n	8003b62 <HAL_ADC_ConfigChannel+0x636>
 8003b5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b5c:	fab3 f383 	clz	r3, r3
 8003b60:	b2db      	uxtb	r3, r3
 8003b62:	3301      	adds	r3, #1
 8003b64:	f003 031f 	and.w	r3, r3, #31
 8003b68:	2101      	movs	r1, #1
 8003b6a:	fa01 f303 	lsl.w	r3, r1, r3
 8003b6e:	ea42 0103 	orr.w	r1, r2, r3
 8003b72:	683b      	ldr	r3, [r7, #0]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d10d      	bne.n	8003b9a <HAL_ADC_ConfigChannel+0x66e>
 8003b7e:	683b      	ldr	r3, [r7, #0]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	0e9b      	lsrs	r3, r3, #26
 8003b84:	3301      	adds	r3, #1
 8003b86:	f003 021f 	and.w	r2, r3, #31
 8003b8a:	4613      	mov	r3, r2
 8003b8c:	005b      	lsls	r3, r3, #1
 8003b8e:	4413      	add	r3, r2
 8003b90:	3b1e      	subs	r3, #30
 8003b92:	051b      	lsls	r3, r3, #20
 8003b94:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003b98:	e01e      	b.n	8003bd8 <HAL_ADC_ConfigChannel+0x6ac>
 8003b9a:	683b      	ldr	r3, [r7, #0]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	617b      	str	r3, [r7, #20]
 8003ba0:	697b      	ldr	r3, [r7, #20]
 8003ba2:	fa93 f3a3 	rbit	r3, r3
 8003ba6:	613b      	str	r3, [r7, #16]
 8003ba8:	693b      	ldr	r3, [r7, #16]
 8003baa:	61bb      	str	r3, [r7, #24]
 8003bac:	69bb      	ldr	r3, [r7, #24]
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	d104      	bne.n	8003bbc <HAL_ADC_ConfigChannel+0x690>
 8003bb2:	2320      	movs	r3, #32
 8003bb4:	e006      	b.n	8003bc4 <HAL_ADC_ConfigChannel+0x698>
 8003bb6:	bf00      	nop
 8003bb8:	407f0000 	.word	0x407f0000
 8003bbc:	69bb      	ldr	r3, [r7, #24]
 8003bbe:	fab3 f383 	clz	r3, r3
 8003bc2:	b2db      	uxtb	r3, r3
 8003bc4:	3301      	adds	r3, #1
 8003bc6:	f003 021f 	and.w	r2, r3, #31
 8003bca:	4613      	mov	r3, r2
 8003bcc:	005b      	lsls	r3, r3, #1
 8003bce:	4413      	add	r3, r2
 8003bd0:	3b1e      	subs	r3, #30
 8003bd2:	051b      	lsls	r3, r3, #20
 8003bd4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003bd8:	430b      	orrs	r3, r1
 8003bda:	683a      	ldr	r2, [r7, #0]
 8003bdc:	6892      	ldr	r2, [r2, #8]
 8003bde:	4619      	mov	r1, r3
 8003be0:	f7fe fedc 	bl	800299c <LL_ADC_SetChannelSamplingTime>
 8003be4:	683b      	ldr	r3, [r7, #0]
 8003be6:	681a      	ldr	r2, [r3, #0]
 8003be8:	4b3f      	ldr	r3, [pc, #252]	@ (8003ce8 <HAL_ADC_ConfigChannel+0x7bc>)
 8003bea:	4013      	ands	r3, r2
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d071      	beq.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003bf0:	483e      	ldr	r0, [pc, #248]	@ (8003cec <HAL_ADC_ConfigChannel+0x7c0>)
 8003bf2:	f7fe fdd5 	bl	80027a0 <LL_ADC_GetCommonPathInternalCh>
 8003bf6:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4
 8003bfa:	683b      	ldr	r3, [r7, #0]
 8003bfc:	681b      	ldr	r3, [r3, #0]
 8003bfe:	4a3c      	ldr	r2, [pc, #240]	@ (8003cf0 <HAL_ADC_ConfigChannel+0x7c4>)
 8003c00:	4293      	cmp	r3, r2
 8003c02:	d004      	beq.n	8003c0e <HAL_ADC_ConfigChannel+0x6e2>
 8003c04:	683b      	ldr	r3, [r7, #0]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	4a3a      	ldr	r2, [pc, #232]	@ (8003cf4 <HAL_ADC_ConfigChannel+0x7c8>)
 8003c0a:	4293      	cmp	r3, r2
 8003c0c:	d127      	bne.n	8003c5e <HAL_ADC_ConfigChannel+0x732>
 8003c0e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003c12:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d121      	bne.n	8003c5e <HAL_ADC_ConfigChannel+0x732>
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8003c22:	d157      	bne.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003c24:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003c28:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003c2c:	4619      	mov	r1, r3
 8003c2e:	482f      	ldr	r0, [pc, #188]	@ (8003cec <HAL_ADC_ConfigChannel+0x7c0>)
 8003c30:	f7fe fda3 	bl	800277a <LL_ADC_SetCommonPathInternalCh>
 8003c34:	4b30      	ldr	r3, [pc, #192]	@ (8003cf8 <HAL_ADC_ConfigChannel+0x7cc>)
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	099b      	lsrs	r3, r3, #6
 8003c3a:	4a30      	ldr	r2, [pc, #192]	@ (8003cfc <HAL_ADC_ConfigChannel+0x7d0>)
 8003c3c:	fba2 2303 	umull	r2, r3, r2, r3
 8003c40:	099b      	lsrs	r3, r3, #6
 8003c42:	1c5a      	adds	r2, r3, #1
 8003c44:	4613      	mov	r3, r2
 8003c46:	005b      	lsls	r3, r3, #1
 8003c48:	4413      	add	r3, r2
 8003c4a:	009b      	lsls	r3, r3, #2
 8003c4c:	60fb      	str	r3, [r7, #12]
 8003c4e:	e002      	b.n	8003c56 <HAL_ADC_ConfigChannel+0x72a>
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	3b01      	subs	r3, #1
 8003c54:	60fb      	str	r3, [r7, #12]
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d1f9      	bne.n	8003c50 <HAL_ADC_ConfigChannel+0x724>
 8003c5c:	e03a      	b.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003c5e:	683b      	ldr	r3, [r7, #0]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	4a27      	ldr	r2, [pc, #156]	@ (8003d00 <HAL_ADC_ConfigChannel+0x7d4>)
 8003c64:	4293      	cmp	r3, r2
 8003c66:	d113      	bne.n	8003c90 <HAL_ADC_ConfigChannel+0x764>
 8003c68:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003c6c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003c70:	2b00      	cmp	r3, #0
 8003c72:	d10d      	bne.n	8003c90 <HAL_ADC_ConfigChannel+0x764>
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	4a22      	ldr	r2, [pc, #136]	@ (8003d04 <HAL_ADC_ConfigChannel+0x7d8>)
 8003c7a:	4293      	cmp	r3, r2
 8003c7c:	d02a      	beq.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003c7e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003c82:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8003c86:	4619      	mov	r1, r3
 8003c88:	4818      	ldr	r0, [pc, #96]	@ (8003cec <HAL_ADC_ConfigChannel+0x7c0>)
 8003c8a:	f7fe fd76 	bl	800277a <LL_ADC_SetCommonPathInternalCh>
 8003c8e:	e021      	b.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003c90:	683b      	ldr	r3, [r7, #0]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	4a1c      	ldr	r2, [pc, #112]	@ (8003d08 <HAL_ADC_ConfigChannel+0x7dc>)
 8003c96:	4293      	cmp	r3, r2
 8003c98:	d11c      	bne.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003c9a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003c9e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d116      	bne.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	681b      	ldr	r3, [r3, #0]
 8003caa:	4a16      	ldr	r2, [pc, #88]	@ (8003d04 <HAL_ADC_ConfigChannel+0x7d8>)
 8003cac:	4293      	cmp	r3, r2
 8003cae:	d011      	beq.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003cb0:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003cb4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8003cb8:	4619      	mov	r1, r3
 8003cba:	480c      	ldr	r0, [pc, #48]	@ (8003cec <HAL_ADC_ConfigChannel+0x7c0>)
 8003cbc:	f7fe fd5d 	bl	800277a <LL_ADC_SetCommonPathInternalCh>
 8003cc0:	e008      	b.n	8003cd4 <HAL_ADC_ConfigChannel+0x7a8>
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003cc6:	f043 0220 	orr.w	r2, r3, #32
 8003cca:	687b      	ldr	r3, [r7, #4]
 8003ccc:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003cce:	2301      	movs	r3, #1
 8003cd0:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8003cdc:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 8003ce0:	4618      	mov	r0, r3
 8003ce2:	37d8      	adds	r7, #216	@ 0xd8
 8003ce4:	46bd      	mov	sp, r7
 8003ce6:	bd80      	pop	{r7, pc}
 8003ce8:	80080000 	.word	0x80080000
 8003cec:	50000300 	.word	0x50000300
 8003cf0:	c3210000 	.word	0xc3210000
 8003cf4:	90c00010 	.word	0x90c00010
 8003cf8:	20000000 	.word	0x20000000
 8003cfc:	053e2d63 	.word	0x053e2d63
 8003d00:	c7520000 	.word	0xc7520000
 8003d04:	50000100 	.word	0x50000100
 8003d08:	cb840000 	.word	0xcb840000

08003d0c <ADC_Enable>:
 8003d0c:	b580      	push	{r7, lr}
 8003d0e:	b084      	sub	sp, #16
 8003d10:	af00      	add	r7, sp, #0
 8003d12:	6078      	str	r0, [r7, #4]
 8003d14:	2300      	movs	r3, #0
 8003d16:	60bb      	str	r3, [r7, #8]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	4618      	mov	r0, r3
 8003d1e:	f7fe ff1f 	bl	8002b60 <LL_ADC_IsEnabled>
 8003d22:	4603      	mov	r3, r0
 8003d24:	2b00      	cmp	r3, #0
 8003d26:	d169      	bne.n	8003dfc <ADC_Enable+0xf0>
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	689a      	ldr	r2, [r3, #8]
 8003d2e:	4b36      	ldr	r3, [pc, #216]	@ (8003e08 <ADC_Enable+0xfc>)
 8003d30:	4013      	ands	r3, r2
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d00d      	beq.n	8003d52 <ADC_Enable+0x46>
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d3a:	f043 0210 	orr.w	r2, r3, #16
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003d46:	f043 0201 	orr.w	r2, r3, #1
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	661a      	str	r2, [r3, #96]	@ 0x60
 8003d4e:	2301      	movs	r3, #1
 8003d50:	e055      	b.n	8003dfe <ADC_Enable+0xf2>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	4618      	mov	r0, r3
 8003d58:	f7fe feda 	bl	8002b10 <LL_ADC_Enable>
 8003d5c:	482b      	ldr	r0, [pc, #172]	@ (8003e0c <ADC_Enable+0x100>)
 8003d5e:	f7fe fd1f 	bl	80027a0 <LL_ADC_GetCommonPathInternalCh>
 8003d62:	4603      	mov	r3, r0
 8003d64:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d013      	beq.n	8003d94 <ADC_Enable+0x88>
 8003d6c:	4b28      	ldr	r3, [pc, #160]	@ (8003e10 <ADC_Enable+0x104>)
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	099b      	lsrs	r3, r3, #6
 8003d72:	4a28      	ldr	r2, [pc, #160]	@ (8003e14 <ADC_Enable+0x108>)
 8003d74:	fba2 2303 	umull	r2, r3, r2, r3
 8003d78:	099b      	lsrs	r3, r3, #6
 8003d7a:	1c5a      	adds	r2, r3, #1
 8003d7c:	4613      	mov	r3, r2
 8003d7e:	005b      	lsls	r3, r3, #1
 8003d80:	4413      	add	r3, r2
 8003d82:	009b      	lsls	r3, r3, #2
 8003d84:	60bb      	str	r3, [r7, #8]
 8003d86:	e002      	b.n	8003d8e <ADC_Enable+0x82>
 8003d88:	68bb      	ldr	r3, [r7, #8]
 8003d8a:	3b01      	subs	r3, #1
 8003d8c:	60bb      	str	r3, [r7, #8]
 8003d8e:	68bb      	ldr	r3, [r7, #8]
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d1f9      	bne.n	8003d88 <ADC_Enable+0x7c>
 8003d94:	f7fe fcd2 	bl	800273c <HAL_GetTick>
 8003d98:	60f8      	str	r0, [r7, #12]
 8003d9a:	e028      	b.n	8003dee <ADC_Enable+0xe2>
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	4618      	mov	r0, r3
 8003da2:	f7fe fedd 	bl	8002b60 <LL_ADC_IsEnabled>
 8003da6:	4603      	mov	r3, r0
 8003da8:	2b00      	cmp	r3, #0
 8003daa:	d104      	bne.n	8003db6 <ADC_Enable+0xaa>
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	4618      	mov	r0, r3
 8003db2:	f7fe fead 	bl	8002b10 <LL_ADC_Enable>
 8003db6:	f7fe fcc1 	bl	800273c <HAL_GetTick>
 8003dba:	4602      	mov	r2, r0
 8003dbc:	68fb      	ldr	r3, [r7, #12]
 8003dbe:	1ad3      	subs	r3, r2, r3
 8003dc0:	2b02      	cmp	r3, #2
 8003dc2:	d914      	bls.n	8003dee <ADC_Enable+0xe2>
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	f003 0301 	and.w	r3, r3, #1
 8003dce:	2b01      	cmp	r3, #1
 8003dd0:	d00d      	beq.n	8003dee <ADC_Enable+0xe2>
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003dd6:	f043 0210 	orr.w	r2, r3, #16
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003de2:	f043 0201 	orr.w	r2, r3, #1
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	661a      	str	r2, [r3, #96]	@ 0x60
 8003dea:	2301      	movs	r3, #1
 8003dec:	e007      	b.n	8003dfe <ADC_Enable+0xf2>
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	f003 0301 	and.w	r3, r3, #1
 8003df8:	2b01      	cmp	r3, #1
 8003dfa:	d1cf      	bne.n	8003d9c <ADC_Enable+0x90>
 8003dfc:	2300      	movs	r3, #0
 8003dfe:	4618      	mov	r0, r3
 8003e00:	3710      	adds	r7, #16
 8003e02:	46bd      	mov	sp, r7
 8003e04:	bd80      	pop	{r7, pc}
 8003e06:	bf00      	nop
 8003e08:	8000003f 	.word	0x8000003f
 8003e0c:	50000300 	.word	0x50000300
 8003e10:	20000000 	.word	0x20000000
 8003e14:	053e2d63 	.word	0x053e2d63

08003e18 <ADC_Disable>:
 8003e18:	b580      	push	{r7, lr}
 8003e1a:	b084      	sub	sp, #16
 8003e1c:	af00      	add	r7, sp, #0
 8003e1e:	6078      	str	r0, [r7, #4]
 8003e20:	687b      	ldr	r3, [r7, #4]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	4618      	mov	r0, r3
 8003e26:	f7fe feae 	bl	8002b86 <LL_ADC_IsDisableOngoing>
 8003e2a:	60f8      	str	r0, [r7, #12]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	4618      	mov	r0, r3
 8003e32:	f7fe fe95 	bl	8002b60 <LL_ADC_IsEnabled>
 8003e36:	4603      	mov	r3, r0
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d047      	beq.n	8003ecc <ADC_Disable+0xb4>
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	2b00      	cmp	r3, #0
 8003e40:	d144      	bne.n	8003ecc <ADC_Disable+0xb4>
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	689b      	ldr	r3, [r3, #8]
 8003e48:	f003 030d 	and.w	r3, r3, #13
 8003e4c:	2b01      	cmp	r3, #1
 8003e4e:	d10c      	bne.n	8003e6a <ADC_Disable+0x52>
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	4618      	mov	r0, r3
 8003e56:	f7fe fe6f 	bl	8002b38 <LL_ADC_Disable>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	2203      	movs	r2, #3
 8003e60:	601a      	str	r2, [r3, #0]
 8003e62:	f7fe fc6b 	bl	800273c <HAL_GetTick>
 8003e66:	60b8      	str	r0, [r7, #8]
 8003e68:	e029      	b.n	8003ebe <ADC_Disable+0xa6>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003e6e:	f043 0210 	orr.w	r2, r3, #16
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003e7a:	f043 0201 	orr.w	r2, r3, #1
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	661a      	str	r2, [r3, #96]	@ 0x60
 8003e82:	2301      	movs	r3, #1
 8003e84:	e023      	b.n	8003ece <ADC_Disable+0xb6>
 8003e86:	f7fe fc59 	bl	800273c <HAL_GetTick>
 8003e8a:	4602      	mov	r2, r0
 8003e8c:	68bb      	ldr	r3, [r7, #8]
 8003e8e:	1ad3      	subs	r3, r2, r3
 8003e90:	2b02      	cmp	r3, #2
 8003e92:	d914      	bls.n	8003ebe <ADC_Disable+0xa6>
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	689b      	ldr	r3, [r3, #8]
 8003e9a:	f003 0301 	and.w	r3, r3, #1
 8003e9e:	2b00      	cmp	r3, #0
 8003ea0:	d00d      	beq.n	8003ebe <ADC_Disable+0xa6>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ea6:	f043 0210 	orr.w	r2, r3, #16
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003eb2:	f043 0201 	orr.w	r2, r3, #1
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	661a      	str	r2, [r3, #96]	@ 0x60
 8003eba:	2301      	movs	r3, #1
 8003ebc:	e007      	b.n	8003ece <ADC_Disable+0xb6>
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	689b      	ldr	r3, [r3, #8]
 8003ec4:	f003 0301 	and.w	r3, r3, #1
 8003ec8:	2b00      	cmp	r3, #0
 8003eca:	d1dc      	bne.n	8003e86 <ADC_Disable+0x6e>
 8003ecc:	2300      	movs	r3, #0
 8003ece:	4618      	mov	r0, r3
 8003ed0:	3710      	adds	r7, #16
 8003ed2:	46bd      	mov	sp, r7
 8003ed4:	bd80      	pop	{r7, pc}

08003ed6 <LL_ADC_SetCommonPathInternalCh>:
 8003ed6:	b480      	push	{r7}
 8003ed8:	b083      	sub	sp, #12
 8003eda:	af00      	add	r7, sp, #0
 8003edc:	6078      	str	r0, [r7, #4]
 8003ede:	6039      	str	r1, [r7, #0]
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	689b      	ldr	r3, [r3, #8]
 8003ee4:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8003ee8:	683b      	ldr	r3, [r7, #0]
 8003eea:	431a      	orrs	r2, r3
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	609a      	str	r2, [r3, #8]
 8003ef0:	bf00      	nop
 8003ef2:	370c      	adds	r7, #12
 8003ef4:	46bd      	mov	sp, r7
 8003ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003efa:	4770      	bx	lr

08003efc <LL_ADC_GetCommonPathInternalCh>:
 8003efc:	b480      	push	{r7}
 8003efe:	b083      	sub	sp, #12
 8003f00:	af00      	add	r7, sp, #0
 8003f02:	6078      	str	r0, [r7, #4]
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	689b      	ldr	r3, [r3, #8]
 8003f08:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8003f0c:	4618      	mov	r0, r3
 8003f0e:	370c      	adds	r7, #12
 8003f10:	46bd      	mov	sp, r7
 8003f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f16:	4770      	bx	lr

08003f18 <LL_ADC_SetOffset>:
 8003f18:	b480      	push	{r7}
 8003f1a:	b087      	sub	sp, #28
 8003f1c:	af00      	add	r7, sp, #0
 8003f1e:	60f8      	str	r0, [r7, #12]
 8003f20:	60b9      	str	r1, [r7, #8]
 8003f22:	607a      	str	r2, [r7, #4]
 8003f24:	603b      	str	r3, [r7, #0]
 8003f26:	68fb      	ldr	r3, [r7, #12]
 8003f28:	3360      	adds	r3, #96	@ 0x60
 8003f2a:	461a      	mov	r2, r3
 8003f2c:	68bb      	ldr	r3, [r7, #8]
 8003f2e:	009b      	lsls	r3, r3, #2
 8003f30:	4413      	add	r3, r2
 8003f32:	617b      	str	r3, [r7, #20]
 8003f34:	697b      	ldr	r3, [r7, #20]
 8003f36:	681a      	ldr	r2, [r3, #0]
 8003f38:	4b08      	ldr	r3, [pc, #32]	@ (8003f5c <LL_ADC_SetOffset+0x44>)
 8003f3a:	4013      	ands	r3, r2
 8003f3c:	687a      	ldr	r2, [r7, #4]
 8003f3e:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 8003f42:	683a      	ldr	r2, [r7, #0]
 8003f44:	430a      	orrs	r2, r1
 8003f46:	4313      	orrs	r3, r2
 8003f48:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8003f4c:	697b      	ldr	r3, [r7, #20]
 8003f4e:	601a      	str	r2, [r3, #0]
 8003f50:	bf00      	nop
 8003f52:	371c      	adds	r7, #28
 8003f54:	46bd      	mov	sp, r7
 8003f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f5a:	4770      	bx	lr
 8003f5c:	03fff000 	.word	0x03fff000

08003f60 <LL_ADC_GetOffsetChannel>:
 8003f60:	b480      	push	{r7}
 8003f62:	b085      	sub	sp, #20
 8003f64:	af00      	add	r7, sp, #0
 8003f66:	6078      	str	r0, [r7, #4]
 8003f68:	6039      	str	r1, [r7, #0]
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	3360      	adds	r3, #96	@ 0x60
 8003f6e:	461a      	mov	r2, r3
 8003f70:	683b      	ldr	r3, [r7, #0]
 8003f72:	009b      	lsls	r3, r3, #2
 8003f74:	4413      	add	r3, r2
 8003f76:	60fb      	str	r3, [r7, #12]
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 8003f80:	4618      	mov	r0, r3
 8003f82:	3714      	adds	r7, #20
 8003f84:	46bd      	mov	sp, r7
 8003f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f8a:	4770      	bx	lr

08003f8c <LL_ADC_SetOffsetState>:
 8003f8c:	b480      	push	{r7}
 8003f8e:	b087      	sub	sp, #28
 8003f90:	af00      	add	r7, sp, #0
 8003f92:	60f8      	str	r0, [r7, #12]
 8003f94:	60b9      	str	r1, [r7, #8]
 8003f96:	607a      	str	r2, [r7, #4]
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	3360      	adds	r3, #96	@ 0x60
 8003f9c:	461a      	mov	r2, r3
 8003f9e:	68bb      	ldr	r3, [r7, #8]
 8003fa0:	009b      	lsls	r3, r3, #2
 8003fa2:	4413      	add	r3, r2
 8003fa4:	617b      	str	r3, [r7, #20]
 8003fa6:	697b      	ldr	r3, [r7, #20]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	431a      	orrs	r2, r3
 8003fb2:	697b      	ldr	r3, [r7, #20]
 8003fb4:	601a      	str	r2, [r3, #0]
 8003fb6:	bf00      	nop
 8003fb8:	371c      	adds	r7, #28
 8003fba:	46bd      	mov	sp, r7
 8003fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fc0:	4770      	bx	lr

08003fc2 <LL_ADC_SetOffsetSign>:
 8003fc2:	b480      	push	{r7}
 8003fc4:	b087      	sub	sp, #28
 8003fc6:	af00      	add	r7, sp, #0
 8003fc8:	60f8      	str	r0, [r7, #12]
 8003fca:	60b9      	str	r1, [r7, #8]
 8003fcc:	607a      	str	r2, [r7, #4]
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	3360      	adds	r3, #96	@ 0x60
 8003fd2:	461a      	mov	r2, r3
 8003fd4:	68bb      	ldr	r3, [r7, #8]
 8003fd6:	009b      	lsls	r3, r3, #2
 8003fd8:	4413      	add	r3, r2
 8003fda:	617b      	str	r3, [r7, #20]
 8003fdc:	697b      	ldr	r3, [r7, #20]
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	431a      	orrs	r2, r3
 8003fe8:	697b      	ldr	r3, [r7, #20]
 8003fea:	601a      	str	r2, [r3, #0]
 8003fec:	bf00      	nop
 8003fee:	371c      	adds	r7, #28
 8003ff0:	46bd      	mov	sp, r7
 8003ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ff6:	4770      	bx	lr

08003ff8 <LL_ADC_SetOffsetSaturation>:
 8003ff8:	b480      	push	{r7}
 8003ffa:	b087      	sub	sp, #28
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	60f8      	str	r0, [r7, #12]
 8004000:	60b9      	str	r1, [r7, #8]
 8004002:	607a      	str	r2, [r7, #4]
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	3360      	adds	r3, #96	@ 0x60
 8004008:	461a      	mov	r2, r3
 800400a:	68bb      	ldr	r3, [r7, #8]
 800400c:	009b      	lsls	r3, r3, #2
 800400e:	4413      	add	r3, r2
 8004010:	617b      	str	r3, [r7, #20]
 8004012:	697b      	ldr	r3, [r7, #20]
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	431a      	orrs	r2, r3
 800401e:	697b      	ldr	r3, [r7, #20]
 8004020:	601a      	str	r2, [r3, #0]
 8004022:	bf00      	nop
 8004024:	371c      	adds	r7, #28
 8004026:	46bd      	mov	sp, r7
 8004028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402c:	4770      	bx	lr

0800402e <LL_ADC_SetSamplingTimeCommonConfig>:
 800402e:	b480      	push	{r7}
 8004030:	b083      	sub	sp, #12
 8004032:	af00      	add	r7, sp, #0
 8004034:	6078      	str	r0, [r7, #4]
 8004036:	6039      	str	r1, [r7, #0]
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	695b      	ldr	r3, [r3, #20]
 800403c:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8004040:	683b      	ldr	r3, [r7, #0]
 8004042:	431a      	orrs	r2, r3
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	615a      	str	r2, [r3, #20]
 8004048:	bf00      	nop
 800404a:	370c      	adds	r7, #12
 800404c:	46bd      	mov	sp, r7
 800404e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004052:	4770      	bx	lr

08004054 <LL_ADC_INJ_GetTrigAuto>:
 8004054:	b480      	push	{r7}
 8004056:	b083      	sub	sp, #12
 8004058:	af00      	add	r7, sp, #0
 800405a:	6078      	str	r0, [r7, #4]
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	68db      	ldr	r3, [r3, #12]
 8004060:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004064:	4618      	mov	r0, r3
 8004066:	370c      	adds	r7, #12
 8004068:	46bd      	mov	sp, r7
 800406a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800406e:	4770      	bx	lr

08004070 <LL_ADC_SetChannelSamplingTime>:
 8004070:	b480      	push	{r7}
 8004072:	b087      	sub	sp, #28
 8004074:	af00      	add	r7, sp, #0
 8004076:	60f8      	str	r0, [r7, #12]
 8004078:	60b9      	str	r1, [r7, #8]
 800407a:	607a      	str	r2, [r7, #4]
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	3314      	adds	r3, #20
 8004080:	461a      	mov	r2, r3
 8004082:	68bb      	ldr	r3, [r7, #8]
 8004084:	0e5b      	lsrs	r3, r3, #25
 8004086:	009b      	lsls	r3, r3, #2
 8004088:	f003 0304 	and.w	r3, r3, #4
 800408c:	4413      	add	r3, r2
 800408e:	617b      	str	r3, [r7, #20]
 8004090:	697b      	ldr	r3, [r7, #20]
 8004092:	681a      	ldr	r2, [r3, #0]
 8004094:	68bb      	ldr	r3, [r7, #8]
 8004096:	0d1b      	lsrs	r3, r3, #20
 8004098:	f003 031f 	and.w	r3, r3, #31
 800409c:	2107      	movs	r1, #7
 800409e:	fa01 f303 	lsl.w	r3, r1, r3
 80040a2:	43db      	mvns	r3, r3
 80040a4:	401a      	ands	r2, r3
 80040a6:	68bb      	ldr	r3, [r7, #8]
 80040a8:	0d1b      	lsrs	r3, r3, #20
 80040aa:	f003 031f 	and.w	r3, r3, #31
 80040ae:	6879      	ldr	r1, [r7, #4]
 80040b0:	fa01 f303 	lsl.w	r3, r1, r3
 80040b4:	431a      	orrs	r2, r3
 80040b6:	697b      	ldr	r3, [r7, #20]
 80040b8:	601a      	str	r2, [r3, #0]
 80040ba:	bf00      	nop
 80040bc:	371c      	adds	r7, #28
 80040be:	46bd      	mov	sp, r7
 80040c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040c4:	4770      	bx	lr
	...

080040c8 <LL_ADC_SetChannelSingleDiff>:
 80040c8:	b480      	push	{r7}
 80040ca:	b085      	sub	sp, #20
 80040cc:	af00      	add	r7, sp, #0
 80040ce:	60f8      	str	r0, [r7, #12]
 80040d0:	60b9      	str	r1, [r7, #8]
 80040d2:	607a      	str	r2, [r7, #4]
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 80040da:	68bb      	ldr	r3, [r7, #8]
 80040dc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80040e0:	43db      	mvns	r3, r3
 80040e2:	401a      	ands	r2, r3
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	f003 0318 	and.w	r3, r3, #24
 80040ea:	4908      	ldr	r1, [pc, #32]	@ (800410c <LL_ADC_SetChannelSingleDiff+0x44>)
 80040ec:	40d9      	lsrs	r1, r3
 80040ee:	68bb      	ldr	r3, [r7, #8]
 80040f0:	400b      	ands	r3, r1
 80040f2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80040f6:	431a      	orrs	r2, r3
 80040f8:	68fb      	ldr	r3, [r7, #12]
 80040fa:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 80040fe:	bf00      	nop
 8004100:	3714      	adds	r7, #20
 8004102:	46bd      	mov	sp, r7
 8004104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004108:	4770      	bx	lr
 800410a:	bf00      	nop
 800410c:	0007ffff 	.word	0x0007ffff

08004110 <LL_ADC_GetMultimode>:
 8004110:	b480      	push	{r7}
 8004112:	b083      	sub	sp, #12
 8004114:	af00      	add	r7, sp, #0
 8004116:	6078      	str	r0, [r7, #4]
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	689b      	ldr	r3, [r3, #8]
 800411c:	f003 031f 	and.w	r3, r3, #31
 8004120:	4618      	mov	r0, r3
 8004122:	370c      	adds	r7, #12
 8004124:	46bd      	mov	sp, r7
 8004126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800412a:	4770      	bx	lr

0800412c <LL_ADC_IsEnabled>:
 800412c:	b480      	push	{r7}
 800412e:	b083      	sub	sp, #12
 8004130:	af00      	add	r7, sp, #0
 8004132:	6078      	str	r0, [r7, #4]
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	689b      	ldr	r3, [r3, #8]
 8004138:	f003 0301 	and.w	r3, r3, #1
 800413c:	2b01      	cmp	r3, #1
 800413e:	d101      	bne.n	8004144 <LL_ADC_IsEnabled+0x18>
 8004140:	2301      	movs	r3, #1
 8004142:	e000      	b.n	8004146 <LL_ADC_IsEnabled+0x1a>
 8004144:	2300      	movs	r3, #0
 8004146:	4618      	mov	r0, r3
 8004148:	370c      	adds	r7, #12
 800414a:	46bd      	mov	sp, r7
 800414c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004150:	4770      	bx	lr

08004152 <LL_ADC_StartCalibration>:
 8004152:	b480      	push	{r7}
 8004154:	b083      	sub	sp, #12
 8004156:	af00      	add	r7, sp, #0
 8004158:	6078      	str	r0, [r7, #4]
 800415a:	6039      	str	r1, [r7, #0]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	689b      	ldr	r3, [r3, #8]
 8004160:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 8004164:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004168:	683a      	ldr	r2, [r7, #0]
 800416a:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800416e:	4313      	orrs	r3, r2
 8004170:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	609a      	str	r2, [r3, #8]
 8004178:	bf00      	nop
 800417a:	370c      	adds	r7, #12
 800417c:	46bd      	mov	sp, r7
 800417e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004182:	4770      	bx	lr

08004184 <LL_ADC_IsCalibrationOnGoing>:
 8004184:	b480      	push	{r7}
 8004186:	b083      	sub	sp, #12
 8004188:	af00      	add	r7, sp, #0
 800418a:	6078      	str	r0, [r7, #4]
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	689b      	ldr	r3, [r3, #8]
 8004190:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8004194:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8004198:	d101      	bne.n	800419e <LL_ADC_IsCalibrationOnGoing+0x1a>
 800419a:	2301      	movs	r3, #1
 800419c:	e000      	b.n	80041a0 <LL_ADC_IsCalibrationOnGoing+0x1c>
 800419e:	2300      	movs	r3, #0
 80041a0:	4618      	mov	r0, r3
 80041a2:	370c      	adds	r7, #12
 80041a4:	46bd      	mov	sp, r7
 80041a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041aa:	4770      	bx	lr

080041ac <LL_ADC_REG_IsConversionOngoing>:
 80041ac:	b480      	push	{r7}
 80041ae:	b083      	sub	sp, #12
 80041b0:	af00      	add	r7, sp, #0
 80041b2:	6078      	str	r0, [r7, #4]
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	689b      	ldr	r3, [r3, #8]
 80041b8:	f003 0304 	and.w	r3, r3, #4
 80041bc:	2b04      	cmp	r3, #4
 80041be:	d101      	bne.n	80041c4 <LL_ADC_REG_IsConversionOngoing+0x18>
 80041c0:	2301      	movs	r3, #1
 80041c2:	e000      	b.n	80041c6 <LL_ADC_REG_IsConversionOngoing+0x1a>
 80041c4:	2300      	movs	r3, #0
 80041c6:	4618      	mov	r0, r3
 80041c8:	370c      	adds	r7, #12
 80041ca:	46bd      	mov	sp, r7
 80041cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d0:	4770      	bx	lr

080041d2 <LL_ADC_INJ_StartConversion>:
 80041d2:	b480      	push	{r7}
 80041d4:	b083      	sub	sp, #12
 80041d6:	af00      	add	r7, sp, #0
 80041d8:	6078      	str	r0, [r7, #4]
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	689b      	ldr	r3, [r3, #8]
 80041de:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80041e2:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80041e6:	f043 0208 	orr.w	r2, r3, #8
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	609a      	str	r2, [r3, #8]
 80041ee:	bf00      	nop
 80041f0:	370c      	adds	r7, #12
 80041f2:	46bd      	mov	sp, r7
 80041f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041f8:	4770      	bx	lr

080041fa <LL_ADC_INJ_IsConversionOngoing>:
 80041fa:	b480      	push	{r7}
 80041fc:	b083      	sub	sp, #12
 80041fe:	af00      	add	r7, sp, #0
 8004200:	6078      	str	r0, [r7, #4]
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	689b      	ldr	r3, [r3, #8]
 8004206:	f003 0308 	and.w	r3, r3, #8
 800420a:	2b08      	cmp	r3, #8
 800420c:	d101      	bne.n	8004212 <LL_ADC_INJ_IsConversionOngoing+0x18>
 800420e:	2301      	movs	r3, #1
 8004210:	e000      	b.n	8004214 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8004212:	2300      	movs	r3, #0
 8004214:	4618      	mov	r0, r3
 8004216:	370c      	adds	r7, #12
 8004218:	46bd      	mov	sp, r7
 800421a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800421e:	4770      	bx	lr

08004220 <HAL_ADCEx_Calibration_Start>:
 8004220:	b580      	push	{r7, lr}
 8004222:	b084      	sub	sp, #16
 8004224:	af00      	add	r7, sp, #0
 8004226:	6078      	str	r0, [r7, #4]
 8004228:	6039      	str	r1, [r7, #0]
 800422a:	2300      	movs	r3, #0
 800422c:	60bb      	str	r3, [r7, #8]
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8004234:	2b01      	cmp	r3, #1
 8004236:	d101      	bne.n	800423c <HAL_ADCEx_Calibration_Start+0x1c>
 8004238:	2302      	movs	r3, #2
 800423a:	e04d      	b.n	80042d8 <HAL_ADCEx_Calibration_Start+0xb8>
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	2201      	movs	r2, #1
 8004240:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004244:	6878      	ldr	r0, [r7, #4]
 8004246:	f7ff fde7 	bl	8003e18 <ADC_Disable>
 800424a:	4603      	mov	r3, r0
 800424c:	73fb      	strb	r3, [r7, #15]
 800424e:	7bfb      	ldrb	r3, [r7, #15]
 8004250:	2b00      	cmp	r3, #0
 8004252:	d136      	bne.n	80042c2 <HAL_ADCEx_Calibration_Start+0xa2>
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004258:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800425c:	f023 0302 	bic.w	r3, r3, #2
 8004260:	f043 0202 	orr.w	r2, r3, #2
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	6839      	ldr	r1, [r7, #0]
 800426e:	4618      	mov	r0, r3
 8004270:	f7ff ff6f 	bl	8004152 <LL_ADC_StartCalibration>
 8004274:	e014      	b.n	80042a0 <HAL_ADCEx_Calibration_Start+0x80>
 8004276:	68bb      	ldr	r3, [r7, #8]
 8004278:	3301      	adds	r3, #1
 800427a:	60bb      	str	r3, [r7, #8]
 800427c:	68bb      	ldr	r3, [r7, #8]
 800427e:	4a18      	ldr	r2, [pc, #96]	@ (80042e0 <HAL_ADCEx_Calibration_Start+0xc0>)
 8004280:	4293      	cmp	r3, r2
 8004282:	d90d      	bls.n	80042a0 <HAL_ADCEx_Calibration_Start+0x80>
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004288:	f023 0312 	bic.w	r3, r3, #18
 800428c:	f043 0210 	orr.w	r2, r3, #16
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	2200      	movs	r2, #0
 8004298:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800429c:	2301      	movs	r3, #1
 800429e:	e01b      	b.n	80042d8 <HAL_ADCEx_Calibration_Start+0xb8>
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	4618      	mov	r0, r3
 80042a6:	f7ff ff6d 	bl	8004184 <LL_ADC_IsCalibrationOnGoing>
 80042aa:	4603      	mov	r3, r0
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d1e2      	bne.n	8004276 <HAL_ADCEx_Calibration_Start+0x56>
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80042b4:	f023 0303 	bic.w	r3, r3, #3
 80042b8:	f043 0201 	orr.w	r2, r3, #1
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	65da      	str	r2, [r3, #92]	@ 0x5c
 80042c0:	e005      	b.n	80042ce <HAL_ADCEx_Calibration_Start+0xae>
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80042c6:	f043 0210 	orr.w	r2, r3, #16
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	65da      	str	r2, [r3, #92]	@ 0x5c
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	2200      	movs	r2, #0
 80042d2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80042d6:	7bfb      	ldrb	r3, [r7, #15]
 80042d8:	4618      	mov	r0, r3
 80042da:	3710      	adds	r7, #16
 80042dc:	46bd      	mov	sp, r7
 80042de:	bd80      	pop	{r7, pc}
 80042e0:	0004de01 	.word	0x0004de01

080042e4 <HAL_ADCEx_InjectedStart>:
 80042e4:	b580      	push	{r7, lr}
 80042e6:	b086      	sub	sp, #24
 80042e8:	af00      	add	r7, sp, #0
 80042ea:	6078      	str	r0, [r7, #4]
 80042ec:	4853      	ldr	r0, [pc, #332]	@ (800443c <HAL_ADCEx_InjectedStart+0x158>)
 80042ee:	f7ff ff0f 	bl	8004110 <LL_ADC_GetMultimode>
 80042f2:	6178      	str	r0, [r7, #20]
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	4618      	mov	r0, r3
 80042fa:	f7ff ff7e 	bl	80041fa <LL_ADC_INJ_IsConversionOngoing>
 80042fe:	4603      	mov	r3, r0
 8004300:	2b00      	cmp	r3, #0
 8004302:	d001      	beq.n	8004308 <HAL_ADCEx_InjectedStart+0x24>
 8004304:	2302      	movs	r3, #2
 8004306:	e094      	b.n	8004432 <HAL_ADCEx_InjectedStart+0x14e>
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	68db      	ldr	r3, [r3, #12]
 800430e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8004312:	613b      	str	r3, [r7, #16]
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800431a:	f403 73c0 	and.w	r3, r3, #384	@ 0x180
 800431e:	2b00      	cmp	r3, #0
 8004320:	d10a      	bne.n	8004338 <HAL_ADCEx_InjectedStart+0x54>
 8004322:	693b      	ldr	r3, [r7, #16]
 8004324:	2b00      	cmp	r3, #0
 8004326:	d107      	bne.n	8004338 <HAL_ADCEx_InjectedStart+0x54>
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800432c:	f043 0220 	orr.w	r2, r3, #32
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004334:	2301      	movs	r3, #1
 8004336:	e07c      	b.n	8004432 <HAL_ADCEx_InjectedStart+0x14e>
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800433e:	2b01      	cmp	r3, #1
 8004340:	d101      	bne.n	8004346 <HAL_ADCEx_InjectedStart+0x62>
 8004342:	2302      	movs	r3, #2
 8004344:	e075      	b.n	8004432 <HAL_ADCEx_InjectedStart+0x14e>
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	2201      	movs	r2, #1
 800434a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800434e:	6878      	ldr	r0, [r7, #4]
 8004350:	f7ff fcdc 	bl	8003d0c <ADC_Enable>
 8004354:	4603      	mov	r3, r0
 8004356:	73fb      	strb	r3, [r7, #15]
 8004358:	7bfb      	ldrb	r3, [r7, #15]
 800435a:	2b00      	cmp	r3, #0
 800435c:	d164      	bne.n	8004428 <HAL_ADCEx_InjectedStart+0x144>
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004362:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004366:	2b00      	cmp	r3, #0
 8004368:	d006      	beq.n	8004378 <HAL_ADCEx_InjectedStart+0x94>
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800436e:	f023 0208 	bic.w	r2, r3, #8
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	661a      	str	r2, [r3, #96]	@ 0x60
 8004376:	e002      	b.n	800437e <HAL_ADCEx_InjectedStart+0x9a>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	2200      	movs	r2, #0
 800437c:	661a      	str	r2, [r3, #96]	@ 0x60
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004382:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8004386:	f023 0301 	bic.w	r3, r3, #1
 800438a:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	4a2a      	ldr	r2, [pc, #168]	@ (8004440 <HAL_ADCEx_InjectedStart+0x15c>)
 8004398:	4293      	cmp	r3, r2
 800439a:	d002      	beq.n	80043a2 <HAL_ADCEx_InjectedStart+0xbe>
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	e001      	b.n	80043a6 <HAL_ADCEx_InjectedStart+0xc2>
 80043a2:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80043a6:	687a      	ldr	r2, [r7, #4]
 80043a8:	6812      	ldr	r2, [r2, #0]
 80043aa:	4293      	cmp	r3, r2
 80043ac:	d002      	beq.n	80043b4 <HAL_ADCEx_InjectedStart+0xd0>
 80043ae:	697b      	ldr	r3, [r7, #20]
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d105      	bne.n	80043c0 <HAL_ADCEx_InjectedStart+0xdc>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80043b8:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	65da      	str	r2, [r3, #92]	@ 0x5c
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	2260      	movs	r2, #96	@ 0x60
 80043c6:	601a      	str	r2, [r3, #0]
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	2200      	movs	r2, #0
 80043cc:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	4a1a      	ldr	r2, [pc, #104]	@ (8004440 <HAL_ADCEx_InjectedStart+0x15c>)
 80043d6:	4293      	cmp	r3, r2
 80043d8:	d002      	beq.n	80043e0 <HAL_ADCEx_InjectedStart+0xfc>
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	e001      	b.n	80043e4 <HAL_ADCEx_InjectedStart+0x100>
 80043e0:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80043e4:	687a      	ldr	r2, [r7, #4]
 80043e6:	6812      	ldr	r2, [r2, #0]
 80043e8:	4293      	cmp	r3, r2
 80043ea:	d008      	beq.n	80043fe <HAL_ADCEx_InjectedStart+0x11a>
 80043ec:	697b      	ldr	r3, [r7, #20]
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	d005      	beq.n	80043fe <HAL_ADCEx_InjectedStart+0x11a>
 80043f2:	697b      	ldr	r3, [r7, #20]
 80043f4:	2b06      	cmp	r3, #6
 80043f6:	d002      	beq.n	80043fe <HAL_ADCEx_InjectedStart+0x11a>
 80043f8:	697b      	ldr	r3, [r7, #20]
 80043fa:	2b07      	cmp	r3, #7
 80043fc:	d10d      	bne.n	800441a <HAL_ADCEx_InjectedStart+0x136>
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	681b      	ldr	r3, [r3, #0]
 8004402:	4618      	mov	r0, r3
 8004404:	f7ff fe26 	bl	8004054 <LL_ADC_INJ_GetTrigAuto>
 8004408:	4603      	mov	r3, r0
 800440a:	2b00      	cmp	r3, #0
 800440c:	d110      	bne.n	8004430 <HAL_ADCEx_InjectedStart+0x14c>
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	4618      	mov	r0, r3
 8004414:	f7ff fedd 	bl	80041d2 <LL_ADC_INJ_StartConversion>
 8004418:	e00a      	b.n	8004430 <HAL_ADCEx_InjectedStart+0x14c>
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800441e:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004426:	e003      	b.n	8004430 <HAL_ADCEx_InjectedStart+0x14c>
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	2200      	movs	r2, #0
 800442c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004430:	7bfb      	ldrb	r3, [r7, #15]
 8004432:	4618      	mov	r0, r3
 8004434:	3718      	adds	r7, #24
 8004436:	46bd      	mov	sp, r7
 8004438:	bd80      	pop	{r7, pc}
 800443a:	bf00      	nop
 800443c:	50000300 	.word	0x50000300
 8004440:	50000100 	.word	0x50000100

08004444 <HAL_ADCEx_InjectedStart_IT>:
 8004444:	b580      	push	{r7, lr}
 8004446:	b086      	sub	sp, #24
 8004448:	af00      	add	r7, sp, #0
 800444a:	6078      	str	r0, [r7, #4]
 800444c:	486e      	ldr	r0, [pc, #440]	@ (8004608 <HAL_ADCEx_InjectedStart_IT+0x1c4>)
 800444e:	f7ff fe5f 	bl	8004110 <LL_ADC_GetMultimode>
 8004452:	6178      	str	r0, [r7, #20]
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	681b      	ldr	r3, [r3, #0]
 8004458:	4618      	mov	r0, r3
 800445a:	f7ff fece 	bl	80041fa <LL_ADC_INJ_IsConversionOngoing>
 800445e:	4603      	mov	r3, r0
 8004460:	2b00      	cmp	r3, #0
 8004462:	d001      	beq.n	8004468 <HAL_ADCEx_InjectedStart_IT+0x24>
 8004464:	2302      	movs	r3, #2
 8004466:	e0ca      	b.n	80045fe <HAL_ADCEx_InjectedStart_IT+0x1ba>
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	68db      	ldr	r3, [r3, #12]
 800446e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8004472:	613b      	str	r3, [r7, #16]
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800447a:	f403 73c0 	and.w	r3, r3, #384	@ 0x180
 800447e:	2b00      	cmp	r3, #0
 8004480:	d10a      	bne.n	8004498 <HAL_ADCEx_InjectedStart_IT+0x54>
 8004482:	693b      	ldr	r3, [r7, #16]
 8004484:	2b00      	cmp	r3, #0
 8004486:	d107      	bne.n	8004498 <HAL_ADCEx_InjectedStart_IT+0x54>
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800448c:	f043 0220 	orr.w	r2, r3, #32
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004494:	2301      	movs	r3, #1
 8004496:	e0b2      	b.n	80045fe <HAL_ADCEx_InjectedStart_IT+0x1ba>
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800449e:	2b01      	cmp	r3, #1
 80044a0:	d101      	bne.n	80044a6 <HAL_ADCEx_InjectedStart_IT+0x62>
 80044a2:	2302      	movs	r3, #2
 80044a4:	e0ab      	b.n	80045fe <HAL_ADCEx_InjectedStart_IT+0x1ba>
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	2201      	movs	r2, #1
 80044aa:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80044ae:	6878      	ldr	r0, [r7, #4]
 80044b0:	f7ff fc2c 	bl	8003d0c <ADC_Enable>
 80044b4:	4603      	mov	r3, r0
 80044b6:	73fb      	strb	r3, [r7, #15]
 80044b8:	7bfb      	ldrb	r3, [r7, #15]
 80044ba:	2b00      	cmp	r3, #0
 80044bc:	f040 809a 	bne.w	80045f4 <HAL_ADCEx_InjectedStart_IT+0x1b0>
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80044c4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d006      	beq.n	80044da <HAL_ADCEx_InjectedStart_IT+0x96>
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80044d0:	f023 0208 	bic.w	r2, r3, #8
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	661a      	str	r2, [r3, #96]	@ 0x60
 80044d8:	e002      	b.n	80044e0 <HAL_ADCEx_InjectedStart_IT+0x9c>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	2200      	movs	r2, #0
 80044de:	661a      	str	r2, [r3, #96]	@ 0x60
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80044e4:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80044e8:	f023 0301 	bic.w	r3, r3, #1
 80044ec:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	4a44      	ldr	r2, [pc, #272]	@ (800460c <HAL_ADCEx_InjectedStart_IT+0x1c8>)
 80044fa:	4293      	cmp	r3, r2
 80044fc:	d002      	beq.n	8004504 <HAL_ADCEx_InjectedStart_IT+0xc0>
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	e001      	b.n	8004508 <HAL_ADCEx_InjectedStart_IT+0xc4>
 8004504:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 8004508:	687a      	ldr	r2, [r7, #4]
 800450a:	6812      	ldr	r2, [r2, #0]
 800450c:	4293      	cmp	r3, r2
 800450e:	d002      	beq.n	8004516 <HAL_ADCEx_InjectedStart_IT+0xd2>
 8004510:	697b      	ldr	r3, [r7, #20]
 8004512:	2b00      	cmp	r3, #0
 8004514:	d105      	bne.n	8004522 <HAL_ADCEx_InjectedStart_IT+0xde>
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800451a:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	2260      	movs	r2, #96	@ 0x60
 8004528:	601a      	str	r2, [r3, #0]
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	2200      	movs	r2, #0
 800452e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	68db      	ldr	r3, [r3, #12]
 8004538:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800453c:	2b00      	cmp	r3, #0
 800453e:	d007      	beq.n	8004550 <HAL_ADCEx_InjectedStart_IT+0x10c>
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	685a      	ldr	r2, [r3, #4]
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800454e:	605a      	str	r2, [r3, #4]
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	699b      	ldr	r3, [r3, #24]
 8004554:	2b08      	cmp	r3, #8
 8004556:	d110      	bne.n	800457a <HAL_ADCEx_InjectedStart_IT+0x136>
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	685a      	ldr	r2, [r3, #4]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	f022 0220 	bic.w	r2, r2, #32
 8004566:	605a      	str	r2, [r3, #4]
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	685a      	ldr	r2, [r3, #4]
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004576:	605a      	str	r2, [r3, #4]
 8004578:	e010      	b.n	800459c <HAL_ADCEx_InjectedStart_IT+0x158>
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	685a      	ldr	r2, [r3, #4]
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	681b      	ldr	r3, [r3, #0]
 8004584:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004588:	605a      	str	r2, [r3, #4]
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	685a      	ldr	r2, [r3, #4]
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	f042 0220 	orr.w	r2, r2, #32
 8004598:	605a      	str	r2, [r3, #4]
 800459a:	bf00      	nop
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	4a1a      	ldr	r2, [pc, #104]	@ (800460c <HAL_ADCEx_InjectedStart_IT+0x1c8>)
 80045a2:	4293      	cmp	r3, r2
 80045a4:	d002      	beq.n	80045ac <HAL_ADCEx_InjectedStart_IT+0x168>
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	e001      	b.n	80045b0 <HAL_ADCEx_InjectedStart_IT+0x16c>
 80045ac:	f04f 43a0 	mov.w	r3, #1342177280	@ 0x50000000
 80045b0:	687a      	ldr	r2, [r7, #4]
 80045b2:	6812      	ldr	r2, [r2, #0]
 80045b4:	4293      	cmp	r3, r2
 80045b6:	d008      	beq.n	80045ca <HAL_ADCEx_InjectedStart_IT+0x186>
 80045b8:	697b      	ldr	r3, [r7, #20]
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d005      	beq.n	80045ca <HAL_ADCEx_InjectedStart_IT+0x186>
 80045be:	697b      	ldr	r3, [r7, #20]
 80045c0:	2b06      	cmp	r3, #6
 80045c2:	d002      	beq.n	80045ca <HAL_ADCEx_InjectedStart_IT+0x186>
 80045c4:	697b      	ldr	r3, [r7, #20]
 80045c6:	2b07      	cmp	r3, #7
 80045c8:	d10d      	bne.n	80045e6 <HAL_ADCEx_InjectedStart_IT+0x1a2>
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	4618      	mov	r0, r3
 80045d0:	f7ff fd40 	bl	8004054 <LL_ADC_INJ_GetTrigAuto>
 80045d4:	4603      	mov	r3, r0
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d110      	bne.n	80045fc <HAL_ADCEx_InjectedStart_IT+0x1b8>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	4618      	mov	r0, r3
 80045e0:	f7ff fdf7 	bl	80041d2 <LL_ADC_INJ_StartConversion>
 80045e4:	e00a      	b.n	80045fc <HAL_ADCEx_InjectedStart_IT+0x1b8>
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80045ea:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	65da      	str	r2, [r3, #92]	@ 0x5c
 80045f2:	e003      	b.n	80045fc <HAL_ADCEx_InjectedStart_IT+0x1b8>
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	2200      	movs	r2, #0
 80045f8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80045fc:	7bfb      	ldrb	r3, [r7, #15]
 80045fe:	4618      	mov	r0, r3
 8004600:	3718      	adds	r7, #24
 8004602:	46bd      	mov	sp, r7
 8004604:	bd80      	pop	{r7, pc}
 8004606:	bf00      	nop
 8004608:	50000300 	.word	0x50000300
 800460c:	50000100 	.word	0x50000100

08004610 <HAL_ADCEx_InjectedQueueOverflowCallback>:
 8004610:	b480      	push	{r7}
 8004612:	b083      	sub	sp, #12
 8004614:	af00      	add	r7, sp, #0
 8004616:	6078      	str	r0, [r7, #4]
 8004618:	bf00      	nop
 800461a:	370c      	adds	r7, #12
 800461c:	46bd      	mov	sp, r7
 800461e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004622:	4770      	bx	lr

08004624 <HAL_ADCEx_LevelOutOfWindow2Callback>:
 8004624:	b480      	push	{r7}
 8004626:	b083      	sub	sp, #12
 8004628:	af00      	add	r7, sp, #0
 800462a:	6078      	str	r0, [r7, #4]
 800462c:	bf00      	nop
 800462e:	370c      	adds	r7, #12
 8004630:	46bd      	mov	sp, r7
 8004632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004636:	4770      	bx	lr

08004638 <HAL_ADCEx_LevelOutOfWindow3Callback>:
 8004638:	b480      	push	{r7}
 800463a:	b083      	sub	sp, #12
 800463c:	af00      	add	r7, sp, #0
 800463e:	6078      	str	r0, [r7, #4]
 8004640:	bf00      	nop
 8004642:	370c      	adds	r7, #12
 8004644:	46bd      	mov	sp, r7
 8004646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800464a:	4770      	bx	lr

0800464c <HAL_ADCEx_EndOfSamplingCallback>:
 800464c:	b480      	push	{r7}
 800464e:	b083      	sub	sp, #12
 8004650:	af00      	add	r7, sp, #0
 8004652:	6078      	str	r0, [r7, #4]
 8004654:	bf00      	nop
 8004656:	370c      	adds	r7, #12
 8004658:	46bd      	mov	sp, r7
 800465a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800465e:	4770      	bx	lr

08004660 <HAL_ADCEx_InjectedConfigChannel>:
 8004660:	b580      	push	{r7, lr}
 8004662:	b0b6      	sub	sp, #216	@ 0xd8
 8004664:	af00      	add	r7, sp, #0
 8004666:	6078      	str	r0, [r7, #4]
 8004668:	6039      	str	r1, [r7, #0]
 800466a:	2300      	movs	r3, #0
 800466c:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8004670:	2300      	movs	r3, #0
 8004672:	60bb      	str	r3, [r7, #8]
 8004674:	2300      	movs	r3, #0
 8004676:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8004680:	2b01      	cmp	r3, #1
 8004682:	d102      	bne.n	800468a <HAL_ADCEx_InjectedConfigChannel+0x2a>
 8004684:	2302      	movs	r3, #2
 8004686:	f000 bcb5 	b.w	8004ff4 <HAL_ADCEx_InjectedConfigChannel+0x994>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	2201      	movs	r2, #1
 800468e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	695b      	ldr	r3, [r3, #20]
 8004696:	2b00      	cmp	r3, #0
 8004698:	d003      	beq.n	80046a2 <HAL_ADCEx_InjectedConfigChannel+0x42>
 800469a:	683b      	ldr	r3, [r7, #0]
 800469c:	6a1b      	ldr	r3, [r3, #32]
 800469e:	2b01      	cmp	r3, #1
 80046a0:	d130      	bne.n	8004704 <HAL_ADCEx_InjectedConfigChannel+0xa4>
 80046a2:	683b      	ldr	r3, [r7, #0]
 80046a4:	685b      	ldr	r3, [r3, #4]
 80046a6:	2b09      	cmp	r3, #9
 80046a8:	d179      	bne.n	800479e <HAL_ADCEx_InjectedConfigChannel+0x13e>
 80046aa:	683b      	ldr	r3, [r7, #0]
 80046ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d010      	beq.n	80046d4 <HAL_ADCEx_InjectedConfigChannel+0x74>
 80046b2:	683b      	ldr	r3, [r7, #0]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	0e9b      	lsrs	r3, r3, #26
 80046b8:	025b      	lsls	r3, r3, #9
 80046ba:	f403 5278 	and.w	r2, r3, #15872	@ 0x3e00
 80046be:	683b      	ldr	r3, [r7, #0]
 80046c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046c2:	f003 037c 	and.w	r3, r3, #124	@ 0x7c
 80046c6:	431a      	orrs	r2, r3
 80046c8:	683b      	ldr	r3, [r7, #0]
 80046ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80046cc:	4313      	orrs	r3, r2
 80046ce:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80046d2:	e007      	b.n	80046e4 <HAL_ADCEx_InjectedConfigChannel+0x84>
 80046d4:	683b      	ldr	r3, [r7, #0]
 80046d6:	681b      	ldr	r3, [r3, #0]
 80046d8:	0e9b      	lsrs	r3, r3, #26
 80046da:	025b      	lsls	r3, r3, #9
 80046dc:	f403 5378 	and.w	r3, r3, #15872	@ 0x3e00
 80046e0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	681b      	ldr	r3, [r3, #0]
 80046e8:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80046ea:	4b84      	ldr	r3, [pc, #528]	@ (80048fc <HAL_ADCEx_InjectedConfigChannel+0x29c>)
 80046ec:	4013      	ands	r3, r2
 80046ee:	687a      	ldr	r2, [r7, #4]
 80046f0:	6812      	ldr	r2, [r2, #0]
 80046f2:	f8d7 10d0 	ldr.w	r1, [r7, #208]	@ 0xd0
 80046f6:	430b      	orrs	r3, r1
 80046f8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8004700:	665a      	str	r2, [r3, #100]	@ 0x64
 8004702:	e04c      	b.n	800479e <HAL_ADCEx_InjectedConfigChannel+0x13e>
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8004708:	2b00      	cmp	r3, #0
 800470a:	d11d      	bne.n	8004748 <HAL_ADCEx_InjectedConfigChannel+0xe8>
 800470c:	683b      	ldr	r3, [r7, #0]
 800470e:	6a1a      	ldr	r2, [r3, #32]
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	669a      	str	r2, [r3, #104]	@ 0x68
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	2200      	movs	r2, #0
 8004718:	665a      	str	r2, [r3, #100]	@ 0x64
 800471a:	683b      	ldr	r3, [r7, #0]
 800471c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800471e:	2b00      	cmp	r3, #0
 8004720:	d00d      	beq.n	800473e <HAL_ADCEx_InjectedConfigChannel+0xde>
 8004722:	683b      	ldr	r3, [r7, #0]
 8004724:	6a1b      	ldr	r3, [r3, #32]
 8004726:	1e5a      	subs	r2, r3, #1
 8004728:	683b      	ldr	r3, [r7, #0]
 800472a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800472c:	f003 037c 	and.w	r3, r3, #124	@ 0x7c
 8004730:	431a      	orrs	r2, r3
 8004732:	683b      	ldr	r3, [r7, #0]
 8004734:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004736:	4313      	orrs	r3, r2
 8004738:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800473c:	e004      	b.n	8004748 <HAL_ADCEx_InjectedConfigChannel+0xe8>
 800473e:	683b      	ldr	r3, [r7, #0]
 8004740:	6a1b      	ldr	r3, [r3, #32]
 8004742:	3b01      	subs	r3, #1
 8004744:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004748:	683b      	ldr	r3, [r7, #0]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	0e9b      	lsrs	r3, r3, #26
 800474e:	f003 021f 	and.w	r2, r3, #31
 8004752:	683b      	ldr	r3, [r7, #0]
 8004754:	685b      	ldr	r3, [r3, #4]
 8004756:	f003 031f 	and.w	r3, r3, #31
 800475a:	fa02 f303 	lsl.w	r3, r2, r3
 800475e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8004762:	4313      	orrs	r3, r2
 8004764:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800476c:	1e5a      	subs	r2, r3, #1
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	669a      	str	r2, [r3, #104]	@ 0x68
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8004776:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800477a:	431a      	orrs	r2, r3
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	665a      	str	r2, [r3, #100]	@ 0x64
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8004784:	2b00      	cmp	r3, #0
 8004786:	d10a      	bne.n	800479e <HAL_ADCEx_InjectedConfigChannel+0x13e>
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800478e:	4b5b      	ldr	r3, [pc, #364]	@ (80048fc <HAL_ADCEx_InjectedConfigChannel+0x29c>)
 8004790:	4013      	ands	r3, r2
 8004792:	687a      	ldr	r2, [r7, #4]
 8004794:	6e51      	ldr	r1, [r2, #100]	@ 0x64
 8004796:	687a      	ldr	r2, [r7, #4]
 8004798:	6812      	ldr	r2, [r2, #0]
 800479a:	430b      	orrs	r3, r1
 800479c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	4618      	mov	r0, r3
 80047a4:	f7ff fd29 	bl	80041fa <LL_ADC_INJ_IsConversionOngoing>
 80047a8:	4603      	mov	r3, r0
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d124      	bne.n	80047f8 <HAL_ADCEx_InjectedConfigChannel+0x198>
 80047ae:	683b      	ldr	r3, [r7, #0]
 80047b0:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d112      	bne.n	80047de <HAL_ADCEx_InjectedConfigChannel+0x17e>
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	68db      	ldr	r3, [r3, #12]
 80047be:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 80047c2:	683b      	ldr	r3, [r7, #0]
 80047c4:	f893 3026 	ldrb.w	r3, [r3, #38]	@ 0x26
 80047c8:	055a      	lsls	r2, r3, #21
 80047ca:	683b      	ldr	r3, [r7, #0]
 80047cc:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80047d0:	051b      	lsls	r3, r3, #20
 80047d2:	431a      	orrs	r2, r3
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	430a      	orrs	r2, r1
 80047da:	60da      	str	r2, [r3, #12]
 80047dc:	e00c      	b.n	80047f8 <HAL_ADCEx_InjectedConfigChannel+0x198>
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	68db      	ldr	r3, [r3, #12]
 80047e4:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 80047e8:	683b      	ldr	r3, [r7, #0]
 80047ea:	f893 3026 	ldrb.w	r3, [r3, #38]	@ 0x26
 80047ee:	055a      	lsls	r2, r3, #21
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	430a      	orrs	r2, r1
 80047f6:	60da      	str	r2, [r3, #12]
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	4618      	mov	r0, r3
 80047fe:	f7ff fcd5 	bl	80041ac <LL_ADC_REG_IsConversionOngoing>
 8004802:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	4618      	mov	r0, r3
 800480c:	f7ff fcf5 	bl	80041fa <LL_ADC_INJ_IsConversionOngoing>
 8004810:	f8c7 00c8 	str.w	r0, [r7, #200]	@ 0xc8
 8004814:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8004818:	2b00      	cmp	r3, #0
 800481a:	f040 822e 	bne.w	8004c7a <HAL_ADCEx_InjectedConfigChannel+0x61a>
 800481e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8004822:	2b00      	cmp	r3, #0
 8004824:	f040 8229 	bne.w	8004c7a <HAL_ADCEx_InjectedConfigChannel+0x61a>
 8004828:	683b      	ldr	r3, [r7, #0]
 800482a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800482c:	2b00      	cmp	r3, #0
 800482e:	d003      	beq.n	8004838 <HAL_ADCEx_InjectedConfigChannel+0x1d8>
 8004830:	683b      	ldr	r3, [r7, #0]
 8004832:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004834:	2b00      	cmp	r3, #0
 8004836:	d116      	bne.n	8004866 <HAL_ADCEx_InjectedConfigChannel+0x206>
 8004838:	683b      	ldr	r3, [r7, #0]
 800483a:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800483e:	2b01      	cmp	r3, #1
 8004840:	d108      	bne.n	8004854 <HAL_ADCEx_InjectedConfigChannel+0x1f4>
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	681b      	ldr	r3, [r3, #0]
 8004846:	68da      	ldr	r2, [r3, #12]
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 8004850:	60da      	str	r2, [r3, #12]
 8004852:	e01f      	b.n	8004894 <HAL_ADCEx_InjectedConfigChannel+0x234>
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	68da      	ldr	r2, [r3, #12]
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	f022 7200 	bic.w	r2, r2, #33554432	@ 0x2000000
 8004862:	60da      	str	r2, [r3, #12]
 8004864:	e016      	b.n	8004894 <HAL_ADCEx_InjectedConfigChannel+0x234>
 8004866:	683b      	ldr	r3, [r7, #0]
 8004868:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800486c:	2b01      	cmp	r3, #1
 800486e:	d109      	bne.n	8004884 <HAL_ADCEx_InjectedConfigChannel+0x224>
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004874:	f043 0220 	orr.w	r2, r3, #32
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800487c:	2301      	movs	r3, #1
 800487e:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8004882:	e007      	b.n	8004894 <HAL_ADCEx_InjectedConfigChannel+0x234>
 8004884:	687b      	ldr	r3, [r7, #4]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	68da      	ldr	r2, [r3, #12]
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	f022 7200 	bic.w	r2, r2, #33554432	@ 0x2000000
 8004892:	60da      	str	r2, [r3, #12]
 8004894:	683b      	ldr	r3, [r7, #0]
 8004896:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800489a:	2b01      	cmp	r3, #1
 800489c:	d110      	bne.n	80048c0 <HAL_ADCEx_InjectedConfigChannel+0x260>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	691b      	ldr	r3, [r3, #16]
 80048a4:	f423 72ff 	bic.w	r2, r3, #510	@ 0x1fe
 80048a8:	683b      	ldr	r3, [r7, #0]
 80048aa:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80048ac:	683b      	ldr	r3, [r7, #0]
 80048ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80048b0:	430b      	orrs	r3, r1
 80048b2:	431a      	orrs	r2, r3
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	f042 0202 	orr.w	r2, r2, #2
 80048bc:	611a      	str	r2, [r3, #16]
 80048be:	e007      	b.n	80048d0 <HAL_ADCEx_InjectedConfigChannel+0x270>
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	691a      	ldr	r2, [r3, #16]
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	f022 0202 	bic.w	r2, r2, #2
 80048ce:	611a      	str	r2, [r3, #16]
 80048d0:	683b      	ldr	r3, [r7, #0]
 80048d2:	689b      	ldr	r3, [r3, #8]
 80048d4:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80048d8:	d112      	bne.n	8004900 <HAL_ADCEx_InjectedConfigChannel+0x2a0>
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	6818      	ldr	r0, [r3, #0]
 80048de:	683b      	ldr	r3, [r7, #0]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	2200      	movs	r2, #0
 80048e4:	4619      	mov	r1, r3
 80048e6:	f7ff fbc3 	bl	8004070 <LL_ADC_SetChannelSamplingTime>
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	f04f 4100 	mov.w	r1, #2147483648	@ 0x80000000
 80048f2:	4618      	mov	r0, r3
 80048f4:	f7ff fb9b 	bl	800402e <LL_ADC_SetSamplingTimeCommonConfig>
 80048f8:	e011      	b.n	800491e <HAL_ADCEx_InjectedConfigChannel+0x2be>
 80048fa:	bf00      	nop
 80048fc:	04104000 	.word	0x04104000
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	6818      	ldr	r0, [r3, #0]
 8004904:	683b      	ldr	r3, [r7, #0]
 8004906:	6819      	ldr	r1, [r3, #0]
 8004908:	683b      	ldr	r3, [r7, #0]
 800490a:	689b      	ldr	r3, [r3, #8]
 800490c:	461a      	mov	r2, r3
 800490e:	f7ff fbaf 	bl	8004070 <LL_ADC_SetChannelSamplingTime>
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	2100      	movs	r1, #0
 8004918:	4618      	mov	r0, r3
 800491a:	f7ff fb88 	bl	800402e <LL_ADC_SetSamplingTimeCommonConfig>
 800491e:	683b      	ldr	r3, [r7, #0]
 8004920:	695a      	ldr	r2, [r3, #20]
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	68db      	ldr	r3, [r3, #12]
 8004928:	08db      	lsrs	r3, r3, #3
 800492a:	f003 0303 	and.w	r3, r3, #3
 800492e:	005b      	lsls	r3, r3, #1
 8004930:	fa02 f303 	lsl.w	r3, r2, r3
 8004934:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004938:	683b      	ldr	r3, [r7, #0]
 800493a:	691b      	ldr	r3, [r3, #16]
 800493c:	2b04      	cmp	r3, #4
 800493e:	d022      	beq.n	8004986 <HAL_ADCEx_InjectedConfigChannel+0x326>
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	6818      	ldr	r0, [r3, #0]
 8004944:	683b      	ldr	r3, [r7, #0]
 8004946:	6919      	ldr	r1, [r3, #16]
 8004948:	683b      	ldr	r3, [r7, #0]
 800494a:	681a      	ldr	r2, [r3, #0]
 800494c:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8004950:	f7ff fae2 	bl	8003f18 <LL_ADC_SetOffset>
 8004954:	687b      	ldr	r3, [r7, #4]
 8004956:	6818      	ldr	r0, [r3, #0]
 8004958:	683b      	ldr	r3, [r7, #0]
 800495a:	6919      	ldr	r1, [r3, #16]
 800495c:	683b      	ldr	r3, [r7, #0]
 800495e:	699b      	ldr	r3, [r3, #24]
 8004960:	461a      	mov	r2, r3
 8004962:	f7ff fb2e 	bl	8003fc2 <LL_ADC_SetOffsetSign>
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	6818      	ldr	r0, [r3, #0]
 800496a:	683b      	ldr	r3, [r7, #0]
 800496c:	6919      	ldr	r1, [r3, #16]
 800496e:	683b      	ldr	r3, [r7, #0]
 8004970:	7f1b      	ldrb	r3, [r3, #28]
 8004972:	2b01      	cmp	r3, #1
 8004974:	d102      	bne.n	800497c <HAL_ADCEx_InjectedConfigChannel+0x31c>
 8004976:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800497a:	e000      	b.n	800497e <HAL_ADCEx_InjectedConfigChannel+0x31e>
 800497c:	2300      	movs	r3, #0
 800497e:	461a      	mov	r2, r3
 8004980:	f7ff fb3a 	bl	8003ff8 <LL_ADC_SetOffsetSaturation>
 8004984:	e179      	b.n	8004c7a <HAL_ADCEx_InjectedConfigChannel+0x61a>
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	2100      	movs	r1, #0
 800498c:	4618      	mov	r0, r3
 800498e:	f7ff fae7 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004992:	4603      	mov	r3, r0
 8004994:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004998:	2b00      	cmp	r3, #0
 800499a:	d10a      	bne.n	80049b2 <HAL_ADCEx_InjectedConfigChannel+0x352>
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	2100      	movs	r1, #0
 80049a2:	4618      	mov	r0, r3
 80049a4:	f7ff fadc 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 80049a8:	4603      	mov	r3, r0
 80049aa:	0e9b      	lsrs	r3, r3, #26
 80049ac:	f003 021f 	and.w	r2, r3, #31
 80049b0:	e01e      	b.n	80049f0 <HAL_ADCEx_InjectedConfigChannel+0x390>
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	681b      	ldr	r3, [r3, #0]
 80049b6:	2100      	movs	r1, #0
 80049b8:	4618      	mov	r0, r3
 80049ba:	f7ff fad1 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 80049be:	4603      	mov	r3, r0
 80049c0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80049c4:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80049c8:	fa93 f3a3 	rbit	r3, r3
 80049cc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80049d0:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80049d4:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 80049d8:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80049dc:	2b00      	cmp	r3, #0
 80049de:	d101      	bne.n	80049e4 <HAL_ADCEx_InjectedConfigChannel+0x384>
 80049e0:	2320      	movs	r3, #32
 80049e2:	e004      	b.n	80049ee <HAL_ADCEx_InjectedConfigChannel+0x38e>
 80049e4:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80049e8:	fab3 f383 	clz	r3, r3
 80049ec:	b2db      	uxtb	r3, r3
 80049ee:	461a      	mov	r2, r3
 80049f0:	683b      	ldr	r3, [r7, #0]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80049f8:	2b00      	cmp	r3, #0
 80049fa:	d105      	bne.n	8004a08 <HAL_ADCEx_InjectedConfigChannel+0x3a8>
 80049fc:	683b      	ldr	r3, [r7, #0]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	0e9b      	lsrs	r3, r3, #26
 8004a02:	f003 031f 	and.w	r3, r3, #31
 8004a06:	e018      	b.n	8004a3a <HAL_ADCEx_InjectedConfigChannel+0x3da>
 8004a08:	683b      	ldr	r3, [r7, #0]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004a10:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004a14:	fa93 f3a3 	rbit	r3, r3
 8004a18:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8004a1c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8004a20:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004a24:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8004a28:	2b00      	cmp	r3, #0
 8004a2a:	d101      	bne.n	8004a30 <HAL_ADCEx_InjectedConfigChannel+0x3d0>
 8004a2c:	2320      	movs	r3, #32
 8004a2e:	e004      	b.n	8004a3a <HAL_ADCEx_InjectedConfigChannel+0x3da>
 8004a30:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8004a34:	fab3 f383 	clz	r3, r3
 8004a38:	b2db      	uxtb	r3, r3
 8004a3a:	429a      	cmp	r2, r3
 8004a3c:	d106      	bne.n	8004a4c <HAL_ADCEx_InjectedConfigChannel+0x3ec>
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	2200      	movs	r2, #0
 8004a44:	2100      	movs	r1, #0
 8004a46:	4618      	mov	r0, r3
 8004a48:	f7ff faa0 	bl	8003f8c <LL_ADC_SetOffsetState>
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	2101      	movs	r1, #1
 8004a52:	4618      	mov	r0, r3
 8004a54:	f7ff fa84 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004a58:	4603      	mov	r3, r0
 8004a5a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004a5e:	2b00      	cmp	r3, #0
 8004a60:	d10a      	bne.n	8004a78 <HAL_ADCEx_InjectedConfigChannel+0x418>
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	2101      	movs	r1, #1
 8004a68:	4618      	mov	r0, r3
 8004a6a:	f7ff fa79 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004a6e:	4603      	mov	r3, r0
 8004a70:	0e9b      	lsrs	r3, r3, #26
 8004a72:	f003 021f 	and.w	r2, r3, #31
 8004a76:	e01e      	b.n	8004ab6 <HAL_ADCEx_InjectedConfigChannel+0x456>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	2101      	movs	r1, #1
 8004a7e:	4618      	mov	r0, r3
 8004a80:	f7ff fa6e 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004a84:	4603      	mov	r3, r0
 8004a86:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004a8a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8004a8e:	fa93 f3a3 	rbit	r3, r3
 8004a92:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004a96:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8004a9a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8004a9e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8004aa2:	2b00      	cmp	r3, #0
 8004aa4:	d101      	bne.n	8004aaa <HAL_ADCEx_InjectedConfigChannel+0x44a>
 8004aa6:	2320      	movs	r3, #32
 8004aa8:	e004      	b.n	8004ab4 <HAL_ADCEx_InjectedConfigChannel+0x454>
 8004aaa:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8004aae:	fab3 f383 	clz	r3, r3
 8004ab2:	b2db      	uxtb	r3, r3
 8004ab4:	461a      	mov	r2, r3
 8004ab6:	683b      	ldr	r3, [r7, #0]
 8004ab8:	681b      	ldr	r3, [r3, #0]
 8004aba:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004abe:	2b00      	cmp	r3, #0
 8004ac0:	d105      	bne.n	8004ace <HAL_ADCEx_InjectedConfigChannel+0x46e>
 8004ac2:	683b      	ldr	r3, [r7, #0]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	0e9b      	lsrs	r3, r3, #26
 8004ac8:	f003 031f 	and.w	r3, r3, #31
 8004acc:	e018      	b.n	8004b00 <HAL_ADCEx_InjectedConfigChannel+0x4a0>
 8004ace:	683b      	ldr	r3, [r7, #0]
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004ad6:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8004ada:	fa93 f3a3 	rbit	r3, r3
 8004ade:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004ae2:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8004ae6:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004aea:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d101      	bne.n	8004af6 <HAL_ADCEx_InjectedConfigChannel+0x496>
 8004af2:	2320      	movs	r3, #32
 8004af4:	e004      	b.n	8004b00 <HAL_ADCEx_InjectedConfigChannel+0x4a0>
 8004af6:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8004afa:	fab3 f383 	clz	r3, r3
 8004afe:	b2db      	uxtb	r3, r3
 8004b00:	429a      	cmp	r2, r3
 8004b02:	d106      	bne.n	8004b12 <HAL_ADCEx_InjectedConfigChannel+0x4b2>
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	2200      	movs	r2, #0
 8004b0a:	2101      	movs	r1, #1
 8004b0c:	4618      	mov	r0, r3
 8004b0e:	f7ff fa3d 	bl	8003f8c <LL_ADC_SetOffsetState>
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	681b      	ldr	r3, [r3, #0]
 8004b16:	2102      	movs	r1, #2
 8004b18:	4618      	mov	r0, r3
 8004b1a:	f7ff fa21 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004b1e:	4603      	mov	r3, r0
 8004b20:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d10a      	bne.n	8004b3e <HAL_ADCEx_InjectedConfigChannel+0x4de>
 8004b28:	687b      	ldr	r3, [r7, #4]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	2102      	movs	r1, #2
 8004b2e:	4618      	mov	r0, r3
 8004b30:	f7ff fa16 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004b34:	4603      	mov	r3, r0
 8004b36:	0e9b      	lsrs	r3, r3, #26
 8004b38:	f003 021f 	and.w	r2, r3, #31
 8004b3c:	e01e      	b.n	8004b7c <HAL_ADCEx_InjectedConfigChannel+0x51c>
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	2102      	movs	r1, #2
 8004b44:	4618      	mov	r0, r3
 8004b46:	f7ff fa0b 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004b4a:	4603      	mov	r3, r0
 8004b4c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004b50:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004b54:	fa93 f3a3 	rbit	r3, r3
 8004b58:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004b5c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004b60:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004b64:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004b68:	2b00      	cmp	r3, #0
 8004b6a:	d101      	bne.n	8004b70 <HAL_ADCEx_InjectedConfigChannel+0x510>
 8004b6c:	2320      	movs	r3, #32
 8004b6e:	e004      	b.n	8004b7a <HAL_ADCEx_InjectedConfigChannel+0x51a>
 8004b70:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004b74:	fab3 f383 	clz	r3, r3
 8004b78:	b2db      	uxtb	r3, r3
 8004b7a:	461a      	mov	r2, r3
 8004b7c:	683b      	ldr	r3, [r7, #0]
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004b84:	2b00      	cmp	r3, #0
 8004b86:	d105      	bne.n	8004b94 <HAL_ADCEx_InjectedConfigChannel+0x534>
 8004b88:	683b      	ldr	r3, [r7, #0]
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	0e9b      	lsrs	r3, r3, #26
 8004b8e:	f003 031f 	and.w	r3, r3, #31
 8004b92:	e014      	b.n	8004bbe <HAL_ADCEx_InjectedConfigChannel+0x55e>
 8004b94:	683b      	ldr	r3, [r7, #0]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004b9a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8004b9c:	fa93 f3a3 	rbit	r3, r3
 8004ba0:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004ba2:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004ba4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004ba8:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8004bac:	2b00      	cmp	r3, #0
 8004bae:	d101      	bne.n	8004bb4 <HAL_ADCEx_InjectedConfigChannel+0x554>
 8004bb0:	2320      	movs	r3, #32
 8004bb2:	e004      	b.n	8004bbe <HAL_ADCEx_InjectedConfigChannel+0x55e>
 8004bb4:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8004bb8:	fab3 f383 	clz	r3, r3
 8004bbc:	b2db      	uxtb	r3, r3
 8004bbe:	429a      	cmp	r2, r3
 8004bc0:	d106      	bne.n	8004bd0 <HAL_ADCEx_InjectedConfigChannel+0x570>
 8004bc2:	687b      	ldr	r3, [r7, #4]
 8004bc4:	681b      	ldr	r3, [r3, #0]
 8004bc6:	2200      	movs	r2, #0
 8004bc8:	2102      	movs	r1, #2
 8004bca:	4618      	mov	r0, r3
 8004bcc:	f7ff f9de 	bl	8003f8c <LL_ADC_SetOffsetState>
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	2103      	movs	r1, #3
 8004bd6:	4618      	mov	r0, r3
 8004bd8:	f7ff f9c2 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004bdc:	4603      	mov	r3, r0
 8004bde:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d10a      	bne.n	8004bfc <HAL_ADCEx_InjectedConfigChannel+0x59c>
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	681b      	ldr	r3, [r3, #0]
 8004bea:	2103      	movs	r1, #3
 8004bec:	4618      	mov	r0, r3
 8004bee:	f7ff f9b7 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004bf2:	4603      	mov	r3, r0
 8004bf4:	0e9b      	lsrs	r3, r3, #26
 8004bf6:	f003 021f 	and.w	r2, r3, #31
 8004bfa:	e017      	b.n	8004c2c <HAL_ADCEx_InjectedConfigChannel+0x5cc>
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	2103      	movs	r1, #3
 8004c02:	4618      	mov	r0, r3
 8004c04:	f7ff f9ac 	bl	8003f60 <LL_ADC_GetOffsetChannel>
 8004c08:	4603      	mov	r3, r0
 8004c0a:	673b      	str	r3, [r7, #112]	@ 0x70
 8004c0c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004c0e:	fa93 f3a3 	rbit	r3, r3
 8004c12:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004c14:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004c16:	677b      	str	r3, [r7, #116]	@ 0x74
 8004c18:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	d101      	bne.n	8004c22 <HAL_ADCEx_InjectedConfigChannel+0x5c2>
 8004c1e:	2320      	movs	r3, #32
 8004c20:	e003      	b.n	8004c2a <HAL_ADCEx_InjectedConfigChannel+0x5ca>
 8004c22:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004c24:	fab3 f383 	clz	r3, r3
 8004c28:	b2db      	uxtb	r3, r3
 8004c2a:	461a      	mov	r2, r3
 8004c2c:	683b      	ldr	r3, [r7, #0]
 8004c2e:	681b      	ldr	r3, [r3, #0]
 8004c30:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004c34:	2b00      	cmp	r3, #0
 8004c36:	d105      	bne.n	8004c44 <HAL_ADCEx_InjectedConfigChannel+0x5e4>
 8004c38:	683b      	ldr	r3, [r7, #0]
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	0e9b      	lsrs	r3, r3, #26
 8004c3e:	f003 031f 	and.w	r3, r3, #31
 8004c42:	e011      	b.n	8004c68 <HAL_ADCEx_InjectedConfigChannel+0x608>
 8004c44:	683b      	ldr	r3, [r7, #0]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	667b      	str	r3, [r7, #100]	@ 0x64
 8004c4a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004c4c:	fa93 f3a3 	rbit	r3, r3
 8004c50:	663b      	str	r3, [r7, #96]	@ 0x60
 8004c52:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004c54:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004c56:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004c58:	2b00      	cmp	r3, #0
 8004c5a:	d101      	bne.n	8004c60 <HAL_ADCEx_InjectedConfigChannel+0x600>
 8004c5c:	2320      	movs	r3, #32
 8004c5e:	e003      	b.n	8004c68 <HAL_ADCEx_InjectedConfigChannel+0x608>
 8004c60:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004c62:	fab3 f383 	clz	r3, r3
 8004c66:	b2db      	uxtb	r3, r3
 8004c68:	429a      	cmp	r2, r3
 8004c6a:	d106      	bne.n	8004c7a <HAL_ADCEx_InjectedConfigChannel+0x61a>
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	2200      	movs	r2, #0
 8004c72:	2103      	movs	r1, #3
 8004c74:	4618      	mov	r0, r3
 8004c76:	f7ff f989 	bl	8003f8c <LL_ADC_SetOffsetState>
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	4618      	mov	r0, r3
 8004c80:	f7ff fa54 	bl	800412c <LL_ADC_IsEnabled>
 8004c84:	4603      	mov	r3, r0
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	f040 8140 	bne.w	8004f0c <HAL_ADCEx_InjectedConfigChannel+0x8ac>
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	6818      	ldr	r0, [r3, #0]
 8004c90:	683b      	ldr	r3, [r7, #0]
 8004c92:	6819      	ldr	r1, [r3, #0]
 8004c94:	683b      	ldr	r3, [r7, #0]
 8004c96:	68db      	ldr	r3, [r3, #12]
 8004c98:	461a      	mov	r2, r3
 8004c9a:	f7ff fa15 	bl	80040c8 <LL_ADC_SetChannelSingleDiff>
 8004c9e:	683b      	ldr	r3, [r7, #0]
 8004ca0:	68db      	ldr	r3, [r3, #12]
 8004ca2:	4a8f      	ldr	r2, [pc, #572]	@ (8004ee0 <HAL_ADCEx_InjectedConfigChannel+0x880>)
 8004ca4:	4293      	cmp	r3, r2
 8004ca6:	f040 8131 	bne.w	8004f0c <HAL_ADCEx_InjectedConfigChannel+0x8ac>
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	6818      	ldr	r0, [r3, #0]
 8004cae:	683b      	ldr	r3, [r7, #0]
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d10b      	bne.n	8004cd2 <HAL_ADCEx_InjectedConfigChannel+0x672>
 8004cba:	683b      	ldr	r3, [r7, #0]
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	0e9b      	lsrs	r3, r3, #26
 8004cc0:	3301      	adds	r3, #1
 8004cc2:	f003 031f 	and.w	r3, r3, #31
 8004cc6:	2b09      	cmp	r3, #9
 8004cc8:	bf94      	ite	ls
 8004cca:	2301      	movls	r3, #1
 8004ccc:	2300      	movhi	r3, #0
 8004cce:	b2db      	uxtb	r3, r3
 8004cd0:	e019      	b.n	8004d06 <HAL_ADCEx_InjectedConfigChannel+0x6a6>
 8004cd2:	683b      	ldr	r3, [r7, #0]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004cd8:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8004cda:	fa93 f3a3 	rbit	r3, r3
 8004cde:	657b      	str	r3, [r7, #84]	@ 0x54
 8004ce0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004ce2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004ce4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004ce6:	2b00      	cmp	r3, #0
 8004ce8:	d101      	bne.n	8004cee <HAL_ADCEx_InjectedConfigChannel+0x68e>
 8004cea:	2320      	movs	r3, #32
 8004cec:	e003      	b.n	8004cf6 <HAL_ADCEx_InjectedConfigChannel+0x696>
 8004cee:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004cf0:	fab3 f383 	clz	r3, r3
 8004cf4:	b2db      	uxtb	r3, r3
 8004cf6:	3301      	adds	r3, #1
 8004cf8:	f003 031f 	and.w	r3, r3, #31
 8004cfc:	2b09      	cmp	r3, #9
 8004cfe:	bf94      	ite	ls
 8004d00:	2301      	movls	r3, #1
 8004d02:	2300      	movhi	r3, #0
 8004d04:	b2db      	uxtb	r3, r3
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d079      	beq.n	8004dfe <HAL_ADCEx_InjectedConfigChannel+0x79e>
 8004d0a:	683b      	ldr	r3, [r7, #0]
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d107      	bne.n	8004d26 <HAL_ADCEx_InjectedConfigChannel+0x6c6>
 8004d16:	683b      	ldr	r3, [r7, #0]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	0e9b      	lsrs	r3, r3, #26
 8004d1c:	3301      	adds	r3, #1
 8004d1e:	069b      	lsls	r3, r3, #26
 8004d20:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004d24:	e015      	b.n	8004d52 <HAL_ADCEx_InjectedConfigChannel+0x6f2>
 8004d26:	683b      	ldr	r3, [r7, #0]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004d2c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004d2e:	fa93 f3a3 	rbit	r3, r3
 8004d32:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004d34:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004d36:	653b      	str	r3, [r7, #80]	@ 0x50
 8004d38:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d101      	bne.n	8004d42 <HAL_ADCEx_InjectedConfigChannel+0x6e2>
 8004d3e:	2320      	movs	r3, #32
 8004d40:	e003      	b.n	8004d4a <HAL_ADCEx_InjectedConfigChannel+0x6ea>
 8004d42:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004d44:	fab3 f383 	clz	r3, r3
 8004d48:	b2db      	uxtb	r3, r3
 8004d4a:	3301      	adds	r3, #1
 8004d4c:	069b      	lsls	r3, r3, #26
 8004d4e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004d52:	683b      	ldr	r3, [r7, #0]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004d5a:	2b00      	cmp	r3, #0
 8004d5c:	d109      	bne.n	8004d72 <HAL_ADCEx_InjectedConfigChannel+0x712>
 8004d5e:	683b      	ldr	r3, [r7, #0]
 8004d60:	681b      	ldr	r3, [r3, #0]
 8004d62:	0e9b      	lsrs	r3, r3, #26
 8004d64:	3301      	adds	r3, #1
 8004d66:	f003 031f 	and.w	r3, r3, #31
 8004d6a:	2101      	movs	r1, #1
 8004d6c:	fa01 f303 	lsl.w	r3, r1, r3
 8004d70:	e017      	b.n	8004da2 <HAL_ADCEx_InjectedConfigChannel+0x742>
 8004d72:	683b      	ldr	r3, [r7, #0]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	643b      	str	r3, [r7, #64]	@ 0x40
 8004d78:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004d7a:	fa93 f3a3 	rbit	r3, r3
 8004d7e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004d80:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004d82:	647b      	str	r3, [r7, #68]	@ 0x44
 8004d84:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004d86:	2b00      	cmp	r3, #0
 8004d88:	d101      	bne.n	8004d8e <HAL_ADCEx_InjectedConfigChannel+0x72e>
 8004d8a:	2320      	movs	r3, #32
 8004d8c:	e003      	b.n	8004d96 <HAL_ADCEx_InjectedConfigChannel+0x736>
 8004d8e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004d90:	fab3 f383 	clz	r3, r3
 8004d94:	b2db      	uxtb	r3, r3
 8004d96:	3301      	adds	r3, #1
 8004d98:	f003 031f 	and.w	r3, r3, #31
 8004d9c:	2101      	movs	r1, #1
 8004d9e:	fa01 f303 	lsl.w	r3, r1, r3
 8004da2:	ea42 0103 	orr.w	r1, r2, r3
 8004da6:	683b      	ldr	r3, [r7, #0]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	d10a      	bne.n	8004dc8 <HAL_ADCEx_InjectedConfigChannel+0x768>
 8004db2:	683b      	ldr	r3, [r7, #0]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	0e9b      	lsrs	r3, r3, #26
 8004db8:	3301      	adds	r3, #1
 8004dba:	f003 021f 	and.w	r2, r3, #31
 8004dbe:	4613      	mov	r3, r2
 8004dc0:	005b      	lsls	r3, r3, #1
 8004dc2:	4413      	add	r3, r2
 8004dc4:	051b      	lsls	r3, r3, #20
 8004dc6:	e018      	b.n	8004dfa <HAL_ADCEx_InjectedConfigChannel+0x79a>
 8004dc8:	683b      	ldr	r3, [r7, #0]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	637b      	str	r3, [r7, #52]	@ 0x34
 8004dce:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004dd0:	fa93 f3a3 	rbit	r3, r3
 8004dd4:	633b      	str	r3, [r7, #48]	@ 0x30
 8004dd6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004dd8:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004dda:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d101      	bne.n	8004de4 <HAL_ADCEx_InjectedConfigChannel+0x784>
 8004de0:	2320      	movs	r3, #32
 8004de2:	e003      	b.n	8004dec <HAL_ADCEx_InjectedConfigChannel+0x78c>
 8004de4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004de6:	fab3 f383 	clz	r3, r3
 8004dea:	b2db      	uxtb	r3, r3
 8004dec:	3301      	adds	r3, #1
 8004dee:	f003 021f 	and.w	r2, r3, #31
 8004df2:	4613      	mov	r3, r2
 8004df4:	005b      	lsls	r3, r3, #1
 8004df6:	4413      	add	r3, r2
 8004df8:	051b      	lsls	r3, r3, #20
 8004dfa:	430b      	orrs	r3, r1
 8004dfc:	e081      	b.n	8004f02 <HAL_ADCEx_InjectedConfigChannel+0x8a2>
 8004dfe:	683b      	ldr	r3, [r7, #0]
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	d107      	bne.n	8004e1a <HAL_ADCEx_InjectedConfigChannel+0x7ba>
 8004e0a:	683b      	ldr	r3, [r7, #0]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	0e9b      	lsrs	r3, r3, #26
 8004e10:	3301      	adds	r3, #1
 8004e12:	069b      	lsls	r3, r3, #26
 8004e14:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004e18:	e015      	b.n	8004e46 <HAL_ADCEx_InjectedConfigChannel+0x7e6>
 8004e1a:	683b      	ldr	r3, [r7, #0]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e20:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e22:	fa93 f3a3 	rbit	r3, r3
 8004e26:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e28:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e2a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004e2c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d101      	bne.n	8004e36 <HAL_ADCEx_InjectedConfigChannel+0x7d6>
 8004e32:	2320      	movs	r3, #32
 8004e34:	e003      	b.n	8004e3e <HAL_ADCEx_InjectedConfigChannel+0x7de>
 8004e36:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004e38:	fab3 f383 	clz	r3, r3
 8004e3c:	b2db      	uxtb	r3, r3
 8004e3e:	3301      	adds	r3, #1
 8004e40:	069b      	lsls	r3, r3, #26
 8004e42:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004e46:	683b      	ldr	r3, [r7, #0]
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d109      	bne.n	8004e66 <HAL_ADCEx_InjectedConfigChannel+0x806>
 8004e52:	683b      	ldr	r3, [r7, #0]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	0e9b      	lsrs	r3, r3, #26
 8004e58:	3301      	adds	r3, #1
 8004e5a:	f003 031f 	and.w	r3, r3, #31
 8004e5e:	2101      	movs	r1, #1
 8004e60:	fa01 f303 	lsl.w	r3, r1, r3
 8004e64:	e017      	b.n	8004e96 <HAL_ADCEx_InjectedConfigChannel+0x836>
 8004e66:	683b      	ldr	r3, [r7, #0]
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	61fb      	str	r3, [r7, #28]
 8004e6c:	69fb      	ldr	r3, [r7, #28]
 8004e6e:	fa93 f3a3 	rbit	r3, r3
 8004e72:	61bb      	str	r3, [r7, #24]
 8004e74:	69bb      	ldr	r3, [r7, #24]
 8004e76:	623b      	str	r3, [r7, #32]
 8004e78:	6a3b      	ldr	r3, [r7, #32]
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d101      	bne.n	8004e82 <HAL_ADCEx_InjectedConfigChannel+0x822>
 8004e7e:	2320      	movs	r3, #32
 8004e80:	e003      	b.n	8004e8a <HAL_ADCEx_InjectedConfigChannel+0x82a>
 8004e82:	6a3b      	ldr	r3, [r7, #32]
 8004e84:	fab3 f383 	clz	r3, r3
 8004e88:	b2db      	uxtb	r3, r3
 8004e8a:	3301      	adds	r3, #1
 8004e8c:	f003 031f 	and.w	r3, r3, #31
 8004e90:	2101      	movs	r1, #1
 8004e92:	fa01 f303 	lsl.w	r3, r1, r3
 8004e96:	ea42 0103 	orr.w	r1, r2, r3
 8004e9a:	683b      	ldr	r3, [r7, #0]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004ea2:	2b00      	cmp	r3, #0
 8004ea4:	d10d      	bne.n	8004ec2 <HAL_ADCEx_InjectedConfigChannel+0x862>
 8004ea6:	683b      	ldr	r3, [r7, #0]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	0e9b      	lsrs	r3, r3, #26
 8004eac:	3301      	adds	r3, #1
 8004eae:	f003 021f 	and.w	r2, r3, #31
 8004eb2:	4613      	mov	r3, r2
 8004eb4:	005b      	lsls	r3, r3, #1
 8004eb6:	4413      	add	r3, r2
 8004eb8:	3b1e      	subs	r3, #30
 8004eba:	051b      	lsls	r3, r3, #20
 8004ebc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8004ec0:	e01e      	b.n	8004f00 <HAL_ADCEx_InjectedConfigChannel+0x8a0>
 8004ec2:	683b      	ldr	r3, [r7, #0]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	613b      	str	r3, [r7, #16]
 8004ec8:	693b      	ldr	r3, [r7, #16]
 8004eca:	fa93 f3a3 	rbit	r3, r3
 8004ece:	60fb      	str	r3, [r7, #12]
 8004ed0:	68fb      	ldr	r3, [r7, #12]
 8004ed2:	617b      	str	r3, [r7, #20]
 8004ed4:	697b      	ldr	r3, [r7, #20]
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	d104      	bne.n	8004ee4 <HAL_ADCEx_InjectedConfigChannel+0x884>
 8004eda:	2320      	movs	r3, #32
 8004edc:	e006      	b.n	8004eec <HAL_ADCEx_InjectedConfigChannel+0x88c>
 8004ede:	bf00      	nop
 8004ee0:	407f0000 	.word	0x407f0000
 8004ee4:	697b      	ldr	r3, [r7, #20]
 8004ee6:	fab3 f383 	clz	r3, r3
 8004eea:	b2db      	uxtb	r3, r3
 8004eec:	3301      	adds	r3, #1
 8004eee:	f003 021f 	and.w	r2, r3, #31
 8004ef2:	4613      	mov	r3, r2
 8004ef4:	005b      	lsls	r3, r3, #1
 8004ef6:	4413      	add	r3, r2
 8004ef8:	3b1e      	subs	r3, #30
 8004efa:	051b      	lsls	r3, r3, #20
 8004efc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8004f00:	430b      	orrs	r3, r1
 8004f02:	683a      	ldr	r2, [r7, #0]
 8004f04:	6892      	ldr	r2, [r2, #8]
 8004f06:	4619      	mov	r1, r3
 8004f08:	f7ff f8b2 	bl	8004070 <LL_ADC_SetChannelSamplingTime>
 8004f0c:	683b      	ldr	r3, [r7, #0]
 8004f0e:	681a      	ldr	r2, [r3, #0]
 8004f10:	4b3a      	ldr	r3, [pc, #232]	@ (8004ffc <HAL_ADCEx_InjectedConfigChannel+0x99c>)
 8004f12:	4013      	ands	r3, r2
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d067      	beq.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004f18:	4839      	ldr	r0, [pc, #228]	@ (8005000 <HAL_ADCEx_InjectedConfigChannel+0x9a0>)
 8004f1a:	f7fe ffef 	bl	8003efc <LL_ADC_GetCommonPathInternalCh>
 8004f1e:	f8c7 00c0 	str.w	r0, [r7, #192]	@ 0xc0
 8004f22:	683b      	ldr	r3, [r7, #0]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	4a37      	ldr	r2, [pc, #220]	@ (8005004 <HAL_ADCEx_InjectedConfigChannel+0x9a4>)
 8004f28:	4293      	cmp	r3, r2
 8004f2a:	d004      	beq.n	8004f36 <HAL_ADCEx_InjectedConfigChannel+0x8d6>
 8004f2c:	683b      	ldr	r3, [r7, #0]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	4a35      	ldr	r2, [pc, #212]	@ (8005008 <HAL_ADCEx_InjectedConfigChannel+0x9a8>)
 8004f32:	4293      	cmp	r3, r2
 8004f34:	d127      	bne.n	8004f86 <HAL_ADCEx_InjectedConfigChannel+0x926>
 8004f36:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8004f3a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d121      	bne.n	8004f86 <HAL_ADCEx_InjectedConfigChannel+0x926>
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8004f4a:	d14d      	bne.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004f4c:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8004f50:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8004f54:	4619      	mov	r1, r3
 8004f56:	482a      	ldr	r0, [pc, #168]	@ (8005000 <HAL_ADCEx_InjectedConfigChannel+0x9a0>)
 8004f58:	f7fe ffbd 	bl	8003ed6 <LL_ADC_SetCommonPathInternalCh>
 8004f5c:	4b2b      	ldr	r3, [pc, #172]	@ (800500c <HAL_ADCEx_InjectedConfigChannel+0x9ac>)
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	099b      	lsrs	r3, r3, #6
 8004f62:	4a2b      	ldr	r2, [pc, #172]	@ (8005010 <HAL_ADCEx_InjectedConfigChannel+0x9b0>)
 8004f64:	fba2 2303 	umull	r2, r3, r2, r3
 8004f68:	099a      	lsrs	r2, r3, #6
 8004f6a:	4613      	mov	r3, r2
 8004f6c:	005b      	lsls	r3, r3, #1
 8004f6e:	4413      	add	r3, r2
 8004f70:	009b      	lsls	r3, r3, #2
 8004f72:	3318      	adds	r3, #24
 8004f74:	60bb      	str	r3, [r7, #8]
 8004f76:	e002      	b.n	8004f7e <HAL_ADCEx_InjectedConfigChannel+0x91e>
 8004f78:	68bb      	ldr	r3, [r7, #8]
 8004f7a:	3b01      	subs	r3, #1
 8004f7c:	60bb      	str	r3, [r7, #8]
 8004f7e:	68bb      	ldr	r3, [r7, #8]
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	d1f9      	bne.n	8004f78 <HAL_ADCEx_InjectedConfigChannel+0x918>
 8004f84:	e030      	b.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004f86:	683b      	ldr	r3, [r7, #0]
 8004f88:	681b      	ldr	r3, [r3, #0]
 8004f8a:	4a22      	ldr	r2, [pc, #136]	@ (8005014 <HAL_ADCEx_InjectedConfigChannel+0x9b4>)
 8004f8c:	4293      	cmp	r3, r2
 8004f8e:	d113      	bne.n	8004fb8 <HAL_ADCEx_InjectedConfigChannel+0x958>
 8004f90:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8004f94:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8004f98:	2b00      	cmp	r3, #0
 8004f9a:	d10d      	bne.n	8004fb8 <HAL_ADCEx_InjectedConfigChannel+0x958>
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	681b      	ldr	r3, [r3, #0]
 8004fa0:	4a1d      	ldr	r2, [pc, #116]	@ (8005018 <HAL_ADCEx_InjectedConfigChannel+0x9b8>)
 8004fa2:	4293      	cmp	r3, r2
 8004fa4:	d020      	beq.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004fa6:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8004faa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8004fae:	4619      	mov	r1, r3
 8004fb0:	4813      	ldr	r0, [pc, #76]	@ (8005000 <HAL_ADCEx_InjectedConfigChannel+0x9a0>)
 8004fb2:	f7fe ff90 	bl	8003ed6 <LL_ADC_SetCommonPathInternalCh>
 8004fb6:	e017      	b.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004fb8:	683b      	ldr	r3, [r7, #0]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	4a17      	ldr	r2, [pc, #92]	@ (800501c <HAL_ADCEx_InjectedConfigChannel+0x9bc>)
 8004fbe:	4293      	cmp	r3, r2
 8004fc0:	d112      	bne.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004fc2:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8004fc6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004fca:	2b00      	cmp	r3, #0
 8004fcc:	d10c      	bne.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	681b      	ldr	r3, [r3, #0]
 8004fd2:	4a11      	ldr	r2, [pc, #68]	@ (8005018 <HAL_ADCEx_InjectedConfigChannel+0x9b8>)
 8004fd4:	4293      	cmp	r3, r2
 8004fd6:	d007      	beq.n	8004fe8 <HAL_ADCEx_InjectedConfigChannel+0x988>
 8004fd8:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8004fdc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8004fe0:	4619      	mov	r1, r3
 8004fe2:	4807      	ldr	r0, [pc, #28]	@ (8005000 <HAL_ADCEx_InjectedConfigChannel+0x9a0>)
 8004fe4:	f7fe ff77 	bl	8003ed6 <LL_ADC_SetCommonPathInternalCh>
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	2200      	movs	r2, #0
 8004fec:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8004ff0:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 8004ff4:	4618      	mov	r0, r3
 8004ff6:	37d8      	adds	r7, #216	@ 0xd8
 8004ff8:	46bd      	mov	sp, r7
 8004ffa:	bd80      	pop	{r7, pc}
 8004ffc:	80080000 	.word	0x80080000
 8005000:	50000300 	.word	0x50000300
 8005004:	c3210000 	.word	0xc3210000
 8005008:	90c00010 	.word	0x90c00010
 800500c:	20000000 	.word	0x20000000
 8005010:	053e2d63 	.word	0x053e2d63
 8005014:	c7520000 	.word	0xc7520000
 8005018:	50000100 	.word	0x50000100
 800501c:	cb840000 	.word	0xcb840000

08005020 <HAL_ADCEx_MultiModeConfigChannel>:
 8005020:	b590      	push	{r4, r7, lr}
 8005022:	b0a1      	sub	sp, #132	@ 0x84
 8005024:	af00      	add	r7, sp, #0
 8005026:	6078      	str	r0, [r7, #4]
 8005028:	6039      	str	r1, [r7, #0]
 800502a:	2300      	movs	r3, #0
 800502c:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8005036:	2b01      	cmp	r3, #1
 8005038:	d101      	bne.n	800503e <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 800503a:	2302      	movs	r3, #2
 800503c:	e08b      	b.n	8005156 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	2201      	movs	r2, #1
 8005042:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8005046:	2300      	movs	r3, #0
 8005048:	667b      	str	r3, [r7, #100]	@ 0x64
 800504a:	2300      	movs	r3, #0
 800504c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8005056:	d102      	bne.n	800505e <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8005058:	4b41      	ldr	r3, [pc, #260]	@ (8005160 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 800505a:	60bb      	str	r3, [r7, #8]
 800505c:	e001      	b.n	8005062 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 800505e:	2300      	movs	r3, #0
 8005060:	60bb      	str	r3, [r7, #8]
 8005062:	68bb      	ldr	r3, [r7, #8]
 8005064:	2b00      	cmp	r3, #0
 8005066:	d10b      	bne.n	8005080 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800506c:	f043 0220 	orr.w	r2, r3, #32
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	2200      	movs	r2, #0
 8005078:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 800507c:	2301      	movs	r3, #1
 800507e:	e06a      	b.n	8005156 <HAL_ADCEx_MultiModeConfigChannel+0x136>
 8005080:	68bb      	ldr	r3, [r7, #8]
 8005082:	4618      	mov	r0, r3
 8005084:	f7ff f892 	bl	80041ac <LL_ADC_REG_IsConversionOngoing>
 8005088:	67b8      	str	r0, [r7, #120]	@ 0x78
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	4618      	mov	r0, r3
 8005090:	f7ff f88c 	bl	80041ac <LL_ADC_REG_IsConversionOngoing>
 8005094:	4603      	mov	r3, r0
 8005096:	2b00      	cmp	r3, #0
 8005098:	d14c      	bne.n	8005134 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 800509a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800509c:	2b00      	cmp	r3, #0
 800509e:	d149      	bne.n	8005134 <HAL_ADCEx_MultiModeConfigChannel+0x114>
 80050a0:	4b30      	ldr	r3, [pc, #192]	@ (8005164 <HAL_ADCEx_MultiModeConfigChannel+0x144>)
 80050a2:	677b      	str	r3, [r7, #116]	@ 0x74
 80050a4:	683b      	ldr	r3, [r7, #0]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	d028      	beq.n	80050fe <HAL_ADCEx_MultiModeConfigChannel+0xde>
 80050ac:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80050ae:	689b      	ldr	r3, [r3, #8]
 80050b0:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80050b4:	683b      	ldr	r3, [r7, #0]
 80050b6:	6859      	ldr	r1, [r3, #4]
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 80050be:	035b      	lsls	r3, r3, #13
 80050c0:	430b      	orrs	r3, r1
 80050c2:	431a      	orrs	r2, r3
 80050c4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80050c6:	609a      	str	r2, [r3, #8]
 80050c8:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 80050cc:	f7ff f82e 	bl	800412c <LL_ADC_IsEnabled>
 80050d0:	4604      	mov	r4, r0
 80050d2:	4823      	ldr	r0, [pc, #140]	@ (8005160 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 80050d4:	f7ff f82a 	bl	800412c <LL_ADC_IsEnabled>
 80050d8:	4603      	mov	r3, r0
 80050da:	4323      	orrs	r3, r4
 80050dc:	2b00      	cmp	r3, #0
 80050de:	d133      	bne.n	8005148 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 80050e0:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80050e2:	689b      	ldr	r3, [r3, #8]
 80050e4:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 80050e8:	f023 030f 	bic.w	r3, r3, #15
 80050ec:	683a      	ldr	r2, [r7, #0]
 80050ee:	6811      	ldr	r1, [r2, #0]
 80050f0:	683a      	ldr	r2, [r7, #0]
 80050f2:	6892      	ldr	r2, [r2, #8]
 80050f4:	430a      	orrs	r2, r1
 80050f6:	431a      	orrs	r2, r3
 80050f8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80050fa:	609a      	str	r2, [r3, #8]
 80050fc:	e024      	b.n	8005148 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 80050fe:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005100:	689b      	ldr	r3, [r3, #8]
 8005102:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8005106:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005108:	609a      	str	r2, [r3, #8]
 800510a:	f04f 40a0 	mov.w	r0, #1342177280	@ 0x50000000
 800510e:	f7ff f80d 	bl	800412c <LL_ADC_IsEnabled>
 8005112:	4604      	mov	r4, r0
 8005114:	4812      	ldr	r0, [pc, #72]	@ (8005160 <HAL_ADCEx_MultiModeConfigChannel+0x140>)
 8005116:	f7ff f809 	bl	800412c <LL_ADC_IsEnabled>
 800511a:	4603      	mov	r3, r0
 800511c:	4323      	orrs	r3, r4
 800511e:	2b00      	cmp	r3, #0
 8005120:	d112      	bne.n	8005148 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8005122:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005124:	689b      	ldr	r3, [r3, #8]
 8005126:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 800512a:	f023 030f 	bic.w	r3, r3, #15
 800512e:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8005130:	6093      	str	r3, [r2, #8]
 8005132:	e009      	b.n	8005148 <HAL_ADCEx_MultiModeConfigChannel+0x128>
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005138:	f043 0220 	orr.w	r2, r3, #32
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005140:	2301      	movs	r3, #1
 8005142:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8005146:	e000      	b.n	800514a <HAL_ADCEx_MultiModeConfigChannel+0x12a>
 8005148:	bf00      	nop
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	2200      	movs	r2, #0
 800514e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 8005152:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 8005156:	4618      	mov	r0, r3
 8005158:	3784      	adds	r7, #132	@ 0x84
 800515a:	46bd      	mov	sp, r7
 800515c:	bd90      	pop	{r4, r7, pc}
 800515e:	bf00      	nop
 8005160:	50000100 	.word	0x50000100
 8005164:	50000300 	.word	0x50000300

08005168 <LL_EXTI_EnableIT_0_31>:
 8005168:	b480      	push	{r7}
 800516a:	b083      	sub	sp, #12
 800516c:	af00      	add	r7, sp, #0
 800516e:	6078      	str	r0, [r7, #4]
 8005170:	4b05      	ldr	r3, [pc, #20]	@ (8005188 <LL_EXTI_EnableIT_0_31+0x20>)
 8005172:	681a      	ldr	r2, [r3, #0]
 8005174:	4904      	ldr	r1, [pc, #16]	@ (8005188 <LL_EXTI_EnableIT_0_31+0x20>)
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	4313      	orrs	r3, r2
 800517a:	600b      	str	r3, [r1, #0]
 800517c:	bf00      	nop
 800517e:	370c      	adds	r7, #12
 8005180:	46bd      	mov	sp, r7
 8005182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005186:	4770      	bx	lr
 8005188:	40010400 	.word	0x40010400

0800518c <LL_EXTI_DisableIT_0_31>:
 800518c:	b480      	push	{r7}
 800518e:	b083      	sub	sp, #12
 8005190:	af00      	add	r7, sp, #0
 8005192:	6078      	str	r0, [r7, #4]
 8005194:	4b06      	ldr	r3, [pc, #24]	@ (80051b0 <LL_EXTI_DisableIT_0_31+0x24>)
 8005196:	681a      	ldr	r2, [r3, #0]
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	43db      	mvns	r3, r3
 800519c:	4904      	ldr	r1, [pc, #16]	@ (80051b0 <LL_EXTI_DisableIT_0_31+0x24>)
 800519e:	4013      	ands	r3, r2
 80051a0:	600b      	str	r3, [r1, #0]
 80051a2:	bf00      	nop
 80051a4:	370c      	adds	r7, #12
 80051a6:	46bd      	mov	sp, r7
 80051a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051ac:	4770      	bx	lr
 80051ae:	bf00      	nop
 80051b0:	40010400 	.word	0x40010400

080051b4 <LL_EXTI_EnableEvent_0_31>:
 80051b4:	b480      	push	{r7}
 80051b6:	b083      	sub	sp, #12
 80051b8:	af00      	add	r7, sp, #0
 80051ba:	6078      	str	r0, [r7, #4]
 80051bc:	4b05      	ldr	r3, [pc, #20]	@ (80051d4 <LL_EXTI_EnableEvent_0_31+0x20>)
 80051be:	685a      	ldr	r2, [r3, #4]
 80051c0:	4904      	ldr	r1, [pc, #16]	@ (80051d4 <LL_EXTI_EnableEvent_0_31+0x20>)
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	4313      	orrs	r3, r2
 80051c6:	604b      	str	r3, [r1, #4]
 80051c8:	bf00      	nop
 80051ca:	370c      	adds	r7, #12
 80051cc:	46bd      	mov	sp, r7
 80051ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051d2:	4770      	bx	lr
 80051d4:	40010400 	.word	0x40010400

080051d8 <LL_EXTI_DisableEvent_0_31>:
 80051d8:	b480      	push	{r7}
 80051da:	b083      	sub	sp, #12
 80051dc:	af00      	add	r7, sp, #0
 80051de:	6078      	str	r0, [r7, #4]
 80051e0:	4b06      	ldr	r3, [pc, #24]	@ (80051fc <LL_EXTI_DisableEvent_0_31+0x24>)
 80051e2:	685a      	ldr	r2, [r3, #4]
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	43db      	mvns	r3, r3
 80051e8:	4904      	ldr	r1, [pc, #16]	@ (80051fc <LL_EXTI_DisableEvent_0_31+0x24>)
 80051ea:	4013      	ands	r3, r2
 80051ec:	604b      	str	r3, [r1, #4]
 80051ee:	bf00      	nop
 80051f0:	370c      	adds	r7, #12
 80051f2:	46bd      	mov	sp, r7
 80051f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051f8:	4770      	bx	lr
 80051fa:	bf00      	nop
 80051fc:	40010400 	.word	0x40010400

08005200 <LL_EXTI_EnableRisingTrig_0_31>:
 8005200:	b480      	push	{r7}
 8005202:	b083      	sub	sp, #12
 8005204:	af00      	add	r7, sp, #0
 8005206:	6078      	str	r0, [r7, #4]
 8005208:	4b05      	ldr	r3, [pc, #20]	@ (8005220 <LL_EXTI_EnableRisingTrig_0_31+0x20>)
 800520a:	689a      	ldr	r2, [r3, #8]
 800520c:	4904      	ldr	r1, [pc, #16]	@ (8005220 <LL_EXTI_EnableRisingTrig_0_31+0x20>)
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	4313      	orrs	r3, r2
 8005212:	608b      	str	r3, [r1, #8]
 8005214:	bf00      	nop
 8005216:	370c      	adds	r7, #12
 8005218:	46bd      	mov	sp, r7
 800521a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800521e:	4770      	bx	lr
 8005220:	40010400 	.word	0x40010400

08005224 <LL_EXTI_DisableRisingTrig_0_31>:
 8005224:	b480      	push	{r7}
 8005226:	b083      	sub	sp, #12
 8005228:	af00      	add	r7, sp, #0
 800522a:	6078      	str	r0, [r7, #4]
 800522c:	4b06      	ldr	r3, [pc, #24]	@ (8005248 <LL_EXTI_DisableRisingTrig_0_31+0x24>)
 800522e:	689a      	ldr	r2, [r3, #8]
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	43db      	mvns	r3, r3
 8005234:	4904      	ldr	r1, [pc, #16]	@ (8005248 <LL_EXTI_DisableRisingTrig_0_31+0x24>)
 8005236:	4013      	ands	r3, r2
 8005238:	608b      	str	r3, [r1, #8]
 800523a:	bf00      	nop
 800523c:	370c      	adds	r7, #12
 800523e:	46bd      	mov	sp, r7
 8005240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005244:	4770      	bx	lr
 8005246:	bf00      	nop
 8005248:	40010400 	.word	0x40010400

0800524c <LL_EXTI_EnableFallingTrig_0_31>:
 800524c:	b480      	push	{r7}
 800524e:	b083      	sub	sp, #12
 8005250:	af00      	add	r7, sp, #0
 8005252:	6078      	str	r0, [r7, #4]
 8005254:	4b05      	ldr	r3, [pc, #20]	@ (800526c <LL_EXTI_EnableFallingTrig_0_31+0x20>)
 8005256:	68da      	ldr	r2, [r3, #12]
 8005258:	4904      	ldr	r1, [pc, #16]	@ (800526c <LL_EXTI_EnableFallingTrig_0_31+0x20>)
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	4313      	orrs	r3, r2
 800525e:	60cb      	str	r3, [r1, #12]
 8005260:	bf00      	nop
 8005262:	370c      	adds	r7, #12
 8005264:	46bd      	mov	sp, r7
 8005266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800526a:	4770      	bx	lr
 800526c:	40010400 	.word	0x40010400

08005270 <LL_EXTI_DisableFallingTrig_0_31>:
 8005270:	b480      	push	{r7}
 8005272:	b083      	sub	sp, #12
 8005274:	af00      	add	r7, sp, #0
 8005276:	6078      	str	r0, [r7, #4]
 8005278:	4b06      	ldr	r3, [pc, #24]	@ (8005294 <LL_EXTI_DisableFallingTrig_0_31+0x24>)
 800527a:	68da      	ldr	r2, [r3, #12]
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	43db      	mvns	r3, r3
 8005280:	4904      	ldr	r1, [pc, #16]	@ (8005294 <LL_EXTI_DisableFallingTrig_0_31+0x24>)
 8005282:	4013      	ands	r3, r2
 8005284:	60cb      	str	r3, [r1, #12]
 8005286:	bf00      	nop
 8005288:	370c      	adds	r7, #12
 800528a:	46bd      	mov	sp, r7
 800528c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005290:	4770      	bx	lr
 8005292:	bf00      	nop
 8005294:	40010400 	.word	0x40010400

08005298 <LL_EXTI_IsActiveFlag_0_31>:
 8005298:	b480      	push	{r7}
 800529a:	b083      	sub	sp, #12
 800529c:	af00      	add	r7, sp, #0
 800529e:	6078      	str	r0, [r7, #4]
 80052a0:	4b07      	ldr	r3, [pc, #28]	@ (80052c0 <LL_EXTI_IsActiveFlag_0_31+0x28>)
 80052a2:	695a      	ldr	r2, [r3, #20]
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	4013      	ands	r3, r2
 80052a8:	687a      	ldr	r2, [r7, #4]
 80052aa:	429a      	cmp	r2, r3
 80052ac:	d101      	bne.n	80052b2 <LL_EXTI_IsActiveFlag_0_31+0x1a>
 80052ae:	2301      	movs	r3, #1
 80052b0:	e000      	b.n	80052b4 <LL_EXTI_IsActiveFlag_0_31+0x1c>
 80052b2:	2300      	movs	r3, #0
 80052b4:	4618      	mov	r0, r3
 80052b6:	370c      	adds	r7, #12
 80052b8:	46bd      	mov	sp, r7
 80052ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052be:	4770      	bx	lr
 80052c0:	40010400 	.word	0x40010400

080052c4 <LL_EXTI_ClearFlag_0_31>:
 80052c4:	b480      	push	{r7}
 80052c6:	b083      	sub	sp, #12
 80052c8:	af00      	add	r7, sp, #0
 80052ca:	6078      	str	r0, [r7, #4]
 80052cc:	4a04      	ldr	r2, [pc, #16]	@ (80052e0 <LL_EXTI_ClearFlag_0_31+0x1c>)
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	6153      	str	r3, [r2, #20]
 80052d2:	bf00      	nop
 80052d4:	370c      	adds	r7, #12
 80052d6:	46bd      	mov	sp, r7
 80052d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052dc:	4770      	bx	lr
 80052de:	bf00      	nop
 80052e0:	40010400 	.word	0x40010400

080052e4 <HAL_COMP_Init>:
 80052e4:	b580      	push	{r7, lr}
 80052e6:	b088      	sub	sp, #32
 80052e8:	af00      	add	r7, sp, #0
 80052ea:	6078      	str	r0, [r7, #4]
 80052ec:	2300      	movs	r3, #0
 80052ee:	60fb      	str	r3, [r7, #12]
 80052f0:	2300      	movs	r3, #0
 80052f2:	77fb      	strb	r3, [r7, #31]
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	d102      	bne.n	8005300 <HAL_COMP_Init+0x1c>
 80052fa:	2301      	movs	r3, #1
 80052fc:	77fb      	strb	r3, [r7, #31]
 80052fe:	e0bc      	b.n	800547a <HAL_COMP_Init+0x196>
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800530a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800530e:	d102      	bne.n	8005316 <HAL_COMP_Init+0x32>
 8005310:	2301      	movs	r3, #1
 8005312:	77fb      	strb	r3, [r7, #31]
 8005314:	e0b1      	b.n	800547a <HAL_COMP_Init+0x196>
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	7f5b      	ldrb	r3, [r3, #29]
 800531a:	b2db      	uxtb	r3, r3
 800531c:	2b00      	cmp	r3, #0
 800531e:	d108      	bne.n	8005332 <HAL_COMP_Init+0x4e>
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	2200      	movs	r2, #0
 8005324:	771a      	strb	r2, [r3, #28]
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2200      	movs	r2, #0
 800532a:	621a      	str	r2, [r3, #32]
 800532c:	6878      	ldr	r0, [r7, #4]
 800532e:	f7fc f8c9 	bl	80014c4 <HAL_COMP_MspInit>
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800533c:	61bb      	str	r3, [r7, #24]
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	689a      	ldr	r2, [r3, #8]
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	685b      	ldr	r3, [r3, #4]
 8005346:	431a      	orrs	r2, r3
 8005348:	687b      	ldr	r3, [r7, #4]
 800534a:	695b      	ldr	r3, [r3, #20]
 800534c:	431a      	orrs	r2, r3
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	68db      	ldr	r3, [r3, #12]
 8005352:	431a      	orrs	r2, r3
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	691b      	ldr	r3, [r3, #16]
 8005358:	4313      	orrs	r3, r2
 800535a:	617b      	str	r3, [r7, #20]
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	681b      	ldr	r3, [r3, #0]
 8005360:	681a      	ldr	r2, [r3, #0]
 8005362:	4b48      	ldr	r3, [pc, #288]	@ (8005484 <HAL_COMP_Init+0x1a0>)
 8005364:	4013      	ands	r3, r2
 8005366:	687a      	ldr	r2, [r7, #4]
 8005368:	6812      	ldr	r2, [r2, #0]
 800536a:	6979      	ldr	r1, [r7, #20]
 800536c:	430b      	orrs	r3, r1
 800536e:	6013      	str	r3, [r2, #0]
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800537a:	2b00      	cmp	r3, #0
 800537c:	d016      	beq.n	80053ac <HAL_COMP_Init+0xc8>
 800537e:	69bb      	ldr	r3, [r7, #24]
 8005380:	2b00      	cmp	r3, #0
 8005382:	d113      	bne.n	80053ac <HAL_COMP_Init+0xc8>
 8005384:	4b40      	ldr	r3, [pc, #256]	@ (8005488 <HAL_COMP_Init+0x1a4>)
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	099b      	lsrs	r3, r3, #6
 800538a:	4a40      	ldr	r2, [pc, #256]	@ (800548c <HAL_COMP_Init+0x1a8>)
 800538c:	fba2 2303 	umull	r2, r3, r2, r3
 8005390:	099b      	lsrs	r3, r3, #6
 8005392:	1c5a      	adds	r2, r3, #1
 8005394:	4613      	mov	r3, r2
 8005396:	009b      	lsls	r3, r3, #2
 8005398:	4413      	add	r3, r2
 800539a:	009b      	lsls	r3, r3, #2
 800539c:	60fb      	str	r3, [r7, #12]
 800539e:	e002      	b.n	80053a6 <HAL_COMP_Init+0xc2>
 80053a0:	68fb      	ldr	r3, [r7, #12]
 80053a2:	3b01      	subs	r3, #1
 80053a4:	60fb      	str	r3, [r7, #12]
 80053a6:	68fb      	ldr	r3, [r7, #12]
 80053a8:	2b00      	cmp	r3, #0
 80053aa:	d1f9      	bne.n	80053a0 <HAL_COMP_Init+0xbc>
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	4a37      	ldr	r2, [pc, #220]	@ (8005490 <HAL_COMP_Init+0x1ac>)
 80053b2:	4293      	cmp	r3, r2
 80053b4:	d012      	beq.n	80053dc <HAL_COMP_Init+0xf8>
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	4a36      	ldr	r2, [pc, #216]	@ (8005494 <HAL_COMP_Init+0x1b0>)
 80053bc:	4293      	cmp	r3, r2
 80053be:	d00a      	beq.n	80053d6 <HAL_COMP_Init+0xf2>
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	4a34      	ldr	r2, [pc, #208]	@ (8005498 <HAL_COMP_Init+0x1b4>)
 80053c6:	4293      	cmp	r3, r2
 80053c8:	d102      	bne.n	80053d0 <HAL_COMP_Init+0xec>
 80053ca:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80053ce:	e007      	b.n	80053e0 <HAL_COMP_Init+0xfc>
 80053d0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80053d4:	e004      	b.n	80053e0 <HAL_COMP_Init+0xfc>
 80053d6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80053da:	e001      	b.n	80053e0 <HAL_COMP_Init+0xfc>
 80053dc:	f44f 1300 	mov.w	r3, #2097152	@ 0x200000
 80053e0:	613b      	str	r3, [r7, #16]
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	699b      	ldr	r3, [r3, #24]
 80053e6:	f003 0303 	and.w	r3, r3, #3
 80053ea:	2b00      	cmp	r3, #0
 80053ec:	d037      	beq.n	800545e <HAL_COMP_Init+0x17a>
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	699b      	ldr	r3, [r3, #24]
 80053f2:	f003 0310 	and.w	r3, r3, #16
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d003      	beq.n	8005402 <HAL_COMP_Init+0x11e>
 80053fa:	6938      	ldr	r0, [r7, #16]
 80053fc:	f7ff ff00 	bl	8005200 <LL_EXTI_EnableRisingTrig_0_31>
 8005400:	e002      	b.n	8005408 <HAL_COMP_Init+0x124>
 8005402:	6938      	ldr	r0, [r7, #16]
 8005404:	f7ff ff0e 	bl	8005224 <LL_EXTI_DisableRisingTrig_0_31>
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	699b      	ldr	r3, [r3, #24]
 800540c:	f003 0320 	and.w	r3, r3, #32
 8005410:	2b00      	cmp	r3, #0
 8005412:	d003      	beq.n	800541c <HAL_COMP_Init+0x138>
 8005414:	6938      	ldr	r0, [r7, #16]
 8005416:	f7ff ff19 	bl	800524c <LL_EXTI_EnableFallingTrig_0_31>
 800541a:	e002      	b.n	8005422 <HAL_COMP_Init+0x13e>
 800541c:	6938      	ldr	r0, [r7, #16]
 800541e:	f7ff ff27 	bl	8005270 <LL_EXTI_DisableFallingTrig_0_31>
 8005422:	6938      	ldr	r0, [r7, #16]
 8005424:	f7ff ff4e 	bl	80052c4 <LL_EXTI_ClearFlag_0_31>
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	699b      	ldr	r3, [r3, #24]
 800542c:	f003 0302 	and.w	r3, r3, #2
 8005430:	2b00      	cmp	r3, #0
 8005432:	d003      	beq.n	800543c <HAL_COMP_Init+0x158>
 8005434:	6938      	ldr	r0, [r7, #16]
 8005436:	f7ff febd 	bl	80051b4 <LL_EXTI_EnableEvent_0_31>
 800543a:	e002      	b.n	8005442 <HAL_COMP_Init+0x15e>
 800543c:	6938      	ldr	r0, [r7, #16]
 800543e:	f7ff fecb 	bl	80051d8 <LL_EXTI_DisableEvent_0_31>
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	699b      	ldr	r3, [r3, #24]
 8005446:	f003 0301 	and.w	r3, r3, #1
 800544a:	2b00      	cmp	r3, #0
 800544c:	d003      	beq.n	8005456 <HAL_COMP_Init+0x172>
 800544e:	6938      	ldr	r0, [r7, #16]
 8005450:	f7ff fe8a 	bl	8005168 <LL_EXTI_EnableIT_0_31>
 8005454:	e009      	b.n	800546a <HAL_COMP_Init+0x186>
 8005456:	6938      	ldr	r0, [r7, #16]
 8005458:	f7ff fe98 	bl	800518c <LL_EXTI_DisableIT_0_31>
 800545c:	e005      	b.n	800546a <HAL_COMP_Init+0x186>
 800545e:	6938      	ldr	r0, [r7, #16]
 8005460:	f7ff feba 	bl	80051d8 <LL_EXTI_DisableEvent_0_31>
 8005464:	6938      	ldr	r0, [r7, #16]
 8005466:	f7ff fe91 	bl	800518c <LL_EXTI_DisableIT_0_31>
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	7f5b      	ldrb	r3, [r3, #29]
 800546e:	b2db      	uxtb	r3, r3
 8005470:	2b00      	cmp	r3, #0
 8005472:	d102      	bne.n	800547a <HAL_COMP_Init+0x196>
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	2201      	movs	r2, #1
 8005478:	775a      	strb	r2, [r3, #29]
 800547a:	7ffb      	ldrb	r3, [r7, #31]
 800547c:	4618      	mov	r0, r3
 800547e:	3720      	adds	r7, #32
 8005480:	46bd      	mov	sp, r7
 8005482:	bd80      	pop	{r7, pc}
 8005484:	ff007e0f 	.word	0xff007e0f
 8005488:	20000000 	.word	0x20000000
 800548c:	053e2d63 	.word	0x053e2d63
 8005490:	40010200 	.word	0x40010200
 8005494:	40010204 	.word	0x40010204
 8005498:	40010208 	.word	0x40010208

0800549c <HAL_COMP_IRQHandler>:
 800549c:	b580      	push	{r7, lr}
 800549e:	b084      	sub	sp, #16
 80054a0:	af00      	add	r7, sp, #0
 80054a2:	6078      	str	r0, [r7, #4]
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	4a17      	ldr	r2, [pc, #92]	@ (8005508 <HAL_COMP_IRQHandler+0x6c>)
 80054aa:	4293      	cmp	r3, r2
 80054ac:	d012      	beq.n	80054d4 <HAL_COMP_IRQHandler+0x38>
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	4a16      	ldr	r2, [pc, #88]	@ (800550c <HAL_COMP_IRQHandler+0x70>)
 80054b4:	4293      	cmp	r3, r2
 80054b6:	d00a      	beq.n	80054ce <HAL_COMP_IRQHandler+0x32>
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	4a14      	ldr	r2, [pc, #80]	@ (8005510 <HAL_COMP_IRQHandler+0x74>)
 80054be:	4293      	cmp	r3, r2
 80054c0:	d102      	bne.n	80054c8 <HAL_COMP_IRQHandler+0x2c>
 80054c2:	f04f 5300 	mov.w	r3, #536870912	@ 0x20000000
 80054c6:	e007      	b.n	80054d8 <HAL_COMP_IRQHandler+0x3c>
 80054c8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80054cc:	e004      	b.n	80054d8 <HAL_COMP_IRQHandler+0x3c>
 80054ce:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80054d2:	e001      	b.n	80054d8 <HAL_COMP_IRQHandler+0x3c>
 80054d4:	f44f 1300 	mov.w	r3, #2097152	@ 0x200000
 80054d8:	60bb      	str	r3, [r7, #8]
 80054da:	2300      	movs	r3, #0
 80054dc:	60fb      	str	r3, [r7, #12]
 80054de:	68b8      	ldr	r0, [r7, #8]
 80054e0:	f7ff feda 	bl	8005298 <LL_EXTI_IsActiveFlag_0_31>
 80054e4:	4603      	mov	r3, r0
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	d001      	beq.n	80054ee <HAL_COMP_IRQHandler+0x52>
 80054ea:	2301      	movs	r3, #1
 80054ec:	60fb      	str	r3, [r7, #12]
 80054ee:	68fb      	ldr	r3, [r7, #12]
 80054f0:	2b00      	cmp	r3, #0
 80054f2:	d005      	beq.n	8005500 <HAL_COMP_IRQHandler+0x64>
 80054f4:	68b8      	ldr	r0, [r7, #8]
 80054f6:	f7ff fee5 	bl	80052c4 <LL_EXTI_ClearFlag_0_31>
 80054fa:	6878      	ldr	r0, [r7, #4]
 80054fc:	f000 f80a 	bl	8005514 <HAL_COMP_TriggerCallback>
 8005500:	bf00      	nop
 8005502:	3710      	adds	r7, #16
 8005504:	46bd      	mov	sp, r7
 8005506:	bd80      	pop	{r7, pc}
 8005508:	40010200 	.word	0x40010200
 800550c:	40010204 	.word	0x40010204
 8005510:	40010208 	.word	0x40010208

08005514 <HAL_COMP_TriggerCallback>:
 8005514:	b480      	push	{r7}
 8005516:	b083      	sub	sp, #12
 8005518:	af00      	add	r7, sp, #0
 800551a:	6078      	str	r0, [r7, #4]
 800551c:	bf00      	nop
 800551e:	370c      	adds	r7, #12
 8005520:	46bd      	mov	sp, r7
 8005522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005526:	4770      	bx	lr

08005528 <__NVIC_SetPriorityGrouping>:
 8005528:	b480      	push	{r7}
 800552a:	b085      	sub	sp, #20
 800552c:	af00      	add	r7, sp, #0
 800552e:	6078      	str	r0, [r7, #4]
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	f003 0307 	and.w	r3, r3, #7
 8005536:	60fb      	str	r3, [r7, #12]
 8005538:	4b0c      	ldr	r3, [pc, #48]	@ (800556c <__NVIC_SetPriorityGrouping+0x44>)
 800553a:	68db      	ldr	r3, [r3, #12]
 800553c:	60bb      	str	r3, [r7, #8]
 800553e:	68ba      	ldr	r2, [r7, #8]
 8005540:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8005544:	4013      	ands	r3, r2
 8005546:	60bb      	str	r3, [r7, #8]
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	021a      	lsls	r2, r3, #8
 800554c:	68bb      	ldr	r3, [r7, #8]
 800554e:	4313      	orrs	r3, r2
 8005550:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8005554:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005558:	60bb      	str	r3, [r7, #8]
 800555a:	4a04      	ldr	r2, [pc, #16]	@ (800556c <__NVIC_SetPriorityGrouping+0x44>)
 800555c:	68bb      	ldr	r3, [r7, #8]
 800555e:	60d3      	str	r3, [r2, #12]
 8005560:	bf00      	nop
 8005562:	3714      	adds	r7, #20
 8005564:	46bd      	mov	sp, r7
 8005566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800556a:	4770      	bx	lr
 800556c:	e000ed00 	.word	0xe000ed00

08005570 <__NVIC_GetPriorityGrouping>:
 8005570:	b480      	push	{r7}
 8005572:	af00      	add	r7, sp, #0
 8005574:	4b04      	ldr	r3, [pc, #16]	@ (8005588 <__NVIC_GetPriorityGrouping+0x18>)
 8005576:	68db      	ldr	r3, [r3, #12]
 8005578:	0a1b      	lsrs	r3, r3, #8
 800557a:	f003 0307 	and.w	r3, r3, #7
 800557e:	4618      	mov	r0, r3
 8005580:	46bd      	mov	sp, r7
 8005582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005586:	4770      	bx	lr
 8005588:	e000ed00 	.word	0xe000ed00

0800558c <__NVIC_EnableIRQ>:
 800558c:	b480      	push	{r7}
 800558e:	b083      	sub	sp, #12
 8005590:	af00      	add	r7, sp, #0
 8005592:	4603      	mov	r3, r0
 8005594:	71fb      	strb	r3, [r7, #7]
 8005596:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800559a:	2b00      	cmp	r3, #0
 800559c:	db0b      	blt.n	80055b6 <__NVIC_EnableIRQ+0x2a>
 800559e:	79fb      	ldrb	r3, [r7, #7]
 80055a0:	f003 021f 	and.w	r2, r3, #31
 80055a4:	4907      	ldr	r1, [pc, #28]	@ (80055c4 <__NVIC_EnableIRQ+0x38>)
 80055a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80055aa:	095b      	lsrs	r3, r3, #5
 80055ac:	2001      	movs	r0, #1
 80055ae:	fa00 f202 	lsl.w	r2, r0, r2
 80055b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80055b6:	bf00      	nop
 80055b8:	370c      	adds	r7, #12
 80055ba:	46bd      	mov	sp, r7
 80055bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055c0:	4770      	bx	lr
 80055c2:	bf00      	nop
 80055c4:	e000e100 	.word	0xe000e100

080055c8 <__NVIC_SetPriority>:
 80055c8:	b480      	push	{r7}
 80055ca:	b083      	sub	sp, #12
 80055cc:	af00      	add	r7, sp, #0
 80055ce:	4603      	mov	r3, r0
 80055d0:	6039      	str	r1, [r7, #0]
 80055d2:	71fb      	strb	r3, [r7, #7]
 80055d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80055d8:	2b00      	cmp	r3, #0
 80055da:	db0a      	blt.n	80055f2 <__NVIC_SetPriority+0x2a>
 80055dc:	683b      	ldr	r3, [r7, #0]
 80055de:	b2da      	uxtb	r2, r3
 80055e0:	490c      	ldr	r1, [pc, #48]	@ (8005614 <__NVIC_SetPriority+0x4c>)
 80055e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80055e6:	0112      	lsls	r2, r2, #4
 80055e8:	b2d2      	uxtb	r2, r2
 80055ea:	440b      	add	r3, r1
 80055ec:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80055f0:	e00a      	b.n	8005608 <__NVIC_SetPriority+0x40>
 80055f2:	683b      	ldr	r3, [r7, #0]
 80055f4:	b2da      	uxtb	r2, r3
 80055f6:	4908      	ldr	r1, [pc, #32]	@ (8005618 <__NVIC_SetPriority+0x50>)
 80055f8:	79fb      	ldrb	r3, [r7, #7]
 80055fa:	f003 030f 	and.w	r3, r3, #15
 80055fe:	3b04      	subs	r3, #4
 8005600:	0112      	lsls	r2, r2, #4
 8005602:	b2d2      	uxtb	r2, r2
 8005604:	440b      	add	r3, r1
 8005606:	761a      	strb	r2, [r3, #24]
 8005608:	bf00      	nop
 800560a:	370c      	adds	r7, #12
 800560c:	46bd      	mov	sp, r7
 800560e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005612:	4770      	bx	lr
 8005614:	e000e100 	.word	0xe000e100
 8005618:	e000ed00 	.word	0xe000ed00

0800561c <NVIC_EncodePriority>:
 800561c:	b480      	push	{r7}
 800561e:	b089      	sub	sp, #36	@ 0x24
 8005620:	af00      	add	r7, sp, #0
 8005622:	60f8      	str	r0, [r7, #12]
 8005624:	60b9      	str	r1, [r7, #8]
 8005626:	607a      	str	r2, [r7, #4]
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	f003 0307 	and.w	r3, r3, #7
 800562e:	61fb      	str	r3, [r7, #28]
 8005630:	69fb      	ldr	r3, [r7, #28]
 8005632:	f1c3 0307 	rsb	r3, r3, #7
 8005636:	2b04      	cmp	r3, #4
 8005638:	bf28      	it	cs
 800563a:	2304      	movcs	r3, #4
 800563c:	61bb      	str	r3, [r7, #24]
 800563e:	69fb      	ldr	r3, [r7, #28]
 8005640:	3304      	adds	r3, #4
 8005642:	2b06      	cmp	r3, #6
 8005644:	d902      	bls.n	800564c <NVIC_EncodePriority+0x30>
 8005646:	69fb      	ldr	r3, [r7, #28]
 8005648:	3b03      	subs	r3, #3
 800564a:	e000      	b.n	800564e <NVIC_EncodePriority+0x32>
 800564c:	2300      	movs	r3, #0
 800564e:	617b      	str	r3, [r7, #20]
 8005650:	f04f 32ff 	mov.w	r2, #4294967295
 8005654:	69bb      	ldr	r3, [r7, #24]
 8005656:	fa02 f303 	lsl.w	r3, r2, r3
 800565a:	43da      	mvns	r2, r3
 800565c:	68bb      	ldr	r3, [r7, #8]
 800565e:	401a      	ands	r2, r3
 8005660:	697b      	ldr	r3, [r7, #20]
 8005662:	409a      	lsls	r2, r3
 8005664:	f04f 31ff 	mov.w	r1, #4294967295
 8005668:	697b      	ldr	r3, [r7, #20]
 800566a:	fa01 f303 	lsl.w	r3, r1, r3
 800566e:	43d9      	mvns	r1, r3
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	400b      	ands	r3, r1
 8005674:	4313      	orrs	r3, r2
 8005676:	4618      	mov	r0, r3
 8005678:	3724      	adds	r7, #36	@ 0x24
 800567a:	46bd      	mov	sp, r7
 800567c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005680:	4770      	bx	lr
	...

08005684 <SysTick_Config>:
 8005684:	b580      	push	{r7, lr}
 8005686:	b082      	sub	sp, #8
 8005688:	af00      	add	r7, sp, #0
 800568a:	6078      	str	r0, [r7, #4]
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	3b01      	subs	r3, #1
 8005690:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005694:	d301      	bcc.n	800569a <SysTick_Config+0x16>
 8005696:	2301      	movs	r3, #1
 8005698:	e00f      	b.n	80056ba <SysTick_Config+0x36>
 800569a:	4a0a      	ldr	r2, [pc, #40]	@ (80056c4 <SysTick_Config+0x40>)
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	3b01      	subs	r3, #1
 80056a0:	6053      	str	r3, [r2, #4]
 80056a2:	210f      	movs	r1, #15
 80056a4:	f04f 30ff 	mov.w	r0, #4294967295
 80056a8:	f7ff ff8e 	bl	80055c8 <__NVIC_SetPriority>
 80056ac:	4b05      	ldr	r3, [pc, #20]	@ (80056c4 <SysTick_Config+0x40>)
 80056ae:	2200      	movs	r2, #0
 80056b0:	609a      	str	r2, [r3, #8]
 80056b2:	4b04      	ldr	r3, [pc, #16]	@ (80056c4 <SysTick_Config+0x40>)
 80056b4:	2207      	movs	r2, #7
 80056b6:	601a      	str	r2, [r3, #0]
 80056b8:	2300      	movs	r3, #0
 80056ba:	4618      	mov	r0, r3
 80056bc:	3708      	adds	r7, #8
 80056be:	46bd      	mov	sp, r7
 80056c0:	bd80      	pop	{r7, pc}
 80056c2:	bf00      	nop
 80056c4:	e000e010 	.word	0xe000e010

080056c8 <HAL_NVIC_SetPriorityGrouping>:
 80056c8:	b580      	push	{r7, lr}
 80056ca:	b082      	sub	sp, #8
 80056cc:	af00      	add	r7, sp, #0
 80056ce:	6078      	str	r0, [r7, #4]
 80056d0:	6878      	ldr	r0, [r7, #4]
 80056d2:	f7ff ff29 	bl	8005528 <__NVIC_SetPriorityGrouping>
 80056d6:	bf00      	nop
 80056d8:	3708      	adds	r7, #8
 80056da:	46bd      	mov	sp, r7
 80056dc:	bd80      	pop	{r7, pc}

080056de <HAL_NVIC_SetPriority>:
 80056de:	b580      	push	{r7, lr}
 80056e0:	b086      	sub	sp, #24
 80056e2:	af00      	add	r7, sp, #0
 80056e4:	4603      	mov	r3, r0
 80056e6:	60b9      	str	r1, [r7, #8]
 80056e8:	607a      	str	r2, [r7, #4]
 80056ea:	73fb      	strb	r3, [r7, #15]
 80056ec:	f7ff ff40 	bl	8005570 <__NVIC_GetPriorityGrouping>
 80056f0:	6178      	str	r0, [r7, #20]
 80056f2:	687a      	ldr	r2, [r7, #4]
 80056f4:	68b9      	ldr	r1, [r7, #8]
 80056f6:	6978      	ldr	r0, [r7, #20]
 80056f8:	f7ff ff90 	bl	800561c <NVIC_EncodePriority>
 80056fc:	4602      	mov	r2, r0
 80056fe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005702:	4611      	mov	r1, r2
 8005704:	4618      	mov	r0, r3
 8005706:	f7ff ff5f 	bl	80055c8 <__NVIC_SetPriority>
 800570a:	bf00      	nop
 800570c:	3718      	adds	r7, #24
 800570e:	46bd      	mov	sp, r7
 8005710:	bd80      	pop	{r7, pc}

08005712 <HAL_NVIC_EnableIRQ>:
 8005712:	b580      	push	{r7, lr}
 8005714:	b082      	sub	sp, #8
 8005716:	af00      	add	r7, sp, #0
 8005718:	4603      	mov	r3, r0
 800571a:	71fb      	strb	r3, [r7, #7]
 800571c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005720:	4618      	mov	r0, r3
 8005722:	f7ff ff33 	bl	800558c <__NVIC_EnableIRQ>
 8005726:	bf00      	nop
 8005728:	3708      	adds	r7, #8
 800572a:	46bd      	mov	sp, r7
 800572c:	bd80      	pop	{r7, pc}

0800572e <HAL_SYSTICK_Config>:
 800572e:	b580      	push	{r7, lr}
 8005730:	b082      	sub	sp, #8
 8005732:	af00      	add	r7, sp, #0
 8005734:	6078      	str	r0, [r7, #4]
 8005736:	6878      	ldr	r0, [r7, #4]
 8005738:	f7ff ffa4 	bl	8005684 <SysTick_Config>
 800573c:	4603      	mov	r3, r0
 800573e:	4618      	mov	r0, r3
 8005740:	3708      	adds	r7, #8
 8005742:	46bd      	mov	sp, r7
 8005744:	bd80      	pop	{r7, pc}

08005746 <HAL_DAC_Init>:
 8005746:	b580      	push	{r7, lr}
 8005748:	b082      	sub	sp, #8
 800574a:	af00      	add	r7, sp, #0
 800574c:	6078      	str	r0, [r7, #4]
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	2b00      	cmp	r3, #0
 8005752:	d101      	bne.n	8005758 <HAL_DAC_Init+0x12>
 8005754:	2301      	movs	r3, #1
 8005756:	e014      	b.n	8005782 <HAL_DAC_Init+0x3c>
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	791b      	ldrb	r3, [r3, #4]
 800575c:	b2db      	uxtb	r3, r3
 800575e:	2b00      	cmp	r3, #0
 8005760:	d105      	bne.n	800576e <HAL_DAC_Init+0x28>
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	2200      	movs	r2, #0
 8005766:	715a      	strb	r2, [r3, #5]
 8005768:	6878      	ldr	r0, [r7, #4]
 800576a:	f7fb ff21 	bl	80015b0 <HAL_DAC_MspInit>
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	2202      	movs	r2, #2
 8005772:	711a      	strb	r2, [r3, #4]
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	2200      	movs	r2, #0
 8005778:	611a      	str	r2, [r3, #16]
 800577a:	687b      	ldr	r3, [r7, #4]
 800577c:	2201      	movs	r2, #1
 800577e:	711a      	strb	r2, [r3, #4]
 8005780:	2300      	movs	r3, #0
 8005782:	4618      	mov	r0, r3
 8005784:	3708      	adds	r7, #8
 8005786:	46bd      	mov	sp, r7
 8005788:	bd80      	pop	{r7, pc}
	...

0800578c <HAL_DAC_ConfigChannel>:
 800578c:	b580      	push	{r7, lr}
 800578e:	b08a      	sub	sp, #40	@ 0x28
 8005790:	af00      	add	r7, sp, #0
 8005792:	60f8      	str	r0, [r7, #12]
 8005794:	60b9      	str	r1, [r7, #8]
 8005796:	607a      	str	r2, [r7, #4]
 8005798:	2300      	movs	r3, #0
 800579a:	77fb      	strb	r3, [r7, #31]
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	2b00      	cmp	r3, #0
 80057a0:	d002      	beq.n	80057a8 <HAL_DAC_ConfigChannel+0x1c>
 80057a2:	68bb      	ldr	r3, [r7, #8]
 80057a4:	2b00      	cmp	r3, #0
 80057a6:	d101      	bne.n	80057ac <HAL_DAC_ConfigChannel+0x20>
 80057a8:	2301      	movs	r3, #1
 80057aa:	e19e      	b.n	8005aea <HAL_DAC_ConfigChannel+0x35e>
 80057ac:	68fb      	ldr	r3, [r7, #12]
 80057ae:	795b      	ldrb	r3, [r3, #5]
 80057b0:	2b01      	cmp	r3, #1
 80057b2:	d101      	bne.n	80057b8 <HAL_DAC_ConfigChannel+0x2c>
 80057b4:	2302      	movs	r3, #2
 80057b6:	e198      	b.n	8005aea <HAL_DAC_ConfigChannel+0x35e>
 80057b8:	68fb      	ldr	r3, [r7, #12]
 80057ba:	2201      	movs	r2, #1
 80057bc:	715a      	strb	r2, [r3, #5]
 80057be:	68fb      	ldr	r3, [r7, #12]
 80057c0:	2202      	movs	r2, #2
 80057c2:	711a      	strb	r2, [r3, #4]
 80057c4:	68bb      	ldr	r3, [r7, #8]
 80057c6:	689b      	ldr	r3, [r3, #8]
 80057c8:	2b04      	cmp	r3, #4
 80057ca:	d17a      	bne.n	80058c2 <HAL_DAC_ConfigChannel+0x136>
 80057cc:	f7fc ffb6 	bl	800273c <HAL_GetTick>
 80057d0:	61b8      	str	r0, [r7, #24]
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	2b00      	cmp	r3, #0
 80057d6:	d13d      	bne.n	8005854 <HAL_DAC_ConfigChannel+0xc8>
 80057d8:	e018      	b.n	800580c <HAL_DAC_ConfigChannel+0x80>
 80057da:	f7fc ffaf 	bl	800273c <HAL_GetTick>
 80057de:	4602      	mov	r2, r0
 80057e0:	69bb      	ldr	r3, [r7, #24]
 80057e2:	1ad3      	subs	r3, r2, r3
 80057e4:	2b01      	cmp	r3, #1
 80057e6:	d911      	bls.n	800580c <HAL_DAC_ConfigChannel+0x80>
 80057e8:	68fb      	ldr	r3, [r7, #12]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80057ee:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80057f2:	2b00      	cmp	r3, #0
 80057f4:	d00a      	beq.n	800580c <HAL_DAC_ConfigChannel+0x80>
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	691b      	ldr	r3, [r3, #16]
 80057fa:	f043 0208 	orr.w	r2, r3, #8
 80057fe:	68fb      	ldr	r3, [r7, #12]
 8005800:	611a      	str	r2, [r3, #16]
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	2203      	movs	r2, #3
 8005806:	711a      	strb	r2, [r3, #4]
 8005808:	2303      	movs	r3, #3
 800580a:	e16e      	b.n	8005aea <HAL_DAC_ConfigChannel+0x35e>
 800580c:	68fb      	ldr	r3, [r7, #12]
 800580e:	681b      	ldr	r3, [r3, #0]
 8005810:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005812:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8005816:	2b00      	cmp	r3, #0
 8005818:	d1df      	bne.n	80057da <HAL_DAC_ConfigChannel+0x4e>
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	68ba      	ldr	r2, [r7, #8]
 8005820:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005822:	641a      	str	r2, [r3, #64]	@ 0x40
 8005824:	e020      	b.n	8005868 <HAL_DAC_ConfigChannel+0xdc>
 8005826:	f7fc ff89 	bl	800273c <HAL_GetTick>
 800582a:	4602      	mov	r2, r0
 800582c:	69bb      	ldr	r3, [r7, #24]
 800582e:	1ad3      	subs	r3, r2, r3
 8005830:	2b01      	cmp	r3, #1
 8005832:	d90f      	bls.n	8005854 <HAL_DAC_ConfigChannel+0xc8>
 8005834:	68fb      	ldr	r3, [r7, #12]
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800583a:	2b00      	cmp	r3, #0
 800583c:	da0a      	bge.n	8005854 <HAL_DAC_ConfigChannel+0xc8>
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	691b      	ldr	r3, [r3, #16]
 8005842:	f043 0208 	orr.w	r2, r3, #8
 8005846:	68fb      	ldr	r3, [r7, #12]
 8005848:	611a      	str	r2, [r3, #16]
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	2203      	movs	r2, #3
 800584e:	711a      	strb	r2, [r3, #4]
 8005850:	2303      	movs	r3, #3
 8005852:	e14a      	b.n	8005aea <HAL_DAC_ConfigChannel+0x35e>
 8005854:	68fb      	ldr	r3, [r7, #12]
 8005856:	681b      	ldr	r3, [r3, #0]
 8005858:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800585a:	2b00      	cmp	r3, #0
 800585c:	dbe3      	blt.n	8005826 <HAL_DAC_ConfigChannel+0x9a>
 800585e:	68fb      	ldr	r3, [r7, #12]
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	68ba      	ldr	r2, [r7, #8]
 8005864:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005866:	645a      	str	r2, [r3, #68]	@ 0x44
 8005868:	68fb      	ldr	r3, [r7, #12]
 800586a:	681b      	ldr	r3, [r3, #0]
 800586c:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	f003 0310 	and.w	r3, r3, #16
 8005874:	f240 31ff 	movw	r1, #1023	@ 0x3ff
 8005878:	fa01 f303 	lsl.w	r3, r1, r3
 800587c:	43db      	mvns	r3, r3
 800587e:	ea02 0103 	and.w	r1, r2, r3
 8005882:	68bb      	ldr	r3, [r7, #8]
 8005884:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	f003 0310 	and.w	r3, r3, #16
 800588c:	409a      	lsls	r2, r3
 800588e:	68fb      	ldr	r3, [r7, #12]
 8005890:	681b      	ldr	r3, [r3, #0]
 8005892:	430a      	orrs	r2, r1
 8005894:	649a      	str	r2, [r3, #72]	@ 0x48
 8005896:	68fb      	ldr	r3, [r7, #12]
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	f003 0310 	and.w	r3, r3, #16
 80058a2:	21ff      	movs	r1, #255	@ 0xff
 80058a4:	fa01 f303 	lsl.w	r3, r1, r3
 80058a8:	43db      	mvns	r3, r3
 80058aa:	ea02 0103 	and.w	r1, r2, r3
 80058ae:	68bb      	ldr	r3, [r7, #8]
 80058b0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	f003 0310 	and.w	r3, r3, #16
 80058b8:	409a      	lsls	r2, r3
 80058ba:	68fb      	ldr	r3, [r7, #12]
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	430a      	orrs	r2, r1
 80058c0:	64da      	str	r2, [r3, #76]	@ 0x4c
 80058c2:	68bb      	ldr	r3, [r7, #8]
 80058c4:	69db      	ldr	r3, [r3, #28]
 80058c6:	2b01      	cmp	r3, #1
 80058c8:	d11d      	bne.n	8005906 <HAL_DAC_ConfigChannel+0x17a>
 80058ca:	68fb      	ldr	r3, [r7, #12]
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80058d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	f003 0310 	and.w	r3, r3, #16
 80058d8:	221f      	movs	r2, #31
 80058da:	fa02 f303 	lsl.w	r3, r2, r3
 80058de:	43db      	mvns	r3, r3
 80058e0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80058e2:	4013      	ands	r3, r2
 80058e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80058e6:	68bb      	ldr	r3, [r7, #8]
 80058e8:	6a1b      	ldr	r3, [r3, #32]
 80058ea:	617b      	str	r3, [r7, #20]
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	f003 0310 	and.w	r3, r3, #16
 80058f2:	697a      	ldr	r2, [r7, #20]
 80058f4:	fa02 f303 	lsl.w	r3, r2, r3
 80058f8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80058fa:	4313      	orrs	r3, r2
 80058fc:	627b      	str	r3, [r7, #36]	@ 0x24
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	681b      	ldr	r3, [r3, #0]
 8005902:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005904:	639a      	str	r2, [r3, #56]	@ 0x38
 8005906:	68fb      	ldr	r3, [r7, #12]
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800590c:	627b      	str	r3, [r7, #36]	@ 0x24
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	f003 0310 	and.w	r3, r3, #16
 8005914:	2207      	movs	r2, #7
 8005916:	fa02 f303 	lsl.w	r3, r2, r3
 800591a:	43db      	mvns	r3, r3
 800591c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800591e:	4013      	ands	r3, r2
 8005920:	627b      	str	r3, [r7, #36]	@ 0x24
 8005922:	68bb      	ldr	r3, [r7, #8]
 8005924:	699b      	ldr	r3, [r3, #24]
 8005926:	2b01      	cmp	r3, #1
 8005928:	d102      	bne.n	8005930 <HAL_DAC_ConfigChannel+0x1a4>
 800592a:	2300      	movs	r3, #0
 800592c:	623b      	str	r3, [r7, #32]
 800592e:	e00f      	b.n	8005950 <HAL_DAC_ConfigChannel+0x1c4>
 8005930:	68bb      	ldr	r3, [r7, #8]
 8005932:	699b      	ldr	r3, [r3, #24]
 8005934:	2b02      	cmp	r3, #2
 8005936:	d102      	bne.n	800593e <HAL_DAC_ConfigChannel+0x1b2>
 8005938:	2301      	movs	r3, #1
 800593a:	623b      	str	r3, [r7, #32]
 800593c:	e008      	b.n	8005950 <HAL_DAC_ConfigChannel+0x1c4>
 800593e:	68bb      	ldr	r3, [r7, #8]
 8005940:	695b      	ldr	r3, [r3, #20]
 8005942:	2b00      	cmp	r3, #0
 8005944:	d102      	bne.n	800594c <HAL_DAC_ConfigChannel+0x1c0>
 8005946:	2301      	movs	r3, #1
 8005948:	623b      	str	r3, [r7, #32]
 800594a:	e001      	b.n	8005950 <HAL_DAC_ConfigChannel+0x1c4>
 800594c:	2300      	movs	r3, #0
 800594e:	623b      	str	r3, [r7, #32]
 8005950:	68bb      	ldr	r3, [r7, #8]
 8005952:	689a      	ldr	r2, [r3, #8]
 8005954:	68bb      	ldr	r3, [r7, #8]
 8005956:	695b      	ldr	r3, [r3, #20]
 8005958:	4313      	orrs	r3, r2
 800595a:	6a3a      	ldr	r2, [r7, #32]
 800595c:	4313      	orrs	r3, r2
 800595e:	617b      	str	r3, [r7, #20]
 8005960:	687b      	ldr	r3, [r7, #4]
 8005962:	f003 0310 	and.w	r3, r3, #16
 8005966:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800596a:	fa02 f303 	lsl.w	r3, r2, r3
 800596e:	43db      	mvns	r3, r3
 8005970:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005972:	4013      	ands	r3, r2
 8005974:	627b      	str	r3, [r7, #36]	@ 0x24
 8005976:	68bb      	ldr	r3, [r7, #8]
 8005978:	791b      	ldrb	r3, [r3, #4]
 800597a:	2b01      	cmp	r3, #1
 800597c:	d102      	bne.n	8005984 <HAL_DAC_ConfigChannel+0x1f8>
 800597e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8005982:	e000      	b.n	8005986 <HAL_DAC_ConfigChannel+0x1fa>
 8005984:	2300      	movs	r3, #0
 8005986:	697a      	ldr	r2, [r7, #20]
 8005988:	4313      	orrs	r3, r2
 800598a:	617b      	str	r3, [r7, #20]
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	f003 0310 	and.w	r3, r3, #16
 8005992:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005996:	fa02 f303 	lsl.w	r3, r2, r3
 800599a:	43db      	mvns	r3, r3
 800599c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800599e:	4013      	ands	r3, r2
 80059a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80059a2:	68bb      	ldr	r3, [r7, #8]
 80059a4:	795b      	ldrb	r3, [r3, #5]
 80059a6:	2b01      	cmp	r3, #1
 80059a8:	d102      	bne.n	80059b0 <HAL_DAC_ConfigChannel+0x224>
 80059aa:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80059ae:	e000      	b.n	80059b2 <HAL_DAC_ConfigChannel+0x226>
 80059b0:	2300      	movs	r3, #0
 80059b2:	697a      	ldr	r2, [r7, #20]
 80059b4:	4313      	orrs	r3, r2
 80059b6:	617b      	str	r3, [r7, #20]
 80059b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80059ba:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80059be:	627b      	str	r3, [r7, #36]	@ 0x24
 80059c0:	68bb      	ldr	r3, [r7, #8]
 80059c2:	681b      	ldr	r3, [r3, #0]
 80059c4:	2b02      	cmp	r3, #2
 80059c6:	d114      	bne.n	80059f2 <HAL_DAC_ConfigChannel+0x266>
 80059c8:	f001 fd92 	bl	80074f0 <HAL_RCC_GetHCLKFreq>
 80059cc:	6138      	str	r0, [r7, #16]
 80059ce:	693b      	ldr	r3, [r7, #16]
 80059d0:	4a48      	ldr	r2, [pc, #288]	@ (8005af4 <HAL_DAC_ConfigChannel+0x368>)
 80059d2:	4293      	cmp	r3, r2
 80059d4:	d904      	bls.n	80059e0 <HAL_DAC_ConfigChannel+0x254>
 80059d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80059d8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80059dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80059de:	e00f      	b.n	8005a00 <HAL_DAC_ConfigChannel+0x274>
 80059e0:	693b      	ldr	r3, [r7, #16]
 80059e2:	4a45      	ldr	r2, [pc, #276]	@ (8005af8 <HAL_DAC_ConfigChannel+0x36c>)
 80059e4:	4293      	cmp	r3, r2
 80059e6:	d90a      	bls.n	80059fe <HAL_DAC_ConfigChannel+0x272>
 80059e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80059ea:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80059ee:	627b      	str	r3, [r7, #36]	@ 0x24
 80059f0:	e006      	b.n	8005a00 <HAL_DAC_ConfigChannel+0x274>
 80059f2:	68bb      	ldr	r3, [r7, #8]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80059f8:	4313      	orrs	r3, r2
 80059fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80059fc:	e000      	b.n	8005a00 <HAL_DAC_ConfigChannel+0x274>
 80059fe:	bf00      	nop
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	f003 0310 	and.w	r3, r3, #16
 8005a06:	697a      	ldr	r2, [r7, #20]
 8005a08:	fa02 f303 	lsl.w	r3, r2, r3
 8005a0c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005a0e:	4313      	orrs	r3, r2
 8005a10:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005a18:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005a1a:	68fb      	ldr	r3, [r7, #12]
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	6819      	ldr	r1, [r3, #0]
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	f003 0310 	and.w	r3, r3, #16
 8005a26:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8005a2a:	fa02 f303 	lsl.w	r3, r2, r3
 8005a2e:	43da      	mvns	r2, r3
 8005a30:	68fb      	ldr	r3, [r7, #12]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	400a      	ands	r2, r1
 8005a36:	601a      	str	r2, [r3, #0]
 8005a38:	68fb      	ldr	r3, [r7, #12]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	f003 0310 	and.w	r3, r3, #16
 8005a46:	f640 72fe 	movw	r2, #4094	@ 0xffe
 8005a4a:	fa02 f303 	lsl.w	r3, r2, r3
 8005a4e:	43db      	mvns	r3, r3
 8005a50:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005a52:	4013      	ands	r3, r2
 8005a54:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a56:	68bb      	ldr	r3, [r7, #8]
 8005a58:	68db      	ldr	r3, [r3, #12]
 8005a5a:	617b      	str	r3, [r7, #20]
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	f003 0310 	and.w	r3, r3, #16
 8005a62:	697a      	ldr	r2, [r7, #20]
 8005a64:	fa02 f303 	lsl.w	r3, r2, r3
 8005a68:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005a6a:	4313      	orrs	r3, r2
 8005a6c:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a6e:	68fb      	ldr	r3, [r7, #12]
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005a74:	601a      	str	r2, [r3, #0]
 8005a76:	68fb      	ldr	r3, [r7, #12]
 8005a78:	681b      	ldr	r3, [r3, #0]
 8005a7a:	6819      	ldr	r1, [r3, #0]
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	f003 0310 	and.w	r3, r3, #16
 8005a82:	22c0      	movs	r2, #192	@ 0xc0
 8005a84:	fa02 f303 	lsl.w	r3, r2, r3
 8005a88:	43da      	mvns	r2, r3
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	400a      	ands	r2, r1
 8005a90:	601a      	str	r2, [r3, #0]
 8005a92:	68bb      	ldr	r3, [r7, #8]
 8005a94:	68db      	ldr	r3, [r3, #12]
 8005a96:	089b      	lsrs	r3, r3, #2
 8005a98:	f003 030f 	and.w	r3, r3, #15
 8005a9c:	617b      	str	r3, [r7, #20]
 8005a9e:	68bb      	ldr	r3, [r7, #8]
 8005aa0:	691b      	ldr	r3, [r3, #16]
 8005aa2:	089b      	lsrs	r3, r3, #2
 8005aa4:	021b      	lsls	r3, r3, #8
 8005aa6:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8005aaa:	697a      	ldr	r2, [r7, #20]
 8005aac:	4313      	orrs	r3, r2
 8005aae:	617b      	str	r3, [r7, #20]
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	f003 0310 	and.w	r3, r3, #16
 8005abc:	f640 710f 	movw	r1, #3855	@ 0xf0f
 8005ac0:	fa01 f303 	lsl.w	r3, r1, r3
 8005ac4:	43db      	mvns	r3, r3
 8005ac6:	ea02 0103 	and.w	r1, r2, r3
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	f003 0310 	and.w	r3, r3, #16
 8005ad0:	697a      	ldr	r2, [r7, #20]
 8005ad2:	409a      	lsls	r2, r3
 8005ad4:	68fb      	ldr	r3, [r7, #12]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	430a      	orrs	r2, r1
 8005ada:	661a      	str	r2, [r3, #96]	@ 0x60
 8005adc:	68fb      	ldr	r3, [r7, #12]
 8005ade:	2201      	movs	r2, #1
 8005ae0:	711a      	strb	r2, [r3, #4]
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	2200      	movs	r2, #0
 8005ae6:	715a      	strb	r2, [r3, #5]
 8005ae8:	7ffb      	ldrb	r3, [r7, #31]
 8005aea:	4618      	mov	r0, r3
 8005aec:	3728      	adds	r7, #40	@ 0x28
 8005aee:	46bd      	mov	sp, r7
 8005af0:	bd80      	pop	{r7, pc}
 8005af2:	bf00      	nop
 8005af4:	09896800 	.word	0x09896800
 8005af8:	04c4b400 	.word	0x04c4b400

08005afc <HAL_DMA_Init>:
 8005afc:	b580      	push	{r7, lr}
 8005afe:	b084      	sub	sp, #16
 8005b00:	af00      	add	r7, sp, #0
 8005b02:	6078      	str	r0, [r7, #4]
 8005b04:	687b      	ldr	r3, [r7, #4]
 8005b06:	2b00      	cmp	r3, #0
 8005b08:	d101      	bne.n	8005b0e <HAL_DMA_Init+0x12>
 8005b0a:	2301      	movs	r3, #1
 8005b0c:	e08d      	b.n	8005c2a <HAL_DMA_Init+0x12e>
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	461a      	mov	r2, r3
 8005b14:	4b47      	ldr	r3, [pc, #284]	@ (8005c34 <HAL_DMA_Init+0x138>)
 8005b16:	429a      	cmp	r2, r3
 8005b18:	d80f      	bhi.n	8005b3a <HAL_DMA_Init+0x3e>
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	681b      	ldr	r3, [r3, #0]
 8005b1e:	461a      	mov	r2, r3
 8005b20:	4b45      	ldr	r3, [pc, #276]	@ (8005c38 <HAL_DMA_Init+0x13c>)
 8005b22:	4413      	add	r3, r2
 8005b24:	4a45      	ldr	r2, [pc, #276]	@ (8005c3c <HAL_DMA_Init+0x140>)
 8005b26:	fba2 2303 	umull	r2, r3, r2, r3
 8005b2a:	091b      	lsrs	r3, r3, #4
 8005b2c:	009a      	lsls	r2, r3, #2
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	645a      	str	r2, [r3, #68]	@ 0x44
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	4a42      	ldr	r2, [pc, #264]	@ (8005c40 <HAL_DMA_Init+0x144>)
 8005b36:	641a      	str	r2, [r3, #64]	@ 0x40
 8005b38:	e00e      	b.n	8005b58 <HAL_DMA_Init+0x5c>
 8005b3a:	687b      	ldr	r3, [r7, #4]
 8005b3c:	681b      	ldr	r3, [r3, #0]
 8005b3e:	461a      	mov	r2, r3
 8005b40:	4b40      	ldr	r3, [pc, #256]	@ (8005c44 <HAL_DMA_Init+0x148>)
 8005b42:	4413      	add	r3, r2
 8005b44:	4a3d      	ldr	r2, [pc, #244]	@ (8005c3c <HAL_DMA_Init+0x140>)
 8005b46:	fba2 2303 	umull	r2, r3, r2, r3
 8005b4a:	091b      	lsrs	r3, r3, #4
 8005b4c:	009a      	lsls	r2, r3, #2
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	645a      	str	r2, [r3, #68]	@ 0x44
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	4a3c      	ldr	r2, [pc, #240]	@ (8005c48 <HAL_DMA_Init+0x14c>)
 8005b56:	641a      	str	r2, [r3, #64]	@ 0x40
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	2202      	movs	r2, #2
 8005b5c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	681b      	ldr	r3, [r3, #0]
 8005b66:	60fb      	str	r3, [r7, #12]
 8005b68:	68fb      	ldr	r3, [r7, #12]
 8005b6a:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 8005b6e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005b72:	60fb      	str	r3, [r7, #12]
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	689a      	ldr	r2, [r3, #8]
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	68db      	ldr	r3, [r3, #12]
 8005b7c:	431a      	orrs	r2, r3
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	691b      	ldr	r3, [r3, #16]
 8005b82:	431a      	orrs	r2, r3
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	695b      	ldr	r3, [r3, #20]
 8005b88:	431a      	orrs	r2, r3
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	699b      	ldr	r3, [r3, #24]
 8005b8e:	431a      	orrs	r2, r3
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	69db      	ldr	r3, [r3, #28]
 8005b94:	431a      	orrs	r2, r3
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	6a1b      	ldr	r3, [r3, #32]
 8005b9a:	4313      	orrs	r3, r2
 8005b9c:	68fa      	ldr	r2, [r7, #12]
 8005b9e:	4313      	orrs	r3, r2
 8005ba0:	60fb      	str	r3, [r7, #12]
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	68fa      	ldr	r2, [r7, #12]
 8005ba8:	601a      	str	r2, [r3, #0]
 8005baa:	6878      	ldr	r0, [r7, #4]
 8005bac:	f000 fa76 	bl	800609c <DMA_CalcDMAMUXChannelBaseAndMask>
 8005bb0:	687b      	ldr	r3, [r7, #4]
 8005bb2:	689b      	ldr	r3, [r3, #8]
 8005bb4:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005bb8:	d102      	bne.n	8005bc0 <HAL_DMA_Init+0xc4>
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	2200      	movs	r2, #0
 8005bbe:	605a      	str	r2, [r3, #4]
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	685a      	ldr	r2, [r3, #4]
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005bc8:	b2d2      	uxtb	r2, r2
 8005bca:	601a      	str	r2, [r3, #0]
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005bd0:	687a      	ldr	r2, [r7, #4]
 8005bd2:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005bd4:	605a      	str	r2, [r3, #4]
 8005bd6:	687b      	ldr	r3, [r7, #4]
 8005bd8:	685b      	ldr	r3, [r3, #4]
 8005bda:	2b00      	cmp	r3, #0
 8005bdc:	d010      	beq.n	8005c00 <HAL_DMA_Init+0x104>
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	685b      	ldr	r3, [r3, #4]
 8005be2:	2b04      	cmp	r3, #4
 8005be4:	d80c      	bhi.n	8005c00 <HAL_DMA_Init+0x104>
 8005be6:	6878      	ldr	r0, [r7, #4]
 8005be8:	f000 fa96 	bl	8006118 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8005bec:	687b      	ldr	r3, [r7, #4]
 8005bee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005bf0:	2200      	movs	r2, #0
 8005bf2:	601a      	str	r2, [r3, #0]
 8005bf4:	687b      	ldr	r3, [r7, #4]
 8005bf6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005bf8:	687a      	ldr	r2, [r7, #4]
 8005bfa:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8005bfc:	605a      	str	r2, [r3, #4]
 8005bfe:	e008      	b.n	8005c12 <HAL_DMA_Init+0x116>
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	2200      	movs	r2, #0
 8005c04:	655a      	str	r2, [r3, #84]	@ 0x54
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	2200      	movs	r2, #0
 8005c0a:	659a      	str	r2, [r3, #88]	@ 0x58
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	2200      	movs	r2, #0
 8005c10:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	2200      	movs	r2, #0
 8005c16:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	2201      	movs	r2, #1
 8005c1c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	2200      	movs	r2, #0
 8005c24:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005c28:	2300      	movs	r3, #0
 8005c2a:	4618      	mov	r0, r3
 8005c2c:	3710      	adds	r7, #16
 8005c2e:	46bd      	mov	sp, r7
 8005c30:	bd80      	pop	{r7, pc}
 8005c32:	bf00      	nop
 8005c34:	40020407 	.word	0x40020407
 8005c38:	bffdfff8 	.word	0xbffdfff8
 8005c3c:	cccccccd 	.word	0xcccccccd
 8005c40:	40020000 	.word	0x40020000
 8005c44:	bffdfbf8 	.word	0xbffdfbf8
 8005c48:	40020400 	.word	0x40020400

08005c4c <HAL_DMA_Start_IT>:
 8005c4c:	b580      	push	{r7, lr}
 8005c4e:	b086      	sub	sp, #24
 8005c50:	af00      	add	r7, sp, #0
 8005c52:	60f8      	str	r0, [r7, #12]
 8005c54:	60b9      	str	r1, [r7, #8]
 8005c56:	607a      	str	r2, [r7, #4]
 8005c58:	603b      	str	r3, [r7, #0]
 8005c5a:	2300      	movs	r3, #0
 8005c5c:	75fb      	strb	r3, [r7, #23]
 8005c5e:	68fb      	ldr	r3, [r7, #12]
 8005c60:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8005c64:	2b01      	cmp	r3, #1
 8005c66:	d101      	bne.n	8005c6c <HAL_DMA_Start_IT+0x20>
 8005c68:	2302      	movs	r3, #2
 8005c6a:	e066      	b.n	8005d3a <HAL_DMA_Start_IT+0xee>
 8005c6c:	68fb      	ldr	r3, [r7, #12]
 8005c6e:	2201      	movs	r2, #1
 8005c70:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8005c7a:	b2db      	uxtb	r3, r3
 8005c7c:	2b01      	cmp	r3, #1
 8005c7e:	d155      	bne.n	8005d2c <HAL_DMA_Start_IT+0xe0>
 8005c80:	68fb      	ldr	r3, [r7, #12]
 8005c82:	2202      	movs	r2, #2
 8005c84:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	2200      	movs	r2, #0
 8005c8c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	681a      	ldr	r2, [r3, #0]
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	681b      	ldr	r3, [r3, #0]
 8005c98:	f022 0201 	bic.w	r2, r2, #1
 8005c9c:	601a      	str	r2, [r3, #0]
 8005c9e:	683b      	ldr	r3, [r7, #0]
 8005ca0:	687a      	ldr	r2, [r7, #4]
 8005ca2:	68b9      	ldr	r1, [r7, #8]
 8005ca4:	68f8      	ldr	r0, [r7, #12]
 8005ca6:	f000 f9bb 	bl	8006020 <DMA_SetConfig>
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005cae:	2b00      	cmp	r3, #0
 8005cb0:	d008      	beq.n	8005cc4 <HAL_DMA_Start_IT+0x78>
 8005cb2:	68fb      	ldr	r3, [r7, #12]
 8005cb4:	681b      	ldr	r3, [r3, #0]
 8005cb6:	681a      	ldr	r2, [r3, #0]
 8005cb8:	68fb      	ldr	r3, [r7, #12]
 8005cba:	681b      	ldr	r3, [r3, #0]
 8005cbc:	f042 020e 	orr.w	r2, r2, #14
 8005cc0:	601a      	str	r2, [r3, #0]
 8005cc2:	e00f      	b.n	8005ce4 <HAL_DMA_Start_IT+0x98>
 8005cc4:	68fb      	ldr	r3, [r7, #12]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	681a      	ldr	r2, [r3, #0]
 8005cca:	68fb      	ldr	r3, [r7, #12]
 8005ccc:	681b      	ldr	r3, [r3, #0]
 8005cce:	f022 0204 	bic.w	r2, r2, #4
 8005cd2:	601a      	str	r2, [r3, #0]
 8005cd4:	68fb      	ldr	r3, [r7, #12]
 8005cd6:	681b      	ldr	r3, [r3, #0]
 8005cd8:	681a      	ldr	r2, [r3, #0]
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	f042 020a 	orr.w	r2, r2, #10
 8005ce2:	601a      	str	r2, [r3, #0]
 8005ce4:	68fb      	ldr	r3, [r7, #12]
 8005ce6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005ce8:	681b      	ldr	r3, [r3, #0]
 8005cea:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005cee:	2b00      	cmp	r3, #0
 8005cf0:	d007      	beq.n	8005d02 <HAL_DMA_Start_IT+0xb6>
 8005cf2:	68fb      	ldr	r3, [r7, #12]
 8005cf4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005cf6:	681a      	ldr	r2, [r3, #0]
 8005cf8:	68fb      	ldr	r3, [r7, #12]
 8005cfa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005cfc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005d00:	601a      	str	r2, [r3, #0]
 8005d02:	68fb      	ldr	r3, [r7, #12]
 8005d04:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d007      	beq.n	8005d1a <HAL_DMA_Start_IT+0xce>
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d0e:	681a      	ldr	r2, [r3, #0]
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d14:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005d18:	601a      	str	r2, [r3, #0]
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	681b      	ldr	r3, [r3, #0]
 8005d1e:	681a      	ldr	r2, [r3, #0]
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	681b      	ldr	r3, [r3, #0]
 8005d24:	f042 0201 	orr.w	r2, r2, #1
 8005d28:	601a      	str	r2, [r3, #0]
 8005d2a:	e005      	b.n	8005d38 <HAL_DMA_Start_IT+0xec>
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	2200      	movs	r2, #0
 8005d30:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005d34:	2302      	movs	r3, #2
 8005d36:	75fb      	strb	r3, [r7, #23]
 8005d38:	7dfb      	ldrb	r3, [r7, #23]
 8005d3a:	4618      	mov	r0, r3
 8005d3c:	3718      	adds	r7, #24
 8005d3e:	46bd      	mov	sp, r7
 8005d40:	bd80      	pop	{r7, pc}

08005d42 <HAL_DMA_Abort>:
 8005d42:	b480      	push	{r7}
 8005d44:	b085      	sub	sp, #20
 8005d46:	af00      	add	r7, sp, #0
 8005d48:	6078      	str	r0, [r7, #4]
 8005d4a:	2300      	movs	r3, #0
 8005d4c:	73fb      	strb	r3, [r7, #15]
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8005d54:	b2db      	uxtb	r3, r3
 8005d56:	2b02      	cmp	r3, #2
 8005d58:	d005      	beq.n	8005d66 <HAL_DMA_Abort+0x24>
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	2204      	movs	r2, #4
 8005d5e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005d60:	2301      	movs	r3, #1
 8005d62:	73fb      	strb	r3, [r7, #15]
 8005d64:	e037      	b.n	8005dd6 <HAL_DMA_Abort+0x94>
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	681a      	ldr	r2, [r3, #0]
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	681b      	ldr	r3, [r3, #0]
 8005d70:	f022 020e 	bic.w	r2, r2, #14
 8005d74:	601a      	str	r2, [r3, #0]
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d7a:	681a      	ldr	r2, [r3, #0]
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005d80:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005d84:	601a      	str	r2, [r3, #0]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	681a      	ldr	r2, [r3, #0]
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	f022 0201 	bic.w	r2, r2, #1
 8005d94:	601a      	str	r2, [r3, #0]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005d9a:	f003 021f 	and.w	r2, r3, #31
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005da2:	2101      	movs	r1, #1
 8005da4:	fa01 f202 	lsl.w	r2, r1, r2
 8005da8:	605a      	str	r2, [r3, #4]
 8005daa:	687b      	ldr	r3, [r7, #4]
 8005dac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005dae:	687a      	ldr	r2, [r7, #4]
 8005db0:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005db2:	605a      	str	r2, [r3, #4]
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005db8:	2b00      	cmp	r3, #0
 8005dba:	d00c      	beq.n	8005dd6 <HAL_DMA_Abort+0x94>
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005dc0:	681a      	ldr	r2, [r3, #0]
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005dc6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005dca:	601a      	str	r2, [r3, #0]
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005dd0:	687a      	ldr	r2, [r7, #4]
 8005dd2:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8005dd4:	605a      	str	r2, [r3, #4]
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	2201      	movs	r2, #1
 8005dda:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	2200      	movs	r2, #0
 8005de2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005de6:	7bfb      	ldrb	r3, [r7, #15]
 8005de8:	4618      	mov	r0, r3
 8005dea:	3714      	adds	r7, #20
 8005dec:	46bd      	mov	sp, r7
 8005dee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005df2:	4770      	bx	lr

08005df4 <HAL_DMA_Abort_IT>:
 8005df4:	b580      	push	{r7, lr}
 8005df6:	b084      	sub	sp, #16
 8005df8:	af00      	add	r7, sp, #0
 8005dfa:	6078      	str	r0, [r7, #4]
 8005dfc:	2300      	movs	r3, #0
 8005dfe:	73fb      	strb	r3, [r7, #15]
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8005e06:	b2db      	uxtb	r3, r3
 8005e08:	2b02      	cmp	r3, #2
 8005e0a:	d00d      	beq.n	8005e28 <HAL_DMA_Abort_IT+0x34>
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	2204      	movs	r2, #4
 8005e10:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	2201      	movs	r2, #1
 8005e16:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	2200      	movs	r2, #0
 8005e1e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005e22:	2301      	movs	r3, #1
 8005e24:	73fb      	strb	r3, [r7, #15]
 8005e26:	e047      	b.n	8005eb8 <HAL_DMA_Abort_IT+0xc4>
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	681a      	ldr	r2, [r3, #0]
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	681b      	ldr	r3, [r3, #0]
 8005e32:	f022 020e 	bic.w	r2, r2, #14
 8005e36:	601a      	str	r2, [r3, #0]
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	681a      	ldr	r2, [r3, #0]
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	f022 0201 	bic.w	r2, r2, #1
 8005e46:	601a      	str	r2, [r3, #0]
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005e4c:	681a      	ldr	r2, [r3, #0]
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005e52:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005e56:	601a      	str	r2, [r3, #0]
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005e5c:	f003 021f 	and.w	r2, r3, #31
 8005e60:	687b      	ldr	r3, [r7, #4]
 8005e62:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e64:	2101      	movs	r1, #1
 8005e66:	fa01 f202 	lsl.w	r2, r1, r2
 8005e6a:	605a      	str	r2, [r3, #4]
 8005e6c:	687b      	ldr	r3, [r7, #4]
 8005e6e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005e70:	687a      	ldr	r2, [r7, #4]
 8005e72:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005e74:	605a      	str	r2, [r3, #4]
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d00c      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xa4>
 8005e7e:	687b      	ldr	r3, [r7, #4]
 8005e80:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e82:	681a      	ldr	r2, [r3, #0]
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e88:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005e8c:	601a      	str	r2, [r3, #0]
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005e92:	687a      	ldr	r2, [r7, #4]
 8005e94:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8005e96:	605a      	str	r2, [r3, #4]
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	2201      	movs	r2, #1
 8005e9c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	2200      	movs	r2, #0
 8005ea4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	d003      	beq.n	8005eb8 <HAL_DMA_Abort_IT+0xc4>
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005eb4:	6878      	ldr	r0, [r7, #4]
 8005eb6:	4798      	blx	r3
 8005eb8:	7bfb      	ldrb	r3, [r7, #15]
 8005eba:	4618      	mov	r0, r3
 8005ebc:	3710      	adds	r7, #16
 8005ebe:	46bd      	mov	sp, r7
 8005ec0:	bd80      	pop	{r7, pc}

08005ec2 <HAL_DMA_IRQHandler>:
 8005ec2:	b580      	push	{r7, lr}
 8005ec4:	b084      	sub	sp, #16
 8005ec6:	af00      	add	r7, sp, #0
 8005ec8:	6078      	str	r0, [r7, #4]
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	60fb      	str	r3, [r7, #12]
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	681b      	ldr	r3, [r3, #0]
 8005ed8:	60bb      	str	r3, [r7, #8]
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005ede:	f003 031f 	and.w	r3, r3, #31
 8005ee2:	2204      	movs	r2, #4
 8005ee4:	409a      	lsls	r2, r3
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	4013      	ands	r3, r2
 8005eea:	2b00      	cmp	r3, #0
 8005eec:	d026      	beq.n	8005f3c <HAL_DMA_IRQHandler+0x7a>
 8005eee:	68bb      	ldr	r3, [r7, #8]
 8005ef0:	f003 0304 	and.w	r3, r3, #4
 8005ef4:	2b00      	cmp	r3, #0
 8005ef6:	d021      	beq.n	8005f3c <HAL_DMA_IRQHandler+0x7a>
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	681b      	ldr	r3, [r3, #0]
 8005efe:	f003 0320 	and.w	r3, r3, #32
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	d107      	bne.n	8005f16 <HAL_DMA_IRQHandler+0x54>
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	681a      	ldr	r2, [r3, #0]
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	f022 0204 	bic.w	r2, r2, #4
 8005f14:	601a      	str	r2, [r3, #0]
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005f1a:	f003 021f 	and.w	r2, r3, #31
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005f22:	2104      	movs	r1, #4
 8005f24:	fa01 f202 	lsl.w	r2, r1, r2
 8005f28:	605a      	str	r2, [r3, #4]
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f2e:	2b00      	cmp	r3, #0
 8005f30:	d071      	beq.n	8006016 <HAL_DMA_IRQHandler+0x154>
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f36:	6878      	ldr	r0, [r7, #4]
 8005f38:	4798      	blx	r3
 8005f3a:	e06c      	b.n	8006016 <HAL_DMA_IRQHandler+0x154>
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005f40:	f003 031f 	and.w	r3, r3, #31
 8005f44:	2202      	movs	r2, #2
 8005f46:	409a      	lsls	r2, r3
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	4013      	ands	r3, r2
 8005f4c:	2b00      	cmp	r3, #0
 8005f4e:	d02e      	beq.n	8005fae <HAL_DMA_IRQHandler+0xec>
 8005f50:	68bb      	ldr	r3, [r7, #8]
 8005f52:	f003 0302 	and.w	r3, r3, #2
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	d029      	beq.n	8005fae <HAL_DMA_IRQHandler+0xec>
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	681b      	ldr	r3, [r3, #0]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	f003 0320 	and.w	r3, r3, #32
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	d10b      	bne.n	8005f80 <HAL_DMA_IRQHandler+0xbe>
 8005f68:	687b      	ldr	r3, [r7, #4]
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	681a      	ldr	r2, [r3, #0]
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	f022 020a 	bic.w	r2, r2, #10
 8005f76:	601a      	str	r2, [r3, #0]
 8005f78:	687b      	ldr	r3, [r7, #4]
 8005f7a:	2201      	movs	r2, #1
 8005f7c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005f84:	f003 021f 	and.w	r2, r3, #31
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005f8c:	2102      	movs	r1, #2
 8005f8e:	fa01 f202 	lsl.w	r2, r1, r2
 8005f92:	605a      	str	r2, [r3, #4]
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	2200      	movs	r2, #0
 8005f98:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005f9c:	687b      	ldr	r3, [r7, #4]
 8005f9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005fa0:	2b00      	cmp	r3, #0
 8005fa2:	d038      	beq.n	8006016 <HAL_DMA_IRQHandler+0x154>
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005fa8:	6878      	ldr	r0, [r7, #4]
 8005faa:	4798      	blx	r3
 8005fac:	e033      	b.n	8006016 <HAL_DMA_IRQHandler+0x154>
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005fb2:	f003 031f 	and.w	r3, r3, #31
 8005fb6:	2208      	movs	r2, #8
 8005fb8:	409a      	lsls	r2, r3
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	4013      	ands	r3, r2
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d02a      	beq.n	8006018 <HAL_DMA_IRQHandler+0x156>
 8005fc2:	68bb      	ldr	r3, [r7, #8]
 8005fc4:	f003 0308 	and.w	r3, r3, #8
 8005fc8:	2b00      	cmp	r3, #0
 8005fca:	d025      	beq.n	8006018 <HAL_DMA_IRQHandler+0x156>
 8005fcc:	687b      	ldr	r3, [r7, #4]
 8005fce:	681b      	ldr	r3, [r3, #0]
 8005fd0:	681a      	ldr	r2, [r3, #0]
 8005fd2:	687b      	ldr	r3, [r7, #4]
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	f022 020e 	bic.w	r2, r2, #14
 8005fda:	601a      	str	r2, [r3, #0]
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005fe0:	f003 021f 	and.w	r2, r3, #31
 8005fe4:	687b      	ldr	r3, [r7, #4]
 8005fe6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005fe8:	2101      	movs	r1, #1
 8005fea:	fa01 f202 	lsl.w	r2, r1, r2
 8005fee:	605a      	str	r2, [r3, #4]
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	2201      	movs	r2, #1
 8005ff4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	2201      	movs	r2, #1
 8005ffa:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	2200      	movs	r2, #0
 8006002:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800600a:	2b00      	cmp	r3, #0
 800600c:	d004      	beq.n	8006018 <HAL_DMA_IRQHandler+0x156>
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006012:	6878      	ldr	r0, [r7, #4]
 8006014:	4798      	blx	r3
 8006016:	bf00      	nop
 8006018:	bf00      	nop
 800601a:	3710      	adds	r7, #16
 800601c:	46bd      	mov	sp, r7
 800601e:	bd80      	pop	{r7, pc}

08006020 <DMA_SetConfig>:
 8006020:	b480      	push	{r7}
 8006022:	b085      	sub	sp, #20
 8006024:	af00      	add	r7, sp, #0
 8006026:	60f8      	str	r0, [r7, #12]
 8006028:	60b9      	str	r1, [r7, #8]
 800602a:	607a      	str	r2, [r7, #4]
 800602c:	603b      	str	r3, [r7, #0]
 800602e:	68fb      	ldr	r3, [r7, #12]
 8006030:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006032:	68fa      	ldr	r2, [r7, #12]
 8006034:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8006036:	605a      	str	r2, [r3, #4]
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800603c:	2b00      	cmp	r3, #0
 800603e:	d004      	beq.n	800604a <DMA_SetConfig+0x2a>
 8006040:	68fb      	ldr	r3, [r7, #12]
 8006042:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006044:	68fa      	ldr	r2, [r7, #12]
 8006046:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8006048:	605a      	str	r2, [r3, #4]
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800604e:	f003 021f 	and.w	r2, r3, #31
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006056:	2101      	movs	r1, #1
 8006058:	fa01 f202 	lsl.w	r2, r1, r2
 800605c:	605a      	str	r2, [r3, #4]
 800605e:	68fb      	ldr	r3, [r7, #12]
 8006060:	681b      	ldr	r3, [r3, #0]
 8006062:	683a      	ldr	r2, [r7, #0]
 8006064:	605a      	str	r2, [r3, #4]
 8006066:	68fb      	ldr	r3, [r7, #12]
 8006068:	689b      	ldr	r3, [r3, #8]
 800606a:	2b10      	cmp	r3, #16
 800606c:	d108      	bne.n	8006080 <DMA_SetConfig+0x60>
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	687a      	ldr	r2, [r7, #4]
 8006074:	609a      	str	r2, [r3, #8]
 8006076:	68fb      	ldr	r3, [r7, #12]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	68ba      	ldr	r2, [r7, #8]
 800607c:	60da      	str	r2, [r3, #12]
 800607e:	e007      	b.n	8006090 <DMA_SetConfig+0x70>
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	68ba      	ldr	r2, [r7, #8]
 8006086:	609a      	str	r2, [r3, #8]
 8006088:	68fb      	ldr	r3, [r7, #12]
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	687a      	ldr	r2, [r7, #4]
 800608e:	60da      	str	r2, [r3, #12]
 8006090:	bf00      	nop
 8006092:	3714      	adds	r7, #20
 8006094:	46bd      	mov	sp, r7
 8006096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800609a:	4770      	bx	lr

0800609c <DMA_CalcDMAMUXChannelBaseAndMask>:
 800609c:	b480      	push	{r7}
 800609e:	b087      	sub	sp, #28
 80060a0:	af00      	add	r7, sp, #0
 80060a2:	6078      	str	r0, [r7, #4]
 80060a4:	687b      	ldr	r3, [r7, #4]
 80060a6:	681b      	ldr	r3, [r3, #0]
 80060a8:	461a      	mov	r2, r3
 80060aa:	4b16      	ldr	r3, [pc, #88]	@ (8006104 <DMA_CalcDMAMUXChannelBaseAndMask+0x68>)
 80060ac:	429a      	cmp	r2, r3
 80060ae:	d802      	bhi.n	80060b6 <DMA_CalcDMAMUXChannelBaseAndMask+0x1a>
 80060b0:	4b15      	ldr	r3, [pc, #84]	@ (8006108 <DMA_CalcDMAMUXChannelBaseAndMask+0x6c>)
 80060b2:	617b      	str	r3, [r7, #20]
 80060b4:	e001      	b.n	80060ba <DMA_CalcDMAMUXChannelBaseAndMask+0x1e>
 80060b6:	4b15      	ldr	r3, [pc, #84]	@ (800610c <DMA_CalcDMAMUXChannelBaseAndMask+0x70>)
 80060b8:	617b      	str	r3, [r7, #20]
 80060ba:	697b      	ldr	r3, [r7, #20]
 80060bc:	613b      	str	r3, [r7, #16]
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	681b      	ldr	r3, [r3, #0]
 80060c2:	b2db      	uxtb	r3, r3
 80060c4:	3b08      	subs	r3, #8
 80060c6:	4a12      	ldr	r2, [pc, #72]	@ (8006110 <DMA_CalcDMAMUXChannelBaseAndMask+0x74>)
 80060c8:	fba2 2303 	umull	r2, r3, r2, r3
 80060cc:	091b      	lsrs	r3, r3, #4
 80060ce:	60fb      	str	r3, [r7, #12]
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80060d4:	089b      	lsrs	r3, r3, #2
 80060d6:	009a      	lsls	r2, r3, #2
 80060d8:	693b      	ldr	r3, [r7, #16]
 80060da:	4413      	add	r3, r2
 80060dc:	461a      	mov	r2, r3
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	649a      	str	r2, [r3, #72]	@ 0x48
 80060e2:	687b      	ldr	r3, [r7, #4]
 80060e4:	4a0b      	ldr	r2, [pc, #44]	@ (8006114 <DMA_CalcDMAMUXChannelBaseAndMask+0x78>)
 80060e6:	64da      	str	r2, [r3, #76]	@ 0x4c
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	f003 031f 	and.w	r3, r3, #31
 80060ee:	2201      	movs	r2, #1
 80060f0:	409a      	lsls	r2, r3
 80060f2:	687b      	ldr	r3, [r7, #4]
 80060f4:	651a      	str	r2, [r3, #80]	@ 0x50
 80060f6:	bf00      	nop
 80060f8:	371c      	adds	r7, #28
 80060fa:	46bd      	mov	sp, r7
 80060fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006100:	4770      	bx	lr
 8006102:	bf00      	nop
 8006104:	40020407 	.word	0x40020407
 8006108:	40020800 	.word	0x40020800
 800610c:	40020820 	.word	0x40020820
 8006110:	cccccccd 	.word	0xcccccccd
 8006114:	40020880 	.word	0x40020880

08006118 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8006118:	b480      	push	{r7}
 800611a:	b085      	sub	sp, #20
 800611c:	af00      	add	r7, sp, #0
 800611e:	6078      	str	r0, [r7, #4]
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	685b      	ldr	r3, [r3, #4]
 8006124:	b2db      	uxtb	r3, r3
 8006126:	60fb      	str	r3, [r7, #12]
 8006128:	68fa      	ldr	r2, [r7, #12]
 800612a:	4b0b      	ldr	r3, [pc, #44]	@ (8006158 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 800612c:	4413      	add	r3, r2
 800612e:	009b      	lsls	r3, r3, #2
 8006130:	461a      	mov	r2, r3
 8006132:	687b      	ldr	r3, [r7, #4]
 8006134:	655a      	str	r2, [r3, #84]	@ 0x54
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	4a08      	ldr	r2, [pc, #32]	@ (800615c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 800613a:	659a      	str	r2, [r3, #88]	@ 0x58
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	3b01      	subs	r3, #1
 8006140:	f003 031f 	and.w	r3, r3, #31
 8006144:	2201      	movs	r2, #1
 8006146:	409a      	lsls	r2, r3
 8006148:	687b      	ldr	r3, [r7, #4]
 800614a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800614c:	bf00      	nop
 800614e:	3714      	adds	r7, #20
 8006150:	46bd      	mov	sp, r7
 8006152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006156:	4770      	bx	lr
 8006158:	1000823f 	.word	0x1000823f
 800615c:	40020940 	.word	0x40020940

08006160 <HAL_FDCAN_Init>:
 8006160:	b580      	push	{r7, lr}
 8006162:	b084      	sub	sp, #16
 8006164:	af00      	add	r7, sp, #0
 8006166:	6078      	str	r0, [r7, #4]
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	2b00      	cmp	r3, #0
 800616c:	d101      	bne.n	8006172 <HAL_FDCAN_Init+0x12>
 800616e:	2301      	movs	r3, #1
 8006170:	e147      	b.n	8006402 <HAL_FDCAN_Init+0x2a2>
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8006178:	b2db      	uxtb	r3, r3
 800617a:	2b00      	cmp	r3, #0
 800617c:	d106      	bne.n	800618c <HAL_FDCAN_Init+0x2c>
 800617e:	687b      	ldr	r3, [r7, #4]
 8006180:	2200      	movs	r2, #0
 8006182:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8006186:	6878      	ldr	r0, [r7, #4]
 8006188:	f7fb faaa 	bl	80016e0 <HAL_FDCAN_MspInit>
 800618c:	687b      	ldr	r3, [r7, #4]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	699a      	ldr	r2, [r3, #24]
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	f022 0210 	bic.w	r2, r2, #16
 800619a:	619a      	str	r2, [r3, #24]
 800619c:	f7fc face 	bl	800273c <HAL_GetTick>
 80061a0:	60f8      	str	r0, [r7, #12]
 80061a2:	e012      	b.n	80061ca <HAL_FDCAN_Init+0x6a>
 80061a4:	f7fc faca 	bl	800273c <HAL_GetTick>
 80061a8:	4602      	mov	r2, r0
 80061aa:	68fb      	ldr	r3, [r7, #12]
 80061ac:	1ad3      	subs	r3, r2, r3
 80061ae:	2b0a      	cmp	r3, #10
 80061b0:	d90b      	bls.n	80061ca <HAL_FDCAN_Init+0x6a>
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80061b6:	f043 0201 	orr.w	r2, r3, #1
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	661a      	str	r2, [r3, #96]	@ 0x60
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	2203      	movs	r2, #3
 80061c2:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80061c6:	2301      	movs	r3, #1
 80061c8:	e11b      	b.n	8006402 <HAL_FDCAN_Init+0x2a2>
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	681b      	ldr	r3, [r3, #0]
 80061ce:	699b      	ldr	r3, [r3, #24]
 80061d0:	f003 0308 	and.w	r3, r3, #8
 80061d4:	2b08      	cmp	r3, #8
 80061d6:	d0e5      	beq.n	80061a4 <HAL_FDCAN_Init+0x44>
 80061d8:	687b      	ldr	r3, [r7, #4]
 80061da:	681b      	ldr	r3, [r3, #0]
 80061dc:	699a      	ldr	r2, [r3, #24]
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	f042 0201 	orr.w	r2, r2, #1
 80061e6:	619a      	str	r2, [r3, #24]
 80061e8:	f7fc faa8 	bl	800273c <HAL_GetTick>
 80061ec:	60f8      	str	r0, [r7, #12]
 80061ee:	e012      	b.n	8006216 <HAL_FDCAN_Init+0xb6>
 80061f0:	f7fc faa4 	bl	800273c <HAL_GetTick>
 80061f4:	4602      	mov	r2, r0
 80061f6:	68fb      	ldr	r3, [r7, #12]
 80061f8:	1ad3      	subs	r3, r2, r3
 80061fa:	2b0a      	cmp	r3, #10
 80061fc:	d90b      	bls.n	8006216 <HAL_FDCAN_Init+0xb6>
 80061fe:	687b      	ldr	r3, [r7, #4]
 8006200:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006202:	f043 0201 	orr.w	r2, r3, #1
 8006206:	687b      	ldr	r3, [r7, #4]
 8006208:	661a      	str	r2, [r3, #96]	@ 0x60
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	2203      	movs	r2, #3
 800620e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006212:	2301      	movs	r3, #1
 8006214:	e0f5      	b.n	8006402 <HAL_FDCAN_Init+0x2a2>
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	681b      	ldr	r3, [r3, #0]
 800621a:	699b      	ldr	r3, [r3, #24]
 800621c:	f003 0301 	and.w	r3, r3, #1
 8006220:	2b00      	cmp	r3, #0
 8006222:	d0e5      	beq.n	80061f0 <HAL_FDCAN_Init+0x90>
 8006224:	687b      	ldr	r3, [r7, #4]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	699a      	ldr	r2, [r3, #24]
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	f042 0202 	orr.w	r2, r2, #2
 8006232:	619a      	str	r2, [r3, #24]
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	4a74      	ldr	r2, [pc, #464]	@ (800640c <HAL_FDCAN_Init+0x2ac>)
 800623a:	4293      	cmp	r3, r2
 800623c:	d103      	bne.n	8006246 <HAL_FDCAN_Init+0xe6>
 800623e:	4a74      	ldr	r2, [pc, #464]	@ (8006410 <HAL_FDCAN_Init+0x2b0>)
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	685b      	ldr	r3, [r3, #4]
 8006244:	6013      	str	r3, [r2, #0]
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	7c1b      	ldrb	r3, [r3, #16]
 800624a:	2b01      	cmp	r3, #1
 800624c:	d108      	bne.n	8006260 <HAL_FDCAN_Init+0x100>
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	699a      	ldr	r2, [r3, #24]
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800625c:	619a      	str	r2, [r3, #24]
 800625e:	e007      	b.n	8006270 <HAL_FDCAN_Init+0x110>
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	699a      	ldr	r2, [r3, #24]
 8006266:	687b      	ldr	r3, [r7, #4]
 8006268:	681b      	ldr	r3, [r3, #0]
 800626a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800626e:	619a      	str	r2, [r3, #24]
 8006270:	687b      	ldr	r3, [r7, #4]
 8006272:	7c5b      	ldrb	r3, [r3, #17]
 8006274:	2b01      	cmp	r3, #1
 8006276:	d108      	bne.n	800628a <HAL_FDCAN_Init+0x12a>
 8006278:	687b      	ldr	r3, [r7, #4]
 800627a:	681b      	ldr	r3, [r3, #0]
 800627c:	699a      	ldr	r2, [r3, #24]
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006286:	619a      	str	r2, [r3, #24]
 8006288:	e007      	b.n	800629a <HAL_FDCAN_Init+0x13a>
 800628a:	687b      	ldr	r3, [r7, #4]
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	699a      	ldr	r2, [r3, #24]
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006298:	619a      	str	r2, [r3, #24]
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	7c9b      	ldrb	r3, [r3, #18]
 800629e:	2b01      	cmp	r3, #1
 80062a0:	d108      	bne.n	80062b4 <HAL_FDCAN_Init+0x154>
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	699a      	ldr	r2, [r3, #24]
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80062b0:	619a      	str	r2, [r3, #24]
 80062b2:	e007      	b.n	80062c4 <HAL_FDCAN_Init+0x164>
 80062b4:	687b      	ldr	r3, [r7, #4]
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	699a      	ldr	r2, [r3, #24]
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80062c2:	619a      	str	r2, [r3, #24]
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	699b      	ldr	r3, [r3, #24]
 80062ca:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 80062ce:	687b      	ldr	r3, [r7, #4]
 80062d0:	689a      	ldr	r2, [r3, #8]
 80062d2:	687b      	ldr	r3, [r7, #4]
 80062d4:	681b      	ldr	r3, [r3, #0]
 80062d6:	430a      	orrs	r2, r1
 80062d8:	619a      	str	r2, [r3, #24]
 80062da:	687b      	ldr	r3, [r7, #4]
 80062dc:	681b      	ldr	r3, [r3, #0]
 80062de:	699a      	ldr	r2, [r3, #24]
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	f022 02a4 	bic.w	r2, r2, #164	@ 0xa4
 80062e8:	619a      	str	r2, [r3, #24]
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	691a      	ldr	r2, [r3, #16]
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	f022 0210 	bic.w	r2, r2, #16
 80062f8:	611a      	str	r2, [r3, #16]
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	68db      	ldr	r3, [r3, #12]
 80062fe:	2b01      	cmp	r3, #1
 8006300:	d108      	bne.n	8006314 <HAL_FDCAN_Init+0x1b4>
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	699a      	ldr	r2, [r3, #24]
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	681b      	ldr	r3, [r3, #0]
 800630c:	f042 0204 	orr.w	r2, r2, #4
 8006310:	619a      	str	r2, [r3, #24]
 8006312:	e02c      	b.n	800636e <HAL_FDCAN_Init+0x20e>
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	68db      	ldr	r3, [r3, #12]
 8006318:	2b00      	cmp	r3, #0
 800631a:	d028      	beq.n	800636e <HAL_FDCAN_Init+0x20e>
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	68db      	ldr	r3, [r3, #12]
 8006320:	2b02      	cmp	r3, #2
 8006322:	d01c      	beq.n	800635e <HAL_FDCAN_Init+0x1fe>
 8006324:	687b      	ldr	r3, [r7, #4]
 8006326:	681b      	ldr	r3, [r3, #0]
 8006328:	699a      	ldr	r2, [r3, #24]
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8006332:	619a      	str	r2, [r3, #24]
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	681b      	ldr	r3, [r3, #0]
 8006338:	691a      	ldr	r2, [r3, #16]
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	681b      	ldr	r3, [r3, #0]
 800633e:	f042 0210 	orr.w	r2, r2, #16
 8006342:	611a      	str	r2, [r3, #16]
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	68db      	ldr	r3, [r3, #12]
 8006348:	2b03      	cmp	r3, #3
 800634a:	d110      	bne.n	800636e <HAL_FDCAN_Init+0x20e>
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	699a      	ldr	r2, [r3, #24]
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	681b      	ldr	r3, [r3, #0]
 8006356:	f042 0220 	orr.w	r2, r2, #32
 800635a:	619a      	str	r2, [r3, #24]
 800635c:	e007      	b.n	800636e <HAL_FDCAN_Init+0x20e>
 800635e:	687b      	ldr	r3, [r7, #4]
 8006360:	681b      	ldr	r3, [r3, #0]
 8006362:	699a      	ldr	r2, [r3, #24]
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	f042 0220 	orr.w	r2, r2, #32
 800636c:	619a      	str	r2, [r3, #24]
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	699b      	ldr	r3, [r3, #24]
 8006372:	3b01      	subs	r3, #1
 8006374:	065a      	lsls	r2, r3, #25
 8006376:	687b      	ldr	r3, [r7, #4]
 8006378:	69db      	ldr	r3, [r3, #28]
 800637a:	3b01      	subs	r3, #1
 800637c:	021b      	lsls	r3, r3, #8
 800637e:	431a      	orrs	r2, r3
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	6a1b      	ldr	r3, [r3, #32]
 8006384:	3b01      	subs	r3, #1
 8006386:	ea42 0103 	orr.w	r1, r2, r3
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	695b      	ldr	r3, [r3, #20]
 800638e:	3b01      	subs	r3, #1
 8006390:	041a      	lsls	r2, r3, #16
 8006392:	687b      	ldr	r3, [r7, #4]
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	430a      	orrs	r2, r1
 8006398:	61da      	str	r2, [r3, #28]
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	689b      	ldr	r3, [r3, #8]
 800639e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80063a2:	d115      	bne.n	80063d0 <HAL_FDCAN_Init+0x270>
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80063a8:	1e5a      	subs	r2, r3, #1
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80063ae:	3b01      	subs	r3, #1
 80063b0:	021b      	lsls	r3, r3, #8
 80063b2:	431a      	orrs	r2, r3
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063b8:	3b01      	subs	r3, #1
 80063ba:	011b      	lsls	r3, r3, #4
 80063bc:	ea42 0103 	orr.w	r1, r2, r3
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80063c4:	3b01      	subs	r3, #1
 80063c6:	041a      	lsls	r2, r3, #16
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	430a      	orrs	r2, r1
 80063ce:	60da      	str	r2, [r3, #12]
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	f8d3 10c0 	ldr.w	r1, [r3, #192]	@ 0xc0
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	681b      	ldr	r3, [r3, #0]
 80063e0:	430a      	orrs	r2, r1
 80063e2:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 80063e6:	6878      	ldr	r0, [r7, #4]
 80063e8:	f000 f814 	bl	8006414 <FDCAN_CalcultateRamBlockAddresses>
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	2200      	movs	r2, #0
 80063f0:	659a      	str	r2, [r3, #88]	@ 0x58
 80063f2:	687b      	ldr	r3, [r7, #4]
 80063f4:	2200      	movs	r2, #0
 80063f6:	661a      	str	r2, [r3, #96]	@ 0x60
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	2201      	movs	r2, #1
 80063fc:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8006400:	2300      	movs	r3, #0
 8006402:	4618      	mov	r0, r3
 8006404:	3710      	adds	r7, #16
 8006406:	46bd      	mov	sp, r7
 8006408:	bd80      	pop	{r7, pc}
 800640a:	bf00      	nop
 800640c:	40006400 	.word	0x40006400
 8006410:	40006500 	.word	0x40006500

08006414 <FDCAN_CalcultateRamBlockAddresses>:
 8006414:	b480      	push	{r7}
 8006416:	b085      	sub	sp, #20
 8006418:	af00      	add	r7, sp, #0
 800641a:	6078      	str	r0, [r7, #4]
 800641c:	4b27      	ldr	r3, [pc, #156]	@ (80064bc <FDCAN_CalcultateRamBlockAddresses+0xa8>)
 800641e:	60bb      	str	r3, [r7, #8]
 8006420:	687b      	ldr	r3, [r7, #4]
 8006422:	68ba      	ldr	r2, [r7, #8]
 8006424:	641a      	str	r2, [r3, #64]	@ 0x40
 8006426:	687b      	ldr	r3, [r7, #4]
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800642e:	f423 11f8 	bic.w	r1, r3, #2031616	@ 0x1f0000
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006436:	041a      	lsls	r2, r3, #16
 8006438:	687b      	ldr	r3, [r7, #4]
 800643a:	681b      	ldr	r3, [r3, #0]
 800643c:	430a      	orrs	r2, r1
 800643e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006442:	68bb      	ldr	r3, [r7, #8]
 8006444:	f103 0270 	add.w	r2, r3, #112	@ 0x70
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	645a      	str	r2, [r3, #68]	@ 0x44
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	681b      	ldr	r3, [r3, #0]
 8006450:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006454:	f023 6170 	bic.w	r1, r3, #251658240	@ 0xf000000
 8006458:	687b      	ldr	r3, [r7, #4]
 800645a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800645c:	061a      	lsls	r2, r3, #24
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	681b      	ldr	r3, [r3, #0]
 8006462:	430a      	orrs	r2, r1
 8006464:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8006468:	68bb      	ldr	r3, [r7, #8]
 800646a:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	649a      	str	r2, [r3, #72]	@ 0x48
 8006472:	68bb      	ldr	r3, [r7, #8]
 8006474:	f503 72c4 	add.w	r2, r3, #392	@ 0x188
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	64da      	str	r2, [r3, #76]	@ 0x4c
 800647c:	68bb      	ldr	r3, [r7, #8]
 800647e:	f503 7218 	add.w	r2, r3, #608	@ 0x260
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	651a      	str	r2, [r3, #80]	@ 0x50
 8006486:	68bb      	ldr	r3, [r7, #8]
 8006488:	f503 721e 	add.w	r2, r3, #632	@ 0x278
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	655a      	str	r2, [r3, #84]	@ 0x54
 8006490:	68bb      	ldr	r3, [r7, #8]
 8006492:	60fb      	str	r3, [r7, #12]
 8006494:	e005      	b.n	80064a2 <FDCAN_CalcultateRamBlockAddresses+0x8e>
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	2200      	movs	r2, #0
 800649a:	601a      	str	r2, [r3, #0]
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	3304      	adds	r3, #4
 80064a0:	60fb      	str	r3, [r7, #12]
 80064a2:	68bb      	ldr	r3, [r7, #8]
 80064a4:	f503 7354 	add.w	r3, r3, #848	@ 0x350
 80064a8:	68fa      	ldr	r2, [r7, #12]
 80064aa:	429a      	cmp	r2, r3
 80064ac:	d3f3      	bcc.n	8006496 <FDCAN_CalcultateRamBlockAddresses+0x82>
 80064ae:	bf00      	nop
 80064b0:	bf00      	nop
 80064b2:	3714      	adds	r7, #20
 80064b4:	46bd      	mov	sp, r7
 80064b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064ba:	4770      	bx	lr
 80064bc:	4000a400 	.word	0x4000a400

080064c0 <HAL_GPIO_Init>:
 80064c0:	b480      	push	{r7}
 80064c2:	b087      	sub	sp, #28
 80064c4:	af00      	add	r7, sp, #0
 80064c6:	6078      	str	r0, [r7, #4]
 80064c8:	6039      	str	r1, [r7, #0]
 80064ca:	2300      	movs	r3, #0
 80064cc:	617b      	str	r3, [r7, #20]
 80064ce:	e15a      	b.n	8006786 <HAL_GPIO_Init+0x2c6>
 80064d0:	683b      	ldr	r3, [r7, #0]
 80064d2:	681a      	ldr	r2, [r3, #0]
 80064d4:	2101      	movs	r1, #1
 80064d6:	697b      	ldr	r3, [r7, #20]
 80064d8:	fa01 f303 	lsl.w	r3, r1, r3
 80064dc:	4013      	ands	r3, r2
 80064de:	60fb      	str	r3, [r7, #12]
 80064e0:	68fb      	ldr	r3, [r7, #12]
 80064e2:	2b00      	cmp	r3, #0
 80064e4:	f000 814c 	beq.w	8006780 <HAL_GPIO_Init+0x2c0>
 80064e8:	683b      	ldr	r3, [r7, #0]
 80064ea:	685b      	ldr	r3, [r3, #4]
 80064ec:	f003 0303 	and.w	r3, r3, #3
 80064f0:	2b01      	cmp	r3, #1
 80064f2:	d005      	beq.n	8006500 <HAL_GPIO_Init+0x40>
 80064f4:	683b      	ldr	r3, [r7, #0]
 80064f6:	685b      	ldr	r3, [r3, #4]
 80064f8:	f003 0303 	and.w	r3, r3, #3
 80064fc:	2b02      	cmp	r3, #2
 80064fe:	d130      	bne.n	8006562 <HAL_GPIO_Init+0xa2>
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	689b      	ldr	r3, [r3, #8]
 8006504:	613b      	str	r3, [r7, #16]
 8006506:	697b      	ldr	r3, [r7, #20]
 8006508:	005b      	lsls	r3, r3, #1
 800650a:	2203      	movs	r2, #3
 800650c:	fa02 f303 	lsl.w	r3, r2, r3
 8006510:	43db      	mvns	r3, r3
 8006512:	693a      	ldr	r2, [r7, #16]
 8006514:	4013      	ands	r3, r2
 8006516:	613b      	str	r3, [r7, #16]
 8006518:	683b      	ldr	r3, [r7, #0]
 800651a:	68da      	ldr	r2, [r3, #12]
 800651c:	697b      	ldr	r3, [r7, #20]
 800651e:	005b      	lsls	r3, r3, #1
 8006520:	fa02 f303 	lsl.w	r3, r2, r3
 8006524:	693a      	ldr	r2, [r7, #16]
 8006526:	4313      	orrs	r3, r2
 8006528:	613b      	str	r3, [r7, #16]
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	693a      	ldr	r2, [r7, #16]
 800652e:	609a      	str	r2, [r3, #8]
 8006530:	687b      	ldr	r3, [r7, #4]
 8006532:	685b      	ldr	r3, [r3, #4]
 8006534:	613b      	str	r3, [r7, #16]
 8006536:	2201      	movs	r2, #1
 8006538:	697b      	ldr	r3, [r7, #20]
 800653a:	fa02 f303 	lsl.w	r3, r2, r3
 800653e:	43db      	mvns	r3, r3
 8006540:	693a      	ldr	r2, [r7, #16]
 8006542:	4013      	ands	r3, r2
 8006544:	613b      	str	r3, [r7, #16]
 8006546:	683b      	ldr	r3, [r7, #0]
 8006548:	685b      	ldr	r3, [r3, #4]
 800654a:	091b      	lsrs	r3, r3, #4
 800654c:	f003 0201 	and.w	r2, r3, #1
 8006550:	697b      	ldr	r3, [r7, #20]
 8006552:	fa02 f303 	lsl.w	r3, r2, r3
 8006556:	693a      	ldr	r2, [r7, #16]
 8006558:	4313      	orrs	r3, r2
 800655a:	613b      	str	r3, [r7, #16]
 800655c:	687b      	ldr	r3, [r7, #4]
 800655e:	693a      	ldr	r2, [r7, #16]
 8006560:	605a      	str	r2, [r3, #4]
 8006562:	683b      	ldr	r3, [r7, #0]
 8006564:	685b      	ldr	r3, [r3, #4]
 8006566:	f003 0303 	and.w	r3, r3, #3
 800656a:	2b03      	cmp	r3, #3
 800656c:	d017      	beq.n	800659e <HAL_GPIO_Init+0xde>
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	68db      	ldr	r3, [r3, #12]
 8006572:	613b      	str	r3, [r7, #16]
 8006574:	697b      	ldr	r3, [r7, #20]
 8006576:	005b      	lsls	r3, r3, #1
 8006578:	2203      	movs	r2, #3
 800657a:	fa02 f303 	lsl.w	r3, r2, r3
 800657e:	43db      	mvns	r3, r3
 8006580:	693a      	ldr	r2, [r7, #16]
 8006582:	4013      	ands	r3, r2
 8006584:	613b      	str	r3, [r7, #16]
 8006586:	683b      	ldr	r3, [r7, #0]
 8006588:	689a      	ldr	r2, [r3, #8]
 800658a:	697b      	ldr	r3, [r7, #20]
 800658c:	005b      	lsls	r3, r3, #1
 800658e:	fa02 f303 	lsl.w	r3, r2, r3
 8006592:	693a      	ldr	r2, [r7, #16]
 8006594:	4313      	orrs	r3, r2
 8006596:	613b      	str	r3, [r7, #16]
 8006598:	687b      	ldr	r3, [r7, #4]
 800659a:	693a      	ldr	r2, [r7, #16]
 800659c:	60da      	str	r2, [r3, #12]
 800659e:	683b      	ldr	r3, [r7, #0]
 80065a0:	685b      	ldr	r3, [r3, #4]
 80065a2:	f003 0303 	and.w	r3, r3, #3
 80065a6:	2b02      	cmp	r3, #2
 80065a8:	d123      	bne.n	80065f2 <HAL_GPIO_Init+0x132>
 80065aa:	697b      	ldr	r3, [r7, #20]
 80065ac:	08da      	lsrs	r2, r3, #3
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	3208      	adds	r2, #8
 80065b2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80065b6:	613b      	str	r3, [r7, #16]
 80065b8:	697b      	ldr	r3, [r7, #20]
 80065ba:	f003 0307 	and.w	r3, r3, #7
 80065be:	009b      	lsls	r3, r3, #2
 80065c0:	220f      	movs	r2, #15
 80065c2:	fa02 f303 	lsl.w	r3, r2, r3
 80065c6:	43db      	mvns	r3, r3
 80065c8:	693a      	ldr	r2, [r7, #16]
 80065ca:	4013      	ands	r3, r2
 80065cc:	613b      	str	r3, [r7, #16]
 80065ce:	683b      	ldr	r3, [r7, #0]
 80065d0:	691a      	ldr	r2, [r3, #16]
 80065d2:	697b      	ldr	r3, [r7, #20]
 80065d4:	f003 0307 	and.w	r3, r3, #7
 80065d8:	009b      	lsls	r3, r3, #2
 80065da:	fa02 f303 	lsl.w	r3, r2, r3
 80065de:	693a      	ldr	r2, [r7, #16]
 80065e0:	4313      	orrs	r3, r2
 80065e2:	613b      	str	r3, [r7, #16]
 80065e4:	697b      	ldr	r3, [r7, #20]
 80065e6:	08da      	lsrs	r2, r3, #3
 80065e8:	687b      	ldr	r3, [r7, #4]
 80065ea:	3208      	adds	r2, #8
 80065ec:	6939      	ldr	r1, [r7, #16]
 80065ee:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	681b      	ldr	r3, [r3, #0]
 80065f6:	613b      	str	r3, [r7, #16]
 80065f8:	697b      	ldr	r3, [r7, #20]
 80065fa:	005b      	lsls	r3, r3, #1
 80065fc:	2203      	movs	r2, #3
 80065fe:	fa02 f303 	lsl.w	r3, r2, r3
 8006602:	43db      	mvns	r3, r3
 8006604:	693a      	ldr	r2, [r7, #16]
 8006606:	4013      	ands	r3, r2
 8006608:	613b      	str	r3, [r7, #16]
 800660a:	683b      	ldr	r3, [r7, #0]
 800660c:	685b      	ldr	r3, [r3, #4]
 800660e:	f003 0203 	and.w	r2, r3, #3
 8006612:	697b      	ldr	r3, [r7, #20]
 8006614:	005b      	lsls	r3, r3, #1
 8006616:	fa02 f303 	lsl.w	r3, r2, r3
 800661a:	693a      	ldr	r2, [r7, #16]
 800661c:	4313      	orrs	r3, r2
 800661e:	613b      	str	r3, [r7, #16]
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	693a      	ldr	r2, [r7, #16]
 8006624:	601a      	str	r2, [r3, #0]
 8006626:	683b      	ldr	r3, [r7, #0]
 8006628:	685b      	ldr	r3, [r3, #4]
 800662a:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800662e:	2b00      	cmp	r3, #0
 8006630:	f000 80a6 	beq.w	8006780 <HAL_GPIO_Init+0x2c0>
 8006634:	4b5b      	ldr	r3, [pc, #364]	@ (80067a4 <HAL_GPIO_Init+0x2e4>)
 8006636:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006638:	4a5a      	ldr	r2, [pc, #360]	@ (80067a4 <HAL_GPIO_Init+0x2e4>)
 800663a:	f043 0301 	orr.w	r3, r3, #1
 800663e:	6613      	str	r3, [r2, #96]	@ 0x60
 8006640:	4b58      	ldr	r3, [pc, #352]	@ (80067a4 <HAL_GPIO_Init+0x2e4>)
 8006642:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8006644:	f003 0301 	and.w	r3, r3, #1
 8006648:	60bb      	str	r3, [r7, #8]
 800664a:	68bb      	ldr	r3, [r7, #8]
 800664c:	4a56      	ldr	r2, [pc, #344]	@ (80067a8 <HAL_GPIO_Init+0x2e8>)
 800664e:	697b      	ldr	r3, [r7, #20]
 8006650:	089b      	lsrs	r3, r3, #2
 8006652:	3302      	adds	r3, #2
 8006654:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006658:	613b      	str	r3, [r7, #16]
 800665a:	697b      	ldr	r3, [r7, #20]
 800665c:	f003 0303 	and.w	r3, r3, #3
 8006660:	009b      	lsls	r3, r3, #2
 8006662:	220f      	movs	r2, #15
 8006664:	fa02 f303 	lsl.w	r3, r2, r3
 8006668:	43db      	mvns	r3, r3
 800666a:	693a      	ldr	r2, [r7, #16]
 800666c:	4013      	ands	r3, r2
 800666e:	613b      	str	r3, [r7, #16]
 8006670:	687b      	ldr	r3, [r7, #4]
 8006672:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8006676:	d01f      	beq.n	80066b8 <HAL_GPIO_Init+0x1f8>
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	4a4c      	ldr	r2, [pc, #304]	@ (80067ac <HAL_GPIO_Init+0x2ec>)
 800667c:	4293      	cmp	r3, r2
 800667e:	d019      	beq.n	80066b4 <HAL_GPIO_Init+0x1f4>
 8006680:	687b      	ldr	r3, [r7, #4]
 8006682:	4a4b      	ldr	r2, [pc, #300]	@ (80067b0 <HAL_GPIO_Init+0x2f0>)
 8006684:	4293      	cmp	r3, r2
 8006686:	d013      	beq.n	80066b0 <HAL_GPIO_Init+0x1f0>
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	4a4a      	ldr	r2, [pc, #296]	@ (80067b4 <HAL_GPIO_Init+0x2f4>)
 800668c:	4293      	cmp	r3, r2
 800668e:	d00d      	beq.n	80066ac <HAL_GPIO_Init+0x1ec>
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	4a49      	ldr	r2, [pc, #292]	@ (80067b8 <HAL_GPIO_Init+0x2f8>)
 8006694:	4293      	cmp	r3, r2
 8006696:	d007      	beq.n	80066a8 <HAL_GPIO_Init+0x1e8>
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	4a48      	ldr	r2, [pc, #288]	@ (80067bc <HAL_GPIO_Init+0x2fc>)
 800669c:	4293      	cmp	r3, r2
 800669e:	d101      	bne.n	80066a4 <HAL_GPIO_Init+0x1e4>
 80066a0:	2305      	movs	r3, #5
 80066a2:	e00a      	b.n	80066ba <HAL_GPIO_Init+0x1fa>
 80066a4:	2306      	movs	r3, #6
 80066a6:	e008      	b.n	80066ba <HAL_GPIO_Init+0x1fa>
 80066a8:	2304      	movs	r3, #4
 80066aa:	e006      	b.n	80066ba <HAL_GPIO_Init+0x1fa>
 80066ac:	2303      	movs	r3, #3
 80066ae:	e004      	b.n	80066ba <HAL_GPIO_Init+0x1fa>
 80066b0:	2302      	movs	r3, #2
 80066b2:	e002      	b.n	80066ba <HAL_GPIO_Init+0x1fa>
 80066b4:	2301      	movs	r3, #1
 80066b6:	e000      	b.n	80066ba <HAL_GPIO_Init+0x1fa>
 80066b8:	2300      	movs	r3, #0
 80066ba:	697a      	ldr	r2, [r7, #20]
 80066bc:	f002 0203 	and.w	r2, r2, #3
 80066c0:	0092      	lsls	r2, r2, #2
 80066c2:	4093      	lsls	r3, r2
 80066c4:	693a      	ldr	r2, [r7, #16]
 80066c6:	4313      	orrs	r3, r2
 80066c8:	613b      	str	r3, [r7, #16]
 80066ca:	4937      	ldr	r1, [pc, #220]	@ (80067a8 <HAL_GPIO_Init+0x2e8>)
 80066cc:	697b      	ldr	r3, [r7, #20]
 80066ce:	089b      	lsrs	r3, r3, #2
 80066d0:	3302      	adds	r3, #2
 80066d2:	693a      	ldr	r2, [r7, #16]
 80066d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80066d8:	4b39      	ldr	r3, [pc, #228]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 80066da:	689b      	ldr	r3, [r3, #8]
 80066dc:	613b      	str	r3, [r7, #16]
 80066de:	68fb      	ldr	r3, [r7, #12]
 80066e0:	43db      	mvns	r3, r3
 80066e2:	693a      	ldr	r2, [r7, #16]
 80066e4:	4013      	ands	r3, r2
 80066e6:	613b      	str	r3, [r7, #16]
 80066e8:	683b      	ldr	r3, [r7, #0]
 80066ea:	685b      	ldr	r3, [r3, #4]
 80066ec:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80066f0:	2b00      	cmp	r3, #0
 80066f2:	d003      	beq.n	80066fc <HAL_GPIO_Init+0x23c>
 80066f4:	693a      	ldr	r2, [r7, #16]
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	4313      	orrs	r3, r2
 80066fa:	613b      	str	r3, [r7, #16]
 80066fc:	4a30      	ldr	r2, [pc, #192]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 80066fe:	693b      	ldr	r3, [r7, #16]
 8006700:	6093      	str	r3, [r2, #8]
 8006702:	4b2f      	ldr	r3, [pc, #188]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 8006704:	68db      	ldr	r3, [r3, #12]
 8006706:	613b      	str	r3, [r7, #16]
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	43db      	mvns	r3, r3
 800670c:	693a      	ldr	r2, [r7, #16]
 800670e:	4013      	ands	r3, r2
 8006710:	613b      	str	r3, [r7, #16]
 8006712:	683b      	ldr	r3, [r7, #0]
 8006714:	685b      	ldr	r3, [r3, #4]
 8006716:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800671a:	2b00      	cmp	r3, #0
 800671c:	d003      	beq.n	8006726 <HAL_GPIO_Init+0x266>
 800671e:	693a      	ldr	r2, [r7, #16]
 8006720:	68fb      	ldr	r3, [r7, #12]
 8006722:	4313      	orrs	r3, r2
 8006724:	613b      	str	r3, [r7, #16]
 8006726:	4a26      	ldr	r2, [pc, #152]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 8006728:	693b      	ldr	r3, [r7, #16]
 800672a:	60d3      	str	r3, [r2, #12]
 800672c:	4b24      	ldr	r3, [pc, #144]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 800672e:	685b      	ldr	r3, [r3, #4]
 8006730:	613b      	str	r3, [r7, #16]
 8006732:	68fb      	ldr	r3, [r7, #12]
 8006734:	43db      	mvns	r3, r3
 8006736:	693a      	ldr	r2, [r7, #16]
 8006738:	4013      	ands	r3, r2
 800673a:	613b      	str	r3, [r7, #16]
 800673c:	683b      	ldr	r3, [r7, #0]
 800673e:	685b      	ldr	r3, [r3, #4]
 8006740:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006744:	2b00      	cmp	r3, #0
 8006746:	d003      	beq.n	8006750 <HAL_GPIO_Init+0x290>
 8006748:	693a      	ldr	r2, [r7, #16]
 800674a:	68fb      	ldr	r3, [r7, #12]
 800674c:	4313      	orrs	r3, r2
 800674e:	613b      	str	r3, [r7, #16]
 8006750:	4a1b      	ldr	r2, [pc, #108]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 8006752:	693b      	ldr	r3, [r7, #16]
 8006754:	6053      	str	r3, [r2, #4]
 8006756:	4b1a      	ldr	r3, [pc, #104]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 8006758:	681b      	ldr	r3, [r3, #0]
 800675a:	613b      	str	r3, [r7, #16]
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	43db      	mvns	r3, r3
 8006760:	693a      	ldr	r2, [r7, #16]
 8006762:	4013      	ands	r3, r2
 8006764:	613b      	str	r3, [r7, #16]
 8006766:	683b      	ldr	r3, [r7, #0]
 8006768:	685b      	ldr	r3, [r3, #4]
 800676a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800676e:	2b00      	cmp	r3, #0
 8006770:	d003      	beq.n	800677a <HAL_GPIO_Init+0x2ba>
 8006772:	693a      	ldr	r2, [r7, #16]
 8006774:	68fb      	ldr	r3, [r7, #12]
 8006776:	4313      	orrs	r3, r2
 8006778:	613b      	str	r3, [r7, #16]
 800677a:	4a11      	ldr	r2, [pc, #68]	@ (80067c0 <HAL_GPIO_Init+0x300>)
 800677c:	693b      	ldr	r3, [r7, #16]
 800677e:	6013      	str	r3, [r2, #0]
 8006780:	697b      	ldr	r3, [r7, #20]
 8006782:	3301      	adds	r3, #1
 8006784:	617b      	str	r3, [r7, #20]
 8006786:	683b      	ldr	r3, [r7, #0]
 8006788:	681a      	ldr	r2, [r3, #0]
 800678a:	697b      	ldr	r3, [r7, #20]
 800678c:	fa22 f303 	lsr.w	r3, r2, r3
 8006790:	2b00      	cmp	r3, #0
 8006792:	f47f ae9d 	bne.w	80064d0 <HAL_GPIO_Init+0x10>
 8006796:	bf00      	nop
 8006798:	bf00      	nop
 800679a:	371c      	adds	r7, #28
 800679c:	46bd      	mov	sp, r7
 800679e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067a2:	4770      	bx	lr
 80067a4:	40021000 	.word	0x40021000
 80067a8:	40010000 	.word	0x40010000
 80067ac:	48000400 	.word	0x48000400
 80067b0:	48000800 	.word	0x48000800
 80067b4:	48000c00 	.word	0x48000c00
 80067b8:	48001000 	.word	0x48001000
 80067bc:	48001400 	.word	0x48001400
 80067c0:	40010400 	.word	0x40010400

080067c4 <HAL_GPIO_ReadPin>:
 80067c4:	b480      	push	{r7}
 80067c6:	b085      	sub	sp, #20
 80067c8:	af00      	add	r7, sp, #0
 80067ca:	6078      	str	r0, [r7, #4]
 80067cc:	460b      	mov	r3, r1
 80067ce:	807b      	strh	r3, [r7, #2]
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	691a      	ldr	r2, [r3, #16]
 80067d4:	887b      	ldrh	r3, [r7, #2]
 80067d6:	4013      	ands	r3, r2
 80067d8:	2b00      	cmp	r3, #0
 80067da:	d002      	beq.n	80067e2 <HAL_GPIO_ReadPin+0x1e>
 80067dc:	2301      	movs	r3, #1
 80067de:	73fb      	strb	r3, [r7, #15]
 80067e0:	e001      	b.n	80067e6 <HAL_GPIO_ReadPin+0x22>
 80067e2:	2300      	movs	r3, #0
 80067e4:	73fb      	strb	r3, [r7, #15]
 80067e6:	7bfb      	ldrb	r3, [r7, #15]
 80067e8:	4618      	mov	r0, r3
 80067ea:	3714      	adds	r7, #20
 80067ec:	46bd      	mov	sp, r7
 80067ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067f2:	4770      	bx	lr

080067f4 <HAL_GPIO_WritePin>:
 80067f4:	b480      	push	{r7}
 80067f6:	b083      	sub	sp, #12
 80067f8:	af00      	add	r7, sp, #0
 80067fa:	6078      	str	r0, [r7, #4]
 80067fc:	460b      	mov	r3, r1
 80067fe:	807b      	strh	r3, [r7, #2]
 8006800:	4613      	mov	r3, r2
 8006802:	707b      	strb	r3, [r7, #1]
 8006804:	787b      	ldrb	r3, [r7, #1]
 8006806:	2b00      	cmp	r3, #0
 8006808:	d003      	beq.n	8006812 <HAL_GPIO_WritePin+0x1e>
 800680a:	887a      	ldrh	r2, [r7, #2]
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	619a      	str	r2, [r3, #24]
 8006810:	e002      	b.n	8006818 <HAL_GPIO_WritePin+0x24>
 8006812:	887a      	ldrh	r2, [r7, #2]
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	629a      	str	r2, [r3, #40]	@ 0x28
 8006818:	bf00      	nop
 800681a:	370c      	adds	r7, #12
 800681c:	46bd      	mov	sp, r7
 800681e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006822:	4770      	bx	lr

08006824 <HAL_OPAMP_Init>:
 8006824:	b580      	push	{r7, lr}
 8006826:	b084      	sub	sp, #16
 8006828:	af00      	add	r7, sp, #0
 800682a:	6078      	str	r0, [r7, #4]
 800682c:	2300      	movs	r3, #0
 800682e:	73fb      	strb	r3, [r7, #15]
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	2b00      	cmp	r3, #0
 8006834:	d101      	bne.n	800683a <HAL_OPAMP_Init+0x16>
 8006836:	2301      	movs	r3, #1
 8006838:	e0bb      	b.n	80069b2 <HAL_OPAMP_Init+0x18e>
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8006840:	b2db      	uxtb	r3, r3
 8006842:	2b05      	cmp	r3, #5
 8006844:	d101      	bne.n	800684a <HAL_OPAMP_Init+0x26>
 8006846:	2301      	movs	r3, #1
 8006848:	e0b3      	b.n	80069b2 <HAL_OPAMP_Init+0x18e>
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8006850:	b2db      	uxtb	r3, r3
 8006852:	2b02      	cmp	r3, #2
 8006854:	d101      	bne.n	800685a <HAL_OPAMP_Init+0x36>
 8006856:	2301      	movs	r3, #1
 8006858:	e0ab      	b.n	80069b2 <HAL_OPAMP_Init+0x18e>
 800685a:	4b58      	ldr	r3, [pc, #352]	@ (80069bc <HAL_OPAMP_Init+0x198>)
 800685c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800685e:	4a57      	ldr	r2, [pc, #348]	@ (80069bc <HAL_OPAMP_Init+0x198>)
 8006860:	f043 0301 	orr.w	r3, r3, #1
 8006864:	6613      	str	r3, [r2, #96]	@ 0x60
 8006866:	4b55      	ldr	r3, [pc, #340]	@ (80069bc <HAL_OPAMP_Init+0x198>)
 8006868:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800686a:	f003 0301 	and.w	r3, r3, #1
 800686e:	60bb      	str	r3, [r7, #8]
 8006870:	68bb      	ldr	r3, [r7, #8]
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8006878:	b2db      	uxtb	r3, r3
 800687a:	2b00      	cmp	r3, #0
 800687c:	d103      	bne.n	8006886 <HAL_OPAMP_Init+0x62>
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	2200      	movs	r2, #0
 8006882:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8006886:	6878      	ldr	r0, [r7, #4]
 8006888:	f7fb f94a 	bl	8001b20 <HAL_OPAMP_MspInit>
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	689b      	ldr	r3, [r3, #8]
 8006890:	2b40      	cmp	r3, #64	@ 0x40
 8006892:	d003      	beq.n	800689c <HAL_OPAMP_Init+0x78>
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	689b      	ldr	r3, [r3, #8]
 8006898:	2b60      	cmp	r3, #96	@ 0x60
 800689a:	d133      	bne.n	8006904 <HAL_OPAMP_Init+0xe0>
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	681b      	ldr	r3, [r3, #0]
 80068a2:	f023 0110 	bic.w	r1, r3, #16
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	681b      	ldr	r3, [r3, #0]
 80068ae:	430a      	orrs	r2, r1
 80068b0:	601a      	str	r2, [r3, #0]
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	681b      	ldr	r3, [r3, #0]
 80068b6:	681a      	ldr	r2, [r3, #0]
 80068b8:	4b41      	ldr	r3, [pc, #260]	@ (80069c0 <HAL_OPAMP_Init+0x19c>)
 80068ba:	4013      	ands	r3, r2
 80068bc:	687a      	ldr	r2, [r7, #4]
 80068be:	6851      	ldr	r1, [r2, #4]
 80068c0:	687a      	ldr	r2, [r7, #4]
 80068c2:	6892      	ldr	r2, [r2, #8]
 80068c4:	4311      	orrs	r1, r2
 80068c6:	687a      	ldr	r2, [r7, #4]
 80068c8:	6912      	ldr	r2, [r2, #16]
 80068ca:	430a      	orrs	r2, r1
 80068cc:	6879      	ldr	r1, [r7, #4]
 80068ce:	7d09      	ldrb	r1, [r1, #20]
 80068d0:	2901      	cmp	r1, #1
 80068d2:	d102      	bne.n	80068da <HAL_OPAMP_Init+0xb6>
 80068d4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80068d8:	e000      	b.n	80068dc <HAL_OPAMP_Init+0xb8>
 80068da:	2100      	movs	r1, #0
 80068dc:	4311      	orrs	r1, r2
 80068de:	687a      	ldr	r2, [r7, #4]
 80068e0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80068e2:	4311      	orrs	r1, r2
 80068e4:	687a      	ldr	r2, [r7, #4]
 80068e6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80068e8:	4311      	orrs	r1, r2
 80068ea:	687a      	ldr	r2, [r7, #4]
 80068ec:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 80068ee:	04d2      	lsls	r2, r2, #19
 80068f0:	4311      	orrs	r1, r2
 80068f2:	687a      	ldr	r2, [r7, #4]
 80068f4:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 80068f6:	0612      	lsls	r2, r2, #24
 80068f8:	4311      	orrs	r1, r2
 80068fa:	687a      	ldr	r2, [r7, #4]
 80068fc:	6812      	ldr	r2, [r2, #0]
 80068fe:	430b      	orrs	r3, r1
 8006900:	6013      	str	r3, [r2, #0]
 8006902:	e035      	b.n	8006970 <HAL_OPAMP_Init+0x14c>
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	681b      	ldr	r3, [r3, #0]
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	f023 0110 	bic.w	r1, r3, #16
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	430a      	orrs	r2, r1
 8006918:	601a      	str	r2, [r3, #0]
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	681b      	ldr	r3, [r3, #0]
 800691e:	681a      	ldr	r2, [r3, #0]
 8006920:	4b27      	ldr	r3, [pc, #156]	@ (80069c0 <HAL_OPAMP_Init+0x19c>)
 8006922:	4013      	ands	r3, r2
 8006924:	687a      	ldr	r2, [r7, #4]
 8006926:	6851      	ldr	r1, [r2, #4]
 8006928:	687a      	ldr	r2, [r7, #4]
 800692a:	6892      	ldr	r2, [r2, #8]
 800692c:	4311      	orrs	r1, r2
 800692e:	687a      	ldr	r2, [r7, #4]
 8006930:	68d2      	ldr	r2, [r2, #12]
 8006932:	4311      	orrs	r1, r2
 8006934:	687a      	ldr	r2, [r7, #4]
 8006936:	6912      	ldr	r2, [r2, #16]
 8006938:	430a      	orrs	r2, r1
 800693a:	6879      	ldr	r1, [r7, #4]
 800693c:	7d09      	ldrb	r1, [r1, #20]
 800693e:	2901      	cmp	r1, #1
 8006940:	d102      	bne.n	8006948 <HAL_OPAMP_Init+0x124>
 8006942:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8006946:	e000      	b.n	800694a <HAL_OPAMP_Init+0x126>
 8006948:	2100      	movs	r1, #0
 800694a:	4311      	orrs	r1, r2
 800694c:	687a      	ldr	r2, [r7, #4]
 800694e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8006950:	4311      	orrs	r1, r2
 8006952:	687a      	ldr	r2, [r7, #4]
 8006954:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8006956:	4311      	orrs	r1, r2
 8006958:	687a      	ldr	r2, [r7, #4]
 800695a:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 800695c:	04d2      	lsls	r2, r2, #19
 800695e:	4311      	orrs	r1, r2
 8006960:	687a      	ldr	r2, [r7, #4]
 8006962:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8006964:	0612      	lsls	r2, r2, #24
 8006966:	4311      	orrs	r1, r2
 8006968:	687a      	ldr	r2, [r7, #4]
 800696a:	6812      	ldr	r2, [r2, #0]
 800696c:	430b      	orrs	r3, r1
 800696e:	6013      	str	r3, [r2, #0]
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	699b      	ldr	r3, [r3, #24]
 8006976:	2b00      	cmp	r3, #0
 8006978:	db10      	blt.n	800699c <HAL_OPAMP_Init+0x178>
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	699b      	ldr	r3, [r3, #24]
 8006980:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	699a      	ldr	r2, [r3, #24]
 8006988:	687b      	ldr	r3, [r7, #4]
 800698a:	69db      	ldr	r3, [r3, #28]
 800698c:	431a      	orrs	r2, r3
 800698e:	687b      	ldr	r3, [r7, #4]
 8006990:	6a1b      	ldr	r3, [r3, #32]
 8006992:	431a      	orrs	r2, r3
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	430a      	orrs	r2, r1
 800699a:	619a      	str	r2, [r3, #24]
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 80069a2:	b2db      	uxtb	r3, r3
 80069a4:	2b00      	cmp	r3, #0
 80069a6:	d103      	bne.n	80069b0 <HAL_OPAMP_Init+0x18c>
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	2201      	movs	r2, #1
 80069ac:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 80069b0:	7bfb      	ldrb	r3, [r7, #15]
 80069b2:	4618      	mov	r0, r3
 80069b4:	3710      	adds	r7, #16
 80069b6:	46bd      	mov	sp, r7
 80069b8:	bd80      	pop	{r7, pc}
 80069ba:	bf00      	nop
 80069bc:	40021000 	.word	0x40021000
 80069c0:	e0003e11 	.word	0xe0003e11

080069c4 <HAL_OPAMP_Start>:
 80069c4:	b480      	push	{r7}
 80069c6:	b085      	sub	sp, #20
 80069c8:	af00      	add	r7, sp, #0
 80069ca:	6078      	str	r0, [r7, #4]
 80069cc:	2300      	movs	r3, #0
 80069ce:	73fb      	strb	r3, [r7, #15]
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	2b00      	cmp	r3, #0
 80069d4:	d102      	bne.n	80069dc <HAL_OPAMP_Start+0x18>
 80069d6:	2301      	movs	r3, #1
 80069d8:	73fb      	strb	r3, [r7, #15]
 80069da:	e01d      	b.n	8006a18 <HAL_OPAMP_Start+0x54>
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 80069e2:	b2db      	uxtb	r3, r3
 80069e4:	2b05      	cmp	r3, #5
 80069e6:	d102      	bne.n	80069ee <HAL_OPAMP_Start+0x2a>
 80069e8:	2301      	movs	r3, #1
 80069ea:	73fb      	strb	r3, [r7, #15]
 80069ec:	e014      	b.n	8006a18 <HAL_OPAMP_Start+0x54>
 80069ee:	687b      	ldr	r3, [r7, #4]
 80069f0:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 80069f4:	b2db      	uxtb	r3, r3
 80069f6:	2b01      	cmp	r3, #1
 80069f8:	d10c      	bne.n	8006a14 <HAL_OPAMP_Start+0x50>
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	681a      	ldr	r2, [r3, #0]
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	f042 0201 	orr.w	r2, r2, #1
 8006a08:	601a      	str	r2, [r3, #0]
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	2204      	movs	r2, #4
 8006a0e:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8006a12:	e001      	b.n	8006a18 <HAL_OPAMP_Start+0x54>
 8006a14:	2301      	movs	r3, #1
 8006a16:	73fb      	strb	r3, [r7, #15]
 8006a18:	7bfb      	ldrb	r3, [r7, #15]
 8006a1a:	4618      	mov	r0, r3
 8006a1c:	3714      	adds	r7, #20
 8006a1e:	46bd      	mov	sp, r7
 8006a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a24:	4770      	bx	lr
	...

08006a28 <HAL_PWREx_ControlVoltageScaling>:
 8006a28:	b480      	push	{r7}
 8006a2a:	b085      	sub	sp, #20
 8006a2c:	af00      	add	r7, sp, #0
 8006a2e:	6078      	str	r0, [r7, #4]
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	d141      	bne.n	8006aba <HAL_PWREx_ControlVoltageScaling+0x92>
 8006a36:	4b4b      	ldr	r3, [pc, #300]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006a38:	681b      	ldr	r3, [r3, #0]
 8006a3a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8006a3e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006a42:	d131      	bne.n	8006aa8 <HAL_PWREx_ControlVoltageScaling+0x80>
 8006a44:	4b47      	ldr	r3, [pc, #284]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006a46:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006a4a:	4a46      	ldr	r2, [pc, #280]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006a4c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006a50:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006a54:	4b43      	ldr	r3, [pc, #268]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006a56:	681b      	ldr	r3, [r3, #0]
 8006a58:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006a5c:	4a41      	ldr	r2, [pc, #260]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006a5e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8006a62:	6013      	str	r3, [r2, #0]
 8006a64:	4b40      	ldr	r3, [pc, #256]	@ (8006b68 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8006a66:	681b      	ldr	r3, [r3, #0]
 8006a68:	2232      	movs	r2, #50	@ 0x32
 8006a6a:	fb02 f303 	mul.w	r3, r2, r3
 8006a6e:	4a3f      	ldr	r2, [pc, #252]	@ (8006b6c <HAL_PWREx_ControlVoltageScaling+0x144>)
 8006a70:	fba2 2303 	umull	r2, r3, r2, r3
 8006a74:	0c9b      	lsrs	r3, r3, #18
 8006a76:	3301      	adds	r3, #1
 8006a78:	60fb      	str	r3, [r7, #12]
 8006a7a:	e002      	b.n	8006a82 <HAL_PWREx_ControlVoltageScaling+0x5a>
 8006a7c:	68fb      	ldr	r3, [r7, #12]
 8006a7e:	3b01      	subs	r3, #1
 8006a80:	60fb      	str	r3, [r7, #12]
 8006a82:	4b38      	ldr	r3, [pc, #224]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006a84:	695b      	ldr	r3, [r3, #20]
 8006a86:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006a8a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006a8e:	d102      	bne.n	8006a96 <HAL_PWREx_ControlVoltageScaling+0x6e>
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	d1f2      	bne.n	8006a7c <HAL_PWREx_ControlVoltageScaling+0x54>
 8006a96:	4b33      	ldr	r3, [pc, #204]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006a98:	695b      	ldr	r3, [r3, #20]
 8006a9a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006a9e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006aa2:	d158      	bne.n	8006b56 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006aa4:	2303      	movs	r3, #3
 8006aa6:	e057      	b.n	8006b58 <HAL_PWREx_ControlVoltageScaling+0x130>
 8006aa8:	4b2e      	ldr	r3, [pc, #184]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006aaa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006aae:	4a2d      	ldr	r2, [pc, #180]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006ab0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006ab4:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006ab8:	e04d      	b.n	8006b56 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006ac0:	d141      	bne.n	8006b46 <HAL_PWREx_ControlVoltageScaling+0x11e>
 8006ac2:	4b28      	ldr	r3, [pc, #160]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006ac4:	681b      	ldr	r3, [r3, #0]
 8006ac6:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8006aca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006ace:	d131      	bne.n	8006b34 <HAL_PWREx_ControlVoltageScaling+0x10c>
 8006ad0:	4b24      	ldr	r3, [pc, #144]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006ad2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006ad6:	4a23      	ldr	r2, [pc, #140]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006ad8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006adc:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006ae0:	4b20      	ldr	r3, [pc, #128]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006ae8:	4a1e      	ldr	r2, [pc, #120]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006aea:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8006aee:	6013      	str	r3, [r2, #0]
 8006af0:	4b1d      	ldr	r3, [pc, #116]	@ (8006b68 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	2232      	movs	r2, #50	@ 0x32
 8006af6:	fb02 f303 	mul.w	r3, r2, r3
 8006afa:	4a1c      	ldr	r2, [pc, #112]	@ (8006b6c <HAL_PWREx_ControlVoltageScaling+0x144>)
 8006afc:	fba2 2303 	umull	r2, r3, r2, r3
 8006b00:	0c9b      	lsrs	r3, r3, #18
 8006b02:	3301      	adds	r3, #1
 8006b04:	60fb      	str	r3, [r7, #12]
 8006b06:	e002      	b.n	8006b0e <HAL_PWREx_ControlVoltageScaling+0xe6>
 8006b08:	68fb      	ldr	r3, [r7, #12]
 8006b0a:	3b01      	subs	r3, #1
 8006b0c:	60fb      	str	r3, [r7, #12]
 8006b0e:	4b15      	ldr	r3, [pc, #84]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006b10:	695b      	ldr	r3, [r3, #20]
 8006b12:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006b16:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006b1a:	d102      	bne.n	8006b22 <HAL_PWREx_ControlVoltageScaling+0xfa>
 8006b1c:	68fb      	ldr	r3, [r7, #12]
 8006b1e:	2b00      	cmp	r3, #0
 8006b20:	d1f2      	bne.n	8006b08 <HAL_PWREx_ControlVoltageScaling+0xe0>
 8006b22:	4b10      	ldr	r3, [pc, #64]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006b24:	695b      	ldr	r3, [r3, #20]
 8006b26:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006b2a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006b2e:	d112      	bne.n	8006b56 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006b30:	2303      	movs	r3, #3
 8006b32:	e011      	b.n	8006b58 <HAL_PWREx_ControlVoltageScaling+0x130>
 8006b34:	4b0b      	ldr	r3, [pc, #44]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006b36:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006b3a:	4a0a      	ldr	r2, [pc, #40]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006b3c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006b40:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006b44:	e007      	b.n	8006b56 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006b46:	4b07      	ldr	r3, [pc, #28]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006b4e:	4a05      	ldr	r2, [pc, #20]	@ (8006b64 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006b50:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8006b54:	6013      	str	r3, [r2, #0]
 8006b56:	2300      	movs	r3, #0
 8006b58:	4618      	mov	r0, r3
 8006b5a:	3714      	adds	r7, #20
 8006b5c:	46bd      	mov	sp, r7
 8006b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b62:	4770      	bx	lr
 8006b64:	40007000 	.word	0x40007000
 8006b68:	20000000 	.word	0x20000000
 8006b6c:	431bde83 	.word	0x431bde83

08006b70 <HAL_PWREx_DisableUCPDDeadBattery>:
 8006b70:	b480      	push	{r7}
 8006b72:	af00      	add	r7, sp, #0
 8006b74:	4b05      	ldr	r3, [pc, #20]	@ (8006b8c <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8006b76:	689b      	ldr	r3, [r3, #8]
 8006b78:	4a04      	ldr	r2, [pc, #16]	@ (8006b8c <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8006b7a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006b7e:	6093      	str	r3, [r2, #8]
 8006b80:	bf00      	nop
 8006b82:	46bd      	mov	sp, r7
 8006b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b88:	4770      	bx	lr
 8006b8a:	bf00      	nop
 8006b8c:	40007000 	.word	0x40007000

08006b90 <HAL_RCC_OscConfig>:
 8006b90:	b580      	push	{r7, lr}
 8006b92:	b088      	sub	sp, #32
 8006b94:	af00      	add	r7, sp, #0
 8006b96:	6078      	str	r0, [r7, #4]
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	2b00      	cmp	r3, #0
 8006b9c:	d101      	bne.n	8006ba2 <HAL_RCC_OscConfig+0x12>
 8006b9e:	2301      	movs	r3, #1
 8006ba0:	e2fe      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	f003 0301 	and.w	r3, r3, #1
 8006baa:	2b00      	cmp	r3, #0
 8006bac:	d075      	beq.n	8006c9a <HAL_RCC_OscConfig+0x10a>
 8006bae:	4b97      	ldr	r3, [pc, #604]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006bb0:	689b      	ldr	r3, [r3, #8]
 8006bb2:	f003 030c 	and.w	r3, r3, #12
 8006bb6:	61bb      	str	r3, [r7, #24]
 8006bb8:	4b94      	ldr	r3, [pc, #592]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006bba:	68db      	ldr	r3, [r3, #12]
 8006bbc:	f003 0303 	and.w	r3, r3, #3
 8006bc0:	617b      	str	r3, [r7, #20]
 8006bc2:	69bb      	ldr	r3, [r7, #24]
 8006bc4:	2b0c      	cmp	r3, #12
 8006bc6:	d102      	bne.n	8006bce <HAL_RCC_OscConfig+0x3e>
 8006bc8:	697b      	ldr	r3, [r7, #20]
 8006bca:	2b03      	cmp	r3, #3
 8006bcc:	d002      	beq.n	8006bd4 <HAL_RCC_OscConfig+0x44>
 8006bce:	69bb      	ldr	r3, [r7, #24]
 8006bd0:	2b08      	cmp	r3, #8
 8006bd2:	d10b      	bne.n	8006bec <HAL_RCC_OscConfig+0x5c>
 8006bd4:	4b8d      	ldr	r3, [pc, #564]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006bdc:	2b00      	cmp	r3, #0
 8006bde:	d05b      	beq.n	8006c98 <HAL_RCC_OscConfig+0x108>
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	685b      	ldr	r3, [r3, #4]
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	d157      	bne.n	8006c98 <HAL_RCC_OscConfig+0x108>
 8006be8:	2301      	movs	r3, #1
 8006bea:	e2d9      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	685b      	ldr	r3, [r3, #4]
 8006bf0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006bf4:	d106      	bne.n	8006c04 <HAL_RCC_OscConfig+0x74>
 8006bf6:	4b85      	ldr	r3, [pc, #532]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006bf8:	681b      	ldr	r3, [r3, #0]
 8006bfa:	4a84      	ldr	r2, [pc, #528]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006bfc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006c00:	6013      	str	r3, [r2, #0]
 8006c02:	e01d      	b.n	8006c40 <HAL_RCC_OscConfig+0xb0>
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	685b      	ldr	r3, [r3, #4]
 8006c08:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006c0c:	d10c      	bne.n	8006c28 <HAL_RCC_OscConfig+0x98>
 8006c0e:	4b7f      	ldr	r3, [pc, #508]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c10:	681b      	ldr	r3, [r3, #0]
 8006c12:	4a7e      	ldr	r2, [pc, #504]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c14:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006c18:	6013      	str	r3, [r2, #0]
 8006c1a:	4b7c      	ldr	r3, [pc, #496]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c1c:	681b      	ldr	r3, [r3, #0]
 8006c1e:	4a7b      	ldr	r2, [pc, #492]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c20:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006c24:	6013      	str	r3, [r2, #0]
 8006c26:	e00b      	b.n	8006c40 <HAL_RCC_OscConfig+0xb0>
 8006c28:	4b78      	ldr	r3, [pc, #480]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	4a77      	ldr	r2, [pc, #476]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c2e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006c32:	6013      	str	r3, [r2, #0]
 8006c34:	4b75      	ldr	r3, [pc, #468]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	4a74      	ldr	r2, [pc, #464]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c3a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006c3e:	6013      	str	r3, [r2, #0]
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	685b      	ldr	r3, [r3, #4]
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	d013      	beq.n	8006c70 <HAL_RCC_OscConfig+0xe0>
 8006c48:	f7fb fd78 	bl	800273c <HAL_GetTick>
 8006c4c:	6138      	str	r0, [r7, #16]
 8006c4e:	e008      	b.n	8006c62 <HAL_RCC_OscConfig+0xd2>
 8006c50:	f7fb fd74 	bl	800273c <HAL_GetTick>
 8006c54:	4602      	mov	r2, r0
 8006c56:	693b      	ldr	r3, [r7, #16]
 8006c58:	1ad3      	subs	r3, r2, r3
 8006c5a:	2b64      	cmp	r3, #100	@ 0x64
 8006c5c:	d901      	bls.n	8006c62 <HAL_RCC_OscConfig+0xd2>
 8006c5e:	2303      	movs	r3, #3
 8006c60:	e29e      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006c62:	4b6a      	ldr	r3, [pc, #424]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006c6a:	2b00      	cmp	r3, #0
 8006c6c:	d0f0      	beq.n	8006c50 <HAL_RCC_OscConfig+0xc0>
 8006c6e:	e014      	b.n	8006c9a <HAL_RCC_OscConfig+0x10a>
 8006c70:	f7fb fd64 	bl	800273c <HAL_GetTick>
 8006c74:	6138      	str	r0, [r7, #16]
 8006c76:	e008      	b.n	8006c8a <HAL_RCC_OscConfig+0xfa>
 8006c78:	f7fb fd60 	bl	800273c <HAL_GetTick>
 8006c7c:	4602      	mov	r2, r0
 8006c7e:	693b      	ldr	r3, [r7, #16]
 8006c80:	1ad3      	subs	r3, r2, r3
 8006c82:	2b64      	cmp	r3, #100	@ 0x64
 8006c84:	d901      	bls.n	8006c8a <HAL_RCC_OscConfig+0xfa>
 8006c86:	2303      	movs	r3, #3
 8006c88:	e28a      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006c8a:	4b60      	ldr	r3, [pc, #384]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006c92:	2b00      	cmp	r3, #0
 8006c94:	d1f0      	bne.n	8006c78 <HAL_RCC_OscConfig+0xe8>
 8006c96:	e000      	b.n	8006c9a <HAL_RCC_OscConfig+0x10a>
 8006c98:	bf00      	nop
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	681b      	ldr	r3, [r3, #0]
 8006c9e:	f003 0302 	and.w	r3, r3, #2
 8006ca2:	2b00      	cmp	r3, #0
 8006ca4:	d075      	beq.n	8006d92 <HAL_RCC_OscConfig+0x202>
 8006ca6:	4b59      	ldr	r3, [pc, #356]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006ca8:	689b      	ldr	r3, [r3, #8]
 8006caa:	f003 030c 	and.w	r3, r3, #12
 8006cae:	61bb      	str	r3, [r7, #24]
 8006cb0:	4b56      	ldr	r3, [pc, #344]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006cb2:	68db      	ldr	r3, [r3, #12]
 8006cb4:	f003 0303 	and.w	r3, r3, #3
 8006cb8:	617b      	str	r3, [r7, #20]
 8006cba:	69bb      	ldr	r3, [r7, #24]
 8006cbc:	2b0c      	cmp	r3, #12
 8006cbe:	d102      	bne.n	8006cc6 <HAL_RCC_OscConfig+0x136>
 8006cc0:	697b      	ldr	r3, [r7, #20]
 8006cc2:	2b02      	cmp	r3, #2
 8006cc4:	d002      	beq.n	8006ccc <HAL_RCC_OscConfig+0x13c>
 8006cc6:	69bb      	ldr	r3, [r7, #24]
 8006cc8:	2b04      	cmp	r3, #4
 8006cca:	d11f      	bne.n	8006d0c <HAL_RCC_OscConfig+0x17c>
 8006ccc:	4b4f      	ldr	r3, [pc, #316]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006cce:	681b      	ldr	r3, [r3, #0]
 8006cd0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	d005      	beq.n	8006ce4 <HAL_RCC_OscConfig+0x154>
 8006cd8:	687b      	ldr	r3, [r7, #4]
 8006cda:	68db      	ldr	r3, [r3, #12]
 8006cdc:	2b00      	cmp	r3, #0
 8006cde:	d101      	bne.n	8006ce4 <HAL_RCC_OscConfig+0x154>
 8006ce0:	2301      	movs	r3, #1
 8006ce2:	e25d      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006ce4:	4b49      	ldr	r3, [pc, #292]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006ce6:	685b      	ldr	r3, [r3, #4]
 8006ce8:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	691b      	ldr	r3, [r3, #16]
 8006cf0:	061b      	lsls	r3, r3, #24
 8006cf2:	4946      	ldr	r1, [pc, #280]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006cf4:	4313      	orrs	r3, r2
 8006cf6:	604b      	str	r3, [r1, #4]
 8006cf8:	4b45      	ldr	r3, [pc, #276]	@ (8006e10 <HAL_RCC_OscConfig+0x280>)
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	4618      	mov	r0, r3
 8006cfe:	f7fb fcd1 	bl	80026a4 <HAL_InitTick>
 8006d02:	4603      	mov	r3, r0
 8006d04:	2b00      	cmp	r3, #0
 8006d06:	d043      	beq.n	8006d90 <HAL_RCC_OscConfig+0x200>
 8006d08:	2301      	movs	r3, #1
 8006d0a:	e249      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	68db      	ldr	r3, [r3, #12]
 8006d10:	2b00      	cmp	r3, #0
 8006d12:	d023      	beq.n	8006d5c <HAL_RCC_OscConfig+0x1cc>
 8006d14:	4b3d      	ldr	r3, [pc, #244]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	4a3c      	ldr	r2, [pc, #240]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d1a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006d1e:	6013      	str	r3, [r2, #0]
 8006d20:	f7fb fd0c 	bl	800273c <HAL_GetTick>
 8006d24:	6138      	str	r0, [r7, #16]
 8006d26:	e008      	b.n	8006d3a <HAL_RCC_OscConfig+0x1aa>
 8006d28:	f7fb fd08 	bl	800273c <HAL_GetTick>
 8006d2c:	4602      	mov	r2, r0
 8006d2e:	693b      	ldr	r3, [r7, #16]
 8006d30:	1ad3      	subs	r3, r2, r3
 8006d32:	2b02      	cmp	r3, #2
 8006d34:	d901      	bls.n	8006d3a <HAL_RCC_OscConfig+0x1aa>
 8006d36:	2303      	movs	r3, #3
 8006d38:	e232      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006d3a:	4b34      	ldr	r3, [pc, #208]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d3c:	681b      	ldr	r3, [r3, #0]
 8006d3e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006d42:	2b00      	cmp	r3, #0
 8006d44:	d0f0      	beq.n	8006d28 <HAL_RCC_OscConfig+0x198>
 8006d46:	4b31      	ldr	r3, [pc, #196]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d48:	685b      	ldr	r3, [r3, #4]
 8006d4a:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006d4e:	687b      	ldr	r3, [r7, #4]
 8006d50:	691b      	ldr	r3, [r3, #16]
 8006d52:	061b      	lsls	r3, r3, #24
 8006d54:	492d      	ldr	r1, [pc, #180]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d56:	4313      	orrs	r3, r2
 8006d58:	604b      	str	r3, [r1, #4]
 8006d5a:	e01a      	b.n	8006d92 <HAL_RCC_OscConfig+0x202>
 8006d5c:	4b2b      	ldr	r3, [pc, #172]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d5e:	681b      	ldr	r3, [r3, #0]
 8006d60:	4a2a      	ldr	r2, [pc, #168]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d62:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006d66:	6013      	str	r3, [r2, #0]
 8006d68:	f7fb fce8 	bl	800273c <HAL_GetTick>
 8006d6c:	6138      	str	r0, [r7, #16]
 8006d6e:	e008      	b.n	8006d82 <HAL_RCC_OscConfig+0x1f2>
 8006d70:	f7fb fce4 	bl	800273c <HAL_GetTick>
 8006d74:	4602      	mov	r2, r0
 8006d76:	693b      	ldr	r3, [r7, #16]
 8006d78:	1ad3      	subs	r3, r2, r3
 8006d7a:	2b02      	cmp	r3, #2
 8006d7c:	d901      	bls.n	8006d82 <HAL_RCC_OscConfig+0x1f2>
 8006d7e:	2303      	movs	r3, #3
 8006d80:	e20e      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006d82:	4b22      	ldr	r3, [pc, #136]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006d84:	681b      	ldr	r3, [r3, #0]
 8006d86:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d1f0      	bne.n	8006d70 <HAL_RCC_OscConfig+0x1e0>
 8006d8e:	e000      	b.n	8006d92 <HAL_RCC_OscConfig+0x202>
 8006d90:	bf00      	nop
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	681b      	ldr	r3, [r3, #0]
 8006d96:	f003 0308 	and.w	r3, r3, #8
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d041      	beq.n	8006e22 <HAL_RCC_OscConfig+0x292>
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	695b      	ldr	r3, [r3, #20]
 8006da2:	2b00      	cmp	r3, #0
 8006da4:	d01c      	beq.n	8006de0 <HAL_RCC_OscConfig+0x250>
 8006da6:	4b19      	ldr	r3, [pc, #100]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006da8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006dac:	4a17      	ldr	r2, [pc, #92]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006dae:	f043 0301 	orr.w	r3, r3, #1
 8006db2:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8006db6:	f7fb fcc1 	bl	800273c <HAL_GetTick>
 8006dba:	6138      	str	r0, [r7, #16]
 8006dbc:	e008      	b.n	8006dd0 <HAL_RCC_OscConfig+0x240>
 8006dbe:	f7fb fcbd 	bl	800273c <HAL_GetTick>
 8006dc2:	4602      	mov	r2, r0
 8006dc4:	693b      	ldr	r3, [r7, #16]
 8006dc6:	1ad3      	subs	r3, r2, r3
 8006dc8:	2b02      	cmp	r3, #2
 8006dca:	d901      	bls.n	8006dd0 <HAL_RCC_OscConfig+0x240>
 8006dcc:	2303      	movs	r3, #3
 8006dce:	e1e7      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006dd0:	4b0e      	ldr	r3, [pc, #56]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006dd2:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006dd6:	f003 0302 	and.w	r3, r3, #2
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	d0ef      	beq.n	8006dbe <HAL_RCC_OscConfig+0x22e>
 8006dde:	e020      	b.n	8006e22 <HAL_RCC_OscConfig+0x292>
 8006de0:	4b0a      	ldr	r3, [pc, #40]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006de2:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006de6:	4a09      	ldr	r2, [pc, #36]	@ (8006e0c <HAL_RCC_OscConfig+0x27c>)
 8006de8:	f023 0301 	bic.w	r3, r3, #1
 8006dec:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8006df0:	f7fb fca4 	bl	800273c <HAL_GetTick>
 8006df4:	6138      	str	r0, [r7, #16]
 8006df6:	e00d      	b.n	8006e14 <HAL_RCC_OscConfig+0x284>
 8006df8:	f7fb fca0 	bl	800273c <HAL_GetTick>
 8006dfc:	4602      	mov	r2, r0
 8006dfe:	693b      	ldr	r3, [r7, #16]
 8006e00:	1ad3      	subs	r3, r2, r3
 8006e02:	2b02      	cmp	r3, #2
 8006e04:	d906      	bls.n	8006e14 <HAL_RCC_OscConfig+0x284>
 8006e06:	2303      	movs	r3, #3
 8006e08:	e1ca      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006e0a:	bf00      	nop
 8006e0c:	40021000 	.word	0x40021000
 8006e10:	20000004 	.word	0x20000004
 8006e14:	4b8c      	ldr	r3, [pc, #560]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006e16:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006e1a:	f003 0302 	and.w	r3, r3, #2
 8006e1e:	2b00      	cmp	r3, #0
 8006e20:	d1ea      	bne.n	8006df8 <HAL_RCC_OscConfig+0x268>
 8006e22:	687b      	ldr	r3, [r7, #4]
 8006e24:	681b      	ldr	r3, [r3, #0]
 8006e26:	f003 0304 	and.w	r3, r3, #4
 8006e2a:	2b00      	cmp	r3, #0
 8006e2c:	f000 80a6 	beq.w	8006f7c <HAL_RCC_OscConfig+0x3ec>
 8006e30:	2300      	movs	r3, #0
 8006e32:	77fb      	strb	r3, [r7, #31]
 8006e34:	4b84      	ldr	r3, [pc, #528]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006e36:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006e38:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	d101      	bne.n	8006e44 <HAL_RCC_OscConfig+0x2b4>
 8006e40:	2301      	movs	r3, #1
 8006e42:	e000      	b.n	8006e46 <HAL_RCC_OscConfig+0x2b6>
 8006e44:	2300      	movs	r3, #0
 8006e46:	2b00      	cmp	r3, #0
 8006e48:	d00d      	beq.n	8006e66 <HAL_RCC_OscConfig+0x2d6>
 8006e4a:	4b7f      	ldr	r3, [pc, #508]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006e4c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006e4e:	4a7e      	ldr	r2, [pc, #504]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006e50:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006e54:	6593      	str	r3, [r2, #88]	@ 0x58
 8006e56:	4b7c      	ldr	r3, [pc, #496]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006e58:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006e5a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006e5e:	60fb      	str	r3, [r7, #12]
 8006e60:	68fb      	ldr	r3, [r7, #12]
 8006e62:	2301      	movs	r3, #1
 8006e64:	77fb      	strb	r3, [r7, #31]
 8006e66:	4b79      	ldr	r3, [pc, #484]	@ (800704c <HAL_RCC_OscConfig+0x4bc>)
 8006e68:	681b      	ldr	r3, [r3, #0]
 8006e6a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006e6e:	2b00      	cmp	r3, #0
 8006e70:	d118      	bne.n	8006ea4 <HAL_RCC_OscConfig+0x314>
 8006e72:	4b76      	ldr	r3, [pc, #472]	@ (800704c <HAL_RCC_OscConfig+0x4bc>)
 8006e74:	681b      	ldr	r3, [r3, #0]
 8006e76:	4a75      	ldr	r2, [pc, #468]	@ (800704c <HAL_RCC_OscConfig+0x4bc>)
 8006e78:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006e7c:	6013      	str	r3, [r2, #0]
 8006e7e:	f7fb fc5d 	bl	800273c <HAL_GetTick>
 8006e82:	6138      	str	r0, [r7, #16]
 8006e84:	e008      	b.n	8006e98 <HAL_RCC_OscConfig+0x308>
 8006e86:	f7fb fc59 	bl	800273c <HAL_GetTick>
 8006e8a:	4602      	mov	r2, r0
 8006e8c:	693b      	ldr	r3, [r7, #16]
 8006e8e:	1ad3      	subs	r3, r2, r3
 8006e90:	2b02      	cmp	r3, #2
 8006e92:	d901      	bls.n	8006e98 <HAL_RCC_OscConfig+0x308>
 8006e94:	2303      	movs	r3, #3
 8006e96:	e183      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006e98:	4b6c      	ldr	r3, [pc, #432]	@ (800704c <HAL_RCC_OscConfig+0x4bc>)
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006ea0:	2b00      	cmp	r3, #0
 8006ea2:	d0f0      	beq.n	8006e86 <HAL_RCC_OscConfig+0x2f6>
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	689b      	ldr	r3, [r3, #8]
 8006ea8:	2b01      	cmp	r3, #1
 8006eaa:	d108      	bne.n	8006ebe <HAL_RCC_OscConfig+0x32e>
 8006eac:	4b66      	ldr	r3, [pc, #408]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006eae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006eb2:	4a65      	ldr	r2, [pc, #404]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006eb4:	f043 0301 	orr.w	r3, r3, #1
 8006eb8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006ebc:	e024      	b.n	8006f08 <HAL_RCC_OscConfig+0x378>
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	689b      	ldr	r3, [r3, #8]
 8006ec2:	2b05      	cmp	r3, #5
 8006ec4:	d110      	bne.n	8006ee8 <HAL_RCC_OscConfig+0x358>
 8006ec6:	4b60      	ldr	r3, [pc, #384]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006ec8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006ecc:	4a5e      	ldr	r2, [pc, #376]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006ece:	f043 0304 	orr.w	r3, r3, #4
 8006ed2:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006ed6:	4b5c      	ldr	r3, [pc, #368]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006ed8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006edc:	4a5a      	ldr	r2, [pc, #360]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006ede:	f043 0301 	orr.w	r3, r3, #1
 8006ee2:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006ee6:	e00f      	b.n	8006f08 <HAL_RCC_OscConfig+0x378>
 8006ee8:	4b57      	ldr	r3, [pc, #348]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006eea:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006eee:	4a56      	ldr	r2, [pc, #344]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006ef0:	f023 0301 	bic.w	r3, r3, #1
 8006ef4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006ef8:	4b53      	ldr	r3, [pc, #332]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006efa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006efe:	4a52      	ldr	r2, [pc, #328]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006f00:	f023 0304 	bic.w	r3, r3, #4
 8006f04:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	689b      	ldr	r3, [r3, #8]
 8006f0c:	2b00      	cmp	r3, #0
 8006f0e:	d016      	beq.n	8006f3e <HAL_RCC_OscConfig+0x3ae>
 8006f10:	f7fb fc14 	bl	800273c <HAL_GetTick>
 8006f14:	6138      	str	r0, [r7, #16]
 8006f16:	e00a      	b.n	8006f2e <HAL_RCC_OscConfig+0x39e>
 8006f18:	f7fb fc10 	bl	800273c <HAL_GetTick>
 8006f1c:	4602      	mov	r2, r0
 8006f1e:	693b      	ldr	r3, [r7, #16]
 8006f20:	1ad3      	subs	r3, r2, r3
 8006f22:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006f26:	4293      	cmp	r3, r2
 8006f28:	d901      	bls.n	8006f2e <HAL_RCC_OscConfig+0x39e>
 8006f2a:	2303      	movs	r3, #3
 8006f2c:	e138      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006f2e:	4b46      	ldr	r3, [pc, #280]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006f30:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006f34:	f003 0302 	and.w	r3, r3, #2
 8006f38:	2b00      	cmp	r3, #0
 8006f3a:	d0ed      	beq.n	8006f18 <HAL_RCC_OscConfig+0x388>
 8006f3c:	e015      	b.n	8006f6a <HAL_RCC_OscConfig+0x3da>
 8006f3e:	f7fb fbfd 	bl	800273c <HAL_GetTick>
 8006f42:	6138      	str	r0, [r7, #16]
 8006f44:	e00a      	b.n	8006f5c <HAL_RCC_OscConfig+0x3cc>
 8006f46:	f7fb fbf9 	bl	800273c <HAL_GetTick>
 8006f4a:	4602      	mov	r2, r0
 8006f4c:	693b      	ldr	r3, [r7, #16]
 8006f4e:	1ad3      	subs	r3, r2, r3
 8006f50:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006f54:	4293      	cmp	r3, r2
 8006f56:	d901      	bls.n	8006f5c <HAL_RCC_OscConfig+0x3cc>
 8006f58:	2303      	movs	r3, #3
 8006f5a:	e121      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006f5c:	4b3a      	ldr	r3, [pc, #232]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006f5e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006f62:	f003 0302 	and.w	r3, r3, #2
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	d1ed      	bne.n	8006f46 <HAL_RCC_OscConfig+0x3b6>
 8006f6a:	7ffb      	ldrb	r3, [r7, #31]
 8006f6c:	2b01      	cmp	r3, #1
 8006f6e:	d105      	bne.n	8006f7c <HAL_RCC_OscConfig+0x3ec>
 8006f70:	4b35      	ldr	r3, [pc, #212]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006f72:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006f74:	4a34      	ldr	r2, [pc, #208]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006f76:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006f7a:	6593      	str	r3, [r2, #88]	@ 0x58
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	681b      	ldr	r3, [r3, #0]
 8006f80:	f003 0320 	and.w	r3, r3, #32
 8006f84:	2b00      	cmp	r3, #0
 8006f86:	d03c      	beq.n	8007002 <HAL_RCC_OscConfig+0x472>
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	699b      	ldr	r3, [r3, #24]
 8006f8c:	2b00      	cmp	r3, #0
 8006f8e:	d01c      	beq.n	8006fca <HAL_RCC_OscConfig+0x43a>
 8006f90:	4b2d      	ldr	r3, [pc, #180]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006f92:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006f96:	4a2c      	ldr	r2, [pc, #176]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006f98:	f043 0301 	orr.w	r3, r3, #1
 8006f9c:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8006fa0:	f7fb fbcc 	bl	800273c <HAL_GetTick>
 8006fa4:	6138      	str	r0, [r7, #16]
 8006fa6:	e008      	b.n	8006fba <HAL_RCC_OscConfig+0x42a>
 8006fa8:	f7fb fbc8 	bl	800273c <HAL_GetTick>
 8006fac:	4602      	mov	r2, r0
 8006fae:	693b      	ldr	r3, [r7, #16]
 8006fb0:	1ad3      	subs	r3, r2, r3
 8006fb2:	2b02      	cmp	r3, #2
 8006fb4:	d901      	bls.n	8006fba <HAL_RCC_OscConfig+0x42a>
 8006fb6:	2303      	movs	r3, #3
 8006fb8:	e0f2      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006fba:	4b23      	ldr	r3, [pc, #140]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006fbc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006fc0:	f003 0302 	and.w	r3, r3, #2
 8006fc4:	2b00      	cmp	r3, #0
 8006fc6:	d0ef      	beq.n	8006fa8 <HAL_RCC_OscConfig+0x418>
 8006fc8:	e01b      	b.n	8007002 <HAL_RCC_OscConfig+0x472>
 8006fca:	4b1f      	ldr	r3, [pc, #124]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006fcc:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006fd0:	4a1d      	ldr	r2, [pc, #116]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006fd2:	f023 0301 	bic.w	r3, r3, #1
 8006fd6:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8006fda:	f7fb fbaf 	bl	800273c <HAL_GetTick>
 8006fde:	6138      	str	r0, [r7, #16]
 8006fe0:	e008      	b.n	8006ff4 <HAL_RCC_OscConfig+0x464>
 8006fe2:	f7fb fbab 	bl	800273c <HAL_GetTick>
 8006fe6:	4602      	mov	r2, r0
 8006fe8:	693b      	ldr	r3, [r7, #16]
 8006fea:	1ad3      	subs	r3, r2, r3
 8006fec:	2b02      	cmp	r3, #2
 8006fee:	d901      	bls.n	8006ff4 <HAL_RCC_OscConfig+0x464>
 8006ff0:	2303      	movs	r3, #3
 8006ff2:	e0d5      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8006ff4:	4b14      	ldr	r3, [pc, #80]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8006ff6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006ffa:	f003 0302 	and.w	r3, r3, #2
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	d1ef      	bne.n	8006fe2 <HAL_RCC_OscConfig+0x452>
 8007002:	687b      	ldr	r3, [r7, #4]
 8007004:	69db      	ldr	r3, [r3, #28]
 8007006:	2b00      	cmp	r3, #0
 8007008:	f000 80c9 	beq.w	800719e <HAL_RCC_OscConfig+0x60e>
 800700c:	4b0e      	ldr	r3, [pc, #56]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 800700e:	689b      	ldr	r3, [r3, #8]
 8007010:	f003 030c 	and.w	r3, r3, #12
 8007014:	2b0c      	cmp	r3, #12
 8007016:	f000 8083 	beq.w	8007120 <HAL_RCC_OscConfig+0x590>
 800701a:	687b      	ldr	r3, [r7, #4]
 800701c:	69db      	ldr	r3, [r3, #28]
 800701e:	2b02      	cmp	r3, #2
 8007020:	d15e      	bne.n	80070e0 <HAL_RCC_OscConfig+0x550>
 8007022:	4b09      	ldr	r3, [pc, #36]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8007024:	681b      	ldr	r3, [r3, #0]
 8007026:	4a08      	ldr	r2, [pc, #32]	@ (8007048 <HAL_RCC_OscConfig+0x4b8>)
 8007028:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800702c:	6013      	str	r3, [r2, #0]
 800702e:	f7fb fb85 	bl	800273c <HAL_GetTick>
 8007032:	6138      	str	r0, [r7, #16]
 8007034:	e00c      	b.n	8007050 <HAL_RCC_OscConfig+0x4c0>
 8007036:	f7fb fb81 	bl	800273c <HAL_GetTick>
 800703a:	4602      	mov	r2, r0
 800703c:	693b      	ldr	r3, [r7, #16]
 800703e:	1ad3      	subs	r3, r2, r3
 8007040:	2b02      	cmp	r3, #2
 8007042:	d905      	bls.n	8007050 <HAL_RCC_OscConfig+0x4c0>
 8007044:	2303      	movs	r3, #3
 8007046:	e0ab      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8007048:	40021000 	.word	0x40021000
 800704c:	40007000 	.word	0x40007000
 8007050:	4b55      	ldr	r3, [pc, #340]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 8007052:	681b      	ldr	r3, [r3, #0]
 8007054:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007058:	2b00      	cmp	r3, #0
 800705a:	d1ec      	bne.n	8007036 <HAL_RCC_OscConfig+0x4a6>
 800705c:	4b52      	ldr	r3, [pc, #328]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 800705e:	68da      	ldr	r2, [r3, #12]
 8007060:	4b52      	ldr	r3, [pc, #328]	@ (80071ac <HAL_RCC_OscConfig+0x61c>)
 8007062:	4013      	ands	r3, r2
 8007064:	687a      	ldr	r2, [r7, #4]
 8007066:	6a11      	ldr	r1, [r2, #32]
 8007068:	687a      	ldr	r2, [r7, #4]
 800706a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800706c:	3a01      	subs	r2, #1
 800706e:	0112      	lsls	r2, r2, #4
 8007070:	4311      	orrs	r1, r2
 8007072:	687a      	ldr	r2, [r7, #4]
 8007074:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8007076:	0212      	lsls	r2, r2, #8
 8007078:	4311      	orrs	r1, r2
 800707a:	687a      	ldr	r2, [r7, #4]
 800707c:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 800707e:	0852      	lsrs	r2, r2, #1
 8007080:	3a01      	subs	r2, #1
 8007082:	0552      	lsls	r2, r2, #21
 8007084:	4311      	orrs	r1, r2
 8007086:	687a      	ldr	r2, [r7, #4]
 8007088:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800708a:	0852      	lsrs	r2, r2, #1
 800708c:	3a01      	subs	r2, #1
 800708e:	0652      	lsls	r2, r2, #25
 8007090:	4311      	orrs	r1, r2
 8007092:	687a      	ldr	r2, [r7, #4]
 8007094:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8007096:	06d2      	lsls	r2, r2, #27
 8007098:	430a      	orrs	r2, r1
 800709a:	4943      	ldr	r1, [pc, #268]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 800709c:	4313      	orrs	r3, r2
 800709e:	60cb      	str	r3, [r1, #12]
 80070a0:	4b41      	ldr	r3, [pc, #260]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 80070a2:	681b      	ldr	r3, [r3, #0]
 80070a4:	4a40      	ldr	r2, [pc, #256]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 80070a6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80070aa:	6013      	str	r3, [r2, #0]
 80070ac:	4b3e      	ldr	r3, [pc, #248]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 80070ae:	68db      	ldr	r3, [r3, #12]
 80070b0:	4a3d      	ldr	r2, [pc, #244]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 80070b2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80070b6:	60d3      	str	r3, [r2, #12]
 80070b8:	f7fb fb40 	bl	800273c <HAL_GetTick>
 80070bc:	6138      	str	r0, [r7, #16]
 80070be:	e008      	b.n	80070d2 <HAL_RCC_OscConfig+0x542>
 80070c0:	f7fb fb3c 	bl	800273c <HAL_GetTick>
 80070c4:	4602      	mov	r2, r0
 80070c6:	693b      	ldr	r3, [r7, #16]
 80070c8:	1ad3      	subs	r3, r2, r3
 80070ca:	2b02      	cmp	r3, #2
 80070cc:	d901      	bls.n	80070d2 <HAL_RCC_OscConfig+0x542>
 80070ce:	2303      	movs	r3, #3
 80070d0:	e066      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 80070d2:	4b35      	ldr	r3, [pc, #212]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80070da:	2b00      	cmp	r3, #0
 80070dc:	d0f0      	beq.n	80070c0 <HAL_RCC_OscConfig+0x530>
 80070de:	e05e      	b.n	800719e <HAL_RCC_OscConfig+0x60e>
 80070e0:	4b31      	ldr	r3, [pc, #196]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	4a30      	ldr	r2, [pc, #192]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 80070e6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80070ea:	6013      	str	r3, [r2, #0]
 80070ec:	f7fb fb26 	bl	800273c <HAL_GetTick>
 80070f0:	6138      	str	r0, [r7, #16]
 80070f2:	e008      	b.n	8007106 <HAL_RCC_OscConfig+0x576>
 80070f4:	f7fb fb22 	bl	800273c <HAL_GetTick>
 80070f8:	4602      	mov	r2, r0
 80070fa:	693b      	ldr	r3, [r7, #16]
 80070fc:	1ad3      	subs	r3, r2, r3
 80070fe:	2b02      	cmp	r3, #2
 8007100:	d901      	bls.n	8007106 <HAL_RCC_OscConfig+0x576>
 8007102:	2303      	movs	r3, #3
 8007104:	e04c      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 8007106:	4b28      	ldr	r3, [pc, #160]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800710e:	2b00      	cmp	r3, #0
 8007110:	d1f0      	bne.n	80070f4 <HAL_RCC_OscConfig+0x564>
 8007112:	4b25      	ldr	r3, [pc, #148]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 8007114:	68da      	ldr	r2, [r3, #12]
 8007116:	4924      	ldr	r1, [pc, #144]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 8007118:	4b25      	ldr	r3, [pc, #148]	@ (80071b0 <HAL_RCC_OscConfig+0x620>)
 800711a:	4013      	ands	r3, r2
 800711c:	60cb      	str	r3, [r1, #12]
 800711e:	e03e      	b.n	800719e <HAL_RCC_OscConfig+0x60e>
 8007120:	687b      	ldr	r3, [r7, #4]
 8007122:	69db      	ldr	r3, [r3, #28]
 8007124:	2b01      	cmp	r3, #1
 8007126:	d101      	bne.n	800712c <HAL_RCC_OscConfig+0x59c>
 8007128:	2301      	movs	r3, #1
 800712a:	e039      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 800712c:	4b1e      	ldr	r3, [pc, #120]	@ (80071a8 <HAL_RCC_OscConfig+0x618>)
 800712e:	68db      	ldr	r3, [r3, #12]
 8007130:	617b      	str	r3, [r7, #20]
 8007132:	697b      	ldr	r3, [r7, #20]
 8007134:	f003 0203 	and.w	r2, r3, #3
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	6a1b      	ldr	r3, [r3, #32]
 800713c:	429a      	cmp	r2, r3
 800713e:	d12c      	bne.n	800719a <HAL_RCC_OscConfig+0x60a>
 8007140:	697b      	ldr	r3, [r7, #20]
 8007142:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800714a:	3b01      	subs	r3, #1
 800714c:	011b      	lsls	r3, r3, #4
 800714e:	429a      	cmp	r2, r3
 8007150:	d123      	bne.n	800719a <HAL_RCC_OscConfig+0x60a>
 8007152:	697b      	ldr	r3, [r7, #20]
 8007154:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 8007158:	687b      	ldr	r3, [r7, #4]
 800715a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800715c:	021b      	lsls	r3, r3, #8
 800715e:	429a      	cmp	r2, r3
 8007160:	d11b      	bne.n	800719a <HAL_RCC_OscConfig+0x60a>
 8007162:	697b      	ldr	r3, [r7, #20]
 8007164:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800716c:	06db      	lsls	r3, r3, #27
 800716e:	429a      	cmp	r2, r3
 8007170:	d113      	bne.n	800719a <HAL_RCC_OscConfig+0x60a>
 8007172:	697b      	ldr	r3, [r7, #20]
 8007174:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800717c:	085b      	lsrs	r3, r3, #1
 800717e:	3b01      	subs	r3, #1
 8007180:	055b      	lsls	r3, r3, #21
 8007182:	429a      	cmp	r2, r3
 8007184:	d109      	bne.n	800719a <HAL_RCC_OscConfig+0x60a>
 8007186:	697b      	ldr	r3, [r7, #20]
 8007188:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007190:	085b      	lsrs	r3, r3, #1
 8007192:	3b01      	subs	r3, #1
 8007194:	065b      	lsls	r3, r3, #25
 8007196:	429a      	cmp	r2, r3
 8007198:	d001      	beq.n	800719e <HAL_RCC_OscConfig+0x60e>
 800719a:	2301      	movs	r3, #1
 800719c:	e000      	b.n	80071a0 <HAL_RCC_OscConfig+0x610>
 800719e:	2300      	movs	r3, #0
 80071a0:	4618      	mov	r0, r3
 80071a2:	3720      	adds	r7, #32
 80071a4:	46bd      	mov	sp, r7
 80071a6:	bd80      	pop	{r7, pc}
 80071a8:	40021000 	.word	0x40021000
 80071ac:	019f800c 	.word	0x019f800c
 80071b0:	feeefffc 	.word	0xfeeefffc

080071b4 <HAL_RCC_ClockConfig>:
 80071b4:	b580      	push	{r7, lr}
 80071b6:	b086      	sub	sp, #24
 80071b8:	af00      	add	r7, sp, #0
 80071ba:	6078      	str	r0, [r7, #4]
 80071bc:	6039      	str	r1, [r7, #0]
 80071be:	2300      	movs	r3, #0
 80071c0:	617b      	str	r3, [r7, #20]
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	2b00      	cmp	r3, #0
 80071c6:	d101      	bne.n	80071cc <HAL_RCC_ClockConfig+0x18>
 80071c8:	2301      	movs	r3, #1
 80071ca:	e11e      	b.n	800740a <HAL_RCC_ClockConfig+0x256>
 80071cc:	4b91      	ldr	r3, [pc, #580]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 80071ce:	681b      	ldr	r3, [r3, #0]
 80071d0:	f003 030f 	and.w	r3, r3, #15
 80071d4:	683a      	ldr	r2, [r7, #0]
 80071d6:	429a      	cmp	r2, r3
 80071d8:	d910      	bls.n	80071fc <HAL_RCC_ClockConfig+0x48>
 80071da:	4b8e      	ldr	r3, [pc, #568]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 80071dc:	681b      	ldr	r3, [r3, #0]
 80071de:	f023 020f 	bic.w	r2, r3, #15
 80071e2:	498c      	ldr	r1, [pc, #560]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 80071e4:	683b      	ldr	r3, [r7, #0]
 80071e6:	4313      	orrs	r3, r2
 80071e8:	600b      	str	r3, [r1, #0]
 80071ea:	4b8a      	ldr	r3, [pc, #552]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 80071ec:	681b      	ldr	r3, [r3, #0]
 80071ee:	f003 030f 	and.w	r3, r3, #15
 80071f2:	683a      	ldr	r2, [r7, #0]
 80071f4:	429a      	cmp	r2, r3
 80071f6:	d001      	beq.n	80071fc <HAL_RCC_ClockConfig+0x48>
 80071f8:	2301      	movs	r3, #1
 80071fa:	e106      	b.n	800740a <HAL_RCC_ClockConfig+0x256>
 80071fc:	687b      	ldr	r3, [r7, #4]
 80071fe:	681b      	ldr	r3, [r3, #0]
 8007200:	f003 0301 	and.w	r3, r3, #1
 8007204:	2b00      	cmp	r3, #0
 8007206:	d073      	beq.n	80072f0 <HAL_RCC_ClockConfig+0x13c>
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	685b      	ldr	r3, [r3, #4]
 800720c:	2b03      	cmp	r3, #3
 800720e:	d129      	bne.n	8007264 <HAL_RCC_ClockConfig+0xb0>
 8007210:	4b81      	ldr	r3, [pc, #516]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007218:	2b00      	cmp	r3, #0
 800721a:	d101      	bne.n	8007220 <HAL_RCC_ClockConfig+0x6c>
 800721c:	2301      	movs	r3, #1
 800721e:	e0f4      	b.n	800740a <HAL_RCC_ClockConfig+0x256>
 8007220:	f000 f99e 	bl	8007560 <RCC_GetSysClockFreqFromPLLSource>
 8007224:	6138      	str	r0, [r7, #16]
 8007226:	693b      	ldr	r3, [r7, #16]
 8007228:	4a7c      	ldr	r2, [pc, #496]	@ (800741c <HAL_RCC_ClockConfig+0x268>)
 800722a:	4293      	cmp	r3, r2
 800722c:	d93f      	bls.n	80072ae <HAL_RCC_ClockConfig+0xfa>
 800722e:	4b7a      	ldr	r3, [pc, #488]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 8007230:	689b      	ldr	r3, [r3, #8]
 8007232:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007236:	2b00      	cmp	r3, #0
 8007238:	d009      	beq.n	800724e <HAL_RCC_ClockConfig+0x9a>
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	f003 0302 	and.w	r3, r3, #2
 8007242:	2b00      	cmp	r3, #0
 8007244:	d033      	beq.n	80072ae <HAL_RCC_ClockConfig+0xfa>
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	689b      	ldr	r3, [r3, #8]
 800724a:	2b00      	cmp	r3, #0
 800724c:	d12f      	bne.n	80072ae <HAL_RCC_ClockConfig+0xfa>
 800724e:	4b72      	ldr	r3, [pc, #456]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 8007250:	689b      	ldr	r3, [r3, #8]
 8007252:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007256:	4a70      	ldr	r2, [pc, #448]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 8007258:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800725c:	6093      	str	r3, [r2, #8]
 800725e:	2380      	movs	r3, #128	@ 0x80
 8007260:	617b      	str	r3, [r7, #20]
 8007262:	e024      	b.n	80072ae <HAL_RCC_ClockConfig+0xfa>
 8007264:	687b      	ldr	r3, [r7, #4]
 8007266:	685b      	ldr	r3, [r3, #4]
 8007268:	2b02      	cmp	r3, #2
 800726a:	d107      	bne.n	800727c <HAL_RCC_ClockConfig+0xc8>
 800726c:	4b6a      	ldr	r3, [pc, #424]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800726e:	681b      	ldr	r3, [r3, #0]
 8007270:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007274:	2b00      	cmp	r3, #0
 8007276:	d109      	bne.n	800728c <HAL_RCC_ClockConfig+0xd8>
 8007278:	2301      	movs	r3, #1
 800727a:	e0c6      	b.n	800740a <HAL_RCC_ClockConfig+0x256>
 800727c:	4b66      	ldr	r3, [pc, #408]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800727e:	681b      	ldr	r3, [r3, #0]
 8007280:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007284:	2b00      	cmp	r3, #0
 8007286:	d101      	bne.n	800728c <HAL_RCC_ClockConfig+0xd8>
 8007288:	2301      	movs	r3, #1
 800728a:	e0be      	b.n	800740a <HAL_RCC_ClockConfig+0x256>
 800728c:	f000 f8ce 	bl	800742c <HAL_RCC_GetSysClockFreq>
 8007290:	6138      	str	r0, [r7, #16]
 8007292:	693b      	ldr	r3, [r7, #16]
 8007294:	4a61      	ldr	r2, [pc, #388]	@ (800741c <HAL_RCC_ClockConfig+0x268>)
 8007296:	4293      	cmp	r3, r2
 8007298:	d909      	bls.n	80072ae <HAL_RCC_ClockConfig+0xfa>
 800729a:	4b5f      	ldr	r3, [pc, #380]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800729c:	689b      	ldr	r3, [r3, #8]
 800729e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80072a2:	4a5d      	ldr	r2, [pc, #372]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80072a4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80072a8:	6093      	str	r3, [r2, #8]
 80072aa:	2380      	movs	r3, #128	@ 0x80
 80072ac:	617b      	str	r3, [r7, #20]
 80072ae:	4b5a      	ldr	r3, [pc, #360]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80072b0:	689b      	ldr	r3, [r3, #8]
 80072b2:	f023 0203 	bic.w	r2, r3, #3
 80072b6:	687b      	ldr	r3, [r7, #4]
 80072b8:	685b      	ldr	r3, [r3, #4]
 80072ba:	4957      	ldr	r1, [pc, #348]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80072bc:	4313      	orrs	r3, r2
 80072be:	608b      	str	r3, [r1, #8]
 80072c0:	f7fb fa3c 	bl	800273c <HAL_GetTick>
 80072c4:	60f8      	str	r0, [r7, #12]
 80072c6:	e00a      	b.n	80072de <HAL_RCC_ClockConfig+0x12a>
 80072c8:	f7fb fa38 	bl	800273c <HAL_GetTick>
 80072cc:	4602      	mov	r2, r0
 80072ce:	68fb      	ldr	r3, [r7, #12]
 80072d0:	1ad3      	subs	r3, r2, r3
 80072d2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80072d6:	4293      	cmp	r3, r2
 80072d8:	d901      	bls.n	80072de <HAL_RCC_ClockConfig+0x12a>
 80072da:	2303      	movs	r3, #3
 80072dc:	e095      	b.n	800740a <HAL_RCC_ClockConfig+0x256>
 80072de:	4b4e      	ldr	r3, [pc, #312]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80072e0:	689b      	ldr	r3, [r3, #8]
 80072e2:	f003 020c 	and.w	r2, r3, #12
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	685b      	ldr	r3, [r3, #4]
 80072ea:	009b      	lsls	r3, r3, #2
 80072ec:	429a      	cmp	r2, r3
 80072ee:	d1eb      	bne.n	80072c8 <HAL_RCC_ClockConfig+0x114>
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	681b      	ldr	r3, [r3, #0]
 80072f4:	f003 0302 	and.w	r3, r3, #2
 80072f8:	2b00      	cmp	r3, #0
 80072fa:	d023      	beq.n	8007344 <HAL_RCC_ClockConfig+0x190>
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	681b      	ldr	r3, [r3, #0]
 8007300:	f003 0304 	and.w	r3, r3, #4
 8007304:	2b00      	cmp	r3, #0
 8007306:	d005      	beq.n	8007314 <HAL_RCC_ClockConfig+0x160>
 8007308:	4b43      	ldr	r3, [pc, #268]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800730a:	689b      	ldr	r3, [r3, #8]
 800730c:	4a42      	ldr	r2, [pc, #264]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800730e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8007312:	6093      	str	r3, [r2, #8]
 8007314:	687b      	ldr	r3, [r7, #4]
 8007316:	681b      	ldr	r3, [r3, #0]
 8007318:	f003 0308 	and.w	r3, r3, #8
 800731c:	2b00      	cmp	r3, #0
 800731e:	d007      	beq.n	8007330 <HAL_RCC_ClockConfig+0x17c>
 8007320:	4b3d      	ldr	r3, [pc, #244]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 8007322:	689b      	ldr	r3, [r3, #8]
 8007324:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8007328:	4a3b      	ldr	r2, [pc, #236]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800732a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800732e:	6093      	str	r3, [r2, #8]
 8007330:	4b39      	ldr	r3, [pc, #228]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 8007332:	689b      	ldr	r3, [r3, #8]
 8007334:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	689b      	ldr	r3, [r3, #8]
 800733c:	4936      	ldr	r1, [pc, #216]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800733e:	4313      	orrs	r3, r2
 8007340:	608b      	str	r3, [r1, #8]
 8007342:	e008      	b.n	8007356 <HAL_RCC_ClockConfig+0x1a2>
 8007344:	697b      	ldr	r3, [r7, #20]
 8007346:	2b80      	cmp	r3, #128	@ 0x80
 8007348:	d105      	bne.n	8007356 <HAL_RCC_ClockConfig+0x1a2>
 800734a:	4b33      	ldr	r3, [pc, #204]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 800734c:	689b      	ldr	r3, [r3, #8]
 800734e:	4a32      	ldr	r2, [pc, #200]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 8007350:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007354:	6093      	str	r3, [r2, #8]
 8007356:	4b2f      	ldr	r3, [pc, #188]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 8007358:	681b      	ldr	r3, [r3, #0]
 800735a:	f003 030f 	and.w	r3, r3, #15
 800735e:	683a      	ldr	r2, [r7, #0]
 8007360:	429a      	cmp	r2, r3
 8007362:	d21d      	bcs.n	80073a0 <HAL_RCC_ClockConfig+0x1ec>
 8007364:	4b2b      	ldr	r3, [pc, #172]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 8007366:	681b      	ldr	r3, [r3, #0]
 8007368:	f023 020f 	bic.w	r2, r3, #15
 800736c:	4929      	ldr	r1, [pc, #164]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 800736e:	683b      	ldr	r3, [r7, #0]
 8007370:	4313      	orrs	r3, r2
 8007372:	600b      	str	r3, [r1, #0]
 8007374:	f7fb f9e2 	bl	800273c <HAL_GetTick>
 8007378:	60f8      	str	r0, [r7, #12]
 800737a:	e00a      	b.n	8007392 <HAL_RCC_ClockConfig+0x1de>
 800737c:	f7fb f9de 	bl	800273c <HAL_GetTick>
 8007380:	4602      	mov	r2, r0
 8007382:	68fb      	ldr	r3, [r7, #12]
 8007384:	1ad3      	subs	r3, r2, r3
 8007386:	f241 3288 	movw	r2, #5000	@ 0x1388
 800738a:	4293      	cmp	r3, r2
 800738c:	d901      	bls.n	8007392 <HAL_RCC_ClockConfig+0x1de>
 800738e:	2303      	movs	r3, #3
 8007390:	e03b      	b.n	800740a <HAL_RCC_ClockConfig+0x256>
 8007392:	4b20      	ldr	r3, [pc, #128]	@ (8007414 <HAL_RCC_ClockConfig+0x260>)
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	f003 030f 	and.w	r3, r3, #15
 800739a:	683a      	ldr	r2, [r7, #0]
 800739c:	429a      	cmp	r2, r3
 800739e:	d1ed      	bne.n	800737c <HAL_RCC_ClockConfig+0x1c8>
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	f003 0304 	and.w	r3, r3, #4
 80073a8:	2b00      	cmp	r3, #0
 80073aa:	d008      	beq.n	80073be <HAL_RCC_ClockConfig+0x20a>
 80073ac:	4b1a      	ldr	r3, [pc, #104]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80073ae:	689b      	ldr	r3, [r3, #8]
 80073b0:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	68db      	ldr	r3, [r3, #12]
 80073b8:	4917      	ldr	r1, [pc, #92]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80073ba:	4313      	orrs	r3, r2
 80073bc:	608b      	str	r3, [r1, #8]
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	f003 0308 	and.w	r3, r3, #8
 80073c6:	2b00      	cmp	r3, #0
 80073c8:	d009      	beq.n	80073de <HAL_RCC_ClockConfig+0x22a>
 80073ca:	4b13      	ldr	r3, [pc, #76]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80073cc:	689b      	ldr	r3, [r3, #8]
 80073ce:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	691b      	ldr	r3, [r3, #16]
 80073d6:	00db      	lsls	r3, r3, #3
 80073d8:	490f      	ldr	r1, [pc, #60]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80073da:	4313      	orrs	r3, r2
 80073dc:	608b      	str	r3, [r1, #8]
 80073de:	f000 f825 	bl	800742c <HAL_RCC_GetSysClockFreq>
 80073e2:	4602      	mov	r2, r0
 80073e4:	4b0c      	ldr	r3, [pc, #48]	@ (8007418 <HAL_RCC_ClockConfig+0x264>)
 80073e6:	689b      	ldr	r3, [r3, #8]
 80073e8:	091b      	lsrs	r3, r3, #4
 80073ea:	f003 030f 	and.w	r3, r3, #15
 80073ee:	490c      	ldr	r1, [pc, #48]	@ (8007420 <HAL_RCC_ClockConfig+0x26c>)
 80073f0:	5ccb      	ldrb	r3, [r1, r3]
 80073f2:	f003 031f 	and.w	r3, r3, #31
 80073f6:	fa22 f303 	lsr.w	r3, r2, r3
 80073fa:	4a0a      	ldr	r2, [pc, #40]	@ (8007424 <HAL_RCC_ClockConfig+0x270>)
 80073fc:	6013      	str	r3, [r2, #0]
 80073fe:	4b0a      	ldr	r3, [pc, #40]	@ (8007428 <HAL_RCC_ClockConfig+0x274>)
 8007400:	681b      	ldr	r3, [r3, #0]
 8007402:	4618      	mov	r0, r3
 8007404:	f7fb f94e 	bl	80026a4 <HAL_InitTick>
 8007408:	4603      	mov	r3, r0
 800740a:	4618      	mov	r0, r3
 800740c:	3718      	adds	r7, #24
 800740e:	46bd      	mov	sp, r7
 8007410:	bd80      	pop	{r7, pc}
 8007412:	bf00      	nop
 8007414:	40022000 	.word	0x40022000
 8007418:	40021000 	.word	0x40021000
 800741c:	04c4b400 	.word	0x04c4b400
 8007420:	0801287c 	.word	0x0801287c
 8007424:	20000000 	.word	0x20000000
 8007428:	20000004 	.word	0x20000004

0800742c <HAL_RCC_GetSysClockFreq>:
 800742c:	b480      	push	{r7}
 800742e:	b087      	sub	sp, #28
 8007430:	af00      	add	r7, sp, #0
 8007432:	4b2c      	ldr	r3, [pc, #176]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8007434:	689b      	ldr	r3, [r3, #8]
 8007436:	f003 030c 	and.w	r3, r3, #12
 800743a:	2b04      	cmp	r3, #4
 800743c:	d102      	bne.n	8007444 <HAL_RCC_GetSysClockFreq+0x18>
 800743e:	4b2a      	ldr	r3, [pc, #168]	@ (80074e8 <HAL_RCC_GetSysClockFreq+0xbc>)
 8007440:	613b      	str	r3, [r7, #16]
 8007442:	e047      	b.n	80074d4 <HAL_RCC_GetSysClockFreq+0xa8>
 8007444:	4b27      	ldr	r3, [pc, #156]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8007446:	689b      	ldr	r3, [r3, #8]
 8007448:	f003 030c 	and.w	r3, r3, #12
 800744c:	2b08      	cmp	r3, #8
 800744e:	d102      	bne.n	8007456 <HAL_RCC_GetSysClockFreq+0x2a>
 8007450:	4b26      	ldr	r3, [pc, #152]	@ (80074ec <HAL_RCC_GetSysClockFreq+0xc0>)
 8007452:	613b      	str	r3, [r7, #16]
 8007454:	e03e      	b.n	80074d4 <HAL_RCC_GetSysClockFreq+0xa8>
 8007456:	4b23      	ldr	r3, [pc, #140]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8007458:	689b      	ldr	r3, [r3, #8]
 800745a:	f003 030c 	and.w	r3, r3, #12
 800745e:	2b0c      	cmp	r3, #12
 8007460:	d136      	bne.n	80074d0 <HAL_RCC_GetSysClockFreq+0xa4>
 8007462:	4b20      	ldr	r3, [pc, #128]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8007464:	68db      	ldr	r3, [r3, #12]
 8007466:	f003 0303 	and.w	r3, r3, #3
 800746a:	60fb      	str	r3, [r7, #12]
 800746c:	4b1d      	ldr	r3, [pc, #116]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 800746e:	68db      	ldr	r3, [r3, #12]
 8007470:	091b      	lsrs	r3, r3, #4
 8007472:	f003 030f 	and.w	r3, r3, #15
 8007476:	3301      	adds	r3, #1
 8007478:	60bb      	str	r3, [r7, #8]
 800747a:	68fb      	ldr	r3, [r7, #12]
 800747c:	2b03      	cmp	r3, #3
 800747e:	d10c      	bne.n	800749a <HAL_RCC_GetSysClockFreq+0x6e>
 8007480:	4a1a      	ldr	r2, [pc, #104]	@ (80074ec <HAL_RCC_GetSysClockFreq+0xc0>)
 8007482:	68bb      	ldr	r3, [r7, #8]
 8007484:	fbb2 f3f3 	udiv	r3, r2, r3
 8007488:	4a16      	ldr	r2, [pc, #88]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 800748a:	68d2      	ldr	r2, [r2, #12]
 800748c:	0a12      	lsrs	r2, r2, #8
 800748e:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8007492:	fb02 f303 	mul.w	r3, r2, r3
 8007496:	617b      	str	r3, [r7, #20]
 8007498:	e00c      	b.n	80074b4 <HAL_RCC_GetSysClockFreq+0x88>
 800749a:	4a13      	ldr	r2, [pc, #76]	@ (80074e8 <HAL_RCC_GetSysClockFreq+0xbc>)
 800749c:	68bb      	ldr	r3, [r7, #8]
 800749e:	fbb2 f3f3 	udiv	r3, r2, r3
 80074a2:	4a10      	ldr	r2, [pc, #64]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 80074a4:	68d2      	ldr	r2, [r2, #12]
 80074a6:	0a12      	lsrs	r2, r2, #8
 80074a8:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80074ac:	fb02 f303 	mul.w	r3, r2, r3
 80074b0:	617b      	str	r3, [r7, #20]
 80074b2:	bf00      	nop
 80074b4:	4b0b      	ldr	r3, [pc, #44]	@ (80074e4 <HAL_RCC_GetSysClockFreq+0xb8>)
 80074b6:	68db      	ldr	r3, [r3, #12]
 80074b8:	0e5b      	lsrs	r3, r3, #25
 80074ba:	f003 0303 	and.w	r3, r3, #3
 80074be:	3301      	adds	r3, #1
 80074c0:	005b      	lsls	r3, r3, #1
 80074c2:	607b      	str	r3, [r7, #4]
 80074c4:	697a      	ldr	r2, [r7, #20]
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80074cc:	613b      	str	r3, [r7, #16]
 80074ce:	e001      	b.n	80074d4 <HAL_RCC_GetSysClockFreq+0xa8>
 80074d0:	2300      	movs	r3, #0
 80074d2:	613b      	str	r3, [r7, #16]
 80074d4:	693b      	ldr	r3, [r7, #16]
 80074d6:	4618      	mov	r0, r3
 80074d8:	371c      	adds	r7, #28
 80074da:	46bd      	mov	sp, r7
 80074dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074e0:	4770      	bx	lr
 80074e2:	bf00      	nop
 80074e4:	40021000 	.word	0x40021000
 80074e8:	00f42400 	.word	0x00f42400
 80074ec:	016e3600 	.word	0x016e3600

080074f0 <HAL_RCC_GetHCLKFreq>:
 80074f0:	b480      	push	{r7}
 80074f2:	af00      	add	r7, sp, #0
 80074f4:	4b03      	ldr	r3, [pc, #12]	@ (8007504 <HAL_RCC_GetHCLKFreq+0x14>)
 80074f6:	681b      	ldr	r3, [r3, #0]
 80074f8:	4618      	mov	r0, r3
 80074fa:	46bd      	mov	sp, r7
 80074fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007500:	4770      	bx	lr
 8007502:	bf00      	nop
 8007504:	20000000 	.word	0x20000000

08007508 <HAL_RCC_GetPCLK1Freq>:
 8007508:	b580      	push	{r7, lr}
 800750a:	af00      	add	r7, sp, #0
 800750c:	f7ff fff0 	bl	80074f0 <HAL_RCC_GetHCLKFreq>
 8007510:	4602      	mov	r2, r0
 8007512:	4b06      	ldr	r3, [pc, #24]	@ (800752c <HAL_RCC_GetPCLK1Freq+0x24>)
 8007514:	689b      	ldr	r3, [r3, #8]
 8007516:	0a1b      	lsrs	r3, r3, #8
 8007518:	f003 0307 	and.w	r3, r3, #7
 800751c:	4904      	ldr	r1, [pc, #16]	@ (8007530 <HAL_RCC_GetPCLK1Freq+0x28>)
 800751e:	5ccb      	ldrb	r3, [r1, r3]
 8007520:	f003 031f 	and.w	r3, r3, #31
 8007524:	fa22 f303 	lsr.w	r3, r2, r3
 8007528:	4618      	mov	r0, r3
 800752a:	bd80      	pop	{r7, pc}
 800752c:	40021000 	.word	0x40021000
 8007530:	0801288c 	.word	0x0801288c

08007534 <HAL_RCC_GetPCLK2Freq>:
 8007534:	b580      	push	{r7, lr}
 8007536:	af00      	add	r7, sp, #0
 8007538:	f7ff ffda 	bl	80074f0 <HAL_RCC_GetHCLKFreq>
 800753c:	4602      	mov	r2, r0
 800753e:	4b06      	ldr	r3, [pc, #24]	@ (8007558 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007540:	689b      	ldr	r3, [r3, #8]
 8007542:	0adb      	lsrs	r3, r3, #11
 8007544:	f003 0307 	and.w	r3, r3, #7
 8007548:	4904      	ldr	r1, [pc, #16]	@ (800755c <HAL_RCC_GetPCLK2Freq+0x28>)
 800754a:	5ccb      	ldrb	r3, [r1, r3]
 800754c:	f003 031f 	and.w	r3, r3, #31
 8007550:	fa22 f303 	lsr.w	r3, r2, r3
 8007554:	4618      	mov	r0, r3
 8007556:	bd80      	pop	{r7, pc}
 8007558:	40021000 	.word	0x40021000
 800755c:	0801288c 	.word	0x0801288c

08007560 <RCC_GetSysClockFreqFromPLLSource>:
 8007560:	b480      	push	{r7}
 8007562:	b087      	sub	sp, #28
 8007564:	af00      	add	r7, sp, #0
 8007566:	4b1e      	ldr	r3, [pc, #120]	@ (80075e0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8007568:	68db      	ldr	r3, [r3, #12]
 800756a:	f003 0303 	and.w	r3, r3, #3
 800756e:	613b      	str	r3, [r7, #16]
 8007570:	4b1b      	ldr	r3, [pc, #108]	@ (80075e0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8007572:	68db      	ldr	r3, [r3, #12]
 8007574:	091b      	lsrs	r3, r3, #4
 8007576:	f003 030f 	and.w	r3, r3, #15
 800757a:	3301      	adds	r3, #1
 800757c:	60fb      	str	r3, [r7, #12]
 800757e:	693b      	ldr	r3, [r7, #16]
 8007580:	2b03      	cmp	r3, #3
 8007582:	d10c      	bne.n	800759e <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8007584:	4a17      	ldr	r2, [pc, #92]	@ (80075e4 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	fbb2 f3f3 	udiv	r3, r2, r3
 800758c:	4a14      	ldr	r2, [pc, #80]	@ (80075e0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800758e:	68d2      	ldr	r2, [r2, #12]
 8007590:	0a12      	lsrs	r2, r2, #8
 8007592:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8007596:	fb02 f303 	mul.w	r3, r2, r3
 800759a:	617b      	str	r3, [r7, #20]
 800759c:	e00c      	b.n	80075b8 <RCC_GetSysClockFreqFromPLLSource+0x58>
 800759e:	4a12      	ldr	r2, [pc, #72]	@ (80075e8 <RCC_GetSysClockFreqFromPLLSource+0x88>)
 80075a0:	68fb      	ldr	r3, [r7, #12]
 80075a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80075a6:	4a0e      	ldr	r2, [pc, #56]	@ (80075e0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80075a8:	68d2      	ldr	r2, [r2, #12]
 80075aa:	0a12      	lsrs	r2, r2, #8
 80075ac:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80075b0:	fb02 f303 	mul.w	r3, r2, r3
 80075b4:	617b      	str	r3, [r7, #20]
 80075b6:	bf00      	nop
 80075b8:	4b09      	ldr	r3, [pc, #36]	@ (80075e0 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 80075ba:	68db      	ldr	r3, [r3, #12]
 80075bc:	0e5b      	lsrs	r3, r3, #25
 80075be:	f003 0303 	and.w	r3, r3, #3
 80075c2:	3301      	adds	r3, #1
 80075c4:	005b      	lsls	r3, r3, #1
 80075c6:	60bb      	str	r3, [r7, #8]
 80075c8:	697a      	ldr	r2, [r7, #20]
 80075ca:	68bb      	ldr	r3, [r7, #8]
 80075cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80075d0:	607b      	str	r3, [r7, #4]
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	4618      	mov	r0, r3
 80075d6:	371c      	adds	r7, #28
 80075d8:	46bd      	mov	sp, r7
 80075da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075de:	4770      	bx	lr
 80075e0:	40021000 	.word	0x40021000
 80075e4:	016e3600 	.word	0x016e3600
 80075e8:	00f42400 	.word	0x00f42400

080075ec <HAL_RCCEx_PeriphCLKConfig>:
 80075ec:	b580      	push	{r7, lr}
 80075ee:	b086      	sub	sp, #24
 80075f0:	af00      	add	r7, sp, #0
 80075f2:	6078      	str	r0, [r7, #4]
 80075f4:	2300      	movs	r3, #0
 80075f6:	74fb      	strb	r3, [r7, #19]
 80075f8:	2300      	movs	r3, #0
 80075fa:	74bb      	strb	r3, [r7, #18]
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	681b      	ldr	r3, [r3, #0]
 8007600:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8007604:	2b00      	cmp	r3, #0
 8007606:	f000 8098 	beq.w	800773a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800760a:	2300      	movs	r3, #0
 800760c:	747b      	strb	r3, [r7, #17]
 800760e:	4b43      	ldr	r3, [pc, #268]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007610:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007612:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007616:	2b00      	cmp	r3, #0
 8007618:	d10d      	bne.n	8007636 <HAL_RCCEx_PeriphCLKConfig+0x4a>
 800761a:	4b40      	ldr	r3, [pc, #256]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800761c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800761e:	4a3f      	ldr	r2, [pc, #252]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007620:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007624:	6593      	str	r3, [r2, #88]	@ 0x58
 8007626:	4b3d      	ldr	r3, [pc, #244]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007628:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800762a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800762e:	60bb      	str	r3, [r7, #8]
 8007630:	68bb      	ldr	r3, [r7, #8]
 8007632:	2301      	movs	r3, #1
 8007634:	747b      	strb	r3, [r7, #17]
 8007636:	4b3a      	ldr	r3, [pc, #232]	@ (8007720 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8007638:	681b      	ldr	r3, [r3, #0]
 800763a:	4a39      	ldr	r2, [pc, #228]	@ (8007720 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 800763c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007640:	6013      	str	r3, [r2, #0]
 8007642:	f7fb f87b 	bl	800273c <HAL_GetTick>
 8007646:	60f8      	str	r0, [r7, #12]
 8007648:	e009      	b.n	800765e <HAL_RCCEx_PeriphCLKConfig+0x72>
 800764a:	f7fb f877 	bl	800273c <HAL_GetTick>
 800764e:	4602      	mov	r2, r0
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	1ad3      	subs	r3, r2, r3
 8007654:	2b02      	cmp	r3, #2
 8007656:	d902      	bls.n	800765e <HAL_RCCEx_PeriphCLKConfig+0x72>
 8007658:	2303      	movs	r3, #3
 800765a:	74fb      	strb	r3, [r7, #19]
 800765c:	e005      	b.n	800766a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800765e:	4b30      	ldr	r3, [pc, #192]	@ (8007720 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007666:	2b00      	cmp	r3, #0
 8007668:	d0ef      	beq.n	800764a <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800766a:	7cfb      	ldrb	r3, [r7, #19]
 800766c:	2b00      	cmp	r3, #0
 800766e:	d159      	bne.n	8007724 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8007670:	4b2a      	ldr	r3, [pc, #168]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007672:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007676:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800767a:	617b      	str	r3, [r7, #20]
 800767c:	697b      	ldr	r3, [r7, #20]
 800767e:	2b00      	cmp	r3, #0
 8007680:	d01e      	beq.n	80076c0 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007686:	697a      	ldr	r2, [r7, #20]
 8007688:	429a      	cmp	r2, r3
 800768a:	d019      	beq.n	80076c0 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 800768c:	4b23      	ldr	r3, [pc, #140]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800768e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007692:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007696:	617b      	str	r3, [r7, #20]
 8007698:	4b20      	ldr	r3, [pc, #128]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800769a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800769e:	4a1f      	ldr	r2, [pc, #124]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80076a0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80076a4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80076a8:	4b1c      	ldr	r3, [pc, #112]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80076aa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80076ae:	4a1b      	ldr	r2, [pc, #108]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80076b0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80076b4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80076b8:	4a18      	ldr	r2, [pc, #96]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80076ba:	697b      	ldr	r3, [r7, #20]
 80076bc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80076c0:	697b      	ldr	r3, [r7, #20]
 80076c2:	f003 0301 	and.w	r3, r3, #1
 80076c6:	2b00      	cmp	r3, #0
 80076c8:	d016      	beq.n	80076f8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80076ca:	f7fb f837 	bl	800273c <HAL_GetTick>
 80076ce:	60f8      	str	r0, [r7, #12]
 80076d0:	e00b      	b.n	80076ea <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80076d2:	f7fb f833 	bl	800273c <HAL_GetTick>
 80076d6:	4602      	mov	r2, r0
 80076d8:	68fb      	ldr	r3, [r7, #12]
 80076da:	1ad3      	subs	r3, r2, r3
 80076dc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80076e0:	4293      	cmp	r3, r2
 80076e2:	d902      	bls.n	80076ea <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80076e4:	2303      	movs	r3, #3
 80076e6:	74fb      	strb	r3, [r7, #19]
 80076e8:	e006      	b.n	80076f8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80076ea:	4b0c      	ldr	r3, [pc, #48]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80076ec:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80076f0:	f003 0302 	and.w	r3, r3, #2
 80076f4:	2b00      	cmp	r3, #0
 80076f6:	d0ec      	beq.n	80076d2 <HAL_RCCEx_PeriphCLKConfig+0xe6>
 80076f8:	7cfb      	ldrb	r3, [r7, #19]
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	d10b      	bne.n	8007716 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 80076fe:	4b07      	ldr	r3, [pc, #28]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007700:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007704:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800770c:	4903      	ldr	r1, [pc, #12]	@ (800771c <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800770e:	4313      	orrs	r3, r2
 8007710:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8007714:	e008      	b.n	8007728 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8007716:	7cfb      	ldrb	r3, [r7, #19]
 8007718:	74bb      	strb	r3, [r7, #18]
 800771a:	e005      	b.n	8007728 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 800771c:	40021000 	.word	0x40021000
 8007720:	40007000 	.word	0x40007000
 8007724:	7cfb      	ldrb	r3, [r7, #19]
 8007726:	74bb      	strb	r3, [r7, #18]
 8007728:	7c7b      	ldrb	r3, [r7, #17]
 800772a:	2b01      	cmp	r3, #1
 800772c:	d105      	bne.n	800773a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800772e:	4ba6      	ldr	r3, [pc, #664]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007730:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007732:	4aa5      	ldr	r2, [pc, #660]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007734:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007738:	6593      	str	r3, [r2, #88]	@ 0x58
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	681b      	ldr	r3, [r3, #0]
 800773e:	f003 0301 	and.w	r3, r3, #1
 8007742:	2b00      	cmp	r3, #0
 8007744:	d00a      	beq.n	800775c <HAL_RCCEx_PeriphCLKConfig+0x170>
 8007746:	4ba0      	ldr	r3, [pc, #640]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007748:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800774c:	f023 0203 	bic.w	r2, r3, #3
 8007750:	687b      	ldr	r3, [r7, #4]
 8007752:	685b      	ldr	r3, [r3, #4]
 8007754:	499c      	ldr	r1, [pc, #624]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007756:	4313      	orrs	r3, r2
 8007758:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	681b      	ldr	r3, [r3, #0]
 8007760:	f003 0302 	and.w	r3, r3, #2
 8007764:	2b00      	cmp	r3, #0
 8007766:	d00a      	beq.n	800777e <HAL_RCCEx_PeriphCLKConfig+0x192>
 8007768:	4b97      	ldr	r3, [pc, #604]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800776a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800776e:	f023 020c 	bic.w	r2, r3, #12
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	689b      	ldr	r3, [r3, #8]
 8007776:	4994      	ldr	r1, [pc, #592]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007778:	4313      	orrs	r3, r2
 800777a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	f003 0304 	and.w	r3, r3, #4
 8007786:	2b00      	cmp	r3, #0
 8007788:	d00a      	beq.n	80077a0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 800778a:	4b8f      	ldr	r3, [pc, #572]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800778c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007790:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	68db      	ldr	r3, [r3, #12]
 8007798:	498b      	ldr	r1, [pc, #556]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800779a:	4313      	orrs	r3, r2
 800779c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	681b      	ldr	r3, [r3, #0]
 80077a4:	f003 0308 	and.w	r3, r3, #8
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d00a      	beq.n	80077c2 <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 80077ac:	4b86      	ldr	r3, [pc, #536]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80077ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80077b2:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	691b      	ldr	r3, [r3, #16]
 80077ba:	4983      	ldr	r1, [pc, #524]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80077bc:	4313      	orrs	r3, r2
 80077be:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80077c2:	687b      	ldr	r3, [r7, #4]
 80077c4:	681b      	ldr	r3, [r3, #0]
 80077c6:	f003 0320 	and.w	r3, r3, #32
 80077ca:	2b00      	cmp	r3, #0
 80077cc:	d00a      	beq.n	80077e4 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 80077ce:	4b7e      	ldr	r3, [pc, #504]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80077d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80077d4:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80077d8:	687b      	ldr	r3, [r7, #4]
 80077da:	695b      	ldr	r3, [r3, #20]
 80077dc:	497a      	ldr	r1, [pc, #488]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80077de:	4313      	orrs	r3, r2
 80077e0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80077e4:	687b      	ldr	r3, [r7, #4]
 80077e6:	681b      	ldr	r3, [r3, #0]
 80077e8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	d00a      	beq.n	8007806 <HAL_RCCEx_PeriphCLKConfig+0x21a>
 80077f0:	4b75      	ldr	r3, [pc, #468]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80077f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80077f6:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	699b      	ldr	r3, [r3, #24]
 80077fe:	4972      	ldr	r1, [pc, #456]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007800:	4313      	orrs	r3, r2
 8007802:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	681b      	ldr	r3, [r3, #0]
 800780a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800780e:	2b00      	cmp	r3, #0
 8007810:	d00a      	beq.n	8007828 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007812:	4b6d      	ldr	r3, [pc, #436]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007814:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007818:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	69db      	ldr	r3, [r3, #28]
 8007820:	4969      	ldr	r1, [pc, #420]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007822:	4313      	orrs	r3, r2
 8007824:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007828:	687b      	ldr	r3, [r7, #4]
 800782a:	681b      	ldr	r3, [r3, #0]
 800782c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007830:	2b00      	cmp	r3, #0
 8007832:	d00a      	beq.n	800784a <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8007834:	4b64      	ldr	r3, [pc, #400]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007836:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800783a:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	6a1b      	ldr	r3, [r3, #32]
 8007842:	4961      	ldr	r1, [pc, #388]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007844:	4313      	orrs	r3, r2
 8007846:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	681b      	ldr	r3, [r3, #0]
 800784e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007852:	2b00      	cmp	r3, #0
 8007854:	d00a      	beq.n	800786c <HAL_RCCEx_PeriphCLKConfig+0x280>
 8007856:	4b5c      	ldr	r3, [pc, #368]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007858:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800785c:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007864:	4958      	ldr	r1, [pc, #352]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007866:	4313      	orrs	r3, r2
 8007868:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	681b      	ldr	r3, [r3, #0]
 8007870:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007874:	2b00      	cmp	r3, #0
 8007876:	d015      	beq.n	80078a4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8007878:	4b53      	ldr	r3, [pc, #332]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800787a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800787e:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007886:	4950      	ldr	r1, [pc, #320]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007888:	4313      	orrs	r3, r2
 800788a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007892:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007896:	d105      	bne.n	80078a4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8007898:	4b4b      	ldr	r3, [pc, #300]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800789a:	68db      	ldr	r3, [r3, #12]
 800789c:	4a4a      	ldr	r2, [pc, #296]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800789e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80078a2:	60d3      	str	r3, [r2, #12]
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80078ac:	2b00      	cmp	r3, #0
 80078ae:	d015      	beq.n	80078dc <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80078b0:	4b45      	ldr	r3, [pc, #276]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80078b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80078b6:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80078be:	4942      	ldr	r1, [pc, #264]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80078c0:	4313      	orrs	r3, r2
 80078c2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80078ca:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80078ce:	d105      	bne.n	80078dc <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 80078d0:	4b3d      	ldr	r3, [pc, #244]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80078d2:	68db      	ldr	r3, [r3, #12]
 80078d4:	4a3c      	ldr	r2, [pc, #240]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80078d6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80078da:	60d3      	str	r3, [r2, #12]
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80078e4:	2b00      	cmp	r3, #0
 80078e6:	d015      	beq.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x328>
 80078e8:	4b37      	ldr	r3, [pc, #220]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80078ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80078ee:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80078f6:	4934      	ldr	r1, [pc, #208]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80078f8:	4313      	orrs	r3, r2
 80078fa:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007902:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007906:	d105      	bne.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8007908:	4b2f      	ldr	r3, [pc, #188]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800790a:	68db      	ldr	r3, [r3, #12]
 800790c:	4a2e      	ldr	r2, [pc, #184]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800790e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007912:	60d3      	str	r3, [r2, #12]
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	681b      	ldr	r3, [r3, #0]
 8007918:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800791c:	2b00      	cmp	r3, #0
 800791e:	d015      	beq.n	800794c <HAL_RCCEx_PeriphCLKConfig+0x360>
 8007920:	4b29      	ldr	r3, [pc, #164]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007922:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007926:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800792e:	4926      	ldr	r1, [pc, #152]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007930:	4313      	orrs	r3, r2
 8007932:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800793a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800793e:	d105      	bne.n	800794c <HAL_RCCEx_PeriphCLKConfig+0x360>
 8007940:	4b21      	ldr	r3, [pc, #132]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007942:	68db      	ldr	r3, [r3, #12]
 8007944:	4a20      	ldr	r2, [pc, #128]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007946:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800794a:	60d3      	str	r3, [r2, #12]
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	681b      	ldr	r3, [r3, #0]
 8007950:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8007954:	2b00      	cmp	r3, #0
 8007956:	d015      	beq.n	8007984 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007958:	4b1b      	ldr	r3, [pc, #108]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800795a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800795e:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8007962:	687b      	ldr	r3, [r7, #4]
 8007964:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007966:	4918      	ldr	r1, [pc, #96]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007968:	4313      	orrs	r3, r2
 800796a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007972:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007976:	d105      	bne.n	8007984 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007978:	4b13      	ldr	r3, [pc, #76]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800797a:	68db      	ldr	r3, [r3, #12]
 800797c:	4a12      	ldr	r2, [pc, #72]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 800797e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007982:	60d3      	str	r3, [r2, #12]
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	681b      	ldr	r3, [r3, #0]
 8007988:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800798c:	2b00      	cmp	r3, #0
 800798e:	d015      	beq.n	80079bc <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8007990:	4b0d      	ldr	r3, [pc, #52]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 8007992:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007996:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800799e:	490a      	ldr	r1, [pc, #40]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80079a0:	4313      	orrs	r3, r2
 80079a2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80079a6:	687b      	ldr	r3, [r7, #4]
 80079a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80079aa:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80079ae:	d105      	bne.n	80079bc <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 80079b0:	4b05      	ldr	r3, [pc, #20]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80079b2:	68db      	ldr	r3, [r3, #12]
 80079b4:	4a04      	ldr	r2, [pc, #16]	@ (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x3dc>)
 80079b6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80079ba:	60d3      	str	r3, [r2, #12]
 80079bc:	7cbb      	ldrb	r3, [r7, #18]
 80079be:	4618      	mov	r0, r3
 80079c0:	3718      	adds	r7, #24
 80079c2:	46bd      	mov	sp, r7
 80079c4:	bd80      	pop	{r7, pc}
 80079c6:	bf00      	nop
 80079c8:	40021000 	.word	0x40021000

080079cc <HAL_SPI_Init>:
 80079cc:	b580      	push	{r7, lr}
 80079ce:	b084      	sub	sp, #16
 80079d0:	af00      	add	r7, sp, #0
 80079d2:	6078      	str	r0, [r7, #4]
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	2b00      	cmp	r3, #0
 80079d8:	d101      	bne.n	80079de <HAL_SPI_Init+0x12>
 80079da:	2301      	movs	r3, #1
 80079dc:	e09d      	b.n	8007b1a <HAL_SPI_Init+0x14e>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80079e2:	2b00      	cmp	r3, #0
 80079e4:	d108      	bne.n	80079f8 <HAL_SPI_Init+0x2c>
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	685b      	ldr	r3, [r3, #4]
 80079ea:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80079ee:	d009      	beq.n	8007a04 <HAL_SPI_Init+0x38>
 80079f0:	687b      	ldr	r3, [r7, #4]
 80079f2:	2200      	movs	r2, #0
 80079f4:	61da      	str	r2, [r3, #28]
 80079f6:	e005      	b.n	8007a04 <HAL_SPI_Init+0x38>
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	2200      	movs	r2, #0
 80079fc:	611a      	str	r2, [r3, #16]
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	2200      	movs	r2, #0
 8007a02:	615a      	str	r2, [r3, #20]
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	2200      	movs	r2, #0
 8007a08:	629a      	str	r2, [r3, #40]	@ 0x28
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8007a10:	b2db      	uxtb	r3, r3
 8007a12:	2b00      	cmp	r3, #0
 8007a14:	d106      	bne.n	8007a24 <HAL_SPI_Init+0x58>
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	2200      	movs	r2, #0
 8007a1a:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8007a1e:	6878      	ldr	r0, [r7, #4]
 8007a20:	f7fa f932 	bl	8001c88 <HAL_SPI_MspInit>
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	2202      	movs	r2, #2
 8007a28:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8007a2c:	687b      	ldr	r3, [r7, #4]
 8007a2e:	681b      	ldr	r3, [r3, #0]
 8007a30:	681a      	ldr	r2, [r3, #0]
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	681b      	ldr	r3, [r3, #0]
 8007a36:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007a3a:	601a      	str	r2, [r3, #0]
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	68db      	ldr	r3, [r3, #12]
 8007a40:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8007a44:	d902      	bls.n	8007a4c <HAL_SPI_Init+0x80>
 8007a46:	2300      	movs	r3, #0
 8007a48:	60fb      	str	r3, [r7, #12]
 8007a4a:	e002      	b.n	8007a52 <HAL_SPI_Init+0x86>
 8007a4c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8007a50:	60fb      	str	r3, [r7, #12]
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	68db      	ldr	r3, [r3, #12]
 8007a56:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 8007a5a:	d007      	beq.n	8007a6c <HAL_SPI_Init+0xa0>
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	68db      	ldr	r3, [r3, #12]
 8007a60:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8007a64:	d002      	beq.n	8007a6c <HAL_SPI_Init+0xa0>
 8007a66:	687b      	ldr	r3, [r7, #4]
 8007a68:	2200      	movs	r2, #0
 8007a6a:	629a      	str	r2, [r3, #40]	@ 0x28
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	685b      	ldr	r3, [r3, #4]
 8007a70:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	689b      	ldr	r3, [r3, #8]
 8007a78:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8007a7c:	431a      	orrs	r2, r3
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	691b      	ldr	r3, [r3, #16]
 8007a82:	f003 0302 	and.w	r3, r3, #2
 8007a86:	431a      	orrs	r2, r3
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	695b      	ldr	r3, [r3, #20]
 8007a8c:	f003 0301 	and.w	r3, r3, #1
 8007a90:	431a      	orrs	r2, r3
 8007a92:	687b      	ldr	r3, [r7, #4]
 8007a94:	699b      	ldr	r3, [r3, #24]
 8007a96:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007a9a:	431a      	orrs	r2, r3
 8007a9c:	687b      	ldr	r3, [r7, #4]
 8007a9e:	69db      	ldr	r3, [r3, #28]
 8007aa0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8007aa4:	431a      	orrs	r2, r3
 8007aa6:	687b      	ldr	r3, [r7, #4]
 8007aa8:	6a1b      	ldr	r3, [r3, #32]
 8007aaa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007aae:	ea42 0103 	orr.w	r1, r2, r3
 8007ab2:	687b      	ldr	r3, [r7, #4]
 8007ab4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007ab6:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	681b      	ldr	r3, [r3, #0]
 8007abe:	430a      	orrs	r2, r1
 8007ac0:	601a      	str	r2, [r3, #0]
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	699b      	ldr	r3, [r3, #24]
 8007ac6:	0c1b      	lsrs	r3, r3, #16
 8007ac8:	f003 0204 	and.w	r2, r3, #4
 8007acc:	687b      	ldr	r3, [r7, #4]
 8007ace:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007ad0:	f003 0310 	and.w	r3, r3, #16
 8007ad4:	431a      	orrs	r2, r3
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007ada:	f003 0308 	and.w	r3, r3, #8
 8007ade:	431a      	orrs	r2, r3
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	68db      	ldr	r3, [r3, #12]
 8007ae4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8007ae8:	ea42 0103 	orr.w	r1, r2, r3
 8007aec:	68fb      	ldr	r3, [r7, #12]
 8007aee:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	681b      	ldr	r3, [r3, #0]
 8007af6:	430a      	orrs	r2, r1
 8007af8:	605a      	str	r2, [r3, #4]
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	69da      	ldr	r2, [r3, #28]
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007b08:	61da      	str	r2, [r3, #28]
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	2200      	movs	r2, #0
 8007b0e:	661a      	str	r2, [r3, #96]	@ 0x60
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	2201      	movs	r2, #1
 8007b14:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8007b18:	2300      	movs	r3, #0
 8007b1a:	4618      	mov	r0, r3
 8007b1c:	3710      	adds	r7, #16
 8007b1e:	46bd      	mov	sp, r7
 8007b20:	bd80      	pop	{r7, pc}

08007b22 <HAL_SPI_TransmitReceive>:
 8007b22:	b580      	push	{r7, lr}
 8007b24:	b08a      	sub	sp, #40	@ 0x28
 8007b26:	af00      	add	r7, sp, #0
 8007b28:	60f8      	str	r0, [r7, #12]
 8007b2a:	60b9      	str	r1, [r7, #8]
 8007b2c:	607a      	str	r2, [r7, #4]
 8007b2e:	807b      	strh	r3, [r7, #2]
 8007b30:	2301      	movs	r3, #1
 8007b32:	627b      	str	r3, [r7, #36]	@ 0x24
 8007b34:	2300      	movs	r3, #0
 8007b36:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007b3a:	68fb      	ldr	r3, [r7, #12]
 8007b3c:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8007b40:	2b01      	cmp	r3, #1
 8007b42:	d101      	bne.n	8007b48 <HAL_SPI_TransmitReceive+0x26>
 8007b44:	2302      	movs	r3, #2
 8007b46:	e20a      	b.n	8007f5e <HAL_SPI_TransmitReceive+0x43c>
 8007b48:	68fb      	ldr	r3, [r7, #12]
 8007b4a:	2201      	movs	r2, #1
 8007b4c:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8007b50:	f7fa fdf4 	bl	800273c <HAL_GetTick>
 8007b54:	61f8      	str	r0, [r7, #28]
 8007b56:	68fb      	ldr	r3, [r7, #12]
 8007b58:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8007b5c:	76fb      	strb	r3, [r7, #27]
 8007b5e:	68fb      	ldr	r3, [r7, #12]
 8007b60:	685b      	ldr	r3, [r3, #4]
 8007b62:	617b      	str	r3, [r7, #20]
 8007b64:	887b      	ldrh	r3, [r7, #2]
 8007b66:	827b      	strh	r3, [r7, #18]
 8007b68:	887b      	ldrh	r3, [r7, #2]
 8007b6a:	823b      	strh	r3, [r7, #16]
 8007b6c:	7efb      	ldrb	r3, [r7, #27]
 8007b6e:	2b01      	cmp	r3, #1
 8007b70:	d00e      	beq.n	8007b90 <HAL_SPI_TransmitReceive+0x6e>
 8007b72:	697b      	ldr	r3, [r7, #20]
 8007b74:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007b78:	d106      	bne.n	8007b88 <HAL_SPI_TransmitReceive+0x66>
 8007b7a:	68fb      	ldr	r3, [r7, #12]
 8007b7c:	689b      	ldr	r3, [r3, #8]
 8007b7e:	2b00      	cmp	r3, #0
 8007b80:	d102      	bne.n	8007b88 <HAL_SPI_TransmitReceive+0x66>
 8007b82:	7efb      	ldrb	r3, [r7, #27]
 8007b84:	2b04      	cmp	r3, #4
 8007b86:	d003      	beq.n	8007b90 <HAL_SPI_TransmitReceive+0x6e>
 8007b88:	2302      	movs	r3, #2
 8007b8a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007b8e:	e1e0      	b.n	8007f52 <HAL_SPI_TransmitReceive+0x430>
 8007b90:	68bb      	ldr	r3, [r7, #8]
 8007b92:	2b00      	cmp	r3, #0
 8007b94:	d005      	beq.n	8007ba2 <HAL_SPI_TransmitReceive+0x80>
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	2b00      	cmp	r3, #0
 8007b9a:	d002      	beq.n	8007ba2 <HAL_SPI_TransmitReceive+0x80>
 8007b9c:	887b      	ldrh	r3, [r7, #2]
 8007b9e:	2b00      	cmp	r3, #0
 8007ba0:	d103      	bne.n	8007baa <HAL_SPI_TransmitReceive+0x88>
 8007ba2:	2301      	movs	r3, #1
 8007ba4:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007ba8:	e1d3      	b.n	8007f52 <HAL_SPI_TransmitReceive+0x430>
 8007baa:	68fb      	ldr	r3, [r7, #12]
 8007bac:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8007bb0:	b2db      	uxtb	r3, r3
 8007bb2:	2b04      	cmp	r3, #4
 8007bb4:	d003      	beq.n	8007bbe <HAL_SPI_TransmitReceive+0x9c>
 8007bb6:	68fb      	ldr	r3, [r7, #12]
 8007bb8:	2205      	movs	r2, #5
 8007bba:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8007bbe:	68fb      	ldr	r3, [r7, #12]
 8007bc0:	2200      	movs	r2, #0
 8007bc2:	661a      	str	r2, [r3, #96]	@ 0x60
 8007bc4:	68fb      	ldr	r3, [r7, #12]
 8007bc6:	687a      	ldr	r2, [r7, #4]
 8007bc8:	641a      	str	r2, [r3, #64]	@ 0x40
 8007bca:	68fb      	ldr	r3, [r7, #12]
 8007bcc:	887a      	ldrh	r2, [r7, #2]
 8007bce:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8007bd2:	68fb      	ldr	r3, [r7, #12]
 8007bd4:	887a      	ldrh	r2, [r7, #2]
 8007bd6:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8007bda:	68fb      	ldr	r3, [r7, #12]
 8007bdc:	68ba      	ldr	r2, [r7, #8]
 8007bde:	639a      	str	r2, [r3, #56]	@ 0x38
 8007be0:	68fb      	ldr	r3, [r7, #12]
 8007be2:	887a      	ldrh	r2, [r7, #2]
 8007be4:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	887a      	ldrh	r2, [r7, #2]
 8007bea:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8007bec:	68fb      	ldr	r3, [r7, #12]
 8007bee:	2200      	movs	r2, #0
 8007bf0:	64da      	str	r2, [r3, #76]	@ 0x4c
 8007bf2:	68fb      	ldr	r3, [r7, #12]
 8007bf4:	2200      	movs	r2, #0
 8007bf6:	651a      	str	r2, [r3, #80]	@ 0x50
 8007bf8:	68fb      	ldr	r3, [r7, #12]
 8007bfa:	68db      	ldr	r3, [r3, #12]
 8007bfc:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8007c00:	d802      	bhi.n	8007c08 <HAL_SPI_TransmitReceive+0xe6>
 8007c02:	8a3b      	ldrh	r3, [r7, #16]
 8007c04:	2b01      	cmp	r3, #1
 8007c06:	d908      	bls.n	8007c1a <HAL_SPI_TransmitReceive+0xf8>
 8007c08:	68fb      	ldr	r3, [r7, #12]
 8007c0a:	681b      	ldr	r3, [r3, #0]
 8007c0c:	685a      	ldr	r2, [r3, #4]
 8007c0e:	68fb      	ldr	r3, [r7, #12]
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8007c16:	605a      	str	r2, [r3, #4]
 8007c18:	e007      	b.n	8007c2a <HAL_SPI_TransmitReceive+0x108>
 8007c1a:	68fb      	ldr	r3, [r7, #12]
 8007c1c:	681b      	ldr	r3, [r3, #0]
 8007c1e:	685a      	ldr	r2, [r3, #4]
 8007c20:	68fb      	ldr	r3, [r7, #12]
 8007c22:	681b      	ldr	r3, [r3, #0]
 8007c24:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8007c28:	605a      	str	r2, [r3, #4]
 8007c2a:	68fb      	ldr	r3, [r7, #12]
 8007c2c:	681b      	ldr	r3, [r3, #0]
 8007c2e:	681b      	ldr	r3, [r3, #0]
 8007c30:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007c34:	2b40      	cmp	r3, #64	@ 0x40
 8007c36:	d007      	beq.n	8007c48 <HAL_SPI_TransmitReceive+0x126>
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	681a      	ldr	r2, [r3, #0]
 8007c3e:	68fb      	ldr	r3, [r7, #12]
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007c46:	601a      	str	r2, [r3, #0]
 8007c48:	68fb      	ldr	r3, [r7, #12]
 8007c4a:	68db      	ldr	r3, [r3, #12]
 8007c4c:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8007c50:	f240 8081 	bls.w	8007d56 <HAL_SPI_TransmitReceive+0x234>
 8007c54:	68fb      	ldr	r3, [r7, #12]
 8007c56:	685b      	ldr	r3, [r3, #4]
 8007c58:	2b00      	cmp	r3, #0
 8007c5a:	d002      	beq.n	8007c62 <HAL_SPI_TransmitReceive+0x140>
 8007c5c:	8a7b      	ldrh	r3, [r7, #18]
 8007c5e:	2b01      	cmp	r3, #1
 8007c60:	d16d      	bne.n	8007d3e <HAL_SPI_TransmitReceive+0x21c>
 8007c62:	68fb      	ldr	r3, [r7, #12]
 8007c64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007c66:	881a      	ldrh	r2, [r3, #0]
 8007c68:	68fb      	ldr	r3, [r7, #12]
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	60da      	str	r2, [r3, #12]
 8007c6e:	68fb      	ldr	r3, [r7, #12]
 8007c70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007c72:	1c9a      	adds	r2, r3, #2
 8007c74:	68fb      	ldr	r3, [r7, #12]
 8007c76:	639a      	str	r2, [r3, #56]	@ 0x38
 8007c78:	68fb      	ldr	r3, [r7, #12]
 8007c7a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007c7c:	b29b      	uxth	r3, r3
 8007c7e:	3b01      	subs	r3, #1
 8007c80:	b29a      	uxth	r2, r3
 8007c82:	68fb      	ldr	r3, [r7, #12]
 8007c84:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007c86:	e05a      	b.n	8007d3e <HAL_SPI_TransmitReceive+0x21c>
 8007c88:	68fb      	ldr	r3, [r7, #12]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	689b      	ldr	r3, [r3, #8]
 8007c8e:	f003 0302 	and.w	r3, r3, #2
 8007c92:	2b02      	cmp	r3, #2
 8007c94:	d11b      	bne.n	8007cce <HAL_SPI_TransmitReceive+0x1ac>
 8007c96:	68fb      	ldr	r3, [r7, #12]
 8007c98:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007c9a:	b29b      	uxth	r3, r3
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	d016      	beq.n	8007cce <HAL_SPI_TransmitReceive+0x1ac>
 8007ca0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007ca2:	2b01      	cmp	r3, #1
 8007ca4:	d113      	bne.n	8007cce <HAL_SPI_TransmitReceive+0x1ac>
 8007ca6:	68fb      	ldr	r3, [r7, #12]
 8007ca8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007caa:	881a      	ldrh	r2, [r3, #0]
 8007cac:	68fb      	ldr	r3, [r7, #12]
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	60da      	str	r2, [r3, #12]
 8007cb2:	68fb      	ldr	r3, [r7, #12]
 8007cb4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007cb6:	1c9a      	adds	r2, r3, #2
 8007cb8:	68fb      	ldr	r3, [r7, #12]
 8007cba:	639a      	str	r2, [r3, #56]	@ 0x38
 8007cbc:	68fb      	ldr	r3, [r7, #12]
 8007cbe:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007cc0:	b29b      	uxth	r3, r3
 8007cc2:	3b01      	subs	r3, #1
 8007cc4:	b29a      	uxth	r2, r3
 8007cc6:	68fb      	ldr	r3, [r7, #12]
 8007cc8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007cca:	2300      	movs	r3, #0
 8007ccc:	627b      	str	r3, [r7, #36]	@ 0x24
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	681b      	ldr	r3, [r3, #0]
 8007cd2:	689b      	ldr	r3, [r3, #8]
 8007cd4:	f003 0301 	and.w	r3, r3, #1
 8007cd8:	2b01      	cmp	r3, #1
 8007cda:	d11c      	bne.n	8007d16 <HAL_SPI_TransmitReceive+0x1f4>
 8007cdc:	68fb      	ldr	r3, [r7, #12]
 8007cde:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007ce2:	b29b      	uxth	r3, r3
 8007ce4:	2b00      	cmp	r3, #0
 8007ce6:	d016      	beq.n	8007d16 <HAL_SPI_TransmitReceive+0x1f4>
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	68da      	ldr	r2, [r3, #12]
 8007cee:	68fb      	ldr	r3, [r7, #12]
 8007cf0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007cf2:	b292      	uxth	r2, r2
 8007cf4:	801a      	strh	r2, [r3, #0]
 8007cf6:	68fb      	ldr	r3, [r7, #12]
 8007cf8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007cfa:	1c9a      	adds	r2, r3, #2
 8007cfc:	68fb      	ldr	r3, [r7, #12]
 8007cfe:	641a      	str	r2, [r3, #64]	@ 0x40
 8007d00:	68fb      	ldr	r3, [r7, #12]
 8007d02:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007d06:	b29b      	uxth	r3, r3
 8007d08:	3b01      	subs	r3, #1
 8007d0a:	b29a      	uxth	r2, r3
 8007d0c:	68fb      	ldr	r3, [r7, #12]
 8007d0e:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8007d12:	2301      	movs	r3, #1
 8007d14:	627b      	str	r3, [r7, #36]	@ 0x24
 8007d16:	f7fa fd11 	bl	800273c <HAL_GetTick>
 8007d1a:	4602      	mov	r2, r0
 8007d1c:	69fb      	ldr	r3, [r7, #28]
 8007d1e:	1ad3      	subs	r3, r2, r3
 8007d20:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007d22:	429a      	cmp	r2, r3
 8007d24:	d80b      	bhi.n	8007d3e <HAL_SPI_TransmitReceive+0x21c>
 8007d26:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007d28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007d2c:	d007      	beq.n	8007d3e <HAL_SPI_TransmitReceive+0x21c>
 8007d2e:	2303      	movs	r3, #3
 8007d30:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007d34:	68fb      	ldr	r3, [r7, #12]
 8007d36:	2201      	movs	r2, #1
 8007d38:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8007d3c:	e109      	b.n	8007f52 <HAL_SPI_TransmitReceive+0x430>
 8007d3e:	68fb      	ldr	r3, [r7, #12]
 8007d40:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007d42:	b29b      	uxth	r3, r3
 8007d44:	2b00      	cmp	r3, #0
 8007d46:	d19f      	bne.n	8007c88 <HAL_SPI_TransmitReceive+0x166>
 8007d48:	68fb      	ldr	r3, [r7, #12]
 8007d4a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007d4e:	b29b      	uxth	r3, r3
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d199      	bne.n	8007c88 <HAL_SPI_TransmitReceive+0x166>
 8007d54:	e0e3      	b.n	8007f1e <HAL_SPI_TransmitReceive+0x3fc>
 8007d56:	68fb      	ldr	r3, [r7, #12]
 8007d58:	685b      	ldr	r3, [r3, #4]
 8007d5a:	2b00      	cmp	r3, #0
 8007d5c:	d003      	beq.n	8007d66 <HAL_SPI_TransmitReceive+0x244>
 8007d5e:	8a7b      	ldrh	r3, [r7, #18]
 8007d60:	2b01      	cmp	r3, #1
 8007d62:	f040 80cf 	bne.w	8007f04 <HAL_SPI_TransmitReceive+0x3e2>
 8007d66:	68fb      	ldr	r3, [r7, #12]
 8007d68:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007d6a:	b29b      	uxth	r3, r3
 8007d6c:	2b01      	cmp	r3, #1
 8007d6e:	d912      	bls.n	8007d96 <HAL_SPI_TransmitReceive+0x274>
 8007d70:	68fb      	ldr	r3, [r7, #12]
 8007d72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007d74:	881a      	ldrh	r2, [r3, #0]
 8007d76:	68fb      	ldr	r3, [r7, #12]
 8007d78:	681b      	ldr	r3, [r3, #0]
 8007d7a:	60da      	str	r2, [r3, #12]
 8007d7c:	68fb      	ldr	r3, [r7, #12]
 8007d7e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007d80:	1c9a      	adds	r2, r3, #2
 8007d82:	68fb      	ldr	r3, [r7, #12]
 8007d84:	639a      	str	r2, [r3, #56]	@ 0x38
 8007d86:	68fb      	ldr	r3, [r7, #12]
 8007d88:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007d8a:	b29b      	uxth	r3, r3
 8007d8c:	3b02      	subs	r3, #2
 8007d8e:	b29a      	uxth	r2, r3
 8007d90:	68fb      	ldr	r3, [r7, #12]
 8007d92:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007d94:	e0b6      	b.n	8007f04 <HAL_SPI_TransmitReceive+0x3e2>
 8007d96:	68fb      	ldr	r3, [r7, #12]
 8007d98:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007d9a:	68fb      	ldr	r3, [r7, #12]
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	330c      	adds	r3, #12
 8007da0:	7812      	ldrb	r2, [r2, #0]
 8007da2:	701a      	strb	r2, [r3, #0]
 8007da4:	68fb      	ldr	r3, [r7, #12]
 8007da6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007da8:	1c5a      	adds	r2, r3, #1
 8007daa:	68fb      	ldr	r3, [r7, #12]
 8007dac:	639a      	str	r2, [r3, #56]	@ 0x38
 8007dae:	68fb      	ldr	r3, [r7, #12]
 8007db0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007db2:	b29b      	uxth	r3, r3
 8007db4:	3b01      	subs	r3, #1
 8007db6:	b29a      	uxth	r2, r3
 8007db8:	68fb      	ldr	r3, [r7, #12]
 8007dba:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007dbc:	e0a2      	b.n	8007f04 <HAL_SPI_TransmitReceive+0x3e2>
 8007dbe:	68fb      	ldr	r3, [r7, #12]
 8007dc0:	681b      	ldr	r3, [r3, #0]
 8007dc2:	689b      	ldr	r3, [r3, #8]
 8007dc4:	f003 0302 	and.w	r3, r3, #2
 8007dc8:	2b02      	cmp	r3, #2
 8007dca:	d134      	bne.n	8007e36 <HAL_SPI_TransmitReceive+0x314>
 8007dcc:	68fb      	ldr	r3, [r7, #12]
 8007dce:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007dd0:	b29b      	uxth	r3, r3
 8007dd2:	2b00      	cmp	r3, #0
 8007dd4:	d02f      	beq.n	8007e36 <HAL_SPI_TransmitReceive+0x314>
 8007dd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007dd8:	2b01      	cmp	r3, #1
 8007dda:	d12c      	bne.n	8007e36 <HAL_SPI_TransmitReceive+0x314>
 8007ddc:	68fb      	ldr	r3, [r7, #12]
 8007dde:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007de0:	b29b      	uxth	r3, r3
 8007de2:	2b01      	cmp	r3, #1
 8007de4:	d912      	bls.n	8007e0c <HAL_SPI_TransmitReceive+0x2ea>
 8007de6:	68fb      	ldr	r3, [r7, #12]
 8007de8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007dea:	881a      	ldrh	r2, [r3, #0]
 8007dec:	68fb      	ldr	r3, [r7, #12]
 8007dee:	681b      	ldr	r3, [r3, #0]
 8007df0:	60da      	str	r2, [r3, #12]
 8007df2:	68fb      	ldr	r3, [r7, #12]
 8007df4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007df6:	1c9a      	adds	r2, r3, #2
 8007df8:	68fb      	ldr	r3, [r7, #12]
 8007dfa:	639a      	str	r2, [r3, #56]	@ 0x38
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007e00:	b29b      	uxth	r3, r3
 8007e02:	3b02      	subs	r3, #2
 8007e04:	b29a      	uxth	r2, r3
 8007e06:	68fb      	ldr	r3, [r7, #12]
 8007e08:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007e0a:	e012      	b.n	8007e32 <HAL_SPI_TransmitReceive+0x310>
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007e10:	68fb      	ldr	r3, [r7, #12]
 8007e12:	681b      	ldr	r3, [r3, #0]
 8007e14:	330c      	adds	r3, #12
 8007e16:	7812      	ldrb	r2, [r2, #0]
 8007e18:	701a      	strb	r2, [r3, #0]
 8007e1a:	68fb      	ldr	r3, [r7, #12]
 8007e1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007e1e:	1c5a      	adds	r2, r3, #1
 8007e20:	68fb      	ldr	r3, [r7, #12]
 8007e22:	639a      	str	r2, [r3, #56]	@ 0x38
 8007e24:	68fb      	ldr	r3, [r7, #12]
 8007e26:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007e28:	b29b      	uxth	r3, r3
 8007e2a:	3b01      	subs	r3, #1
 8007e2c:	b29a      	uxth	r2, r3
 8007e2e:	68fb      	ldr	r3, [r7, #12]
 8007e30:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007e32:	2300      	movs	r3, #0
 8007e34:	627b      	str	r3, [r7, #36]	@ 0x24
 8007e36:	68fb      	ldr	r3, [r7, #12]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	689b      	ldr	r3, [r3, #8]
 8007e3c:	f003 0301 	and.w	r3, r3, #1
 8007e40:	2b01      	cmp	r3, #1
 8007e42:	d148      	bne.n	8007ed6 <HAL_SPI_TransmitReceive+0x3b4>
 8007e44:	68fb      	ldr	r3, [r7, #12]
 8007e46:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007e4a:	b29b      	uxth	r3, r3
 8007e4c:	2b00      	cmp	r3, #0
 8007e4e:	d042      	beq.n	8007ed6 <HAL_SPI_TransmitReceive+0x3b4>
 8007e50:	68fb      	ldr	r3, [r7, #12]
 8007e52:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007e56:	b29b      	uxth	r3, r3
 8007e58:	2b01      	cmp	r3, #1
 8007e5a:	d923      	bls.n	8007ea4 <HAL_SPI_TransmitReceive+0x382>
 8007e5c:	68fb      	ldr	r3, [r7, #12]
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	68da      	ldr	r2, [r3, #12]
 8007e62:	68fb      	ldr	r3, [r7, #12]
 8007e64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007e66:	b292      	uxth	r2, r2
 8007e68:	801a      	strh	r2, [r3, #0]
 8007e6a:	68fb      	ldr	r3, [r7, #12]
 8007e6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007e6e:	1c9a      	adds	r2, r3, #2
 8007e70:	68fb      	ldr	r3, [r7, #12]
 8007e72:	641a      	str	r2, [r3, #64]	@ 0x40
 8007e74:	68fb      	ldr	r3, [r7, #12]
 8007e76:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007e7a:	b29b      	uxth	r3, r3
 8007e7c:	3b02      	subs	r3, #2
 8007e7e:	b29a      	uxth	r2, r3
 8007e80:	68fb      	ldr	r3, [r7, #12]
 8007e82:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8007e86:	68fb      	ldr	r3, [r7, #12]
 8007e88:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007e8c:	b29b      	uxth	r3, r3
 8007e8e:	2b01      	cmp	r3, #1
 8007e90:	d81f      	bhi.n	8007ed2 <HAL_SPI_TransmitReceive+0x3b0>
 8007e92:	68fb      	ldr	r3, [r7, #12]
 8007e94:	681b      	ldr	r3, [r3, #0]
 8007e96:	685a      	ldr	r2, [r3, #4]
 8007e98:	68fb      	ldr	r3, [r7, #12]
 8007e9a:	681b      	ldr	r3, [r3, #0]
 8007e9c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8007ea0:	605a      	str	r2, [r3, #4]
 8007ea2:	e016      	b.n	8007ed2 <HAL_SPI_TransmitReceive+0x3b0>
 8007ea4:	68fb      	ldr	r3, [r7, #12]
 8007ea6:	681b      	ldr	r3, [r3, #0]
 8007ea8:	f103 020c 	add.w	r2, r3, #12
 8007eac:	68fb      	ldr	r3, [r7, #12]
 8007eae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007eb0:	7812      	ldrb	r2, [r2, #0]
 8007eb2:	b2d2      	uxtb	r2, r2
 8007eb4:	701a      	strb	r2, [r3, #0]
 8007eb6:	68fb      	ldr	r3, [r7, #12]
 8007eb8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007eba:	1c5a      	adds	r2, r3, #1
 8007ebc:	68fb      	ldr	r3, [r7, #12]
 8007ebe:	641a      	str	r2, [r3, #64]	@ 0x40
 8007ec0:	68fb      	ldr	r3, [r7, #12]
 8007ec2:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007ec6:	b29b      	uxth	r3, r3
 8007ec8:	3b01      	subs	r3, #1
 8007eca:	b29a      	uxth	r2, r3
 8007ecc:	68fb      	ldr	r3, [r7, #12]
 8007ece:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8007ed2:	2301      	movs	r3, #1
 8007ed4:	627b      	str	r3, [r7, #36]	@ 0x24
 8007ed6:	f7fa fc31 	bl	800273c <HAL_GetTick>
 8007eda:	4602      	mov	r2, r0
 8007edc:	69fb      	ldr	r3, [r7, #28]
 8007ede:	1ad3      	subs	r3, r2, r3
 8007ee0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007ee2:	429a      	cmp	r2, r3
 8007ee4:	d803      	bhi.n	8007eee <HAL_SPI_TransmitReceive+0x3cc>
 8007ee6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007ee8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007eec:	d102      	bne.n	8007ef4 <HAL_SPI_TransmitReceive+0x3d2>
 8007eee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007ef0:	2b00      	cmp	r3, #0
 8007ef2:	d107      	bne.n	8007f04 <HAL_SPI_TransmitReceive+0x3e2>
 8007ef4:	2303      	movs	r3, #3
 8007ef6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	2201      	movs	r2, #1
 8007efe:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8007f02:	e026      	b.n	8007f52 <HAL_SPI_TransmitReceive+0x430>
 8007f04:	68fb      	ldr	r3, [r7, #12]
 8007f06:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007f08:	b29b      	uxth	r3, r3
 8007f0a:	2b00      	cmp	r3, #0
 8007f0c:	f47f af57 	bne.w	8007dbe <HAL_SPI_TransmitReceive+0x29c>
 8007f10:	68fb      	ldr	r3, [r7, #12]
 8007f12:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007f16:	b29b      	uxth	r3, r3
 8007f18:	2b00      	cmp	r3, #0
 8007f1a:	f47f af50 	bne.w	8007dbe <HAL_SPI_TransmitReceive+0x29c>
 8007f1e:	69fa      	ldr	r2, [r7, #28]
 8007f20:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8007f22:	68f8      	ldr	r0, [r7, #12]
 8007f24:	f000 f94c 	bl	80081c0 <SPI_EndRxTxTransaction>
 8007f28:	4603      	mov	r3, r0
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	d005      	beq.n	8007f3a <HAL_SPI_TransmitReceive+0x418>
 8007f2e:	2301      	movs	r3, #1
 8007f30:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007f34:	68fb      	ldr	r3, [r7, #12]
 8007f36:	2220      	movs	r2, #32
 8007f38:	661a      	str	r2, [r3, #96]	@ 0x60
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007f3e:	2b00      	cmp	r3, #0
 8007f40:	d003      	beq.n	8007f4a <HAL_SPI_TransmitReceive+0x428>
 8007f42:	2301      	movs	r3, #1
 8007f44:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007f48:	e003      	b.n	8007f52 <HAL_SPI_TransmitReceive+0x430>
 8007f4a:	68fb      	ldr	r3, [r7, #12]
 8007f4c:	2201      	movs	r2, #1
 8007f4e:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8007f52:	68fb      	ldr	r3, [r7, #12]
 8007f54:	2200      	movs	r2, #0
 8007f56:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8007f5a:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8007f5e:	4618      	mov	r0, r3
 8007f60:	3728      	adds	r7, #40	@ 0x28
 8007f62:	46bd      	mov	sp, r7
 8007f64:	bd80      	pop	{r7, pc}

08007f66 <HAL_SPI_GetState>:
 8007f66:	b480      	push	{r7}
 8007f68:	b083      	sub	sp, #12
 8007f6a:	af00      	add	r7, sp, #0
 8007f6c:	6078      	str	r0, [r7, #4]
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8007f74:	b2db      	uxtb	r3, r3
 8007f76:	4618      	mov	r0, r3
 8007f78:	370c      	adds	r7, #12
 8007f7a:	46bd      	mov	sp, r7
 8007f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f80:	4770      	bx	lr
	...

08007f84 <SPI_WaitFlagStateUntilTimeout>:
 8007f84:	b580      	push	{r7, lr}
 8007f86:	b088      	sub	sp, #32
 8007f88:	af00      	add	r7, sp, #0
 8007f8a:	60f8      	str	r0, [r7, #12]
 8007f8c:	60b9      	str	r1, [r7, #8]
 8007f8e:	603b      	str	r3, [r7, #0]
 8007f90:	4613      	mov	r3, r2
 8007f92:	71fb      	strb	r3, [r7, #7]
 8007f94:	f7fa fbd2 	bl	800273c <HAL_GetTick>
 8007f98:	4602      	mov	r2, r0
 8007f9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007f9c:	1a9b      	subs	r3, r3, r2
 8007f9e:	683a      	ldr	r2, [r7, #0]
 8007fa0:	4413      	add	r3, r2
 8007fa2:	61fb      	str	r3, [r7, #28]
 8007fa4:	f7fa fbca 	bl	800273c <HAL_GetTick>
 8007fa8:	61b8      	str	r0, [r7, #24]
 8007faa:	4b39      	ldr	r3, [pc, #228]	@ (8008090 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007fac:	681b      	ldr	r3, [r3, #0]
 8007fae:	015b      	lsls	r3, r3, #5
 8007fb0:	0d1b      	lsrs	r3, r3, #20
 8007fb2:	69fa      	ldr	r2, [r7, #28]
 8007fb4:	fb02 f303 	mul.w	r3, r2, r3
 8007fb8:	617b      	str	r3, [r7, #20]
 8007fba:	e054      	b.n	8008066 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8007fbc:	683b      	ldr	r3, [r7, #0]
 8007fbe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007fc2:	d050      	beq.n	8008066 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8007fc4:	f7fa fbba 	bl	800273c <HAL_GetTick>
 8007fc8:	4602      	mov	r2, r0
 8007fca:	69bb      	ldr	r3, [r7, #24]
 8007fcc:	1ad3      	subs	r3, r2, r3
 8007fce:	69fa      	ldr	r2, [r7, #28]
 8007fd0:	429a      	cmp	r2, r3
 8007fd2:	d902      	bls.n	8007fda <SPI_WaitFlagStateUntilTimeout+0x56>
 8007fd4:	69fb      	ldr	r3, [r7, #28]
 8007fd6:	2b00      	cmp	r3, #0
 8007fd8:	d13d      	bne.n	8008056 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8007fda:	68fb      	ldr	r3, [r7, #12]
 8007fdc:	681b      	ldr	r3, [r3, #0]
 8007fde:	685a      	ldr	r2, [r3, #4]
 8007fe0:	68fb      	ldr	r3, [r7, #12]
 8007fe2:	681b      	ldr	r3, [r3, #0]
 8007fe4:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8007fe8:	605a      	str	r2, [r3, #4]
 8007fea:	68fb      	ldr	r3, [r7, #12]
 8007fec:	685b      	ldr	r3, [r3, #4]
 8007fee:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007ff2:	d111      	bne.n	8008018 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007ff4:	68fb      	ldr	r3, [r7, #12]
 8007ff6:	689b      	ldr	r3, [r3, #8]
 8007ff8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007ffc:	d004      	beq.n	8008008 <SPI_WaitFlagStateUntilTimeout+0x84>
 8007ffe:	68fb      	ldr	r3, [r7, #12]
 8008000:	689b      	ldr	r3, [r3, #8]
 8008002:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008006:	d107      	bne.n	8008018 <SPI_WaitFlagStateUntilTimeout+0x94>
 8008008:	68fb      	ldr	r3, [r7, #12]
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	681a      	ldr	r2, [r3, #0]
 800800e:	68fb      	ldr	r3, [r7, #12]
 8008010:	681b      	ldr	r3, [r3, #0]
 8008012:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008016:	601a      	str	r2, [r3, #0]
 8008018:	68fb      	ldr	r3, [r7, #12]
 800801a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800801c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008020:	d10f      	bne.n	8008042 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8008022:	68fb      	ldr	r3, [r7, #12]
 8008024:	681b      	ldr	r3, [r3, #0]
 8008026:	681a      	ldr	r2, [r3, #0]
 8008028:	68fb      	ldr	r3, [r7, #12]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8008030:	601a      	str	r2, [r3, #0]
 8008032:	68fb      	ldr	r3, [r7, #12]
 8008034:	681b      	ldr	r3, [r3, #0]
 8008036:	681a      	ldr	r2, [r3, #0]
 8008038:	68fb      	ldr	r3, [r7, #12]
 800803a:	681b      	ldr	r3, [r3, #0]
 800803c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8008040:	601a      	str	r2, [r3, #0]
 8008042:	68fb      	ldr	r3, [r7, #12]
 8008044:	2201      	movs	r2, #1
 8008046:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800804a:	68fb      	ldr	r3, [r7, #12]
 800804c:	2200      	movs	r2, #0
 800804e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8008052:	2303      	movs	r3, #3
 8008054:	e017      	b.n	8008086 <SPI_WaitFlagStateUntilTimeout+0x102>
 8008056:	697b      	ldr	r3, [r7, #20]
 8008058:	2b00      	cmp	r3, #0
 800805a:	d101      	bne.n	8008060 <SPI_WaitFlagStateUntilTimeout+0xdc>
 800805c:	2300      	movs	r3, #0
 800805e:	61fb      	str	r3, [r7, #28]
 8008060:	697b      	ldr	r3, [r7, #20]
 8008062:	3b01      	subs	r3, #1
 8008064:	617b      	str	r3, [r7, #20]
 8008066:	68fb      	ldr	r3, [r7, #12]
 8008068:	681b      	ldr	r3, [r3, #0]
 800806a:	689a      	ldr	r2, [r3, #8]
 800806c:	68bb      	ldr	r3, [r7, #8]
 800806e:	4013      	ands	r3, r2
 8008070:	68ba      	ldr	r2, [r7, #8]
 8008072:	429a      	cmp	r2, r3
 8008074:	bf0c      	ite	eq
 8008076:	2301      	moveq	r3, #1
 8008078:	2300      	movne	r3, #0
 800807a:	b2db      	uxtb	r3, r3
 800807c:	461a      	mov	r2, r3
 800807e:	79fb      	ldrb	r3, [r7, #7]
 8008080:	429a      	cmp	r2, r3
 8008082:	d19b      	bne.n	8007fbc <SPI_WaitFlagStateUntilTimeout+0x38>
 8008084:	2300      	movs	r3, #0
 8008086:	4618      	mov	r0, r3
 8008088:	3720      	adds	r7, #32
 800808a:	46bd      	mov	sp, r7
 800808c:	bd80      	pop	{r7, pc}
 800808e:	bf00      	nop
 8008090:	20000000 	.word	0x20000000

08008094 <SPI_WaitFifoStateUntilTimeout>:
 8008094:	b580      	push	{r7, lr}
 8008096:	b08a      	sub	sp, #40	@ 0x28
 8008098:	af00      	add	r7, sp, #0
 800809a:	60f8      	str	r0, [r7, #12]
 800809c:	60b9      	str	r1, [r7, #8]
 800809e:	607a      	str	r2, [r7, #4]
 80080a0:	603b      	str	r3, [r7, #0]
 80080a2:	2300      	movs	r3, #0
 80080a4:	75fb      	strb	r3, [r7, #23]
 80080a6:	f7fa fb49 	bl	800273c <HAL_GetTick>
 80080aa:	4602      	mov	r2, r0
 80080ac:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80080ae:	1a9b      	subs	r3, r3, r2
 80080b0:	683a      	ldr	r2, [r7, #0]
 80080b2:	4413      	add	r3, r2
 80080b4:	627b      	str	r3, [r7, #36]	@ 0x24
 80080b6:	f7fa fb41 	bl	800273c <HAL_GetTick>
 80080ba:	6238      	str	r0, [r7, #32]
 80080bc:	68fb      	ldr	r3, [r7, #12]
 80080be:	681b      	ldr	r3, [r3, #0]
 80080c0:	330c      	adds	r3, #12
 80080c2:	61fb      	str	r3, [r7, #28]
 80080c4:	4b3d      	ldr	r3, [pc, #244]	@ (80081bc <SPI_WaitFifoStateUntilTimeout+0x128>)
 80080c6:	681a      	ldr	r2, [r3, #0]
 80080c8:	4613      	mov	r3, r2
 80080ca:	009b      	lsls	r3, r3, #2
 80080cc:	4413      	add	r3, r2
 80080ce:	00da      	lsls	r2, r3, #3
 80080d0:	1ad3      	subs	r3, r2, r3
 80080d2:	0d1b      	lsrs	r3, r3, #20
 80080d4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80080d6:	fb02 f303 	mul.w	r3, r2, r3
 80080da:	61bb      	str	r3, [r7, #24]
 80080dc:	e060      	b.n	80081a0 <SPI_WaitFifoStateUntilTimeout+0x10c>
 80080de:	68bb      	ldr	r3, [r7, #8]
 80080e0:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 80080e4:	d107      	bne.n	80080f6 <SPI_WaitFifoStateUntilTimeout+0x62>
 80080e6:	687b      	ldr	r3, [r7, #4]
 80080e8:	2b00      	cmp	r3, #0
 80080ea:	d104      	bne.n	80080f6 <SPI_WaitFifoStateUntilTimeout+0x62>
 80080ec:	69fb      	ldr	r3, [r7, #28]
 80080ee:	781b      	ldrb	r3, [r3, #0]
 80080f0:	b2db      	uxtb	r3, r3
 80080f2:	75fb      	strb	r3, [r7, #23]
 80080f4:	7dfb      	ldrb	r3, [r7, #23]
 80080f6:	683b      	ldr	r3, [r7, #0]
 80080f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80080fc:	d050      	beq.n	80081a0 <SPI_WaitFifoStateUntilTimeout+0x10c>
 80080fe:	f7fa fb1d 	bl	800273c <HAL_GetTick>
 8008102:	4602      	mov	r2, r0
 8008104:	6a3b      	ldr	r3, [r7, #32]
 8008106:	1ad3      	subs	r3, r2, r3
 8008108:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800810a:	429a      	cmp	r2, r3
 800810c:	d902      	bls.n	8008114 <SPI_WaitFifoStateUntilTimeout+0x80>
 800810e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008110:	2b00      	cmp	r3, #0
 8008112:	d13d      	bne.n	8008190 <SPI_WaitFifoStateUntilTimeout+0xfc>
 8008114:	68fb      	ldr	r3, [r7, #12]
 8008116:	681b      	ldr	r3, [r3, #0]
 8008118:	685a      	ldr	r2, [r3, #4]
 800811a:	68fb      	ldr	r3, [r7, #12]
 800811c:	681b      	ldr	r3, [r3, #0]
 800811e:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8008122:	605a      	str	r2, [r3, #4]
 8008124:	68fb      	ldr	r3, [r7, #12]
 8008126:	685b      	ldr	r3, [r3, #4]
 8008128:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800812c:	d111      	bne.n	8008152 <SPI_WaitFifoStateUntilTimeout+0xbe>
 800812e:	68fb      	ldr	r3, [r7, #12]
 8008130:	689b      	ldr	r3, [r3, #8]
 8008132:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008136:	d004      	beq.n	8008142 <SPI_WaitFifoStateUntilTimeout+0xae>
 8008138:	68fb      	ldr	r3, [r7, #12]
 800813a:	689b      	ldr	r3, [r3, #8]
 800813c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008140:	d107      	bne.n	8008152 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8008142:	68fb      	ldr	r3, [r7, #12]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	681a      	ldr	r2, [r3, #0]
 8008148:	68fb      	ldr	r3, [r7, #12]
 800814a:	681b      	ldr	r3, [r3, #0]
 800814c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008150:	601a      	str	r2, [r3, #0]
 8008152:	68fb      	ldr	r3, [r7, #12]
 8008154:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008156:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800815a:	d10f      	bne.n	800817c <SPI_WaitFifoStateUntilTimeout+0xe8>
 800815c:	68fb      	ldr	r3, [r7, #12]
 800815e:	681b      	ldr	r3, [r3, #0]
 8008160:	681a      	ldr	r2, [r3, #0]
 8008162:	68fb      	ldr	r3, [r7, #12]
 8008164:	681b      	ldr	r3, [r3, #0]
 8008166:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800816a:	601a      	str	r2, [r3, #0]
 800816c:	68fb      	ldr	r3, [r7, #12]
 800816e:	681b      	ldr	r3, [r3, #0]
 8008170:	681a      	ldr	r2, [r3, #0]
 8008172:	68fb      	ldr	r3, [r7, #12]
 8008174:	681b      	ldr	r3, [r3, #0]
 8008176:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800817a:	601a      	str	r2, [r3, #0]
 800817c:	68fb      	ldr	r3, [r7, #12]
 800817e:	2201      	movs	r2, #1
 8008180:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8008184:	68fb      	ldr	r3, [r7, #12]
 8008186:	2200      	movs	r2, #0
 8008188:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800818c:	2303      	movs	r3, #3
 800818e:	e010      	b.n	80081b2 <SPI_WaitFifoStateUntilTimeout+0x11e>
 8008190:	69bb      	ldr	r3, [r7, #24]
 8008192:	2b00      	cmp	r3, #0
 8008194:	d101      	bne.n	800819a <SPI_WaitFifoStateUntilTimeout+0x106>
 8008196:	2300      	movs	r3, #0
 8008198:	627b      	str	r3, [r7, #36]	@ 0x24
 800819a:	69bb      	ldr	r3, [r7, #24]
 800819c:	3b01      	subs	r3, #1
 800819e:	61bb      	str	r3, [r7, #24]
 80081a0:	68fb      	ldr	r3, [r7, #12]
 80081a2:	681b      	ldr	r3, [r3, #0]
 80081a4:	689a      	ldr	r2, [r3, #8]
 80081a6:	68bb      	ldr	r3, [r7, #8]
 80081a8:	4013      	ands	r3, r2
 80081aa:	687a      	ldr	r2, [r7, #4]
 80081ac:	429a      	cmp	r2, r3
 80081ae:	d196      	bne.n	80080de <SPI_WaitFifoStateUntilTimeout+0x4a>
 80081b0:	2300      	movs	r3, #0
 80081b2:	4618      	mov	r0, r3
 80081b4:	3728      	adds	r7, #40	@ 0x28
 80081b6:	46bd      	mov	sp, r7
 80081b8:	bd80      	pop	{r7, pc}
 80081ba:	bf00      	nop
 80081bc:	20000000 	.word	0x20000000

080081c0 <SPI_EndRxTxTransaction>:
 80081c0:	b580      	push	{r7, lr}
 80081c2:	b086      	sub	sp, #24
 80081c4:	af02      	add	r7, sp, #8
 80081c6:	60f8      	str	r0, [r7, #12]
 80081c8:	60b9      	str	r1, [r7, #8]
 80081ca:	607a      	str	r2, [r7, #4]
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	9300      	str	r3, [sp, #0]
 80081d0:	68bb      	ldr	r3, [r7, #8]
 80081d2:	2200      	movs	r2, #0
 80081d4:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 80081d8:	68f8      	ldr	r0, [r7, #12]
 80081da:	f7ff ff5b 	bl	8008094 <SPI_WaitFifoStateUntilTimeout>
 80081de:	4603      	mov	r3, r0
 80081e0:	2b00      	cmp	r3, #0
 80081e2:	d007      	beq.n	80081f4 <SPI_EndRxTxTransaction+0x34>
 80081e4:	68fb      	ldr	r3, [r7, #12]
 80081e6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80081e8:	f043 0220 	orr.w	r2, r3, #32
 80081ec:	68fb      	ldr	r3, [r7, #12]
 80081ee:	661a      	str	r2, [r3, #96]	@ 0x60
 80081f0:	2303      	movs	r3, #3
 80081f2:	e027      	b.n	8008244 <SPI_EndRxTxTransaction+0x84>
 80081f4:	687b      	ldr	r3, [r7, #4]
 80081f6:	9300      	str	r3, [sp, #0]
 80081f8:	68bb      	ldr	r3, [r7, #8]
 80081fa:	2200      	movs	r2, #0
 80081fc:	2180      	movs	r1, #128	@ 0x80
 80081fe:	68f8      	ldr	r0, [r7, #12]
 8008200:	f7ff fec0 	bl	8007f84 <SPI_WaitFlagStateUntilTimeout>
 8008204:	4603      	mov	r3, r0
 8008206:	2b00      	cmp	r3, #0
 8008208:	d007      	beq.n	800821a <SPI_EndRxTxTransaction+0x5a>
 800820a:	68fb      	ldr	r3, [r7, #12]
 800820c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800820e:	f043 0220 	orr.w	r2, r3, #32
 8008212:	68fb      	ldr	r3, [r7, #12]
 8008214:	661a      	str	r2, [r3, #96]	@ 0x60
 8008216:	2303      	movs	r3, #3
 8008218:	e014      	b.n	8008244 <SPI_EndRxTxTransaction+0x84>
 800821a:	687b      	ldr	r3, [r7, #4]
 800821c:	9300      	str	r3, [sp, #0]
 800821e:	68bb      	ldr	r3, [r7, #8]
 8008220:	2200      	movs	r2, #0
 8008222:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 8008226:	68f8      	ldr	r0, [r7, #12]
 8008228:	f7ff ff34 	bl	8008094 <SPI_WaitFifoStateUntilTimeout>
 800822c:	4603      	mov	r3, r0
 800822e:	2b00      	cmp	r3, #0
 8008230:	d007      	beq.n	8008242 <SPI_EndRxTxTransaction+0x82>
 8008232:	68fb      	ldr	r3, [r7, #12]
 8008234:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008236:	f043 0220 	orr.w	r2, r3, #32
 800823a:	68fb      	ldr	r3, [r7, #12]
 800823c:	661a      	str	r2, [r3, #96]	@ 0x60
 800823e:	2303      	movs	r3, #3
 8008240:	e000      	b.n	8008244 <SPI_EndRxTxTransaction+0x84>
 8008242:	2300      	movs	r3, #0
 8008244:	4618      	mov	r0, r3
 8008246:	3710      	adds	r7, #16
 8008248:	46bd      	mov	sp, r7
 800824a:	bd80      	pop	{r7, pc}

0800824c <HAL_TIM_Base_Init>:
 800824c:	b580      	push	{r7, lr}
 800824e:	b082      	sub	sp, #8
 8008250:	af00      	add	r7, sp, #0
 8008252:	6078      	str	r0, [r7, #4]
 8008254:	687b      	ldr	r3, [r7, #4]
 8008256:	2b00      	cmp	r3, #0
 8008258:	d101      	bne.n	800825e <HAL_TIM_Base_Init+0x12>
 800825a:	2301      	movs	r3, #1
 800825c:	e049      	b.n	80082f2 <HAL_TIM_Base_Init+0xa6>
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008264:	b2db      	uxtb	r3, r3
 8008266:	2b00      	cmp	r3, #0
 8008268:	d106      	bne.n	8008278 <HAL_TIM_Base_Init+0x2c>
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	2200      	movs	r2, #0
 800826e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008272:	6878      	ldr	r0, [r7, #4]
 8008274:	f7fa f80a 	bl	800228c <HAL_TIM_Base_MspInit>
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	2202      	movs	r2, #2
 800827c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008280:	687b      	ldr	r3, [r7, #4]
 8008282:	681a      	ldr	r2, [r3, #0]
 8008284:	687b      	ldr	r3, [r7, #4]
 8008286:	3304      	adds	r3, #4
 8008288:	4619      	mov	r1, r3
 800828a:	4610      	mov	r0, r2
 800828c:	f000 fc9e 	bl	8008bcc <TIM_Base_SetConfig>
 8008290:	687b      	ldr	r3, [r7, #4]
 8008292:	2201      	movs	r2, #1
 8008294:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	2201      	movs	r2, #1
 800829c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80082a0:	687b      	ldr	r3, [r7, #4]
 80082a2:	2201      	movs	r2, #1
 80082a4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80082a8:	687b      	ldr	r3, [r7, #4]
 80082aa:	2201      	movs	r2, #1
 80082ac:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	2201      	movs	r2, #1
 80082b4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80082b8:	687b      	ldr	r3, [r7, #4]
 80082ba:	2201      	movs	r2, #1
 80082bc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80082c0:	687b      	ldr	r3, [r7, #4]
 80082c2:	2201      	movs	r2, #1
 80082c4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	2201      	movs	r2, #1
 80082cc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	2201      	movs	r2, #1
 80082d4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	2201      	movs	r2, #1
 80082dc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	2201      	movs	r2, #1
 80082e4:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	2201      	movs	r2, #1
 80082ec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80082f0:	2300      	movs	r3, #0
 80082f2:	4618      	mov	r0, r3
 80082f4:	3708      	adds	r7, #8
 80082f6:	46bd      	mov	sp, r7
 80082f8:	bd80      	pop	{r7, pc}
	...

080082fc <HAL_TIM_Base_Start>:
 80082fc:	b480      	push	{r7}
 80082fe:	b085      	sub	sp, #20
 8008300:	af00      	add	r7, sp, #0
 8008302:	6078      	str	r0, [r7, #4]
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800830a:	b2db      	uxtb	r3, r3
 800830c:	2b01      	cmp	r3, #1
 800830e:	d001      	beq.n	8008314 <HAL_TIM_Base_Start+0x18>
 8008310:	2301      	movs	r3, #1
 8008312:	e042      	b.n	800839a <HAL_TIM_Base_Start+0x9e>
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	2202      	movs	r2, #2
 8008318:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800831c:	687b      	ldr	r3, [r7, #4]
 800831e:	681b      	ldr	r3, [r3, #0]
 8008320:	4a21      	ldr	r2, [pc, #132]	@ (80083a8 <HAL_TIM_Base_Start+0xac>)
 8008322:	4293      	cmp	r3, r2
 8008324:	d018      	beq.n	8008358 <HAL_TIM_Base_Start+0x5c>
 8008326:	687b      	ldr	r3, [r7, #4]
 8008328:	681b      	ldr	r3, [r3, #0]
 800832a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800832e:	d013      	beq.n	8008358 <HAL_TIM_Base_Start+0x5c>
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	681b      	ldr	r3, [r3, #0]
 8008334:	4a1d      	ldr	r2, [pc, #116]	@ (80083ac <HAL_TIM_Base_Start+0xb0>)
 8008336:	4293      	cmp	r3, r2
 8008338:	d00e      	beq.n	8008358 <HAL_TIM_Base_Start+0x5c>
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	681b      	ldr	r3, [r3, #0]
 800833e:	4a1c      	ldr	r2, [pc, #112]	@ (80083b0 <HAL_TIM_Base_Start+0xb4>)
 8008340:	4293      	cmp	r3, r2
 8008342:	d009      	beq.n	8008358 <HAL_TIM_Base_Start+0x5c>
 8008344:	687b      	ldr	r3, [r7, #4]
 8008346:	681b      	ldr	r3, [r3, #0]
 8008348:	4a1a      	ldr	r2, [pc, #104]	@ (80083b4 <HAL_TIM_Base_Start+0xb8>)
 800834a:	4293      	cmp	r3, r2
 800834c:	d004      	beq.n	8008358 <HAL_TIM_Base_Start+0x5c>
 800834e:	687b      	ldr	r3, [r7, #4]
 8008350:	681b      	ldr	r3, [r3, #0]
 8008352:	4a19      	ldr	r2, [pc, #100]	@ (80083b8 <HAL_TIM_Base_Start+0xbc>)
 8008354:	4293      	cmp	r3, r2
 8008356:	d115      	bne.n	8008384 <HAL_TIM_Base_Start+0x88>
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	689a      	ldr	r2, [r3, #8]
 800835e:	4b17      	ldr	r3, [pc, #92]	@ (80083bc <HAL_TIM_Base_Start+0xc0>)
 8008360:	4013      	ands	r3, r2
 8008362:	60fb      	str	r3, [r7, #12]
 8008364:	68fb      	ldr	r3, [r7, #12]
 8008366:	2b06      	cmp	r3, #6
 8008368:	d015      	beq.n	8008396 <HAL_TIM_Base_Start+0x9a>
 800836a:	68fb      	ldr	r3, [r7, #12]
 800836c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008370:	d011      	beq.n	8008396 <HAL_TIM_Base_Start+0x9a>
 8008372:	687b      	ldr	r3, [r7, #4]
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	681a      	ldr	r2, [r3, #0]
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	681b      	ldr	r3, [r3, #0]
 800837c:	f042 0201 	orr.w	r2, r2, #1
 8008380:	601a      	str	r2, [r3, #0]
 8008382:	e008      	b.n	8008396 <HAL_TIM_Base_Start+0x9a>
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	681b      	ldr	r3, [r3, #0]
 8008388:	681a      	ldr	r2, [r3, #0]
 800838a:	687b      	ldr	r3, [r7, #4]
 800838c:	681b      	ldr	r3, [r3, #0]
 800838e:	f042 0201 	orr.w	r2, r2, #1
 8008392:	601a      	str	r2, [r3, #0]
 8008394:	e000      	b.n	8008398 <HAL_TIM_Base_Start+0x9c>
 8008396:	bf00      	nop
 8008398:	2300      	movs	r3, #0
 800839a:	4618      	mov	r0, r3
 800839c:	3714      	adds	r7, #20
 800839e:	46bd      	mov	sp, r7
 80083a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083a4:	4770      	bx	lr
 80083a6:	bf00      	nop
 80083a8:	40012c00 	.word	0x40012c00
 80083ac:	40000400 	.word	0x40000400
 80083b0:	40000800 	.word	0x40000800
 80083b4:	40013400 	.word	0x40013400
 80083b8:	40014000 	.word	0x40014000
 80083bc:	00010007 	.word	0x00010007

080083c0 <HAL_TIM_PWM_Init>:
 80083c0:	b580      	push	{r7, lr}
 80083c2:	b082      	sub	sp, #8
 80083c4:	af00      	add	r7, sp, #0
 80083c6:	6078      	str	r0, [r7, #4]
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	2b00      	cmp	r3, #0
 80083cc:	d101      	bne.n	80083d2 <HAL_TIM_PWM_Init+0x12>
 80083ce:	2301      	movs	r3, #1
 80083d0:	e049      	b.n	8008466 <HAL_TIM_PWM_Init+0xa6>
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80083d8:	b2db      	uxtb	r3, r3
 80083da:	2b00      	cmp	r3, #0
 80083dc:	d106      	bne.n	80083ec <HAL_TIM_PWM_Init+0x2c>
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	2200      	movs	r2, #0
 80083e2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80083e6:	6878      	ldr	r0, [r7, #4]
 80083e8:	f000 f841 	bl	800846e <HAL_TIM_PWM_MspInit>
 80083ec:	687b      	ldr	r3, [r7, #4]
 80083ee:	2202      	movs	r2, #2
 80083f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80083f4:	687b      	ldr	r3, [r7, #4]
 80083f6:	681a      	ldr	r2, [r3, #0]
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	3304      	adds	r3, #4
 80083fc:	4619      	mov	r1, r3
 80083fe:	4610      	mov	r0, r2
 8008400:	f000 fbe4 	bl	8008bcc <TIM_Base_SetConfig>
 8008404:	687b      	ldr	r3, [r7, #4]
 8008406:	2201      	movs	r2, #1
 8008408:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800840c:	687b      	ldr	r3, [r7, #4]
 800840e:	2201      	movs	r2, #1
 8008410:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008414:	687b      	ldr	r3, [r7, #4]
 8008416:	2201      	movs	r2, #1
 8008418:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800841c:	687b      	ldr	r3, [r7, #4]
 800841e:	2201      	movs	r2, #1
 8008420:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	2201      	movs	r2, #1
 8008428:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800842c:	687b      	ldr	r3, [r7, #4]
 800842e:	2201      	movs	r2, #1
 8008430:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	2201      	movs	r2, #1
 8008438:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	2201      	movs	r2, #1
 8008440:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	2201      	movs	r2, #1
 8008448:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	2201      	movs	r2, #1
 8008450:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008454:	687b      	ldr	r3, [r7, #4]
 8008456:	2201      	movs	r2, #1
 8008458:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	2201      	movs	r2, #1
 8008460:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008464:	2300      	movs	r3, #0
 8008466:	4618      	mov	r0, r3
 8008468:	3708      	adds	r7, #8
 800846a:	46bd      	mov	sp, r7
 800846c:	bd80      	pop	{r7, pc}

0800846e <HAL_TIM_PWM_MspInit>:
 800846e:	b480      	push	{r7}
 8008470:	b083      	sub	sp, #12
 8008472:	af00      	add	r7, sp, #0
 8008474:	6078      	str	r0, [r7, #4]
 8008476:	bf00      	nop
 8008478:	370c      	adds	r7, #12
 800847a:	46bd      	mov	sp, r7
 800847c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008480:	4770      	bx	lr
	...

08008484 <HAL_TIM_PWM_Start>:
 8008484:	b580      	push	{r7, lr}
 8008486:	b084      	sub	sp, #16
 8008488:	af00      	add	r7, sp, #0
 800848a:	6078      	str	r0, [r7, #4]
 800848c:	6039      	str	r1, [r7, #0]
 800848e:	683b      	ldr	r3, [r7, #0]
 8008490:	2b00      	cmp	r3, #0
 8008492:	d109      	bne.n	80084a8 <HAL_TIM_PWM_Start+0x24>
 8008494:	687b      	ldr	r3, [r7, #4]
 8008496:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800849a:	b2db      	uxtb	r3, r3
 800849c:	2b01      	cmp	r3, #1
 800849e:	bf14      	ite	ne
 80084a0:	2301      	movne	r3, #1
 80084a2:	2300      	moveq	r3, #0
 80084a4:	b2db      	uxtb	r3, r3
 80084a6:	e03c      	b.n	8008522 <HAL_TIM_PWM_Start+0x9e>
 80084a8:	683b      	ldr	r3, [r7, #0]
 80084aa:	2b04      	cmp	r3, #4
 80084ac:	d109      	bne.n	80084c2 <HAL_TIM_PWM_Start+0x3e>
 80084ae:	687b      	ldr	r3, [r7, #4]
 80084b0:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80084b4:	b2db      	uxtb	r3, r3
 80084b6:	2b01      	cmp	r3, #1
 80084b8:	bf14      	ite	ne
 80084ba:	2301      	movne	r3, #1
 80084bc:	2300      	moveq	r3, #0
 80084be:	b2db      	uxtb	r3, r3
 80084c0:	e02f      	b.n	8008522 <HAL_TIM_PWM_Start+0x9e>
 80084c2:	683b      	ldr	r3, [r7, #0]
 80084c4:	2b08      	cmp	r3, #8
 80084c6:	d109      	bne.n	80084dc <HAL_TIM_PWM_Start+0x58>
 80084c8:	687b      	ldr	r3, [r7, #4]
 80084ca:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80084ce:	b2db      	uxtb	r3, r3
 80084d0:	2b01      	cmp	r3, #1
 80084d2:	bf14      	ite	ne
 80084d4:	2301      	movne	r3, #1
 80084d6:	2300      	moveq	r3, #0
 80084d8:	b2db      	uxtb	r3, r3
 80084da:	e022      	b.n	8008522 <HAL_TIM_PWM_Start+0x9e>
 80084dc:	683b      	ldr	r3, [r7, #0]
 80084de:	2b0c      	cmp	r3, #12
 80084e0:	d109      	bne.n	80084f6 <HAL_TIM_PWM_Start+0x72>
 80084e2:	687b      	ldr	r3, [r7, #4]
 80084e4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80084e8:	b2db      	uxtb	r3, r3
 80084ea:	2b01      	cmp	r3, #1
 80084ec:	bf14      	ite	ne
 80084ee:	2301      	movne	r3, #1
 80084f0:	2300      	moveq	r3, #0
 80084f2:	b2db      	uxtb	r3, r3
 80084f4:	e015      	b.n	8008522 <HAL_TIM_PWM_Start+0x9e>
 80084f6:	683b      	ldr	r3, [r7, #0]
 80084f8:	2b10      	cmp	r3, #16
 80084fa:	d109      	bne.n	8008510 <HAL_TIM_PWM_Start+0x8c>
 80084fc:	687b      	ldr	r3, [r7, #4]
 80084fe:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8008502:	b2db      	uxtb	r3, r3
 8008504:	2b01      	cmp	r3, #1
 8008506:	bf14      	ite	ne
 8008508:	2301      	movne	r3, #1
 800850a:	2300      	moveq	r3, #0
 800850c:	b2db      	uxtb	r3, r3
 800850e:	e008      	b.n	8008522 <HAL_TIM_PWM_Start+0x9e>
 8008510:	687b      	ldr	r3, [r7, #4]
 8008512:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8008516:	b2db      	uxtb	r3, r3
 8008518:	2b01      	cmp	r3, #1
 800851a:	bf14      	ite	ne
 800851c:	2301      	movne	r3, #1
 800851e:	2300      	moveq	r3, #0
 8008520:	b2db      	uxtb	r3, r3
 8008522:	2b00      	cmp	r3, #0
 8008524:	d001      	beq.n	800852a <HAL_TIM_PWM_Start+0xa6>
 8008526:	2301      	movs	r3, #1
 8008528:	e097      	b.n	800865a <HAL_TIM_PWM_Start+0x1d6>
 800852a:	683b      	ldr	r3, [r7, #0]
 800852c:	2b00      	cmp	r3, #0
 800852e:	d104      	bne.n	800853a <HAL_TIM_PWM_Start+0xb6>
 8008530:	687b      	ldr	r3, [r7, #4]
 8008532:	2202      	movs	r2, #2
 8008534:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008538:	e023      	b.n	8008582 <HAL_TIM_PWM_Start+0xfe>
 800853a:	683b      	ldr	r3, [r7, #0]
 800853c:	2b04      	cmp	r3, #4
 800853e:	d104      	bne.n	800854a <HAL_TIM_PWM_Start+0xc6>
 8008540:	687b      	ldr	r3, [r7, #4]
 8008542:	2202      	movs	r2, #2
 8008544:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008548:	e01b      	b.n	8008582 <HAL_TIM_PWM_Start+0xfe>
 800854a:	683b      	ldr	r3, [r7, #0]
 800854c:	2b08      	cmp	r3, #8
 800854e:	d104      	bne.n	800855a <HAL_TIM_PWM_Start+0xd6>
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	2202      	movs	r2, #2
 8008554:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008558:	e013      	b.n	8008582 <HAL_TIM_PWM_Start+0xfe>
 800855a:	683b      	ldr	r3, [r7, #0]
 800855c:	2b0c      	cmp	r3, #12
 800855e:	d104      	bne.n	800856a <HAL_TIM_PWM_Start+0xe6>
 8008560:	687b      	ldr	r3, [r7, #4]
 8008562:	2202      	movs	r2, #2
 8008564:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008568:	e00b      	b.n	8008582 <HAL_TIM_PWM_Start+0xfe>
 800856a:	683b      	ldr	r3, [r7, #0]
 800856c:	2b10      	cmp	r3, #16
 800856e:	d104      	bne.n	800857a <HAL_TIM_PWM_Start+0xf6>
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	2202      	movs	r2, #2
 8008574:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008578:	e003      	b.n	8008582 <HAL_TIM_PWM_Start+0xfe>
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	2202      	movs	r2, #2
 800857e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8008582:	687b      	ldr	r3, [r7, #4]
 8008584:	681b      	ldr	r3, [r3, #0]
 8008586:	2201      	movs	r2, #1
 8008588:	6839      	ldr	r1, [r7, #0]
 800858a:	4618      	mov	r0, r3
 800858c:	f000 ffb4 	bl	80094f8 <TIM_CCxChannelCmd>
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	681b      	ldr	r3, [r3, #0]
 8008594:	4a33      	ldr	r2, [pc, #204]	@ (8008664 <HAL_TIM_PWM_Start+0x1e0>)
 8008596:	4293      	cmp	r3, r2
 8008598:	d013      	beq.n	80085c2 <HAL_TIM_PWM_Start+0x13e>
 800859a:	687b      	ldr	r3, [r7, #4]
 800859c:	681b      	ldr	r3, [r3, #0]
 800859e:	4a32      	ldr	r2, [pc, #200]	@ (8008668 <HAL_TIM_PWM_Start+0x1e4>)
 80085a0:	4293      	cmp	r3, r2
 80085a2:	d00e      	beq.n	80085c2 <HAL_TIM_PWM_Start+0x13e>
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	681b      	ldr	r3, [r3, #0]
 80085a8:	4a30      	ldr	r2, [pc, #192]	@ (800866c <HAL_TIM_PWM_Start+0x1e8>)
 80085aa:	4293      	cmp	r3, r2
 80085ac:	d009      	beq.n	80085c2 <HAL_TIM_PWM_Start+0x13e>
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	681b      	ldr	r3, [r3, #0]
 80085b2:	4a2f      	ldr	r2, [pc, #188]	@ (8008670 <HAL_TIM_PWM_Start+0x1ec>)
 80085b4:	4293      	cmp	r3, r2
 80085b6:	d004      	beq.n	80085c2 <HAL_TIM_PWM_Start+0x13e>
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	681b      	ldr	r3, [r3, #0]
 80085bc:	4a2d      	ldr	r2, [pc, #180]	@ (8008674 <HAL_TIM_PWM_Start+0x1f0>)
 80085be:	4293      	cmp	r3, r2
 80085c0:	d101      	bne.n	80085c6 <HAL_TIM_PWM_Start+0x142>
 80085c2:	2301      	movs	r3, #1
 80085c4:	e000      	b.n	80085c8 <HAL_TIM_PWM_Start+0x144>
 80085c6:	2300      	movs	r3, #0
 80085c8:	2b00      	cmp	r3, #0
 80085ca:	d007      	beq.n	80085dc <HAL_TIM_PWM_Start+0x158>
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	681b      	ldr	r3, [r3, #0]
 80085d0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80085d2:	687b      	ldr	r3, [r7, #4]
 80085d4:	681b      	ldr	r3, [r3, #0]
 80085d6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80085da:	645a      	str	r2, [r3, #68]	@ 0x44
 80085dc:	687b      	ldr	r3, [r7, #4]
 80085de:	681b      	ldr	r3, [r3, #0]
 80085e0:	4a20      	ldr	r2, [pc, #128]	@ (8008664 <HAL_TIM_PWM_Start+0x1e0>)
 80085e2:	4293      	cmp	r3, r2
 80085e4:	d018      	beq.n	8008618 <HAL_TIM_PWM_Start+0x194>
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	681b      	ldr	r3, [r3, #0]
 80085ea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80085ee:	d013      	beq.n	8008618 <HAL_TIM_PWM_Start+0x194>
 80085f0:	687b      	ldr	r3, [r7, #4]
 80085f2:	681b      	ldr	r3, [r3, #0]
 80085f4:	4a20      	ldr	r2, [pc, #128]	@ (8008678 <HAL_TIM_PWM_Start+0x1f4>)
 80085f6:	4293      	cmp	r3, r2
 80085f8:	d00e      	beq.n	8008618 <HAL_TIM_PWM_Start+0x194>
 80085fa:	687b      	ldr	r3, [r7, #4]
 80085fc:	681b      	ldr	r3, [r3, #0]
 80085fe:	4a1f      	ldr	r2, [pc, #124]	@ (800867c <HAL_TIM_PWM_Start+0x1f8>)
 8008600:	4293      	cmp	r3, r2
 8008602:	d009      	beq.n	8008618 <HAL_TIM_PWM_Start+0x194>
 8008604:	687b      	ldr	r3, [r7, #4]
 8008606:	681b      	ldr	r3, [r3, #0]
 8008608:	4a17      	ldr	r2, [pc, #92]	@ (8008668 <HAL_TIM_PWM_Start+0x1e4>)
 800860a:	4293      	cmp	r3, r2
 800860c:	d004      	beq.n	8008618 <HAL_TIM_PWM_Start+0x194>
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	681b      	ldr	r3, [r3, #0]
 8008612:	4a16      	ldr	r2, [pc, #88]	@ (800866c <HAL_TIM_PWM_Start+0x1e8>)
 8008614:	4293      	cmp	r3, r2
 8008616:	d115      	bne.n	8008644 <HAL_TIM_PWM_Start+0x1c0>
 8008618:	687b      	ldr	r3, [r7, #4]
 800861a:	681b      	ldr	r3, [r3, #0]
 800861c:	689a      	ldr	r2, [r3, #8]
 800861e:	4b18      	ldr	r3, [pc, #96]	@ (8008680 <HAL_TIM_PWM_Start+0x1fc>)
 8008620:	4013      	ands	r3, r2
 8008622:	60fb      	str	r3, [r7, #12]
 8008624:	68fb      	ldr	r3, [r7, #12]
 8008626:	2b06      	cmp	r3, #6
 8008628:	d015      	beq.n	8008656 <HAL_TIM_PWM_Start+0x1d2>
 800862a:	68fb      	ldr	r3, [r7, #12]
 800862c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008630:	d011      	beq.n	8008656 <HAL_TIM_PWM_Start+0x1d2>
 8008632:	687b      	ldr	r3, [r7, #4]
 8008634:	681b      	ldr	r3, [r3, #0]
 8008636:	681a      	ldr	r2, [r3, #0]
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	681b      	ldr	r3, [r3, #0]
 800863c:	f042 0201 	orr.w	r2, r2, #1
 8008640:	601a      	str	r2, [r3, #0]
 8008642:	e008      	b.n	8008656 <HAL_TIM_PWM_Start+0x1d2>
 8008644:	687b      	ldr	r3, [r7, #4]
 8008646:	681b      	ldr	r3, [r3, #0]
 8008648:	681a      	ldr	r2, [r3, #0]
 800864a:	687b      	ldr	r3, [r7, #4]
 800864c:	681b      	ldr	r3, [r3, #0]
 800864e:	f042 0201 	orr.w	r2, r2, #1
 8008652:	601a      	str	r2, [r3, #0]
 8008654:	e000      	b.n	8008658 <HAL_TIM_PWM_Start+0x1d4>
 8008656:	bf00      	nop
 8008658:	2300      	movs	r3, #0
 800865a:	4618      	mov	r0, r3
 800865c:	3710      	adds	r7, #16
 800865e:	46bd      	mov	sp, r7
 8008660:	bd80      	pop	{r7, pc}
 8008662:	bf00      	nop
 8008664:	40012c00 	.word	0x40012c00
 8008668:	40013400 	.word	0x40013400
 800866c:	40014000 	.word	0x40014000
 8008670:	40014400 	.word	0x40014400
 8008674:	40014800 	.word	0x40014800
 8008678:	40000400 	.word	0x40000400
 800867c:	40000800 	.word	0x40000800
 8008680:	00010007 	.word	0x00010007

08008684 <HAL_TIM_PWM_Stop>:
 8008684:	b580      	push	{r7, lr}
 8008686:	b082      	sub	sp, #8
 8008688:	af00      	add	r7, sp, #0
 800868a:	6078      	str	r0, [r7, #4]
 800868c:	6039      	str	r1, [r7, #0]
 800868e:	687b      	ldr	r3, [r7, #4]
 8008690:	681b      	ldr	r3, [r3, #0]
 8008692:	2200      	movs	r2, #0
 8008694:	6839      	ldr	r1, [r7, #0]
 8008696:	4618      	mov	r0, r3
 8008698:	f000 ff2e 	bl	80094f8 <TIM_CCxChannelCmd>
 800869c:	687b      	ldr	r3, [r7, #4]
 800869e:	681b      	ldr	r3, [r3, #0]
 80086a0:	4a3e      	ldr	r2, [pc, #248]	@ (800879c <HAL_TIM_PWM_Stop+0x118>)
 80086a2:	4293      	cmp	r3, r2
 80086a4:	d013      	beq.n	80086ce <HAL_TIM_PWM_Stop+0x4a>
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	681b      	ldr	r3, [r3, #0]
 80086aa:	4a3d      	ldr	r2, [pc, #244]	@ (80087a0 <HAL_TIM_PWM_Stop+0x11c>)
 80086ac:	4293      	cmp	r3, r2
 80086ae:	d00e      	beq.n	80086ce <HAL_TIM_PWM_Stop+0x4a>
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	681b      	ldr	r3, [r3, #0]
 80086b4:	4a3b      	ldr	r2, [pc, #236]	@ (80087a4 <HAL_TIM_PWM_Stop+0x120>)
 80086b6:	4293      	cmp	r3, r2
 80086b8:	d009      	beq.n	80086ce <HAL_TIM_PWM_Stop+0x4a>
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	681b      	ldr	r3, [r3, #0]
 80086be:	4a3a      	ldr	r2, [pc, #232]	@ (80087a8 <HAL_TIM_PWM_Stop+0x124>)
 80086c0:	4293      	cmp	r3, r2
 80086c2:	d004      	beq.n	80086ce <HAL_TIM_PWM_Stop+0x4a>
 80086c4:	687b      	ldr	r3, [r7, #4]
 80086c6:	681b      	ldr	r3, [r3, #0]
 80086c8:	4a38      	ldr	r2, [pc, #224]	@ (80087ac <HAL_TIM_PWM_Stop+0x128>)
 80086ca:	4293      	cmp	r3, r2
 80086cc:	d101      	bne.n	80086d2 <HAL_TIM_PWM_Stop+0x4e>
 80086ce:	2301      	movs	r3, #1
 80086d0:	e000      	b.n	80086d4 <HAL_TIM_PWM_Stop+0x50>
 80086d2:	2300      	movs	r3, #0
 80086d4:	2b00      	cmp	r3, #0
 80086d6:	d017      	beq.n	8008708 <HAL_TIM_PWM_Stop+0x84>
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	6a1a      	ldr	r2, [r3, #32]
 80086de:	f241 1311 	movw	r3, #4369	@ 0x1111
 80086e2:	4013      	ands	r3, r2
 80086e4:	2b00      	cmp	r3, #0
 80086e6:	d10f      	bne.n	8008708 <HAL_TIM_PWM_Stop+0x84>
 80086e8:	687b      	ldr	r3, [r7, #4]
 80086ea:	681b      	ldr	r3, [r3, #0]
 80086ec:	6a1a      	ldr	r2, [r3, #32]
 80086ee:	f244 4344 	movw	r3, #17476	@ 0x4444
 80086f2:	4013      	ands	r3, r2
 80086f4:	2b00      	cmp	r3, #0
 80086f6:	d107      	bne.n	8008708 <HAL_TIM_PWM_Stop+0x84>
 80086f8:	687b      	ldr	r3, [r7, #4]
 80086fa:	681b      	ldr	r3, [r3, #0]
 80086fc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80086fe:	687b      	ldr	r3, [r7, #4]
 8008700:	681b      	ldr	r3, [r3, #0]
 8008702:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8008706:	645a      	str	r2, [r3, #68]	@ 0x44
 8008708:	687b      	ldr	r3, [r7, #4]
 800870a:	681b      	ldr	r3, [r3, #0]
 800870c:	6a1a      	ldr	r2, [r3, #32]
 800870e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8008712:	4013      	ands	r3, r2
 8008714:	2b00      	cmp	r3, #0
 8008716:	d10f      	bne.n	8008738 <HAL_TIM_PWM_Stop+0xb4>
 8008718:	687b      	ldr	r3, [r7, #4]
 800871a:	681b      	ldr	r3, [r3, #0]
 800871c:	6a1a      	ldr	r2, [r3, #32]
 800871e:	f244 4344 	movw	r3, #17476	@ 0x4444
 8008722:	4013      	ands	r3, r2
 8008724:	2b00      	cmp	r3, #0
 8008726:	d107      	bne.n	8008738 <HAL_TIM_PWM_Stop+0xb4>
 8008728:	687b      	ldr	r3, [r7, #4]
 800872a:	681b      	ldr	r3, [r3, #0]
 800872c:	681a      	ldr	r2, [r3, #0]
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	f022 0201 	bic.w	r2, r2, #1
 8008736:	601a      	str	r2, [r3, #0]
 8008738:	683b      	ldr	r3, [r7, #0]
 800873a:	2b00      	cmp	r3, #0
 800873c:	d104      	bne.n	8008748 <HAL_TIM_PWM_Stop+0xc4>
 800873e:	687b      	ldr	r3, [r7, #4]
 8008740:	2201      	movs	r2, #1
 8008742:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008746:	e023      	b.n	8008790 <HAL_TIM_PWM_Stop+0x10c>
 8008748:	683b      	ldr	r3, [r7, #0]
 800874a:	2b04      	cmp	r3, #4
 800874c:	d104      	bne.n	8008758 <HAL_TIM_PWM_Stop+0xd4>
 800874e:	687b      	ldr	r3, [r7, #4]
 8008750:	2201      	movs	r2, #1
 8008752:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008756:	e01b      	b.n	8008790 <HAL_TIM_PWM_Stop+0x10c>
 8008758:	683b      	ldr	r3, [r7, #0]
 800875a:	2b08      	cmp	r3, #8
 800875c:	d104      	bne.n	8008768 <HAL_TIM_PWM_Stop+0xe4>
 800875e:	687b      	ldr	r3, [r7, #4]
 8008760:	2201      	movs	r2, #1
 8008762:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008766:	e013      	b.n	8008790 <HAL_TIM_PWM_Stop+0x10c>
 8008768:	683b      	ldr	r3, [r7, #0]
 800876a:	2b0c      	cmp	r3, #12
 800876c:	d104      	bne.n	8008778 <HAL_TIM_PWM_Stop+0xf4>
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	2201      	movs	r2, #1
 8008772:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008776:	e00b      	b.n	8008790 <HAL_TIM_PWM_Stop+0x10c>
 8008778:	683b      	ldr	r3, [r7, #0]
 800877a:	2b10      	cmp	r3, #16
 800877c:	d104      	bne.n	8008788 <HAL_TIM_PWM_Stop+0x104>
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	2201      	movs	r2, #1
 8008782:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008786:	e003      	b.n	8008790 <HAL_TIM_PWM_Stop+0x10c>
 8008788:	687b      	ldr	r3, [r7, #4]
 800878a:	2201      	movs	r2, #1
 800878c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8008790:	2300      	movs	r3, #0
 8008792:	4618      	mov	r0, r3
 8008794:	3708      	adds	r7, #8
 8008796:	46bd      	mov	sp, r7
 8008798:	bd80      	pop	{r7, pc}
 800879a:	bf00      	nop
 800879c:	40012c00 	.word	0x40012c00
 80087a0:	40013400 	.word	0x40013400
 80087a4:	40014000 	.word	0x40014000
 80087a8:	40014400 	.word	0x40014400
 80087ac:	40014800 	.word	0x40014800

080087b0 <HAL_TIM_PWM_ConfigChannel>:
 80087b0:	b580      	push	{r7, lr}
 80087b2:	b086      	sub	sp, #24
 80087b4:	af00      	add	r7, sp, #0
 80087b6:	60f8      	str	r0, [r7, #12]
 80087b8:	60b9      	str	r1, [r7, #8]
 80087ba:	607a      	str	r2, [r7, #4]
 80087bc:	2300      	movs	r3, #0
 80087be:	75fb      	strb	r3, [r7, #23]
 80087c0:	68fb      	ldr	r3, [r7, #12]
 80087c2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80087c6:	2b01      	cmp	r3, #1
 80087c8:	d101      	bne.n	80087ce <HAL_TIM_PWM_ConfigChannel+0x1e>
 80087ca:	2302      	movs	r3, #2
 80087cc:	e0ff      	b.n	80089ce <HAL_TIM_PWM_ConfigChannel+0x21e>
 80087ce:	68fb      	ldr	r3, [r7, #12]
 80087d0:	2201      	movs	r2, #1
 80087d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80087d6:	687b      	ldr	r3, [r7, #4]
 80087d8:	2b14      	cmp	r3, #20
 80087da:	f200 80f0 	bhi.w	80089be <HAL_TIM_PWM_ConfigChannel+0x20e>
 80087de:	a201      	add	r2, pc, #4	@ (adr r2, 80087e4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80087e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80087e4:	08008839 	.word	0x08008839
 80087e8:	080089bf 	.word	0x080089bf
 80087ec:	080089bf 	.word	0x080089bf
 80087f0:	080089bf 	.word	0x080089bf
 80087f4:	08008879 	.word	0x08008879
 80087f8:	080089bf 	.word	0x080089bf
 80087fc:	080089bf 	.word	0x080089bf
 8008800:	080089bf 	.word	0x080089bf
 8008804:	080088bb 	.word	0x080088bb
 8008808:	080089bf 	.word	0x080089bf
 800880c:	080089bf 	.word	0x080089bf
 8008810:	080089bf 	.word	0x080089bf
 8008814:	080088fb 	.word	0x080088fb
 8008818:	080089bf 	.word	0x080089bf
 800881c:	080089bf 	.word	0x080089bf
 8008820:	080089bf 	.word	0x080089bf
 8008824:	0800893d 	.word	0x0800893d
 8008828:	080089bf 	.word	0x080089bf
 800882c:	080089bf 	.word	0x080089bf
 8008830:	080089bf 	.word	0x080089bf
 8008834:	0800897d 	.word	0x0800897d
 8008838:	68fb      	ldr	r3, [r7, #12]
 800883a:	681b      	ldr	r3, [r3, #0]
 800883c:	68b9      	ldr	r1, [r7, #8]
 800883e:	4618      	mov	r0, r3
 8008840:	f000 fa60 	bl	8008d04 <TIM_OC1_SetConfig>
 8008844:	68fb      	ldr	r3, [r7, #12]
 8008846:	681b      	ldr	r3, [r3, #0]
 8008848:	699a      	ldr	r2, [r3, #24]
 800884a:	68fb      	ldr	r3, [r7, #12]
 800884c:	681b      	ldr	r3, [r3, #0]
 800884e:	f042 0208 	orr.w	r2, r2, #8
 8008852:	619a      	str	r2, [r3, #24]
 8008854:	68fb      	ldr	r3, [r7, #12]
 8008856:	681b      	ldr	r3, [r3, #0]
 8008858:	699a      	ldr	r2, [r3, #24]
 800885a:	68fb      	ldr	r3, [r7, #12]
 800885c:	681b      	ldr	r3, [r3, #0]
 800885e:	f022 0204 	bic.w	r2, r2, #4
 8008862:	619a      	str	r2, [r3, #24]
 8008864:	68fb      	ldr	r3, [r7, #12]
 8008866:	681b      	ldr	r3, [r3, #0]
 8008868:	6999      	ldr	r1, [r3, #24]
 800886a:	68bb      	ldr	r3, [r7, #8]
 800886c:	691a      	ldr	r2, [r3, #16]
 800886e:	68fb      	ldr	r3, [r7, #12]
 8008870:	681b      	ldr	r3, [r3, #0]
 8008872:	430a      	orrs	r2, r1
 8008874:	619a      	str	r2, [r3, #24]
 8008876:	e0a5      	b.n	80089c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 8008878:	68fb      	ldr	r3, [r7, #12]
 800887a:	681b      	ldr	r3, [r3, #0]
 800887c:	68b9      	ldr	r1, [r7, #8]
 800887e:	4618      	mov	r0, r3
 8008880:	f000 fad0 	bl	8008e24 <TIM_OC2_SetConfig>
 8008884:	68fb      	ldr	r3, [r7, #12]
 8008886:	681b      	ldr	r3, [r3, #0]
 8008888:	699a      	ldr	r2, [r3, #24]
 800888a:	68fb      	ldr	r3, [r7, #12]
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008892:	619a      	str	r2, [r3, #24]
 8008894:	68fb      	ldr	r3, [r7, #12]
 8008896:	681b      	ldr	r3, [r3, #0]
 8008898:	699a      	ldr	r2, [r3, #24]
 800889a:	68fb      	ldr	r3, [r7, #12]
 800889c:	681b      	ldr	r3, [r3, #0]
 800889e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80088a2:	619a      	str	r2, [r3, #24]
 80088a4:	68fb      	ldr	r3, [r7, #12]
 80088a6:	681b      	ldr	r3, [r3, #0]
 80088a8:	6999      	ldr	r1, [r3, #24]
 80088aa:	68bb      	ldr	r3, [r7, #8]
 80088ac:	691b      	ldr	r3, [r3, #16]
 80088ae:	021a      	lsls	r2, r3, #8
 80088b0:	68fb      	ldr	r3, [r7, #12]
 80088b2:	681b      	ldr	r3, [r3, #0]
 80088b4:	430a      	orrs	r2, r1
 80088b6:	619a      	str	r2, [r3, #24]
 80088b8:	e084      	b.n	80089c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 80088ba:	68fb      	ldr	r3, [r7, #12]
 80088bc:	681b      	ldr	r3, [r3, #0]
 80088be:	68b9      	ldr	r1, [r7, #8]
 80088c0:	4618      	mov	r0, r3
 80088c2:	f000 fb39 	bl	8008f38 <TIM_OC3_SetConfig>
 80088c6:	68fb      	ldr	r3, [r7, #12]
 80088c8:	681b      	ldr	r3, [r3, #0]
 80088ca:	69da      	ldr	r2, [r3, #28]
 80088cc:	68fb      	ldr	r3, [r7, #12]
 80088ce:	681b      	ldr	r3, [r3, #0]
 80088d0:	f042 0208 	orr.w	r2, r2, #8
 80088d4:	61da      	str	r2, [r3, #28]
 80088d6:	68fb      	ldr	r3, [r7, #12]
 80088d8:	681b      	ldr	r3, [r3, #0]
 80088da:	69da      	ldr	r2, [r3, #28]
 80088dc:	68fb      	ldr	r3, [r7, #12]
 80088de:	681b      	ldr	r3, [r3, #0]
 80088e0:	f022 0204 	bic.w	r2, r2, #4
 80088e4:	61da      	str	r2, [r3, #28]
 80088e6:	68fb      	ldr	r3, [r7, #12]
 80088e8:	681b      	ldr	r3, [r3, #0]
 80088ea:	69d9      	ldr	r1, [r3, #28]
 80088ec:	68bb      	ldr	r3, [r7, #8]
 80088ee:	691a      	ldr	r2, [r3, #16]
 80088f0:	68fb      	ldr	r3, [r7, #12]
 80088f2:	681b      	ldr	r3, [r3, #0]
 80088f4:	430a      	orrs	r2, r1
 80088f6:	61da      	str	r2, [r3, #28]
 80088f8:	e064      	b.n	80089c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 80088fa:	68fb      	ldr	r3, [r7, #12]
 80088fc:	681b      	ldr	r3, [r3, #0]
 80088fe:	68b9      	ldr	r1, [r7, #8]
 8008900:	4618      	mov	r0, r3
 8008902:	f000 fba1 	bl	8009048 <TIM_OC4_SetConfig>
 8008906:	68fb      	ldr	r3, [r7, #12]
 8008908:	681b      	ldr	r3, [r3, #0]
 800890a:	69da      	ldr	r2, [r3, #28]
 800890c:	68fb      	ldr	r3, [r7, #12]
 800890e:	681b      	ldr	r3, [r3, #0]
 8008910:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008914:	61da      	str	r2, [r3, #28]
 8008916:	68fb      	ldr	r3, [r7, #12]
 8008918:	681b      	ldr	r3, [r3, #0]
 800891a:	69da      	ldr	r2, [r3, #28]
 800891c:	68fb      	ldr	r3, [r7, #12]
 800891e:	681b      	ldr	r3, [r3, #0]
 8008920:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008924:	61da      	str	r2, [r3, #28]
 8008926:	68fb      	ldr	r3, [r7, #12]
 8008928:	681b      	ldr	r3, [r3, #0]
 800892a:	69d9      	ldr	r1, [r3, #28]
 800892c:	68bb      	ldr	r3, [r7, #8]
 800892e:	691b      	ldr	r3, [r3, #16]
 8008930:	021a      	lsls	r2, r3, #8
 8008932:	68fb      	ldr	r3, [r7, #12]
 8008934:	681b      	ldr	r3, [r3, #0]
 8008936:	430a      	orrs	r2, r1
 8008938:	61da      	str	r2, [r3, #28]
 800893a:	e043      	b.n	80089c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800893c:	68fb      	ldr	r3, [r7, #12]
 800893e:	681b      	ldr	r3, [r3, #0]
 8008940:	68b9      	ldr	r1, [r7, #8]
 8008942:	4618      	mov	r0, r3
 8008944:	f000 fc0a 	bl	800915c <TIM_OC5_SetConfig>
 8008948:	68fb      	ldr	r3, [r7, #12]
 800894a:	681b      	ldr	r3, [r3, #0]
 800894c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800894e:	68fb      	ldr	r3, [r7, #12]
 8008950:	681b      	ldr	r3, [r3, #0]
 8008952:	f042 0208 	orr.w	r2, r2, #8
 8008956:	651a      	str	r2, [r3, #80]	@ 0x50
 8008958:	68fb      	ldr	r3, [r7, #12]
 800895a:	681b      	ldr	r3, [r3, #0]
 800895c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800895e:	68fb      	ldr	r3, [r7, #12]
 8008960:	681b      	ldr	r3, [r3, #0]
 8008962:	f022 0204 	bic.w	r2, r2, #4
 8008966:	651a      	str	r2, [r3, #80]	@ 0x50
 8008968:	68fb      	ldr	r3, [r7, #12]
 800896a:	681b      	ldr	r3, [r3, #0]
 800896c:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 800896e:	68bb      	ldr	r3, [r7, #8]
 8008970:	691a      	ldr	r2, [r3, #16]
 8008972:	68fb      	ldr	r3, [r7, #12]
 8008974:	681b      	ldr	r3, [r3, #0]
 8008976:	430a      	orrs	r2, r1
 8008978:	651a      	str	r2, [r3, #80]	@ 0x50
 800897a:	e023      	b.n	80089c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 800897c:	68fb      	ldr	r3, [r7, #12]
 800897e:	681b      	ldr	r3, [r3, #0]
 8008980:	68b9      	ldr	r1, [r7, #8]
 8008982:	4618      	mov	r0, r3
 8008984:	f000 fc4e 	bl	8009224 <TIM_OC6_SetConfig>
 8008988:	68fb      	ldr	r3, [r7, #12]
 800898a:	681b      	ldr	r3, [r3, #0]
 800898c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800898e:	68fb      	ldr	r3, [r7, #12]
 8008990:	681b      	ldr	r3, [r3, #0]
 8008992:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008996:	651a      	str	r2, [r3, #80]	@ 0x50
 8008998:	68fb      	ldr	r3, [r7, #12]
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800899e:	68fb      	ldr	r3, [r7, #12]
 80089a0:	681b      	ldr	r3, [r3, #0]
 80089a2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80089a6:	651a      	str	r2, [r3, #80]	@ 0x50
 80089a8:	68fb      	ldr	r3, [r7, #12]
 80089aa:	681b      	ldr	r3, [r3, #0]
 80089ac:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 80089ae:	68bb      	ldr	r3, [r7, #8]
 80089b0:	691b      	ldr	r3, [r3, #16]
 80089b2:	021a      	lsls	r2, r3, #8
 80089b4:	68fb      	ldr	r3, [r7, #12]
 80089b6:	681b      	ldr	r3, [r3, #0]
 80089b8:	430a      	orrs	r2, r1
 80089ba:	651a      	str	r2, [r3, #80]	@ 0x50
 80089bc:	e002      	b.n	80089c4 <HAL_TIM_PWM_ConfigChannel+0x214>
 80089be:	2301      	movs	r3, #1
 80089c0:	75fb      	strb	r3, [r7, #23]
 80089c2:	bf00      	nop
 80089c4:	68fb      	ldr	r3, [r7, #12]
 80089c6:	2200      	movs	r2, #0
 80089c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80089cc:	7dfb      	ldrb	r3, [r7, #23]
 80089ce:	4618      	mov	r0, r3
 80089d0:	3718      	adds	r7, #24
 80089d2:	46bd      	mov	sp, r7
 80089d4:	bd80      	pop	{r7, pc}
 80089d6:	bf00      	nop

080089d8 <HAL_TIM_ConfigClockSource>:
 80089d8:	b580      	push	{r7, lr}
 80089da:	b084      	sub	sp, #16
 80089dc:	af00      	add	r7, sp, #0
 80089de:	6078      	str	r0, [r7, #4]
 80089e0:	6039      	str	r1, [r7, #0]
 80089e2:	2300      	movs	r3, #0
 80089e4:	73fb      	strb	r3, [r7, #15]
 80089e6:	687b      	ldr	r3, [r7, #4]
 80089e8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80089ec:	2b01      	cmp	r3, #1
 80089ee:	d101      	bne.n	80089f4 <HAL_TIM_ConfigClockSource+0x1c>
 80089f0:	2302      	movs	r3, #2
 80089f2:	e0de      	b.n	8008bb2 <HAL_TIM_ConfigClockSource+0x1da>
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	2201      	movs	r2, #1
 80089f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80089fc:	687b      	ldr	r3, [r7, #4]
 80089fe:	2202      	movs	r2, #2
 8008a00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008a04:	687b      	ldr	r3, [r7, #4]
 8008a06:	681b      	ldr	r3, [r3, #0]
 8008a08:	689b      	ldr	r3, [r3, #8]
 8008a0a:	60bb      	str	r3, [r7, #8]
 8008a0c:	68bb      	ldr	r3, [r7, #8]
 8008a0e:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 8008a12:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8008a16:	60bb      	str	r3, [r7, #8]
 8008a18:	68bb      	ldr	r3, [r7, #8]
 8008a1a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008a1e:	60bb      	str	r3, [r7, #8]
 8008a20:	687b      	ldr	r3, [r7, #4]
 8008a22:	681b      	ldr	r3, [r3, #0]
 8008a24:	68ba      	ldr	r2, [r7, #8]
 8008a26:	609a      	str	r2, [r3, #8]
 8008a28:	683b      	ldr	r3, [r7, #0]
 8008a2a:	681b      	ldr	r3, [r3, #0]
 8008a2c:	4a63      	ldr	r2, [pc, #396]	@ (8008bbc <HAL_TIM_ConfigClockSource+0x1e4>)
 8008a2e:	4293      	cmp	r3, r2
 8008a30:	f000 80a9 	beq.w	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008a34:	4a61      	ldr	r2, [pc, #388]	@ (8008bbc <HAL_TIM_ConfigClockSource+0x1e4>)
 8008a36:	4293      	cmp	r3, r2
 8008a38:	f200 80ae 	bhi.w	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008a3c:	4a60      	ldr	r2, [pc, #384]	@ (8008bc0 <HAL_TIM_ConfigClockSource+0x1e8>)
 8008a3e:	4293      	cmp	r3, r2
 8008a40:	f000 80a1 	beq.w	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008a44:	4a5e      	ldr	r2, [pc, #376]	@ (8008bc0 <HAL_TIM_ConfigClockSource+0x1e8>)
 8008a46:	4293      	cmp	r3, r2
 8008a48:	f200 80a6 	bhi.w	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008a4c:	4a5d      	ldr	r2, [pc, #372]	@ (8008bc4 <HAL_TIM_ConfigClockSource+0x1ec>)
 8008a4e:	4293      	cmp	r3, r2
 8008a50:	f000 8099 	beq.w	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008a54:	4a5b      	ldr	r2, [pc, #364]	@ (8008bc4 <HAL_TIM_ConfigClockSource+0x1ec>)
 8008a56:	4293      	cmp	r3, r2
 8008a58:	f200 809e 	bhi.w	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008a5c:	4a5a      	ldr	r2, [pc, #360]	@ (8008bc8 <HAL_TIM_ConfigClockSource+0x1f0>)
 8008a5e:	4293      	cmp	r3, r2
 8008a60:	f000 8091 	beq.w	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008a64:	4a58      	ldr	r2, [pc, #352]	@ (8008bc8 <HAL_TIM_ConfigClockSource+0x1f0>)
 8008a66:	4293      	cmp	r3, r2
 8008a68:	f200 8096 	bhi.w	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008a6c:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8008a70:	f000 8089 	beq.w	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008a74:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8008a78:	f200 808e 	bhi.w	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008a7c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008a80:	d03e      	beq.n	8008b00 <HAL_TIM_ConfigClockSource+0x128>
 8008a82:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008a86:	f200 8087 	bhi.w	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008a8a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008a8e:	f000 8086 	beq.w	8008b9e <HAL_TIM_ConfigClockSource+0x1c6>
 8008a92:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008a96:	d87f      	bhi.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008a98:	2b70      	cmp	r3, #112	@ 0x70
 8008a9a:	d01a      	beq.n	8008ad2 <HAL_TIM_ConfigClockSource+0xfa>
 8008a9c:	2b70      	cmp	r3, #112	@ 0x70
 8008a9e:	d87b      	bhi.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008aa0:	2b60      	cmp	r3, #96	@ 0x60
 8008aa2:	d050      	beq.n	8008b46 <HAL_TIM_ConfigClockSource+0x16e>
 8008aa4:	2b60      	cmp	r3, #96	@ 0x60
 8008aa6:	d877      	bhi.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008aa8:	2b50      	cmp	r3, #80	@ 0x50
 8008aaa:	d03c      	beq.n	8008b26 <HAL_TIM_ConfigClockSource+0x14e>
 8008aac:	2b50      	cmp	r3, #80	@ 0x50
 8008aae:	d873      	bhi.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008ab0:	2b40      	cmp	r3, #64	@ 0x40
 8008ab2:	d058      	beq.n	8008b66 <HAL_TIM_ConfigClockSource+0x18e>
 8008ab4:	2b40      	cmp	r3, #64	@ 0x40
 8008ab6:	d86f      	bhi.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008ab8:	2b30      	cmp	r3, #48	@ 0x30
 8008aba:	d064      	beq.n	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008abc:	2b30      	cmp	r3, #48	@ 0x30
 8008abe:	d86b      	bhi.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008ac0:	2b20      	cmp	r3, #32
 8008ac2:	d060      	beq.n	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008ac4:	2b20      	cmp	r3, #32
 8008ac6:	d867      	bhi.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008ac8:	2b00      	cmp	r3, #0
 8008aca:	d05c      	beq.n	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008acc:	2b10      	cmp	r3, #16
 8008ace:	d05a      	beq.n	8008b86 <HAL_TIM_ConfigClockSource+0x1ae>
 8008ad0:	e062      	b.n	8008b98 <HAL_TIM_ConfigClockSource+0x1c0>
 8008ad2:	687b      	ldr	r3, [r7, #4]
 8008ad4:	6818      	ldr	r0, [r3, #0]
 8008ad6:	683b      	ldr	r3, [r7, #0]
 8008ad8:	6899      	ldr	r1, [r3, #8]
 8008ada:	683b      	ldr	r3, [r7, #0]
 8008adc:	685a      	ldr	r2, [r3, #4]
 8008ade:	683b      	ldr	r3, [r7, #0]
 8008ae0:	68db      	ldr	r3, [r3, #12]
 8008ae2:	f000 fce9 	bl	80094b8 <TIM_ETR_SetConfig>
 8008ae6:	687b      	ldr	r3, [r7, #4]
 8008ae8:	681b      	ldr	r3, [r3, #0]
 8008aea:	689b      	ldr	r3, [r3, #8]
 8008aec:	60bb      	str	r3, [r7, #8]
 8008aee:	68bb      	ldr	r3, [r7, #8]
 8008af0:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8008af4:	60bb      	str	r3, [r7, #8]
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	681b      	ldr	r3, [r3, #0]
 8008afa:	68ba      	ldr	r2, [r7, #8]
 8008afc:	609a      	str	r2, [r3, #8]
 8008afe:	e04f      	b.n	8008ba0 <HAL_TIM_ConfigClockSource+0x1c8>
 8008b00:	687b      	ldr	r3, [r7, #4]
 8008b02:	6818      	ldr	r0, [r3, #0]
 8008b04:	683b      	ldr	r3, [r7, #0]
 8008b06:	6899      	ldr	r1, [r3, #8]
 8008b08:	683b      	ldr	r3, [r7, #0]
 8008b0a:	685a      	ldr	r2, [r3, #4]
 8008b0c:	683b      	ldr	r3, [r7, #0]
 8008b0e:	68db      	ldr	r3, [r3, #12]
 8008b10:	f000 fcd2 	bl	80094b8 <TIM_ETR_SetConfig>
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	681b      	ldr	r3, [r3, #0]
 8008b18:	689a      	ldr	r2, [r3, #8]
 8008b1a:	687b      	ldr	r3, [r7, #4]
 8008b1c:	681b      	ldr	r3, [r3, #0]
 8008b1e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8008b22:	609a      	str	r2, [r3, #8]
 8008b24:	e03c      	b.n	8008ba0 <HAL_TIM_ConfigClockSource+0x1c8>
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	6818      	ldr	r0, [r3, #0]
 8008b2a:	683b      	ldr	r3, [r7, #0]
 8008b2c:	6859      	ldr	r1, [r3, #4]
 8008b2e:	683b      	ldr	r3, [r7, #0]
 8008b30:	68db      	ldr	r3, [r3, #12]
 8008b32:	461a      	mov	r2, r3
 8008b34:	f000 fc44 	bl	80093c0 <TIM_TI1_ConfigInputStage>
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	681b      	ldr	r3, [r3, #0]
 8008b3c:	2150      	movs	r1, #80	@ 0x50
 8008b3e:	4618      	mov	r0, r3
 8008b40:	f000 fc9d 	bl	800947e <TIM_ITRx_SetConfig>
 8008b44:	e02c      	b.n	8008ba0 <HAL_TIM_ConfigClockSource+0x1c8>
 8008b46:	687b      	ldr	r3, [r7, #4]
 8008b48:	6818      	ldr	r0, [r3, #0]
 8008b4a:	683b      	ldr	r3, [r7, #0]
 8008b4c:	6859      	ldr	r1, [r3, #4]
 8008b4e:	683b      	ldr	r3, [r7, #0]
 8008b50:	68db      	ldr	r3, [r3, #12]
 8008b52:	461a      	mov	r2, r3
 8008b54:	f000 fc63 	bl	800941e <TIM_TI2_ConfigInputStage>
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	681b      	ldr	r3, [r3, #0]
 8008b5c:	2160      	movs	r1, #96	@ 0x60
 8008b5e:	4618      	mov	r0, r3
 8008b60:	f000 fc8d 	bl	800947e <TIM_ITRx_SetConfig>
 8008b64:	e01c      	b.n	8008ba0 <HAL_TIM_ConfigClockSource+0x1c8>
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	6818      	ldr	r0, [r3, #0]
 8008b6a:	683b      	ldr	r3, [r7, #0]
 8008b6c:	6859      	ldr	r1, [r3, #4]
 8008b6e:	683b      	ldr	r3, [r7, #0]
 8008b70:	68db      	ldr	r3, [r3, #12]
 8008b72:	461a      	mov	r2, r3
 8008b74:	f000 fc24 	bl	80093c0 <TIM_TI1_ConfigInputStage>
 8008b78:	687b      	ldr	r3, [r7, #4]
 8008b7a:	681b      	ldr	r3, [r3, #0]
 8008b7c:	2140      	movs	r1, #64	@ 0x40
 8008b7e:	4618      	mov	r0, r3
 8008b80:	f000 fc7d 	bl	800947e <TIM_ITRx_SetConfig>
 8008b84:	e00c      	b.n	8008ba0 <HAL_TIM_ConfigClockSource+0x1c8>
 8008b86:	687b      	ldr	r3, [r7, #4]
 8008b88:	681a      	ldr	r2, [r3, #0]
 8008b8a:	683b      	ldr	r3, [r7, #0]
 8008b8c:	681b      	ldr	r3, [r3, #0]
 8008b8e:	4619      	mov	r1, r3
 8008b90:	4610      	mov	r0, r2
 8008b92:	f000 fc74 	bl	800947e <TIM_ITRx_SetConfig>
 8008b96:	e003      	b.n	8008ba0 <HAL_TIM_ConfigClockSource+0x1c8>
 8008b98:	2301      	movs	r3, #1
 8008b9a:	73fb      	strb	r3, [r7, #15]
 8008b9c:	e000      	b.n	8008ba0 <HAL_TIM_ConfigClockSource+0x1c8>
 8008b9e:	bf00      	nop
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	2201      	movs	r2, #1
 8008ba4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	2200      	movs	r2, #0
 8008bac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008bb0:	7bfb      	ldrb	r3, [r7, #15]
 8008bb2:	4618      	mov	r0, r3
 8008bb4:	3710      	adds	r7, #16
 8008bb6:	46bd      	mov	sp, r7
 8008bb8:	bd80      	pop	{r7, pc}
 8008bba:	bf00      	nop
 8008bbc:	00100070 	.word	0x00100070
 8008bc0:	00100040 	.word	0x00100040
 8008bc4:	00100030 	.word	0x00100030
 8008bc8:	00100020 	.word	0x00100020

08008bcc <TIM_Base_SetConfig>:
 8008bcc:	b480      	push	{r7}
 8008bce:	b085      	sub	sp, #20
 8008bd0:	af00      	add	r7, sp, #0
 8008bd2:	6078      	str	r0, [r7, #4]
 8008bd4:	6039      	str	r1, [r7, #0]
 8008bd6:	687b      	ldr	r3, [r7, #4]
 8008bd8:	681b      	ldr	r3, [r3, #0]
 8008bda:	60fb      	str	r3, [r7, #12]
 8008bdc:	687b      	ldr	r3, [r7, #4]
 8008bde:	4a42      	ldr	r2, [pc, #264]	@ (8008ce8 <TIM_Base_SetConfig+0x11c>)
 8008be0:	4293      	cmp	r3, r2
 8008be2:	d00f      	beq.n	8008c04 <TIM_Base_SetConfig+0x38>
 8008be4:	687b      	ldr	r3, [r7, #4]
 8008be6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008bea:	d00b      	beq.n	8008c04 <TIM_Base_SetConfig+0x38>
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	4a3f      	ldr	r2, [pc, #252]	@ (8008cec <TIM_Base_SetConfig+0x120>)
 8008bf0:	4293      	cmp	r3, r2
 8008bf2:	d007      	beq.n	8008c04 <TIM_Base_SetConfig+0x38>
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	4a3e      	ldr	r2, [pc, #248]	@ (8008cf0 <TIM_Base_SetConfig+0x124>)
 8008bf8:	4293      	cmp	r3, r2
 8008bfa:	d003      	beq.n	8008c04 <TIM_Base_SetConfig+0x38>
 8008bfc:	687b      	ldr	r3, [r7, #4]
 8008bfe:	4a3d      	ldr	r2, [pc, #244]	@ (8008cf4 <TIM_Base_SetConfig+0x128>)
 8008c00:	4293      	cmp	r3, r2
 8008c02:	d108      	bne.n	8008c16 <TIM_Base_SetConfig+0x4a>
 8008c04:	68fb      	ldr	r3, [r7, #12]
 8008c06:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008c0a:	60fb      	str	r3, [r7, #12]
 8008c0c:	683b      	ldr	r3, [r7, #0]
 8008c0e:	685b      	ldr	r3, [r3, #4]
 8008c10:	68fa      	ldr	r2, [r7, #12]
 8008c12:	4313      	orrs	r3, r2
 8008c14:	60fb      	str	r3, [r7, #12]
 8008c16:	687b      	ldr	r3, [r7, #4]
 8008c18:	4a33      	ldr	r2, [pc, #204]	@ (8008ce8 <TIM_Base_SetConfig+0x11c>)
 8008c1a:	4293      	cmp	r3, r2
 8008c1c:	d01b      	beq.n	8008c56 <TIM_Base_SetConfig+0x8a>
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008c24:	d017      	beq.n	8008c56 <TIM_Base_SetConfig+0x8a>
 8008c26:	687b      	ldr	r3, [r7, #4]
 8008c28:	4a30      	ldr	r2, [pc, #192]	@ (8008cec <TIM_Base_SetConfig+0x120>)
 8008c2a:	4293      	cmp	r3, r2
 8008c2c:	d013      	beq.n	8008c56 <TIM_Base_SetConfig+0x8a>
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	4a2f      	ldr	r2, [pc, #188]	@ (8008cf0 <TIM_Base_SetConfig+0x124>)
 8008c32:	4293      	cmp	r3, r2
 8008c34:	d00f      	beq.n	8008c56 <TIM_Base_SetConfig+0x8a>
 8008c36:	687b      	ldr	r3, [r7, #4]
 8008c38:	4a2e      	ldr	r2, [pc, #184]	@ (8008cf4 <TIM_Base_SetConfig+0x128>)
 8008c3a:	4293      	cmp	r3, r2
 8008c3c:	d00b      	beq.n	8008c56 <TIM_Base_SetConfig+0x8a>
 8008c3e:	687b      	ldr	r3, [r7, #4]
 8008c40:	4a2d      	ldr	r2, [pc, #180]	@ (8008cf8 <TIM_Base_SetConfig+0x12c>)
 8008c42:	4293      	cmp	r3, r2
 8008c44:	d007      	beq.n	8008c56 <TIM_Base_SetConfig+0x8a>
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	4a2c      	ldr	r2, [pc, #176]	@ (8008cfc <TIM_Base_SetConfig+0x130>)
 8008c4a:	4293      	cmp	r3, r2
 8008c4c:	d003      	beq.n	8008c56 <TIM_Base_SetConfig+0x8a>
 8008c4e:	687b      	ldr	r3, [r7, #4]
 8008c50:	4a2b      	ldr	r2, [pc, #172]	@ (8008d00 <TIM_Base_SetConfig+0x134>)
 8008c52:	4293      	cmp	r3, r2
 8008c54:	d108      	bne.n	8008c68 <TIM_Base_SetConfig+0x9c>
 8008c56:	68fb      	ldr	r3, [r7, #12]
 8008c58:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008c5c:	60fb      	str	r3, [r7, #12]
 8008c5e:	683b      	ldr	r3, [r7, #0]
 8008c60:	68db      	ldr	r3, [r3, #12]
 8008c62:	68fa      	ldr	r2, [r7, #12]
 8008c64:	4313      	orrs	r3, r2
 8008c66:	60fb      	str	r3, [r7, #12]
 8008c68:	68fb      	ldr	r3, [r7, #12]
 8008c6a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8008c6e:	683b      	ldr	r3, [r7, #0]
 8008c70:	695b      	ldr	r3, [r3, #20]
 8008c72:	4313      	orrs	r3, r2
 8008c74:	60fb      	str	r3, [r7, #12]
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	68fa      	ldr	r2, [r7, #12]
 8008c7a:	601a      	str	r2, [r3, #0]
 8008c7c:	683b      	ldr	r3, [r7, #0]
 8008c7e:	689a      	ldr	r2, [r3, #8]
 8008c80:	687b      	ldr	r3, [r7, #4]
 8008c82:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008c84:	683b      	ldr	r3, [r7, #0]
 8008c86:	681a      	ldr	r2, [r3, #0]
 8008c88:	687b      	ldr	r3, [r7, #4]
 8008c8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8008c8c:	687b      	ldr	r3, [r7, #4]
 8008c8e:	4a16      	ldr	r2, [pc, #88]	@ (8008ce8 <TIM_Base_SetConfig+0x11c>)
 8008c90:	4293      	cmp	r3, r2
 8008c92:	d00f      	beq.n	8008cb4 <TIM_Base_SetConfig+0xe8>
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	4a17      	ldr	r2, [pc, #92]	@ (8008cf4 <TIM_Base_SetConfig+0x128>)
 8008c98:	4293      	cmp	r3, r2
 8008c9a:	d00b      	beq.n	8008cb4 <TIM_Base_SetConfig+0xe8>
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	4a16      	ldr	r2, [pc, #88]	@ (8008cf8 <TIM_Base_SetConfig+0x12c>)
 8008ca0:	4293      	cmp	r3, r2
 8008ca2:	d007      	beq.n	8008cb4 <TIM_Base_SetConfig+0xe8>
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	4a15      	ldr	r2, [pc, #84]	@ (8008cfc <TIM_Base_SetConfig+0x130>)
 8008ca8:	4293      	cmp	r3, r2
 8008caa:	d003      	beq.n	8008cb4 <TIM_Base_SetConfig+0xe8>
 8008cac:	687b      	ldr	r3, [r7, #4]
 8008cae:	4a14      	ldr	r2, [pc, #80]	@ (8008d00 <TIM_Base_SetConfig+0x134>)
 8008cb0:	4293      	cmp	r3, r2
 8008cb2:	d103      	bne.n	8008cbc <TIM_Base_SetConfig+0xf0>
 8008cb4:	683b      	ldr	r3, [r7, #0]
 8008cb6:	691a      	ldr	r2, [r3, #16]
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	631a      	str	r2, [r3, #48]	@ 0x30
 8008cbc:	687b      	ldr	r3, [r7, #4]
 8008cbe:	2201      	movs	r2, #1
 8008cc0:	615a      	str	r2, [r3, #20]
 8008cc2:	687b      	ldr	r3, [r7, #4]
 8008cc4:	691b      	ldr	r3, [r3, #16]
 8008cc6:	f003 0301 	and.w	r3, r3, #1
 8008cca:	2b01      	cmp	r3, #1
 8008ccc:	d105      	bne.n	8008cda <TIM_Base_SetConfig+0x10e>
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	691b      	ldr	r3, [r3, #16]
 8008cd2:	f023 0201 	bic.w	r2, r3, #1
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	611a      	str	r2, [r3, #16]
 8008cda:	bf00      	nop
 8008cdc:	3714      	adds	r7, #20
 8008cde:	46bd      	mov	sp, r7
 8008ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ce4:	4770      	bx	lr
 8008ce6:	bf00      	nop
 8008ce8:	40012c00 	.word	0x40012c00
 8008cec:	40000400 	.word	0x40000400
 8008cf0:	40000800 	.word	0x40000800
 8008cf4:	40013400 	.word	0x40013400
 8008cf8:	40014000 	.word	0x40014000
 8008cfc:	40014400 	.word	0x40014400
 8008d00:	40014800 	.word	0x40014800

08008d04 <TIM_OC1_SetConfig>:
 8008d04:	b480      	push	{r7}
 8008d06:	b087      	sub	sp, #28
 8008d08:	af00      	add	r7, sp, #0
 8008d0a:	6078      	str	r0, [r7, #4]
 8008d0c:	6039      	str	r1, [r7, #0]
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	6a1b      	ldr	r3, [r3, #32]
 8008d12:	617b      	str	r3, [r7, #20]
 8008d14:	687b      	ldr	r3, [r7, #4]
 8008d16:	6a1b      	ldr	r3, [r3, #32]
 8008d18:	f023 0201 	bic.w	r2, r3, #1
 8008d1c:	687b      	ldr	r3, [r7, #4]
 8008d1e:	621a      	str	r2, [r3, #32]
 8008d20:	687b      	ldr	r3, [r7, #4]
 8008d22:	685b      	ldr	r3, [r3, #4]
 8008d24:	613b      	str	r3, [r7, #16]
 8008d26:	687b      	ldr	r3, [r7, #4]
 8008d28:	699b      	ldr	r3, [r3, #24]
 8008d2a:	60fb      	str	r3, [r7, #12]
 8008d2c:	68fb      	ldr	r3, [r7, #12]
 8008d2e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8008d32:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008d36:	60fb      	str	r3, [r7, #12]
 8008d38:	68fb      	ldr	r3, [r7, #12]
 8008d3a:	f023 0303 	bic.w	r3, r3, #3
 8008d3e:	60fb      	str	r3, [r7, #12]
 8008d40:	683b      	ldr	r3, [r7, #0]
 8008d42:	681b      	ldr	r3, [r3, #0]
 8008d44:	68fa      	ldr	r2, [r7, #12]
 8008d46:	4313      	orrs	r3, r2
 8008d48:	60fb      	str	r3, [r7, #12]
 8008d4a:	697b      	ldr	r3, [r7, #20]
 8008d4c:	f023 0302 	bic.w	r3, r3, #2
 8008d50:	617b      	str	r3, [r7, #20]
 8008d52:	683b      	ldr	r3, [r7, #0]
 8008d54:	689b      	ldr	r3, [r3, #8]
 8008d56:	697a      	ldr	r2, [r7, #20]
 8008d58:	4313      	orrs	r3, r2
 8008d5a:	617b      	str	r3, [r7, #20]
 8008d5c:	687b      	ldr	r3, [r7, #4]
 8008d5e:	4a2c      	ldr	r2, [pc, #176]	@ (8008e10 <TIM_OC1_SetConfig+0x10c>)
 8008d60:	4293      	cmp	r3, r2
 8008d62:	d00f      	beq.n	8008d84 <TIM_OC1_SetConfig+0x80>
 8008d64:	687b      	ldr	r3, [r7, #4]
 8008d66:	4a2b      	ldr	r2, [pc, #172]	@ (8008e14 <TIM_OC1_SetConfig+0x110>)
 8008d68:	4293      	cmp	r3, r2
 8008d6a:	d00b      	beq.n	8008d84 <TIM_OC1_SetConfig+0x80>
 8008d6c:	687b      	ldr	r3, [r7, #4]
 8008d6e:	4a2a      	ldr	r2, [pc, #168]	@ (8008e18 <TIM_OC1_SetConfig+0x114>)
 8008d70:	4293      	cmp	r3, r2
 8008d72:	d007      	beq.n	8008d84 <TIM_OC1_SetConfig+0x80>
 8008d74:	687b      	ldr	r3, [r7, #4]
 8008d76:	4a29      	ldr	r2, [pc, #164]	@ (8008e1c <TIM_OC1_SetConfig+0x118>)
 8008d78:	4293      	cmp	r3, r2
 8008d7a:	d003      	beq.n	8008d84 <TIM_OC1_SetConfig+0x80>
 8008d7c:	687b      	ldr	r3, [r7, #4]
 8008d7e:	4a28      	ldr	r2, [pc, #160]	@ (8008e20 <TIM_OC1_SetConfig+0x11c>)
 8008d80:	4293      	cmp	r3, r2
 8008d82:	d10c      	bne.n	8008d9e <TIM_OC1_SetConfig+0x9a>
 8008d84:	697b      	ldr	r3, [r7, #20]
 8008d86:	f023 0308 	bic.w	r3, r3, #8
 8008d8a:	617b      	str	r3, [r7, #20]
 8008d8c:	683b      	ldr	r3, [r7, #0]
 8008d8e:	68db      	ldr	r3, [r3, #12]
 8008d90:	697a      	ldr	r2, [r7, #20]
 8008d92:	4313      	orrs	r3, r2
 8008d94:	617b      	str	r3, [r7, #20]
 8008d96:	697b      	ldr	r3, [r7, #20]
 8008d98:	f023 0304 	bic.w	r3, r3, #4
 8008d9c:	617b      	str	r3, [r7, #20]
 8008d9e:	687b      	ldr	r3, [r7, #4]
 8008da0:	4a1b      	ldr	r2, [pc, #108]	@ (8008e10 <TIM_OC1_SetConfig+0x10c>)
 8008da2:	4293      	cmp	r3, r2
 8008da4:	d00f      	beq.n	8008dc6 <TIM_OC1_SetConfig+0xc2>
 8008da6:	687b      	ldr	r3, [r7, #4]
 8008da8:	4a1a      	ldr	r2, [pc, #104]	@ (8008e14 <TIM_OC1_SetConfig+0x110>)
 8008daa:	4293      	cmp	r3, r2
 8008dac:	d00b      	beq.n	8008dc6 <TIM_OC1_SetConfig+0xc2>
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	4a19      	ldr	r2, [pc, #100]	@ (8008e18 <TIM_OC1_SetConfig+0x114>)
 8008db2:	4293      	cmp	r3, r2
 8008db4:	d007      	beq.n	8008dc6 <TIM_OC1_SetConfig+0xc2>
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	4a18      	ldr	r2, [pc, #96]	@ (8008e1c <TIM_OC1_SetConfig+0x118>)
 8008dba:	4293      	cmp	r3, r2
 8008dbc:	d003      	beq.n	8008dc6 <TIM_OC1_SetConfig+0xc2>
 8008dbe:	687b      	ldr	r3, [r7, #4]
 8008dc0:	4a17      	ldr	r2, [pc, #92]	@ (8008e20 <TIM_OC1_SetConfig+0x11c>)
 8008dc2:	4293      	cmp	r3, r2
 8008dc4:	d111      	bne.n	8008dea <TIM_OC1_SetConfig+0xe6>
 8008dc6:	693b      	ldr	r3, [r7, #16]
 8008dc8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008dcc:	613b      	str	r3, [r7, #16]
 8008dce:	693b      	ldr	r3, [r7, #16]
 8008dd0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8008dd4:	613b      	str	r3, [r7, #16]
 8008dd6:	683b      	ldr	r3, [r7, #0]
 8008dd8:	695b      	ldr	r3, [r3, #20]
 8008dda:	693a      	ldr	r2, [r7, #16]
 8008ddc:	4313      	orrs	r3, r2
 8008dde:	613b      	str	r3, [r7, #16]
 8008de0:	683b      	ldr	r3, [r7, #0]
 8008de2:	699b      	ldr	r3, [r3, #24]
 8008de4:	693a      	ldr	r2, [r7, #16]
 8008de6:	4313      	orrs	r3, r2
 8008de8:	613b      	str	r3, [r7, #16]
 8008dea:	687b      	ldr	r3, [r7, #4]
 8008dec:	693a      	ldr	r2, [r7, #16]
 8008dee:	605a      	str	r2, [r3, #4]
 8008df0:	687b      	ldr	r3, [r7, #4]
 8008df2:	68fa      	ldr	r2, [r7, #12]
 8008df4:	619a      	str	r2, [r3, #24]
 8008df6:	683b      	ldr	r3, [r7, #0]
 8008df8:	685a      	ldr	r2, [r3, #4]
 8008dfa:	687b      	ldr	r3, [r7, #4]
 8008dfc:	635a      	str	r2, [r3, #52]	@ 0x34
 8008dfe:	687b      	ldr	r3, [r7, #4]
 8008e00:	697a      	ldr	r2, [r7, #20]
 8008e02:	621a      	str	r2, [r3, #32]
 8008e04:	bf00      	nop
 8008e06:	371c      	adds	r7, #28
 8008e08:	46bd      	mov	sp, r7
 8008e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e0e:	4770      	bx	lr
 8008e10:	40012c00 	.word	0x40012c00
 8008e14:	40013400 	.word	0x40013400
 8008e18:	40014000 	.word	0x40014000
 8008e1c:	40014400 	.word	0x40014400
 8008e20:	40014800 	.word	0x40014800

08008e24 <TIM_OC2_SetConfig>:
 8008e24:	b480      	push	{r7}
 8008e26:	b087      	sub	sp, #28
 8008e28:	af00      	add	r7, sp, #0
 8008e2a:	6078      	str	r0, [r7, #4]
 8008e2c:	6039      	str	r1, [r7, #0]
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	6a1b      	ldr	r3, [r3, #32]
 8008e32:	617b      	str	r3, [r7, #20]
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	6a1b      	ldr	r3, [r3, #32]
 8008e38:	f023 0210 	bic.w	r2, r3, #16
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	621a      	str	r2, [r3, #32]
 8008e40:	687b      	ldr	r3, [r7, #4]
 8008e42:	685b      	ldr	r3, [r3, #4]
 8008e44:	613b      	str	r3, [r7, #16]
 8008e46:	687b      	ldr	r3, [r7, #4]
 8008e48:	699b      	ldr	r3, [r3, #24]
 8008e4a:	60fb      	str	r3, [r7, #12]
 8008e4c:	68fb      	ldr	r3, [r7, #12]
 8008e4e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8008e52:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8008e56:	60fb      	str	r3, [r7, #12]
 8008e58:	68fb      	ldr	r3, [r7, #12]
 8008e5a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008e5e:	60fb      	str	r3, [r7, #12]
 8008e60:	683b      	ldr	r3, [r7, #0]
 8008e62:	681b      	ldr	r3, [r3, #0]
 8008e64:	021b      	lsls	r3, r3, #8
 8008e66:	68fa      	ldr	r2, [r7, #12]
 8008e68:	4313      	orrs	r3, r2
 8008e6a:	60fb      	str	r3, [r7, #12]
 8008e6c:	697b      	ldr	r3, [r7, #20]
 8008e6e:	f023 0320 	bic.w	r3, r3, #32
 8008e72:	617b      	str	r3, [r7, #20]
 8008e74:	683b      	ldr	r3, [r7, #0]
 8008e76:	689b      	ldr	r3, [r3, #8]
 8008e78:	011b      	lsls	r3, r3, #4
 8008e7a:	697a      	ldr	r2, [r7, #20]
 8008e7c:	4313      	orrs	r3, r2
 8008e7e:	617b      	str	r3, [r7, #20]
 8008e80:	687b      	ldr	r3, [r7, #4]
 8008e82:	4a28      	ldr	r2, [pc, #160]	@ (8008f24 <TIM_OC2_SetConfig+0x100>)
 8008e84:	4293      	cmp	r3, r2
 8008e86:	d003      	beq.n	8008e90 <TIM_OC2_SetConfig+0x6c>
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	4a27      	ldr	r2, [pc, #156]	@ (8008f28 <TIM_OC2_SetConfig+0x104>)
 8008e8c:	4293      	cmp	r3, r2
 8008e8e:	d10d      	bne.n	8008eac <TIM_OC2_SetConfig+0x88>
 8008e90:	697b      	ldr	r3, [r7, #20]
 8008e92:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008e96:	617b      	str	r3, [r7, #20]
 8008e98:	683b      	ldr	r3, [r7, #0]
 8008e9a:	68db      	ldr	r3, [r3, #12]
 8008e9c:	011b      	lsls	r3, r3, #4
 8008e9e:	697a      	ldr	r2, [r7, #20]
 8008ea0:	4313      	orrs	r3, r2
 8008ea2:	617b      	str	r3, [r7, #20]
 8008ea4:	697b      	ldr	r3, [r7, #20]
 8008ea6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008eaa:	617b      	str	r3, [r7, #20]
 8008eac:	687b      	ldr	r3, [r7, #4]
 8008eae:	4a1d      	ldr	r2, [pc, #116]	@ (8008f24 <TIM_OC2_SetConfig+0x100>)
 8008eb0:	4293      	cmp	r3, r2
 8008eb2:	d00f      	beq.n	8008ed4 <TIM_OC2_SetConfig+0xb0>
 8008eb4:	687b      	ldr	r3, [r7, #4]
 8008eb6:	4a1c      	ldr	r2, [pc, #112]	@ (8008f28 <TIM_OC2_SetConfig+0x104>)
 8008eb8:	4293      	cmp	r3, r2
 8008eba:	d00b      	beq.n	8008ed4 <TIM_OC2_SetConfig+0xb0>
 8008ebc:	687b      	ldr	r3, [r7, #4]
 8008ebe:	4a1b      	ldr	r2, [pc, #108]	@ (8008f2c <TIM_OC2_SetConfig+0x108>)
 8008ec0:	4293      	cmp	r3, r2
 8008ec2:	d007      	beq.n	8008ed4 <TIM_OC2_SetConfig+0xb0>
 8008ec4:	687b      	ldr	r3, [r7, #4]
 8008ec6:	4a1a      	ldr	r2, [pc, #104]	@ (8008f30 <TIM_OC2_SetConfig+0x10c>)
 8008ec8:	4293      	cmp	r3, r2
 8008eca:	d003      	beq.n	8008ed4 <TIM_OC2_SetConfig+0xb0>
 8008ecc:	687b      	ldr	r3, [r7, #4]
 8008ece:	4a19      	ldr	r2, [pc, #100]	@ (8008f34 <TIM_OC2_SetConfig+0x110>)
 8008ed0:	4293      	cmp	r3, r2
 8008ed2:	d113      	bne.n	8008efc <TIM_OC2_SetConfig+0xd8>
 8008ed4:	693b      	ldr	r3, [r7, #16]
 8008ed6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8008eda:	613b      	str	r3, [r7, #16]
 8008edc:	693b      	ldr	r3, [r7, #16]
 8008ede:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8008ee2:	613b      	str	r3, [r7, #16]
 8008ee4:	683b      	ldr	r3, [r7, #0]
 8008ee6:	695b      	ldr	r3, [r3, #20]
 8008ee8:	009b      	lsls	r3, r3, #2
 8008eea:	693a      	ldr	r2, [r7, #16]
 8008eec:	4313      	orrs	r3, r2
 8008eee:	613b      	str	r3, [r7, #16]
 8008ef0:	683b      	ldr	r3, [r7, #0]
 8008ef2:	699b      	ldr	r3, [r3, #24]
 8008ef4:	009b      	lsls	r3, r3, #2
 8008ef6:	693a      	ldr	r2, [r7, #16]
 8008ef8:	4313      	orrs	r3, r2
 8008efa:	613b      	str	r3, [r7, #16]
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	693a      	ldr	r2, [r7, #16]
 8008f00:	605a      	str	r2, [r3, #4]
 8008f02:	687b      	ldr	r3, [r7, #4]
 8008f04:	68fa      	ldr	r2, [r7, #12]
 8008f06:	619a      	str	r2, [r3, #24]
 8008f08:	683b      	ldr	r3, [r7, #0]
 8008f0a:	685a      	ldr	r2, [r3, #4]
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	639a      	str	r2, [r3, #56]	@ 0x38
 8008f10:	687b      	ldr	r3, [r7, #4]
 8008f12:	697a      	ldr	r2, [r7, #20]
 8008f14:	621a      	str	r2, [r3, #32]
 8008f16:	bf00      	nop
 8008f18:	371c      	adds	r7, #28
 8008f1a:	46bd      	mov	sp, r7
 8008f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f20:	4770      	bx	lr
 8008f22:	bf00      	nop
 8008f24:	40012c00 	.word	0x40012c00
 8008f28:	40013400 	.word	0x40013400
 8008f2c:	40014000 	.word	0x40014000
 8008f30:	40014400 	.word	0x40014400
 8008f34:	40014800 	.word	0x40014800

08008f38 <TIM_OC3_SetConfig>:
 8008f38:	b480      	push	{r7}
 8008f3a:	b087      	sub	sp, #28
 8008f3c:	af00      	add	r7, sp, #0
 8008f3e:	6078      	str	r0, [r7, #4]
 8008f40:	6039      	str	r1, [r7, #0]
 8008f42:	687b      	ldr	r3, [r7, #4]
 8008f44:	6a1b      	ldr	r3, [r3, #32]
 8008f46:	617b      	str	r3, [r7, #20]
 8008f48:	687b      	ldr	r3, [r7, #4]
 8008f4a:	6a1b      	ldr	r3, [r3, #32]
 8008f4c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8008f50:	687b      	ldr	r3, [r7, #4]
 8008f52:	621a      	str	r2, [r3, #32]
 8008f54:	687b      	ldr	r3, [r7, #4]
 8008f56:	685b      	ldr	r3, [r3, #4]
 8008f58:	613b      	str	r3, [r7, #16]
 8008f5a:	687b      	ldr	r3, [r7, #4]
 8008f5c:	69db      	ldr	r3, [r3, #28]
 8008f5e:	60fb      	str	r3, [r7, #12]
 8008f60:	68fb      	ldr	r3, [r7, #12]
 8008f62:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8008f66:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008f6a:	60fb      	str	r3, [r7, #12]
 8008f6c:	68fb      	ldr	r3, [r7, #12]
 8008f6e:	f023 0303 	bic.w	r3, r3, #3
 8008f72:	60fb      	str	r3, [r7, #12]
 8008f74:	683b      	ldr	r3, [r7, #0]
 8008f76:	681b      	ldr	r3, [r3, #0]
 8008f78:	68fa      	ldr	r2, [r7, #12]
 8008f7a:	4313      	orrs	r3, r2
 8008f7c:	60fb      	str	r3, [r7, #12]
 8008f7e:	697b      	ldr	r3, [r7, #20]
 8008f80:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8008f84:	617b      	str	r3, [r7, #20]
 8008f86:	683b      	ldr	r3, [r7, #0]
 8008f88:	689b      	ldr	r3, [r3, #8]
 8008f8a:	021b      	lsls	r3, r3, #8
 8008f8c:	697a      	ldr	r2, [r7, #20]
 8008f8e:	4313      	orrs	r3, r2
 8008f90:	617b      	str	r3, [r7, #20]
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	4a27      	ldr	r2, [pc, #156]	@ (8009034 <TIM_OC3_SetConfig+0xfc>)
 8008f96:	4293      	cmp	r3, r2
 8008f98:	d003      	beq.n	8008fa2 <TIM_OC3_SetConfig+0x6a>
 8008f9a:	687b      	ldr	r3, [r7, #4]
 8008f9c:	4a26      	ldr	r2, [pc, #152]	@ (8009038 <TIM_OC3_SetConfig+0x100>)
 8008f9e:	4293      	cmp	r3, r2
 8008fa0:	d10d      	bne.n	8008fbe <TIM_OC3_SetConfig+0x86>
 8008fa2:	697b      	ldr	r3, [r7, #20]
 8008fa4:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8008fa8:	617b      	str	r3, [r7, #20]
 8008faa:	683b      	ldr	r3, [r7, #0]
 8008fac:	68db      	ldr	r3, [r3, #12]
 8008fae:	021b      	lsls	r3, r3, #8
 8008fb0:	697a      	ldr	r2, [r7, #20]
 8008fb2:	4313      	orrs	r3, r2
 8008fb4:	617b      	str	r3, [r7, #20]
 8008fb6:	697b      	ldr	r3, [r7, #20]
 8008fb8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8008fbc:	617b      	str	r3, [r7, #20]
 8008fbe:	687b      	ldr	r3, [r7, #4]
 8008fc0:	4a1c      	ldr	r2, [pc, #112]	@ (8009034 <TIM_OC3_SetConfig+0xfc>)
 8008fc2:	4293      	cmp	r3, r2
 8008fc4:	d00f      	beq.n	8008fe6 <TIM_OC3_SetConfig+0xae>
 8008fc6:	687b      	ldr	r3, [r7, #4]
 8008fc8:	4a1b      	ldr	r2, [pc, #108]	@ (8009038 <TIM_OC3_SetConfig+0x100>)
 8008fca:	4293      	cmp	r3, r2
 8008fcc:	d00b      	beq.n	8008fe6 <TIM_OC3_SetConfig+0xae>
 8008fce:	687b      	ldr	r3, [r7, #4]
 8008fd0:	4a1a      	ldr	r2, [pc, #104]	@ (800903c <TIM_OC3_SetConfig+0x104>)
 8008fd2:	4293      	cmp	r3, r2
 8008fd4:	d007      	beq.n	8008fe6 <TIM_OC3_SetConfig+0xae>
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	4a19      	ldr	r2, [pc, #100]	@ (8009040 <TIM_OC3_SetConfig+0x108>)
 8008fda:	4293      	cmp	r3, r2
 8008fdc:	d003      	beq.n	8008fe6 <TIM_OC3_SetConfig+0xae>
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	4a18      	ldr	r2, [pc, #96]	@ (8009044 <TIM_OC3_SetConfig+0x10c>)
 8008fe2:	4293      	cmp	r3, r2
 8008fe4:	d113      	bne.n	800900e <TIM_OC3_SetConfig+0xd6>
 8008fe6:	693b      	ldr	r3, [r7, #16]
 8008fe8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8008fec:	613b      	str	r3, [r7, #16]
 8008fee:	693b      	ldr	r3, [r7, #16]
 8008ff0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8008ff4:	613b      	str	r3, [r7, #16]
 8008ff6:	683b      	ldr	r3, [r7, #0]
 8008ff8:	695b      	ldr	r3, [r3, #20]
 8008ffa:	011b      	lsls	r3, r3, #4
 8008ffc:	693a      	ldr	r2, [r7, #16]
 8008ffe:	4313      	orrs	r3, r2
 8009000:	613b      	str	r3, [r7, #16]
 8009002:	683b      	ldr	r3, [r7, #0]
 8009004:	699b      	ldr	r3, [r3, #24]
 8009006:	011b      	lsls	r3, r3, #4
 8009008:	693a      	ldr	r2, [r7, #16]
 800900a:	4313      	orrs	r3, r2
 800900c:	613b      	str	r3, [r7, #16]
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	693a      	ldr	r2, [r7, #16]
 8009012:	605a      	str	r2, [r3, #4]
 8009014:	687b      	ldr	r3, [r7, #4]
 8009016:	68fa      	ldr	r2, [r7, #12]
 8009018:	61da      	str	r2, [r3, #28]
 800901a:	683b      	ldr	r3, [r7, #0]
 800901c:	685a      	ldr	r2, [r3, #4]
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	63da      	str	r2, [r3, #60]	@ 0x3c
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	697a      	ldr	r2, [r7, #20]
 8009026:	621a      	str	r2, [r3, #32]
 8009028:	bf00      	nop
 800902a:	371c      	adds	r7, #28
 800902c:	46bd      	mov	sp, r7
 800902e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009032:	4770      	bx	lr
 8009034:	40012c00 	.word	0x40012c00
 8009038:	40013400 	.word	0x40013400
 800903c:	40014000 	.word	0x40014000
 8009040:	40014400 	.word	0x40014400
 8009044:	40014800 	.word	0x40014800

08009048 <TIM_OC4_SetConfig>:
 8009048:	b480      	push	{r7}
 800904a:	b087      	sub	sp, #28
 800904c:	af00      	add	r7, sp, #0
 800904e:	6078      	str	r0, [r7, #4]
 8009050:	6039      	str	r1, [r7, #0]
 8009052:	687b      	ldr	r3, [r7, #4]
 8009054:	6a1b      	ldr	r3, [r3, #32]
 8009056:	617b      	str	r3, [r7, #20]
 8009058:	687b      	ldr	r3, [r7, #4]
 800905a:	6a1b      	ldr	r3, [r3, #32]
 800905c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8009060:	687b      	ldr	r3, [r7, #4]
 8009062:	621a      	str	r2, [r3, #32]
 8009064:	687b      	ldr	r3, [r7, #4]
 8009066:	685b      	ldr	r3, [r3, #4]
 8009068:	613b      	str	r3, [r7, #16]
 800906a:	687b      	ldr	r3, [r7, #4]
 800906c:	69db      	ldr	r3, [r3, #28]
 800906e:	60fb      	str	r3, [r7, #12]
 8009070:	68fb      	ldr	r3, [r7, #12]
 8009072:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8009076:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800907a:	60fb      	str	r3, [r7, #12]
 800907c:	68fb      	ldr	r3, [r7, #12]
 800907e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009082:	60fb      	str	r3, [r7, #12]
 8009084:	683b      	ldr	r3, [r7, #0]
 8009086:	681b      	ldr	r3, [r3, #0]
 8009088:	021b      	lsls	r3, r3, #8
 800908a:	68fa      	ldr	r2, [r7, #12]
 800908c:	4313      	orrs	r3, r2
 800908e:	60fb      	str	r3, [r7, #12]
 8009090:	697b      	ldr	r3, [r7, #20]
 8009092:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8009096:	617b      	str	r3, [r7, #20]
 8009098:	683b      	ldr	r3, [r7, #0]
 800909a:	689b      	ldr	r3, [r3, #8]
 800909c:	031b      	lsls	r3, r3, #12
 800909e:	697a      	ldr	r2, [r7, #20]
 80090a0:	4313      	orrs	r3, r2
 80090a2:	617b      	str	r3, [r7, #20]
 80090a4:	687b      	ldr	r3, [r7, #4]
 80090a6:	4a28      	ldr	r2, [pc, #160]	@ (8009148 <TIM_OC4_SetConfig+0x100>)
 80090a8:	4293      	cmp	r3, r2
 80090aa:	d003      	beq.n	80090b4 <TIM_OC4_SetConfig+0x6c>
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	4a27      	ldr	r2, [pc, #156]	@ (800914c <TIM_OC4_SetConfig+0x104>)
 80090b0:	4293      	cmp	r3, r2
 80090b2:	d10d      	bne.n	80090d0 <TIM_OC4_SetConfig+0x88>
 80090b4:	697b      	ldr	r3, [r7, #20]
 80090b6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80090ba:	617b      	str	r3, [r7, #20]
 80090bc:	683b      	ldr	r3, [r7, #0]
 80090be:	68db      	ldr	r3, [r3, #12]
 80090c0:	031b      	lsls	r3, r3, #12
 80090c2:	697a      	ldr	r2, [r7, #20]
 80090c4:	4313      	orrs	r3, r2
 80090c6:	617b      	str	r3, [r7, #20]
 80090c8:	697b      	ldr	r3, [r7, #20]
 80090ca:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80090ce:	617b      	str	r3, [r7, #20]
 80090d0:	687b      	ldr	r3, [r7, #4]
 80090d2:	4a1d      	ldr	r2, [pc, #116]	@ (8009148 <TIM_OC4_SetConfig+0x100>)
 80090d4:	4293      	cmp	r3, r2
 80090d6:	d00f      	beq.n	80090f8 <TIM_OC4_SetConfig+0xb0>
 80090d8:	687b      	ldr	r3, [r7, #4]
 80090da:	4a1c      	ldr	r2, [pc, #112]	@ (800914c <TIM_OC4_SetConfig+0x104>)
 80090dc:	4293      	cmp	r3, r2
 80090de:	d00b      	beq.n	80090f8 <TIM_OC4_SetConfig+0xb0>
 80090e0:	687b      	ldr	r3, [r7, #4]
 80090e2:	4a1b      	ldr	r2, [pc, #108]	@ (8009150 <TIM_OC4_SetConfig+0x108>)
 80090e4:	4293      	cmp	r3, r2
 80090e6:	d007      	beq.n	80090f8 <TIM_OC4_SetConfig+0xb0>
 80090e8:	687b      	ldr	r3, [r7, #4]
 80090ea:	4a1a      	ldr	r2, [pc, #104]	@ (8009154 <TIM_OC4_SetConfig+0x10c>)
 80090ec:	4293      	cmp	r3, r2
 80090ee:	d003      	beq.n	80090f8 <TIM_OC4_SetConfig+0xb0>
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	4a19      	ldr	r2, [pc, #100]	@ (8009158 <TIM_OC4_SetConfig+0x110>)
 80090f4:	4293      	cmp	r3, r2
 80090f6:	d113      	bne.n	8009120 <TIM_OC4_SetConfig+0xd8>
 80090f8:	693b      	ldr	r3, [r7, #16]
 80090fa:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80090fe:	613b      	str	r3, [r7, #16]
 8009100:	693b      	ldr	r3, [r7, #16]
 8009102:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8009106:	613b      	str	r3, [r7, #16]
 8009108:	683b      	ldr	r3, [r7, #0]
 800910a:	695b      	ldr	r3, [r3, #20]
 800910c:	019b      	lsls	r3, r3, #6
 800910e:	693a      	ldr	r2, [r7, #16]
 8009110:	4313      	orrs	r3, r2
 8009112:	613b      	str	r3, [r7, #16]
 8009114:	683b      	ldr	r3, [r7, #0]
 8009116:	699b      	ldr	r3, [r3, #24]
 8009118:	019b      	lsls	r3, r3, #6
 800911a:	693a      	ldr	r2, [r7, #16]
 800911c:	4313      	orrs	r3, r2
 800911e:	613b      	str	r3, [r7, #16]
 8009120:	687b      	ldr	r3, [r7, #4]
 8009122:	693a      	ldr	r2, [r7, #16]
 8009124:	605a      	str	r2, [r3, #4]
 8009126:	687b      	ldr	r3, [r7, #4]
 8009128:	68fa      	ldr	r2, [r7, #12]
 800912a:	61da      	str	r2, [r3, #28]
 800912c:	683b      	ldr	r3, [r7, #0]
 800912e:	685a      	ldr	r2, [r3, #4]
 8009130:	687b      	ldr	r3, [r7, #4]
 8009132:	641a      	str	r2, [r3, #64]	@ 0x40
 8009134:	687b      	ldr	r3, [r7, #4]
 8009136:	697a      	ldr	r2, [r7, #20]
 8009138:	621a      	str	r2, [r3, #32]
 800913a:	bf00      	nop
 800913c:	371c      	adds	r7, #28
 800913e:	46bd      	mov	sp, r7
 8009140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009144:	4770      	bx	lr
 8009146:	bf00      	nop
 8009148:	40012c00 	.word	0x40012c00
 800914c:	40013400 	.word	0x40013400
 8009150:	40014000 	.word	0x40014000
 8009154:	40014400 	.word	0x40014400
 8009158:	40014800 	.word	0x40014800

0800915c <TIM_OC5_SetConfig>:
 800915c:	b480      	push	{r7}
 800915e:	b087      	sub	sp, #28
 8009160:	af00      	add	r7, sp, #0
 8009162:	6078      	str	r0, [r7, #4]
 8009164:	6039      	str	r1, [r7, #0]
 8009166:	687b      	ldr	r3, [r7, #4]
 8009168:	6a1b      	ldr	r3, [r3, #32]
 800916a:	613b      	str	r3, [r7, #16]
 800916c:	687b      	ldr	r3, [r7, #4]
 800916e:	6a1b      	ldr	r3, [r3, #32]
 8009170:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8009174:	687b      	ldr	r3, [r7, #4]
 8009176:	621a      	str	r2, [r3, #32]
 8009178:	687b      	ldr	r3, [r7, #4]
 800917a:	685b      	ldr	r3, [r3, #4]
 800917c:	617b      	str	r3, [r7, #20]
 800917e:	687b      	ldr	r3, [r7, #4]
 8009180:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009182:	60fb      	str	r3, [r7, #12]
 8009184:	68fb      	ldr	r3, [r7, #12]
 8009186:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800918a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800918e:	60fb      	str	r3, [r7, #12]
 8009190:	683b      	ldr	r3, [r7, #0]
 8009192:	681b      	ldr	r3, [r3, #0]
 8009194:	68fa      	ldr	r2, [r7, #12]
 8009196:	4313      	orrs	r3, r2
 8009198:	60fb      	str	r3, [r7, #12]
 800919a:	693b      	ldr	r3, [r7, #16]
 800919c:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80091a0:	613b      	str	r3, [r7, #16]
 80091a2:	683b      	ldr	r3, [r7, #0]
 80091a4:	689b      	ldr	r3, [r3, #8]
 80091a6:	041b      	lsls	r3, r3, #16
 80091a8:	693a      	ldr	r2, [r7, #16]
 80091aa:	4313      	orrs	r3, r2
 80091ac:	613b      	str	r3, [r7, #16]
 80091ae:	687b      	ldr	r3, [r7, #4]
 80091b0:	4a17      	ldr	r2, [pc, #92]	@ (8009210 <TIM_OC5_SetConfig+0xb4>)
 80091b2:	4293      	cmp	r3, r2
 80091b4:	d00f      	beq.n	80091d6 <TIM_OC5_SetConfig+0x7a>
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	4a16      	ldr	r2, [pc, #88]	@ (8009214 <TIM_OC5_SetConfig+0xb8>)
 80091ba:	4293      	cmp	r3, r2
 80091bc:	d00b      	beq.n	80091d6 <TIM_OC5_SetConfig+0x7a>
 80091be:	687b      	ldr	r3, [r7, #4]
 80091c0:	4a15      	ldr	r2, [pc, #84]	@ (8009218 <TIM_OC5_SetConfig+0xbc>)
 80091c2:	4293      	cmp	r3, r2
 80091c4:	d007      	beq.n	80091d6 <TIM_OC5_SetConfig+0x7a>
 80091c6:	687b      	ldr	r3, [r7, #4]
 80091c8:	4a14      	ldr	r2, [pc, #80]	@ (800921c <TIM_OC5_SetConfig+0xc0>)
 80091ca:	4293      	cmp	r3, r2
 80091cc:	d003      	beq.n	80091d6 <TIM_OC5_SetConfig+0x7a>
 80091ce:	687b      	ldr	r3, [r7, #4]
 80091d0:	4a13      	ldr	r2, [pc, #76]	@ (8009220 <TIM_OC5_SetConfig+0xc4>)
 80091d2:	4293      	cmp	r3, r2
 80091d4:	d109      	bne.n	80091ea <TIM_OC5_SetConfig+0x8e>
 80091d6:	697b      	ldr	r3, [r7, #20]
 80091d8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80091dc:	617b      	str	r3, [r7, #20]
 80091de:	683b      	ldr	r3, [r7, #0]
 80091e0:	695b      	ldr	r3, [r3, #20]
 80091e2:	021b      	lsls	r3, r3, #8
 80091e4:	697a      	ldr	r2, [r7, #20]
 80091e6:	4313      	orrs	r3, r2
 80091e8:	617b      	str	r3, [r7, #20]
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	697a      	ldr	r2, [r7, #20]
 80091ee:	605a      	str	r2, [r3, #4]
 80091f0:	687b      	ldr	r3, [r7, #4]
 80091f2:	68fa      	ldr	r2, [r7, #12]
 80091f4:	651a      	str	r2, [r3, #80]	@ 0x50
 80091f6:	683b      	ldr	r3, [r7, #0]
 80091f8:	685a      	ldr	r2, [r3, #4]
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	649a      	str	r2, [r3, #72]	@ 0x48
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	693a      	ldr	r2, [r7, #16]
 8009202:	621a      	str	r2, [r3, #32]
 8009204:	bf00      	nop
 8009206:	371c      	adds	r7, #28
 8009208:	46bd      	mov	sp, r7
 800920a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800920e:	4770      	bx	lr
 8009210:	40012c00 	.word	0x40012c00
 8009214:	40013400 	.word	0x40013400
 8009218:	40014000 	.word	0x40014000
 800921c:	40014400 	.word	0x40014400
 8009220:	40014800 	.word	0x40014800

08009224 <TIM_OC6_SetConfig>:
 8009224:	b480      	push	{r7}
 8009226:	b087      	sub	sp, #28
 8009228:	af00      	add	r7, sp, #0
 800922a:	6078      	str	r0, [r7, #4]
 800922c:	6039      	str	r1, [r7, #0]
 800922e:	687b      	ldr	r3, [r7, #4]
 8009230:	6a1b      	ldr	r3, [r3, #32]
 8009232:	613b      	str	r3, [r7, #16]
 8009234:	687b      	ldr	r3, [r7, #4]
 8009236:	6a1b      	ldr	r3, [r3, #32]
 8009238:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	621a      	str	r2, [r3, #32]
 8009240:	687b      	ldr	r3, [r7, #4]
 8009242:	685b      	ldr	r3, [r3, #4]
 8009244:	617b      	str	r3, [r7, #20]
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800924a:	60fb      	str	r3, [r7, #12]
 800924c:	68fb      	ldr	r3, [r7, #12]
 800924e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8009252:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8009256:	60fb      	str	r3, [r7, #12]
 8009258:	683b      	ldr	r3, [r7, #0]
 800925a:	681b      	ldr	r3, [r3, #0]
 800925c:	021b      	lsls	r3, r3, #8
 800925e:	68fa      	ldr	r2, [r7, #12]
 8009260:	4313      	orrs	r3, r2
 8009262:	60fb      	str	r3, [r7, #12]
 8009264:	693b      	ldr	r3, [r7, #16]
 8009266:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800926a:	613b      	str	r3, [r7, #16]
 800926c:	683b      	ldr	r3, [r7, #0]
 800926e:	689b      	ldr	r3, [r3, #8]
 8009270:	051b      	lsls	r3, r3, #20
 8009272:	693a      	ldr	r2, [r7, #16]
 8009274:	4313      	orrs	r3, r2
 8009276:	613b      	str	r3, [r7, #16]
 8009278:	687b      	ldr	r3, [r7, #4]
 800927a:	4a18      	ldr	r2, [pc, #96]	@ (80092dc <TIM_OC6_SetConfig+0xb8>)
 800927c:	4293      	cmp	r3, r2
 800927e:	d00f      	beq.n	80092a0 <TIM_OC6_SetConfig+0x7c>
 8009280:	687b      	ldr	r3, [r7, #4]
 8009282:	4a17      	ldr	r2, [pc, #92]	@ (80092e0 <TIM_OC6_SetConfig+0xbc>)
 8009284:	4293      	cmp	r3, r2
 8009286:	d00b      	beq.n	80092a0 <TIM_OC6_SetConfig+0x7c>
 8009288:	687b      	ldr	r3, [r7, #4]
 800928a:	4a16      	ldr	r2, [pc, #88]	@ (80092e4 <TIM_OC6_SetConfig+0xc0>)
 800928c:	4293      	cmp	r3, r2
 800928e:	d007      	beq.n	80092a0 <TIM_OC6_SetConfig+0x7c>
 8009290:	687b      	ldr	r3, [r7, #4]
 8009292:	4a15      	ldr	r2, [pc, #84]	@ (80092e8 <TIM_OC6_SetConfig+0xc4>)
 8009294:	4293      	cmp	r3, r2
 8009296:	d003      	beq.n	80092a0 <TIM_OC6_SetConfig+0x7c>
 8009298:	687b      	ldr	r3, [r7, #4]
 800929a:	4a14      	ldr	r2, [pc, #80]	@ (80092ec <TIM_OC6_SetConfig+0xc8>)
 800929c:	4293      	cmp	r3, r2
 800929e:	d109      	bne.n	80092b4 <TIM_OC6_SetConfig+0x90>
 80092a0:	697b      	ldr	r3, [r7, #20]
 80092a2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80092a6:	617b      	str	r3, [r7, #20]
 80092a8:	683b      	ldr	r3, [r7, #0]
 80092aa:	695b      	ldr	r3, [r3, #20]
 80092ac:	029b      	lsls	r3, r3, #10
 80092ae:	697a      	ldr	r2, [r7, #20]
 80092b0:	4313      	orrs	r3, r2
 80092b2:	617b      	str	r3, [r7, #20]
 80092b4:	687b      	ldr	r3, [r7, #4]
 80092b6:	697a      	ldr	r2, [r7, #20]
 80092b8:	605a      	str	r2, [r3, #4]
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	68fa      	ldr	r2, [r7, #12]
 80092be:	651a      	str	r2, [r3, #80]	@ 0x50
 80092c0:	683b      	ldr	r3, [r7, #0]
 80092c2:	685a      	ldr	r2, [r3, #4]
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	64da      	str	r2, [r3, #76]	@ 0x4c
 80092c8:	687b      	ldr	r3, [r7, #4]
 80092ca:	693a      	ldr	r2, [r7, #16]
 80092cc:	621a      	str	r2, [r3, #32]
 80092ce:	bf00      	nop
 80092d0:	371c      	adds	r7, #28
 80092d2:	46bd      	mov	sp, r7
 80092d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092d8:	4770      	bx	lr
 80092da:	bf00      	nop
 80092dc:	40012c00 	.word	0x40012c00
 80092e0:	40013400 	.word	0x40013400
 80092e4:	40014000 	.word	0x40014000
 80092e8:	40014400 	.word	0x40014400
 80092ec:	40014800 	.word	0x40014800

080092f0 <TIM_TI1_SetConfig>:
 80092f0:	b480      	push	{r7}
 80092f2:	b087      	sub	sp, #28
 80092f4:	af00      	add	r7, sp, #0
 80092f6:	60f8      	str	r0, [r7, #12]
 80092f8:	60b9      	str	r1, [r7, #8]
 80092fa:	607a      	str	r2, [r7, #4]
 80092fc:	603b      	str	r3, [r7, #0]
 80092fe:	68fb      	ldr	r3, [r7, #12]
 8009300:	6a1b      	ldr	r3, [r3, #32]
 8009302:	613b      	str	r3, [r7, #16]
 8009304:	68fb      	ldr	r3, [r7, #12]
 8009306:	6a1b      	ldr	r3, [r3, #32]
 8009308:	f023 0201 	bic.w	r2, r3, #1
 800930c:	68fb      	ldr	r3, [r7, #12]
 800930e:	621a      	str	r2, [r3, #32]
 8009310:	68fb      	ldr	r3, [r7, #12]
 8009312:	699b      	ldr	r3, [r3, #24]
 8009314:	617b      	str	r3, [r7, #20]
 8009316:	68fb      	ldr	r3, [r7, #12]
 8009318:	4a24      	ldr	r2, [pc, #144]	@ (80093ac <TIM_TI1_SetConfig+0xbc>)
 800931a:	4293      	cmp	r3, r2
 800931c:	d013      	beq.n	8009346 <TIM_TI1_SetConfig+0x56>
 800931e:	68fb      	ldr	r3, [r7, #12]
 8009320:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009324:	d00f      	beq.n	8009346 <TIM_TI1_SetConfig+0x56>
 8009326:	68fb      	ldr	r3, [r7, #12]
 8009328:	4a21      	ldr	r2, [pc, #132]	@ (80093b0 <TIM_TI1_SetConfig+0xc0>)
 800932a:	4293      	cmp	r3, r2
 800932c:	d00b      	beq.n	8009346 <TIM_TI1_SetConfig+0x56>
 800932e:	68fb      	ldr	r3, [r7, #12]
 8009330:	4a20      	ldr	r2, [pc, #128]	@ (80093b4 <TIM_TI1_SetConfig+0xc4>)
 8009332:	4293      	cmp	r3, r2
 8009334:	d007      	beq.n	8009346 <TIM_TI1_SetConfig+0x56>
 8009336:	68fb      	ldr	r3, [r7, #12]
 8009338:	4a1f      	ldr	r2, [pc, #124]	@ (80093b8 <TIM_TI1_SetConfig+0xc8>)
 800933a:	4293      	cmp	r3, r2
 800933c:	d003      	beq.n	8009346 <TIM_TI1_SetConfig+0x56>
 800933e:	68fb      	ldr	r3, [r7, #12]
 8009340:	4a1e      	ldr	r2, [pc, #120]	@ (80093bc <TIM_TI1_SetConfig+0xcc>)
 8009342:	4293      	cmp	r3, r2
 8009344:	d101      	bne.n	800934a <TIM_TI1_SetConfig+0x5a>
 8009346:	2301      	movs	r3, #1
 8009348:	e000      	b.n	800934c <TIM_TI1_SetConfig+0x5c>
 800934a:	2300      	movs	r3, #0
 800934c:	2b00      	cmp	r3, #0
 800934e:	d008      	beq.n	8009362 <TIM_TI1_SetConfig+0x72>
 8009350:	697b      	ldr	r3, [r7, #20]
 8009352:	f023 0303 	bic.w	r3, r3, #3
 8009356:	617b      	str	r3, [r7, #20]
 8009358:	697a      	ldr	r2, [r7, #20]
 800935a:	687b      	ldr	r3, [r7, #4]
 800935c:	4313      	orrs	r3, r2
 800935e:	617b      	str	r3, [r7, #20]
 8009360:	e003      	b.n	800936a <TIM_TI1_SetConfig+0x7a>
 8009362:	697b      	ldr	r3, [r7, #20]
 8009364:	f043 0301 	orr.w	r3, r3, #1
 8009368:	617b      	str	r3, [r7, #20]
 800936a:	697b      	ldr	r3, [r7, #20]
 800936c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8009370:	617b      	str	r3, [r7, #20]
 8009372:	683b      	ldr	r3, [r7, #0]
 8009374:	011b      	lsls	r3, r3, #4
 8009376:	b2db      	uxtb	r3, r3
 8009378:	697a      	ldr	r2, [r7, #20]
 800937a:	4313      	orrs	r3, r2
 800937c:	617b      	str	r3, [r7, #20]
 800937e:	693b      	ldr	r3, [r7, #16]
 8009380:	f023 030a 	bic.w	r3, r3, #10
 8009384:	613b      	str	r3, [r7, #16]
 8009386:	68bb      	ldr	r3, [r7, #8]
 8009388:	f003 030a 	and.w	r3, r3, #10
 800938c:	693a      	ldr	r2, [r7, #16]
 800938e:	4313      	orrs	r3, r2
 8009390:	613b      	str	r3, [r7, #16]
 8009392:	68fb      	ldr	r3, [r7, #12]
 8009394:	697a      	ldr	r2, [r7, #20]
 8009396:	619a      	str	r2, [r3, #24]
 8009398:	68fb      	ldr	r3, [r7, #12]
 800939a:	693a      	ldr	r2, [r7, #16]
 800939c:	621a      	str	r2, [r3, #32]
 800939e:	bf00      	nop
 80093a0:	371c      	adds	r7, #28
 80093a2:	46bd      	mov	sp, r7
 80093a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093a8:	4770      	bx	lr
 80093aa:	bf00      	nop
 80093ac:	40012c00 	.word	0x40012c00
 80093b0:	40000400 	.word	0x40000400
 80093b4:	40000800 	.word	0x40000800
 80093b8:	40013400 	.word	0x40013400
 80093bc:	40014000 	.word	0x40014000

080093c0 <TIM_TI1_ConfigInputStage>:
 80093c0:	b480      	push	{r7}
 80093c2:	b087      	sub	sp, #28
 80093c4:	af00      	add	r7, sp, #0
 80093c6:	60f8      	str	r0, [r7, #12]
 80093c8:	60b9      	str	r1, [r7, #8]
 80093ca:	607a      	str	r2, [r7, #4]
 80093cc:	68fb      	ldr	r3, [r7, #12]
 80093ce:	6a1b      	ldr	r3, [r3, #32]
 80093d0:	617b      	str	r3, [r7, #20]
 80093d2:	68fb      	ldr	r3, [r7, #12]
 80093d4:	6a1b      	ldr	r3, [r3, #32]
 80093d6:	f023 0201 	bic.w	r2, r3, #1
 80093da:	68fb      	ldr	r3, [r7, #12]
 80093dc:	621a      	str	r2, [r3, #32]
 80093de:	68fb      	ldr	r3, [r7, #12]
 80093e0:	699b      	ldr	r3, [r3, #24]
 80093e2:	613b      	str	r3, [r7, #16]
 80093e4:	693b      	ldr	r3, [r7, #16]
 80093e6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80093ea:	613b      	str	r3, [r7, #16]
 80093ec:	687b      	ldr	r3, [r7, #4]
 80093ee:	011b      	lsls	r3, r3, #4
 80093f0:	693a      	ldr	r2, [r7, #16]
 80093f2:	4313      	orrs	r3, r2
 80093f4:	613b      	str	r3, [r7, #16]
 80093f6:	697b      	ldr	r3, [r7, #20]
 80093f8:	f023 030a 	bic.w	r3, r3, #10
 80093fc:	617b      	str	r3, [r7, #20]
 80093fe:	697a      	ldr	r2, [r7, #20]
 8009400:	68bb      	ldr	r3, [r7, #8]
 8009402:	4313      	orrs	r3, r2
 8009404:	617b      	str	r3, [r7, #20]
 8009406:	68fb      	ldr	r3, [r7, #12]
 8009408:	693a      	ldr	r2, [r7, #16]
 800940a:	619a      	str	r2, [r3, #24]
 800940c:	68fb      	ldr	r3, [r7, #12]
 800940e:	697a      	ldr	r2, [r7, #20]
 8009410:	621a      	str	r2, [r3, #32]
 8009412:	bf00      	nop
 8009414:	371c      	adds	r7, #28
 8009416:	46bd      	mov	sp, r7
 8009418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800941c:	4770      	bx	lr

0800941e <TIM_TI2_ConfigInputStage>:
 800941e:	b480      	push	{r7}
 8009420:	b087      	sub	sp, #28
 8009422:	af00      	add	r7, sp, #0
 8009424:	60f8      	str	r0, [r7, #12]
 8009426:	60b9      	str	r1, [r7, #8]
 8009428:	607a      	str	r2, [r7, #4]
 800942a:	68fb      	ldr	r3, [r7, #12]
 800942c:	6a1b      	ldr	r3, [r3, #32]
 800942e:	617b      	str	r3, [r7, #20]
 8009430:	68fb      	ldr	r3, [r7, #12]
 8009432:	6a1b      	ldr	r3, [r3, #32]
 8009434:	f023 0210 	bic.w	r2, r3, #16
 8009438:	68fb      	ldr	r3, [r7, #12]
 800943a:	621a      	str	r2, [r3, #32]
 800943c:	68fb      	ldr	r3, [r7, #12]
 800943e:	699b      	ldr	r3, [r3, #24]
 8009440:	613b      	str	r3, [r7, #16]
 8009442:	693b      	ldr	r3, [r7, #16]
 8009444:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8009448:	613b      	str	r3, [r7, #16]
 800944a:	687b      	ldr	r3, [r7, #4]
 800944c:	031b      	lsls	r3, r3, #12
 800944e:	693a      	ldr	r2, [r7, #16]
 8009450:	4313      	orrs	r3, r2
 8009452:	613b      	str	r3, [r7, #16]
 8009454:	697b      	ldr	r3, [r7, #20]
 8009456:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800945a:	617b      	str	r3, [r7, #20]
 800945c:	68bb      	ldr	r3, [r7, #8]
 800945e:	011b      	lsls	r3, r3, #4
 8009460:	697a      	ldr	r2, [r7, #20]
 8009462:	4313      	orrs	r3, r2
 8009464:	617b      	str	r3, [r7, #20]
 8009466:	68fb      	ldr	r3, [r7, #12]
 8009468:	693a      	ldr	r2, [r7, #16]
 800946a:	619a      	str	r2, [r3, #24]
 800946c:	68fb      	ldr	r3, [r7, #12]
 800946e:	697a      	ldr	r2, [r7, #20]
 8009470:	621a      	str	r2, [r3, #32]
 8009472:	bf00      	nop
 8009474:	371c      	adds	r7, #28
 8009476:	46bd      	mov	sp, r7
 8009478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800947c:	4770      	bx	lr

0800947e <TIM_ITRx_SetConfig>:
 800947e:	b480      	push	{r7}
 8009480:	b085      	sub	sp, #20
 8009482:	af00      	add	r7, sp, #0
 8009484:	6078      	str	r0, [r7, #4]
 8009486:	6039      	str	r1, [r7, #0]
 8009488:	687b      	ldr	r3, [r7, #4]
 800948a:	689b      	ldr	r3, [r3, #8]
 800948c:	60fb      	str	r3, [r7, #12]
 800948e:	68fb      	ldr	r3, [r7, #12]
 8009490:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8009494:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009498:	60fb      	str	r3, [r7, #12]
 800949a:	683a      	ldr	r2, [r7, #0]
 800949c:	68fb      	ldr	r3, [r7, #12]
 800949e:	4313      	orrs	r3, r2
 80094a0:	f043 0307 	orr.w	r3, r3, #7
 80094a4:	60fb      	str	r3, [r7, #12]
 80094a6:	687b      	ldr	r3, [r7, #4]
 80094a8:	68fa      	ldr	r2, [r7, #12]
 80094aa:	609a      	str	r2, [r3, #8]
 80094ac:	bf00      	nop
 80094ae:	3714      	adds	r7, #20
 80094b0:	46bd      	mov	sp, r7
 80094b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094b6:	4770      	bx	lr

080094b8 <TIM_ETR_SetConfig>:
 80094b8:	b480      	push	{r7}
 80094ba:	b087      	sub	sp, #28
 80094bc:	af00      	add	r7, sp, #0
 80094be:	60f8      	str	r0, [r7, #12]
 80094c0:	60b9      	str	r1, [r7, #8]
 80094c2:	607a      	str	r2, [r7, #4]
 80094c4:	603b      	str	r3, [r7, #0]
 80094c6:	68fb      	ldr	r3, [r7, #12]
 80094c8:	689b      	ldr	r3, [r3, #8]
 80094ca:	617b      	str	r3, [r7, #20]
 80094cc:	697b      	ldr	r3, [r7, #20]
 80094ce:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80094d2:	617b      	str	r3, [r7, #20]
 80094d4:	683b      	ldr	r3, [r7, #0]
 80094d6:	021a      	lsls	r2, r3, #8
 80094d8:	687b      	ldr	r3, [r7, #4]
 80094da:	431a      	orrs	r2, r3
 80094dc:	68bb      	ldr	r3, [r7, #8]
 80094de:	4313      	orrs	r3, r2
 80094e0:	697a      	ldr	r2, [r7, #20]
 80094e2:	4313      	orrs	r3, r2
 80094e4:	617b      	str	r3, [r7, #20]
 80094e6:	68fb      	ldr	r3, [r7, #12]
 80094e8:	697a      	ldr	r2, [r7, #20]
 80094ea:	609a      	str	r2, [r3, #8]
 80094ec:	bf00      	nop
 80094ee:	371c      	adds	r7, #28
 80094f0:	46bd      	mov	sp, r7
 80094f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094f6:	4770      	bx	lr

080094f8 <TIM_CCxChannelCmd>:
 80094f8:	b480      	push	{r7}
 80094fa:	b087      	sub	sp, #28
 80094fc:	af00      	add	r7, sp, #0
 80094fe:	60f8      	str	r0, [r7, #12]
 8009500:	60b9      	str	r1, [r7, #8]
 8009502:	607a      	str	r2, [r7, #4]
 8009504:	68bb      	ldr	r3, [r7, #8]
 8009506:	f003 031f 	and.w	r3, r3, #31
 800950a:	2201      	movs	r2, #1
 800950c:	fa02 f303 	lsl.w	r3, r2, r3
 8009510:	617b      	str	r3, [r7, #20]
 8009512:	68fb      	ldr	r3, [r7, #12]
 8009514:	6a1a      	ldr	r2, [r3, #32]
 8009516:	697b      	ldr	r3, [r7, #20]
 8009518:	43db      	mvns	r3, r3
 800951a:	401a      	ands	r2, r3
 800951c:	68fb      	ldr	r3, [r7, #12]
 800951e:	621a      	str	r2, [r3, #32]
 8009520:	68fb      	ldr	r3, [r7, #12]
 8009522:	6a1a      	ldr	r2, [r3, #32]
 8009524:	68bb      	ldr	r3, [r7, #8]
 8009526:	f003 031f 	and.w	r3, r3, #31
 800952a:	6879      	ldr	r1, [r7, #4]
 800952c:	fa01 f303 	lsl.w	r3, r1, r3
 8009530:	431a      	orrs	r2, r3
 8009532:	68fb      	ldr	r3, [r7, #12]
 8009534:	621a      	str	r2, [r3, #32]
 8009536:	bf00      	nop
 8009538:	371c      	adds	r7, #28
 800953a:	46bd      	mov	sp, r7
 800953c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009540:	4770      	bx	lr

08009542 <HAL_TIMEx_HallSensor_Init>:
 8009542:	b580      	push	{r7, lr}
 8009544:	b08a      	sub	sp, #40	@ 0x28
 8009546:	af00      	add	r7, sp, #0
 8009548:	6078      	str	r0, [r7, #4]
 800954a:	6039      	str	r1, [r7, #0]
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	2b00      	cmp	r3, #0
 8009550:	d101      	bne.n	8009556 <HAL_TIMEx_HallSensor_Init+0x14>
 8009552:	2301      	movs	r3, #1
 8009554:	e0a0      	b.n	8009698 <HAL_TIMEx_HallSensor_Init+0x156>
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800955c:	b2db      	uxtb	r3, r3
 800955e:	2b00      	cmp	r3, #0
 8009560:	d106      	bne.n	8009570 <HAL_TIMEx_HallSensor_Init+0x2e>
 8009562:	687b      	ldr	r3, [r7, #4]
 8009564:	2200      	movs	r2, #0
 8009566:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800956a:	6878      	ldr	r0, [r7, #4]
 800956c:	f000 f898 	bl	80096a0 <HAL_TIMEx_HallSensor_MspInit>
 8009570:	687b      	ldr	r3, [r7, #4]
 8009572:	2202      	movs	r2, #2
 8009574:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	681a      	ldr	r2, [r3, #0]
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	3304      	adds	r3, #4
 8009580:	4619      	mov	r1, r3
 8009582:	4610      	mov	r0, r2
 8009584:	f7ff fb22 	bl	8008bcc <TIM_Base_SetConfig>
 8009588:	687b      	ldr	r3, [r7, #4]
 800958a:	6818      	ldr	r0, [r3, #0]
 800958c:	683b      	ldr	r3, [r7, #0]
 800958e:	6819      	ldr	r1, [r3, #0]
 8009590:	683b      	ldr	r3, [r7, #0]
 8009592:	689b      	ldr	r3, [r3, #8]
 8009594:	2203      	movs	r2, #3
 8009596:	f7ff feab 	bl	80092f0 <TIM_TI1_SetConfig>
 800959a:	687b      	ldr	r3, [r7, #4]
 800959c:	681b      	ldr	r3, [r3, #0]
 800959e:	699a      	ldr	r2, [r3, #24]
 80095a0:	687b      	ldr	r3, [r7, #4]
 80095a2:	681b      	ldr	r3, [r3, #0]
 80095a4:	f022 020c 	bic.w	r2, r2, #12
 80095a8:	619a      	str	r2, [r3, #24]
 80095aa:	687b      	ldr	r3, [r7, #4]
 80095ac:	681b      	ldr	r3, [r3, #0]
 80095ae:	6999      	ldr	r1, [r3, #24]
 80095b0:	683b      	ldr	r3, [r7, #0]
 80095b2:	685a      	ldr	r2, [r3, #4]
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	681b      	ldr	r3, [r3, #0]
 80095b8:	430a      	orrs	r2, r1
 80095ba:	619a      	str	r2, [r3, #24]
 80095bc:	687b      	ldr	r3, [r7, #4]
 80095be:	681b      	ldr	r3, [r3, #0]
 80095c0:	685a      	ldr	r2, [r3, #4]
 80095c2:	687b      	ldr	r3, [r7, #4]
 80095c4:	681b      	ldr	r3, [r3, #0]
 80095c6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80095ca:	605a      	str	r2, [r3, #4]
 80095cc:	687b      	ldr	r3, [r7, #4]
 80095ce:	681b      	ldr	r3, [r3, #0]
 80095d0:	689b      	ldr	r3, [r3, #8]
 80095d2:	687a      	ldr	r2, [r7, #4]
 80095d4:	6812      	ldr	r2, [r2, #0]
 80095d6:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 80095da:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80095de:	6093      	str	r3, [r2, #8]
 80095e0:	687b      	ldr	r3, [r7, #4]
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	689a      	ldr	r2, [r3, #8]
 80095e6:	687b      	ldr	r3, [r7, #4]
 80095e8:	681b      	ldr	r3, [r3, #0]
 80095ea:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80095ee:	609a      	str	r2, [r3, #8]
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	681b      	ldr	r3, [r3, #0]
 80095f4:	689b      	ldr	r3, [r3, #8]
 80095f6:	687a      	ldr	r2, [r7, #4]
 80095f8:	6812      	ldr	r2, [r2, #0]
 80095fa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80095fe:	f023 0307 	bic.w	r3, r3, #7
 8009602:	6093      	str	r3, [r2, #8]
 8009604:	687b      	ldr	r3, [r7, #4]
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	689a      	ldr	r2, [r3, #8]
 800960a:	687b      	ldr	r3, [r7, #4]
 800960c:	681b      	ldr	r3, [r3, #0]
 800960e:	f042 0204 	orr.w	r2, r2, #4
 8009612:	609a      	str	r2, [r3, #8]
 8009614:	2300      	movs	r3, #0
 8009616:	61fb      	str	r3, [r7, #28]
 8009618:	2300      	movs	r3, #0
 800961a:	623b      	str	r3, [r7, #32]
 800961c:	2370      	movs	r3, #112	@ 0x70
 800961e:	60fb      	str	r3, [r7, #12]
 8009620:	2300      	movs	r3, #0
 8009622:	627b      	str	r3, [r7, #36]	@ 0x24
 8009624:	2300      	movs	r3, #0
 8009626:	61bb      	str	r3, [r7, #24]
 8009628:	2300      	movs	r3, #0
 800962a:	617b      	str	r3, [r7, #20]
 800962c:	683b      	ldr	r3, [r7, #0]
 800962e:	68db      	ldr	r3, [r3, #12]
 8009630:	613b      	str	r3, [r7, #16]
 8009632:	687b      	ldr	r3, [r7, #4]
 8009634:	681b      	ldr	r3, [r3, #0]
 8009636:	f107 020c 	add.w	r2, r7, #12
 800963a:	4611      	mov	r1, r2
 800963c:	4618      	mov	r0, r3
 800963e:	f7ff fbf1 	bl	8008e24 <TIM_OC2_SetConfig>
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	681b      	ldr	r3, [r3, #0]
 8009646:	685b      	ldr	r3, [r3, #4]
 8009648:	687a      	ldr	r2, [r7, #4]
 800964a:	6812      	ldr	r2, [r2, #0]
 800964c:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8009650:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009654:	6053      	str	r3, [r2, #4]
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	681b      	ldr	r3, [r3, #0]
 800965a:	685a      	ldr	r2, [r3, #4]
 800965c:	687b      	ldr	r3, [r7, #4]
 800965e:	681b      	ldr	r3, [r3, #0]
 8009660:	f042 0250 	orr.w	r2, r2, #80	@ 0x50
 8009664:	605a      	str	r2, [r3, #4]
 8009666:	687b      	ldr	r3, [r7, #4]
 8009668:	2201      	movs	r2, #1
 800966a:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800966e:	687b      	ldr	r3, [r7, #4]
 8009670:	2201      	movs	r2, #1
 8009672:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	2201      	movs	r2, #1
 800967a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800967e:	687b      	ldr	r3, [r7, #4]
 8009680:	2201      	movs	r2, #1
 8009682:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009686:	687b      	ldr	r3, [r7, #4]
 8009688:	2201      	movs	r2, #1
 800968a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800968e:	687b      	ldr	r3, [r7, #4]
 8009690:	2201      	movs	r2, #1
 8009692:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009696:	2300      	movs	r3, #0
 8009698:	4618      	mov	r0, r3
 800969a:	3728      	adds	r7, #40	@ 0x28
 800969c:	46bd      	mov	sp, r7
 800969e:	bd80      	pop	{r7, pc}

080096a0 <HAL_TIMEx_HallSensor_MspInit>:
 80096a0:	b480      	push	{r7}
 80096a2:	b083      	sub	sp, #12
 80096a4:	af00      	add	r7, sp, #0
 80096a6:	6078      	str	r0, [r7, #4]
 80096a8:	bf00      	nop
 80096aa:	370c      	adds	r7, #12
 80096ac:	46bd      	mov	sp, r7
 80096ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b2:	4770      	bx	lr

080096b4 <HAL_TIMEx_PWMN_Start>:
 80096b4:	b580      	push	{r7, lr}
 80096b6:	b084      	sub	sp, #16
 80096b8:	af00      	add	r7, sp, #0
 80096ba:	6078      	str	r0, [r7, #4]
 80096bc:	6039      	str	r1, [r7, #0]
 80096be:	683b      	ldr	r3, [r7, #0]
 80096c0:	2b00      	cmp	r3, #0
 80096c2:	d109      	bne.n	80096d8 <HAL_TIMEx_PWMN_Start+0x24>
 80096c4:	687b      	ldr	r3, [r7, #4]
 80096c6:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80096ca:	b2db      	uxtb	r3, r3
 80096cc:	2b01      	cmp	r3, #1
 80096ce:	bf14      	ite	ne
 80096d0:	2301      	movne	r3, #1
 80096d2:	2300      	moveq	r3, #0
 80096d4:	b2db      	uxtb	r3, r3
 80096d6:	e022      	b.n	800971e <HAL_TIMEx_PWMN_Start+0x6a>
 80096d8:	683b      	ldr	r3, [r7, #0]
 80096da:	2b04      	cmp	r3, #4
 80096dc:	d109      	bne.n	80096f2 <HAL_TIMEx_PWMN_Start+0x3e>
 80096de:	687b      	ldr	r3, [r7, #4]
 80096e0:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80096e4:	b2db      	uxtb	r3, r3
 80096e6:	2b01      	cmp	r3, #1
 80096e8:	bf14      	ite	ne
 80096ea:	2301      	movne	r3, #1
 80096ec:	2300      	moveq	r3, #0
 80096ee:	b2db      	uxtb	r3, r3
 80096f0:	e015      	b.n	800971e <HAL_TIMEx_PWMN_Start+0x6a>
 80096f2:	683b      	ldr	r3, [r7, #0]
 80096f4:	2b08      	cmp	r3, #8
 80096f6:	d109      	bne.n	800970c <HAL_TIMEx_PWMN_Start+0x58>
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 80096fe:	b2db      	uxtb	r3, r3
 8009700:	2b01      	cmp	r3, #1
 8009702:	bf14      	ite	ne
 8009704:	2301      	movne	r3, #1
 8009706:	2300      	moveq	r3, #0
 8009708:	b2db      	uxtb	r3, r3
 800970a:	e008      	b.n	800971e <HAL_TIMEx_PWMN_Start+0x6a>
 800970c:	687b      	ldr	r3, [r7, #4]
 800970e:	f893 3047 	ldrb.w	r3, [r3, #71]	@ 0x47
 8009712:	b2db      	uxtb	r3, r3
 8009714:	2b01      	cmp	r3, #1
 8009716:	bf14      	ite	ne
 8009718:	2301      	movne	r3, #1
 800971a:	2300      	moveq	r3, #0
 800971c:	b2db      	uxtb	r3, r3
 800971e:	2b00      	cmp	r3, #0
 8009720:	d001      	beq.n	8009726 <HAL_TIMEx_PWMN_Start+0x72>
 8009722:	2301      	movs	r3, #1
 8009724:	e069      	b.n	80097fa <HAL_TIMEx_PWMN_Start+0x146>
 8009726:	683b      	ldr	r3, [r7, #0]
 8009728:	2b00      	cmp	r3, #0
 800972a:	d104      	bne.n	8009736 <HAL_TIMEx_PWMN_Start+0x82>
 800972c:	687b      	ldr	r3, [r7, #4]
 800972e:	2202      	movs	r2, #2
 8009730:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009734:	e013      	b.n	800975e <HAL_TIMEx_PWMN_Start+0xaa>
 8009736:	683b      	ldr	r3, [r7, #0]
 8009738:	2b04      	cmp	r3, #4
 800973a:	d104      	bne.n	8009746 <HAL_TIMEx_PWMN_Start+0x92>
 800973c:	687b      	ldr	r3, [r7, #4]
 800973e:	2202      	movs	r2, #2
 8009740:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009744:	e00b      	b.n	800975e <HAL_TIMEx_PWMN_Start+0xaa>
 8009746:	683b      	ldr	r3, [r7, #0]
 8009748:	2b08      	cmp	r3, #8
 800974a:	d104      	bne.n	8009756 <HAL_TIMEx_PWMN_Start+0xa2>
 800974c:	687b      	ldr	r3, [r7, #4]
 800974e:	2202      	movs	r2, #2
 8009750:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8009754:	e003      	b.n	800975e <HAL_TIMEx_PWMN_Start+0xaa>
 8009756:	687b      	ldr	r3, [r7, #4]
 8009758:	2202      	movs	r2, #2
 800975a:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	681b      	ldr	r3, [r3, #0]
 8009762:	2204      	movs	r2, #4
 8009764:	6839      	ldr	r1, [r7, #0]
 8009766:	4618      	mov	r0, r3
 8009768:	f000 fa9c 	bl	8009ca4 <TIM_CCxNChannelCmd>
 800976c:	687b      	ldr	r3, [r7, #4]
 800976e:	681b      	ldr	r3, [r3, #0]
 8009770:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8009772:	687b      	ldr	r3, [r7, #4]
 8009774:	681b      	ldr	r3, [r3, #0]
 8009776:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800977a:	645a      	str	r2, [r3, #68]	@ 0x44
 800977c:	687b      	ldr	r3, [r7, #4]
 800977e:	681b      	ldr	r3, [r3, #0]
 8009780:	4a20      	ldr	r2, [pc, #128]	@ (8009804 <HAL_TIMEx_PWMN_Start+0x150>)
 8009782:	4293      	cmp	r3, r2
 8009784:	d018      	beq.n	80097b8 <HAL_TIMEx_PWMN_Start+0x104>
 8009786:	687b      	ldr	r3, [r7, #4]
 8009788:	681b      	ldr	r3, [r3, #0]
 800978a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800978e:	d013      	beq.n	80097b8 <HAL_TIMEx_PWMN_Start+0x104>
 8009790:	687b      	ldr	r3, [r7, #4]
 8009792:	681b      	ldr	r3, [r3, #0]
 8009794:	4a1c      	ldr	r2, [pc, #112]	@ (8009808 <HAL_TIMEx_PWMN_Start+0x154>)
 8009796:	4293      	cmp	r3, r2
 8009798:	d00e      	beq.n	80097b8 <HAL_TIMEx_PWMN_Start+0x104>
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	681b      	ldr	r3, [r3, #0]
 800979e:	4a1b      	ldr	r2, [pc, #108]	@ (800980c <HAL_TIMEx_PWMN_Start+0x158>)
 80097a0:	4293      	cmp	r3, r2
 80097a2:	d009      	beq.n	80097b8 <HAL_TIMEx_PWMN_Start+0x104>
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	681b      	ldr	r3, [r3, #0]
 80097a8:	4a19      	ldr	r2, [pc, #100]	@ (8009810 <HAL_TIMEx_PWMN_Start+0x15c>)
 80097aa:	4293      	cmp	r3, r2
 80097ac:	d004      	beq.n	80097b8 <HAL_TIMEx_PWMN_Start+0x104>
 80097ae:	687b      	ldr	r3, [r7, #4]
 80097b0:	681b      	ldr	r3, [r3, #0]
 80097b2:	4a18      	ldr	r2, [pc, #96]	@ (8009814 <HAL_TIMEx_PWMN_Start+0x160>)
 80097b4:	4293      	cmp	r3, r2
 80097b6:	d115      	bne.n	80097e4 <HAL_TIMEx_PWMN_Start+0x130>
 80097b8:	687b      	ldr	r3, [r7, #4]
 80097ba:	681b      	ldr	r3, [r3, #0]
 80097bc:	689a      	ldr	r2, [r3, #8]
 80097be:	4b16      	ldr	r3, [pc, #88]	@ (8009818 <HAL_TIMEx_PWMN_Start+0x164>)
 80097c0:	4013      	ands	r3, r2
 80097c2:	60fb      	str	r3, [r7, #12]
 80097c4:	68fb      	ldr	r3, [r7, #12]
 80097c6:	2b06      	cmp	r3, #6
 80097c8:	d015      	beq.n	80097f6 <HAL_TIMEx_PWMN_Start+0x142>
 80097ca:	68fb      	ldr	r3, [r7, #12]
 80097cc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80097d0:	d011      	beq.n	80097f6 <HAL_TIMEx_PWMN_Start+0x142>
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	681b      	ldr	r3, [r3, #0]
 80097d6:	681a      	ldr	r2, [r3, #0]
 80097d8:	687b      	ldr	r3, [r7, #4]
 80097da:	681b      	ldr	r3, [r3, #0]
 80097dc:	f042 0201 	orr.w	r2, r2, #1
 80097e0:	601a      	str	r2, [r3, #0]
 80097e2:	e008      	b.n	80097f6 <HAL_TIMEx_PWMN_Start+0x142>
 80097e4:	687b      	ldr	r3, [r7, #4]
 80097e6:	681b      	ldr	r3, [r3, #0]
 80097e8:	681a      	ldr	r2, [r3, #0]
 80097ea:	687b      	ldr	r3, [r7, #4]
 80097ec:	681b      	ldr	r3, [r3, #0]
 80097ee:	f042 0201 	orr.w	r2, r2, #1
 80097f2:	601a      	str	r2, [r3, #0]
 80097f4:	e000      	b.n	80097f8 <HAL_TIMEx_PWMN_Start+0x144>
 80097f6:	bf00      	nop
 80097f8:	2300      	movs	r3, #0
 80097fa:	4618      	mov	r0, r3
 80097fc:	3710      	adds	r7, #16
 80097fe:	46bd      	mov	sp, r7
 8009800:	bd80      	pop	{r7, pc}
 8009802:	bf00      	nop
 8009804:	40012c00 	.word	0x40012c00
 8009808:	40000400 	.word	0x40000400
 800980c:	40000800 	.word	0x40000800
 8009810:	40013400 	.word	0x40013400
 8009814:	40014000 	.word	0x40014000
 8009818:	00010007 	.word	0x00010007

0800981c <HAL_TIMEx_PWMN_Stop>:
 800981c:	b580      	push	{r7, lr}
 800981e:	b082      	sub	sp, #8
 8009820:	af00      	add	r7, sp, #0
 8009822:	6078      	str	r0, [r7, #4]
 8009824:	6039      	str	r1, [r7, #0]
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	681b      	ldr	r3, [r3, #0]
 800982a:	2200      	movs	r2, #0
 800982c:	6839      	ldr	r1, [r7, #0]
 800982e:	4618      	mov	r0, r3
 8009830:	f000 fa38 	bl	8009ca4 <TIM_CCxNChannelCmd>
 8009834:	687b      	ldr	r3, [r7, #4]
 8009836:	681b      	ldr	r3, [r3, #0]
 8009838:	6a1a      	ldr	r2, [r3, #32]
 800983a:	f241 1311 	movw	r3, #4369	@ 0x1111
 800983e:	4013      	ands	r3, r2
 8009840:	2b00      	cmp	r3, #0
 8009842:	d10f      	bne.n	8009864 <HAL_TIMEx_PWMN_Stop+0x48>
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	681b      	ldr	r3, [r3, #0]
 8009848:	6a1a      	ldr	r2, [r3, #32]
 800984a:	f244 4344 	movw	r3, #17476	@ 0x4444
 800984e:	4013      	ands	r3, r2
 8009850:	2b00      	cmp	r3, #0
 8009852:	d107      	bne.n	8009864 <HAL_TIMEx_PWMN_Stop+0x48>
 8009854:	687b      	ldr	r3, [r7, #4]
 8009856:	681b      	ldr	r3, [r3, #0]
 8009858:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	681b      	ldr	r3, [r3, #0]
 800985e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8009862:	645a      	str	r2, [r3, #68]	@ 0x44
 8009864:	687b      	ldr	r3, [r7, #4]
 8009866:	681b      	ldr	r3, [r3, #0]
 8009868:	6a1a      	ldr	r2, [r3, #32]
 800986a:	f241 1311 	movw	r3, #4369	@ 0x1111
 800986e:	4013      	ands	r3, r2
 8009870:	2b00      	cmp	r3, #0
 8009872:	d10f      	bne.n	8009894 <HAL_TIMEx_PWMN_Stop+0x78>
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	681b      	ldr	r3, [r3, #0]
 8009878:	6a1a      	ldr	r2, [r3, #32]
 800987a:	f244 4344 	movw	r3, #17476	@ 0x4444
 800987e:	4013      	ands	r3, r2
 8009880:	2b00      	cmp	r3, #0
 8009882:	d107      	bne.n	8009894 <HAL_TIMEx_PWMN_Stop+0x78>
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	681b      	ldr	r3, [r3, #0]
 8009888:	681a      	ldr	r2, [r3, #0]
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	681b      	ldr	r3, [r3, #0]
 800988e:	f022 0201 	bic.w	r2, r2, #1
 8009892:	601a      	str	r2, [r3, #0]
 8009894:	683b      	ldr	r3, [r7, #0]
 8009896:	2b00      	cmp	r3, #0
 8009898:	d104      	bne.n	80098a4 <HAL_TIMEx_PWMN_Stop+0x88>
 800989a:	687b      	ldr	r3, [r7, #4]
 800989c:	2201      	movs	r2, #1
 800989e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80098a2:	e013      	b.n	80098cc <HAL_TIMEx_PWMN_Stop+0xb0>
 80098a4:	683b      	ldr	r3, [r7, #0]
 80098a6:	2b04      	cmp	r3, #4
 80098a8:	d104      	bne.n	80098b4 <HAL_TIMEx_PWMN_Stop+0x98>
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	2201      	movs	r2, #1
 80098ae:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80098b2:	e00b      	b.n	80098cc <HAL_TIMEx_PWMN_Stop+0xb0>
 80098b4:	683b      	ldr	r3, [r7, #0]
 80098b6:	2b08      	cmp	r3, #8
 80098b8:	d104      	bne.n	80098c4 <HAL_TIMEx_PWMN_Stop+0xa8>
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	2201      	movs	r2, #1
 80098be:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80098c2:	e003      	b.n	80098cc <HAL_TIMEx_PWMN_Stop+0xb0>
 80098c4:	687b      	ldr	r3, [r7, #4]
 80098c6:	2201      	movs	r2, #1
 80098c8:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80098cc:	2300      	movs	r3, #0
 80098ce:	4618      	mov	r0, r3
 80098d0:	3708      	adds	r7, #8
 80098d2:	46bd      	mov	sp, r7
 80098d4:	bd80      	pop	{r7, pc}
	...

080098d8 <HAL_TIMEx_MasterConfigSynchronization>:
 80098d8:	b480      	push	{r7}
 80098da:	b085      	sub	sp, #20
 80098dc:	af00      	add	r7, sp, #0
 80098de:	6078      	str	r0, [r7, #4]
 80098e0:	6039      	str	r1, [r7, #0]
 80098e2:	687b      	ldr	r3, [r7, #4]
 80098e4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80098e8:	2b01      	cmp	r3, #1
 80098ea:	d101      	bne.n	80098f0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80098ec:	2302      	movs	r3, #2
 80098ee:	e065      	b.n	80099bc <HAL_TIMEx_MasterConfigSynchronization+0xe4>
 80098f0:	687b      	ldr	r3, [r7, #4]
 80098f2:	2201      	movs	r2, #1
 80098f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80098f8:	687b      	ldr	r3, [r7, #4]
 80098fa:	2202      	movs	r2, #2
 80098fc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	681b      	ldr	r3, [r3, #0]
 8009904:	685b      	ldr	r3, [r3, #4]
 8009906:	60fb      	str	r3, [r7, #12]
 8009908:	687b      	ldr	r3, [r7, #4]
 800990a:	681b      	ldr	r3, [r3, #0]
 800990c:	689b      	ldr	r3, [r3, #8]
 800990e:	60bb      	str	r3, [r7, #8]
 8009910:	687b      	ldr	r3, [r7, #4]
 8009912:	681b      	ldr	r3, [r3, #0]
 8009914:	4a2c      	ldr	r2, [pc, #176]	@ (80099c8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8009916:	4293      	cmp	r3, r2
 8009918:	d004      	beq.n	8009924 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800991a:	687b      	ldr	r3, [r7, #4]
 800991c:	681b      	ldr	r3, [r3, #0]
 800991e:	4a2b      	ldr	r2, [pc, #172]	@ (80099cc <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8009920:	4293      	cmp	r3, r2
 8009922:	d108      	bne.n	8009936 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009924:	68fb      	ldr	r3, [r7, #12]
 8009926:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800992a:	60fb      	str	r3, [r7, #12]
 800992c:	683b      	ldr	r3, [r7, #0]
 800992e:	685b      	ldr	r3, [r3, #4]
 8009930:	68fa      	ldr	r2, [r7, #12]
 8009932:	4313      	orrs	r3, r2
 8009934:	60fb      	str	r3, [r7, #12]
 8009936:	68fb      	ldr	r3, [r7, #12]
 8009938:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 800993c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009940:	60fb      	str	r3, [r7, #12]
 8009942:	683b      	ldr	r3, [r7, #0]
 8009944:	681b      	ldr	r3, [r3, #0]
 8009946:	68fa      	ldr	r2, [r7, #12]
 8009948:	4313      	orrs	r3, r2
 800994a:	60fb      	str	r3, [r7, #12]
 800994c:	687b      	ldr	r3, [r7, #4]
 800994e:	681b      	ldr	r3, [r3, #0]
 8009950:	68fa      	ldr	r2, [r7, #12]
 8009952:	605a      	str	r2, [r3, #4]
 8009954:	687b      	ldr	r3, [r7, #4]
 8009956:	681b      	ldr	r3, [r3, #0]
 8009958:	4a1b      	ldr	r2, [pc, #108]	@ (80099c8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800995a:	4293      	cmp	r3, r2
 800995c:	d018      	beq.n	8009990 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 800995e:	687b      	ldr	r3, [r7, #4]
 8009960:	681b      	ldr	r3, [r3, #0]
 8009962:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009966:	d013      	beq.n	8009990 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	681b      	ldr	r3, [r3, #0]
 800996c:	4a18      	ldr	r2, [pc, #96]	@ (80099d0 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 800996e:	4293      	cmp	r3, r2
 8009970:	d00e      	beq.n	8009990 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	681b      	ldr	r3, [r3, #0]
 8009976:	4a17      	ldr	r2, [pc, #92]	@ (80099d4 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 8009978:	4293      	cmp	r3, r2
 800997a:	d009      	beq.n	8009990 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 800997c:	687b      	ldr	r3, [r7, #4]
 800997e:	681b      	ldr	r3, [r3, #0]
 8009980:	4a12      	ldr	r2, [pc, #72]	@ (80099cc <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8009982:	4293      	cmp	r3, r2
 8009984:	d004      	beq.n	8009990 <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8009986:	687b      	ldr	r3, [r7, #4]
 8009988:	681b      	ldr	r3, [r3, #0]
 800998a:	4a13      	ldr	r2, [pc, #76]	@ (80099d8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800998c:	4293      	cmp	r3, r2
 800998e:	d10c      	bne.n	80099aa <HAL_TIMEx_MasterConfigSynchronization+0xd2>
 8009990:	68bb      	ldr	r3, [r7, #8]
 8009992:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009996:	60bb      	str	r3, [r7, #8]
 8009998:	683b      	ldr	r3, [r7, #0]
 800999a:	689b      	ldr	r3, [r3, #8]
 800999c:	68ba      	ldr	r2, [r7, #8]
 800999e:	4313      	orrs	r3, r2
 80099a0:	60bb      	str	r3, [r7, #8]
 80099a2:	687b      	ldr	r3, [r7, #4]
 80099a4:	681b      	ldr	r3, [r3, #0]
 80099a6:	68ba      	ldr	r2, [r7, #8]
 80099a8:	609a      	str	r2, [r3, #8]
 80099aa:	687b      	ldr	r3, [r7, #4]
 80099ac:	2201      	movs	r2, #1
 80099ae:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80099b2:	687b      	ldr	r3, [r7, #4]
 80099b4:	2200      	movs	r2, #0
 80099b6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80099ba:	2300      	movs	r3, #0
 80099bc:	4618      	mov	r0, r3
 80099be:	3714      	adds	r7, #20
 80099c0:	46bd      	mov	sp, r7
 80099c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099c6:	4770      	bx	lr
 80099c8:	40012c00 	.word	0x40012c00
 80099cc:	40013400 	.word	0x40013400
 80099d0:	40000400 	.word	0x40000400
 80099d4:	40000800 	.word	0x40000800
 80099d8:	40014000 	.word	0x40014000

080099dc <HAL_TIMEx_ConfigBreakDeadTime>:
 80099dc:	b480      	push	{r7}
 80099de:	b085      	sub	sp, #20
 80099e0:	af00      	add	r7, sp, #0
 80099e2:	6078      	str	r0, [r7, #4]
 80099e4:	6039      	str	r1, [r7, #0]
 80099e6:	2300      	movs	r3, #0
 80099e8:	60fb      	str	r3, [r7, #12]
 80099ea:	687b      	ldr	r3, [r7, #4]
 80099ec:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80099f0:	2b01      	cmp	r3, #1
 80099f2:	d101      	bne.n	80099f8 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 80099f4:	2302      	movs	r3, #2
 80099f6:	e073      	b.n	8009ae0 <HAL_TIMEx_ConfigBreakDeadTime+0x104>
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	2201      	movs	r2, #1
 80099fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009a00:	68fb      	ldr	r3, [r7, #12]
 8009a02:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8009a06:	683b      	ldr	r3, [r7, #0]
 8009a08:	68db      	ldr	r3, [r3, #12]
 8009a0a:	4313      	orrs	r3, r2
 8009a0c:	60fb      	str	r3, [r7, #12]
 8009a0e:	68fb      	ldr	r3, [r7, #12]
 8009a10:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8009a14:	683b      	ldr	r3, [r7, #0]
 8009a16:	689b      	ldr	r3, [r3, #8]
 8009a18:	4313      	orrs	r3, r2
 8009a1a:	60fb      	str	r3, [r7, #12]
 8009a1c:	68fb      	ldr	r3, [r7, #12]
 8009a1e:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8009a22:	683b      	ldr	r3, [r7, #0]
 8009a24:	685b      	ldr	r3, [r3, #4]
 8009a26:	4313      	orrs	r3, r2
 8009a28:	60fb      	str	r3, [r7, #12]
 8009a2a:	68fb      	ldr	r3, [r7, #12]
 8009a2c:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8009a30:	683b      	ldr	r3, [r7, #0]
 8009a32:	681b      	ldr	r3, [r3, #0]
 8009a34:	4313      	orrs	r3, r2
 8009a36:	60fb      	str	r3, [r7, #12]
 8009a38:	68fb      	ldr	r3, [r7, #12]
 8009a3a:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8009a3e:	683b      	ldr	r3, [r7, #0]
 8009a40:	691b      	ldr	r3, [r3, #16]
 8009a42:	4313      	orrs	r3, r2
 8009a44:	60fb      	str	r3, [r7, #12]
 8009a46:	68fb      	ldr	r3, [r7, #12]
 8009a48:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8009a4c:	683b      	ldr	r3, [r7, #0]
 8009a4e:	695b      	ldr	r3, [r3, #20]
 8009a50:	4313      	orrs	r3, r2
 8009a52:	60fb      	str	r3, [r7, #12]
 8009a54:	68fb      	ldr	r3, [r7, #12]
 8009a56:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8009a5a:	683b      	ldr	r3, [r7, #0]
 8009a5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009a5e:	4313      	orrs	r3, r2
 8009a60:	60fb      	str	r3, [r7, #12]
 8009a62:	68fb      	ldr	r3, [r7, #12]
 8009a64:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 8009a68:	683b      	ldr	r3, [r7, #0]
 8009a6a:	699b      	ldr	r3, [r3, #24]
 8009a6c:	041b      	lsls	r3, r3, #16
 8009a6e:	4313      	orrs	r3, r2
 8009a70:	60fb      	str	r3, [r7, #12]
 8009a72:	68fb      	ldr	r3, [r7, #12]
 8009a74:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8009a78:	683b      	ldr	r3, [r7, #0]
 8009a7a:	69db      	ldr	r3, [r3, #28]
 8009a7c:	4313      	orrs	r3, r2
 8009a7e:	60fb      	str	r3, [r7, #12]
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	681b      	ldr	r3, [r3, #0]
 8009a84:	4a19      	ldr	r2, [pc, #100]	@ (8009aec <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 8009a86:	4293      	cmp	r3, r2
 8009a88:	d004      	beq.n	8009a94 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 8009a8a:	687b      	ldr	r3, [r7, #4]
 8009a8c:	681b      	ldr	r3, [r3, #0]
 8009a8e:	4a18      	ldr	r2, [pc, #96]	@ (8009af0 <HAL_TIMEx_ConfigBreakDeadTime+0x114>)
 8009a90:	4293      	cmp	r3, r2
 8009a92:	d11c      	bne.n	8009ace <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
 8009a94:	68fb      	ldr	r3, [r7, #12]
 8009a96:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8009a9a:	683b      	ldr	r3, [r7, #0]
 8009a9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009a9e:	051b      	lsls	r3, r3, #20
 8009aa0:	4313      	orrs	r3, r2
 8009aa2:	60fb      	str	r3, [r7, #12]
 8009aa4:	68fb      	ldr	r3, [r7, #12]
 8009aa6:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8009aaa:	683b      	ldr	r3, [r7, #0]
 8009aac:	6a1b      	ldr	r3, [r3, #32]
 8009aae:	4313      	orrs	r3, r2
 8009ab0:	60fb      	str	r3, [r7, #12]
 8009ab2:	68fb      	ldr	r3, [r7, #12]
 8009ab4:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8009ab8:	683b      	ldr	r3, [r7, #0]
 8009aba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009abc:	4313      	orrs	r3, r2
 8009abe:	60fb      	str	r3, [r7, #12]
 8009ac0:	68fb      	ldr	r3, [r7, #12]
 8009ac2:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8009ac6:	683b      	ldr	r3, [r7, #0]
 8009ac8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009aca:	4313      	orrs	r3, r2
 8009acc:	60fb      	str	r3, [r7, #12]
 8009ace:	687b      	ldr	r3, [r7, #4]
 8009ad0:	681b      	ldr	r3, [r3, #0]
 8009ad2:	68fa      	ldr	r2, [r7, #12]
 8009ad4:	645a      	str	r2, [r3, #68]	@ 0x44
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	2200      	movs	r2, #0
 8009ada:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009ade:	2300      	movs	r3, #0
 8009ae0:	4618      	mov	r0, r3
 8009ae2:	3714      	adds	r7, #20
 8009ae4:	46bd      	mov	sp, r7
 8009ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aea:	4770      	bx	lr
 8009aec:	40012c00 	.word	0x40012c00
 8009af0:	40013400 	.word	0x40013400

08009af4 <HAL_TIMEx_ConfigBreakInput>:
 8009af4:	b480      	push	{r7}
 8009af6:	b08b      	sub	sp, #44	@ 0x2c
 8009af8:	af00      	add	r7, sp, #0
 8009afa:	60f8      	str	r0, [r7, #12]
 8009afc:	60b9      	str	r1, [r7, #8]
 8009afe:	607a      	str	r2, [r7, #4]
 8009b00:	2300      	movs	r3, #0
 8009b02:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8009b06:	68fb      	ldr	r3, [r7, #12]
 8009b08:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8009b0c:	2b01      	cmp	r3, #1
 8009b0e:	d101      	bne.n	8009b14 <HAL_TIMEx_ConfigBreakInput+0x20>
 8009b10:	2302      	movs	r3, #2
 8009b12:	e0c1      	b.n	8009c98 <HAL_TIMEx_ConfigBreakInput+0x1a4>
 8009b14:	68fb      	ldr	r3, [r7, #12]
 8009b16:	2201      	movs	r2, #1
 8009b18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009b1c:	687b      	ldr	r3, [r7, #4]
 8009b1e:	681b      	ldr	r3, [r3, #0]
 8009b20:	3b01      	subs	r3, #1
 8009b22:	2b0f      	cmp	r3, #15
 8009b24:	d854      	bhi.n	8009bd0 <HAL_TIMEx_ConfigBreakInput+0xdc>
 8009b26:	a201      	add	r2, pc, #4	@ (adr r2, 8009b2c <HAL_TIMEx_ConfigBreakInput+0x38>)
 8009b28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009b2c:	08009b6d 	.word	0x08009b6d
 8009b30:	08009b81 	.word	0x08009b81
 8009b34:	08009bd1 	.word	0x08009bd1
 8009b38:	08009b95 	.word	0x08009b95
 8009b3c:	08009bd1 	.word	0x08009bd1
 8009b40:	08009bd1 	.word	0x08009bd1
 8009b44:	08009bd1 	.word	0x08009bd1
 8009b48:	08009ba9 	.word	0x08009ba9
 8009b4c:	08009bd1 	.word	0x08009bd1
 8009b50:	08009bd1 	.word	0x08009bd1
 8009b54:	08009bd1 	.word	0x08009bd1
 8009b58:	08009bd1 	.word	0x08009bd1
 8009b5c:	08009bd1 	.word	0x08009bd1
 8009b60:	08009bd1 	.word	0x08009bd1
 8009b64:	08009bd1 	.word	0x08009bd1
 8009b68:	08009bbd 	.word	0x08009bbd
 8009b6c:	2301      	movs	r3, #1
 8009b6e:	623b      	str	r3, [r7, #32]
 8009b70:	2300      	movs	r3, #0
 8009b72:	61bb      	str	r3, [r7, #24]
 8009b74:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009b78:	61fb      	str	r3, [r7, #28]
 8009b7a:	2309      	movs	r3, #9
 8009b7c:	617b      	str	r3, [r7, #20]
 8009b7e:	e030      	b.n	8009be2 <HAL_TIMEx_ConfigBreakInput+0xee>
 8009b80:	2302      	movs	r3, #2
 8009b82:	623b      	str	r3, [r7, #32]
 8009b84:	2301      	movs	r3, #1
 8009b86:	61bb      	str	r3, [r7, #24]
 8009b88:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8009b8c:	61fb      	str	r3, [r7, #28]
 8009b8e:	230a      	movs	r3, #10
 8009b90:	617b      	str	r3, [r7, #20]
 8009b92:	e026      	b.n	8009be2 <HAL_TIMEx_ConfigBreakInput+0xee>
 8009b94:	2304      	movs	r3, #4
 8009b96:	623b      	str	r3, [r7, #32]
 8009b98:	2302      	movs	r3, #2
 8009b9a:	61bb      	str	r3, [r7, #24]
 8009b9c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8009ba0:	61fb      	str	r3, [r7, #28]
 8009ba2:	230b      	movs	r3, #11
 8009ba4:	617b      	str	r3, [r7, #20]
 8009ba6:	e01c      	b.n	8009be2 <HAL_TIMEx_ConfigBreakInput+0xee>
 8009ba8:	2308      	movs	r3, #8
 8009baa:	623b      	str	r3, [r7, #32]
 8009bac:	2303      	movs	r3, #3
 8009bae:	61bb      	str	r3, [r7, #24]
 8009bb0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8009bb4:	61fb      	str	r3, [r7, #28]
 8009bb6:	230c      	movs	r3, #12
 8009bb8:	617b      	str	r3, [r7, #20]
 8009bba:	e012      	b.n	8009be2 <HAL_TIMEx_ConfigBreakInput+0xee>
 8009bbc:	2310      	movs	r3, #16
 8009bbe:	623b      	str	r3, [r7, #32]
 8009bc0:	2304      	movs	r3, #4
 8009bc2:	61bb      	str	r3, [r7, #24]
 8009bc4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8009bc8:	61fb      	str	r3, [r7, #28]
 8009bca:	230d      	movs	r3, #13
 8009bcc:	617b      	str	r3, [r7, #20]
 8009bce:	e008      	b.n	8009be2 <HAL_TIMEx_ConfigBreakInput+0xee>
 8009bd0:	2300      	movs	r3, #0
 8009bd2:	623b      	str	r3, [r7, #32]
 8009bd4:	2300      	movs	r3, #0
 8009bd6:	61fb      	str	r3, [r7, #28]
 8009bd8:	2300      	movs	r3, #0
 8009bda:	61bb      	str	r3, [r7, #24]
 8009bdc:	2300      	movs	r3, #0
 8009bde:	617b      	str	r3, [r7, #20]
 8009be0:	bf00      	nop
 8009be2:	68bb      	ldr	r3, [r7, #8]
 8009be4:	2b01      	cmp	r3, #1
 8009be6:	d003      	beq.n	8009bf0 <HAL_TIMEx_ConfigBreakInput+0xfc>
 8009be8:	68bb      	ldr	r3, [r7, #8]
 8009bea:	2b02      	cmp	r3, #2
 8009bec:	d025      	beq.n	8009c3a <HAL_TIMEx_ConfigBreakInput+0x146>
 8009bee:	e049      	b.n	8009c84 <HAL_TIMEx_ConfigBreakInput+0x190>
 8009bf0:	68fb      	ldr	r3, [r7, #12]
 8009bf2:	681b      	ldr	r3, [r3, #0]
 8009bf4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009bf6:	613b      	str	r3, [r7, #16]
 8009bf8:	6a3b      	ldr	r3, [r7, #32]
 8009bfa:	43db      	mvns	r3, r3
 8009bfc:	693a      	ldr	r2, [r7, #16]
 8009bfe:	4013      	ands	r3, r2
 8009c00:	613b      	str	r3, [r7, #16]
 8009c02:	687b      	ldr	r3, [r7, #4]
 8009c04:	685a      	ldr	r2, [r3, #4]
 8009c06:	69bb      	ldr	r3, [r7, #24]
 8009c08:	409a      	lsls	r2, r3
 8009c0a:	6a3b      	ldr	r3, [r7, #32]
 8009c0c:	4013      	ands	r3, r2
 8009c0e:	693a      	ldr	r2, [r7, #16]
 8009c10:	4313      	orrs	r3, r2
 8009c12:	613b      	str	r3, [r7, #16]
 8009c14:	69fb      	ldr	r3, [r7, #28]
 8009c16:	43db      	mvns	r3, r3
 8009c18:	693a      	ldr	r2, [r7, #16]
 8009c1a:	4013      	ands	r3, r2
 8009c1c:	613b      	str	r3, [r7, #16]
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	689a      	ldr	r2, [r3, #8]
 8009c22:	697b      	ldr	r3, [r7, #20]
 8009c24:	409a      	lsls	r2, r3
 8009c26:	69fb      	ldr	r3, [r7, #28]
 8009c28:	4013      	ands	r3, r2
 8009c2a:	693a      	ldr	r2, [r7, #16]
 8009c2c:	4313      	orrs	r3, r2
 8009c2e:	613b      	str	r3, [r7, #16]
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	693a      	ldr	r2, [r7, #16]
 8009c36:	661a      	str	r2, [r3, #96]	@ 0x60
 8009c38:	e028      	b.n	8009c8c <HAL_TIMEx_ConfigBreakInput+0x198>
 8009c3a:	68fb      	ldr	r3, [r7, #12]
 8009c3c:	681b      	ldr	r3, [r3, #0]
 8009c3e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8009c40:	613b      	str	r3, [r7, #16]
 8009c42:	6a3b      	ldr	r3, [r7, #32]
 8009c44:	43db      	mvns	r3, r3
 8009c46:	693a      	ldr	r2, [r7, #16]
 8009c48:	4013      	ands	r3, r2
 8009c4a:	613b      	str	r3, [r7, #16]
 8009c4c:	687b      	ldr	r3, [r7, #4]
 8009c4e:	685a      	ldr	r2, [r3, #4]
 8009c50:	69bb      	ldr	r3, [r7, #24]
 8009c52:	409a      	lsls	r2, r3
 8009c54:	6a3b      	ldr	r3, [r7, #32]
 8009c56:	4013      	ands	r3, r2
 8009c58:	693a      	ldr	r2, [r7, #16]
 8009c5a:	4313      	orrs	r3, r2
 8009c5c:	613b      	str	r3, [r7, #16]
 8009c5e:	69fb      	ldr	r3, [r7, #28]
 8009c60:	43db      	mvns	r3, r3
 8009c62:	693a      	ldr	r2, [r7, #16]
 8009c64:	4013      	ands	r3, r2
 8009c66:	613b      	str	r3, [r7, #16]
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	689a      	ldr	r2, [r3, #8]
 8009c6c:	697b      	ldr	r3, [r7, #20]
 8009c6e:	409a      	lsls	r2, r3
 8009c70:	69fb      	ldr	r3, [r7, #28]
 8009c72:	4013      	ands	r3, r2
 8009c74:	693a      	ldr	r2, [r7, #16]
 8009c76:	4313      	orrs	r3, r2
 8009c78:	613b      	str	r3, [r7, #16]
 8009c7a:	68fb      	ldr	r3, [r7, #12]
 8009c7c:	681b      	ldr	r3, [r3, #0]
 8009c7e:	693a      	ldr	r2, [r7, #16]
 8009c80:	665a      	str	r2, [r3, #100]	@ 0x64
 8009c82:	e003      	b.n	8009c8c <HAL_TIMEx_ConfigBreakInput+0x198>
 8009c84:	2301      	movs	r3, #1
 8009c86:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8009c8a:	bf00      	nop
 8009c8c:	68fb      	ldr	r3, [r7, #12]
 8009c8e:	2200      	movs	r2, #0
 8009c90:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009c94:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8009c98:	4618      	mov	r0, r3
 8009c9a:	372c      	adds	r7, #44	@ 0x2c
 8009c9c:	46bd      	mov	sp, r7
 8009c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ca2:	4770      	bx	lr

08009ca4 <TIM_CCxNChannelCmd>:
 8009ca4:	b480      	push	{r7}
 8009ca6:	b087      	sub	sp, #28
 8009ca8:	af00      	add	r7, sp, #0
 8009caa:	60f8      	str	r0, [r7, #12]
 8009cac:	60b9      	str	r1, [r7, #8]
 8009cae:	607a      	str	r2, [r7, #4]
 8009cb0:	68bb      	ldr	r3, [r7, #8]
 8009cb2:	f003 030f 	and.w	r3, r3, #15
 8009cb6:	2204      	movs	r2, #4
 8009cb8:	fa02 f303 	lsl.w	r3, r2, r3
 8009cbc:	617b      	str	r3, [r7, #20]
 8009cbe:	68fb      	ldr	r3, [r7, #12]
 8009cc0:	6a1a      	ldr	r2, [r3, #32]
 8009cc2:	697b      	ldr	r3, [r7, #20]
 8009cc4:	43db      	mvns	r3, r3
 8009cc6:	401a      	ands	r2, r3
 8009cc8:	68fb      	ldr	r3, [r7, #12]
 8009cca:	621a      	str	r2, [r3, #32]
 8009ccc:	68fb      	ldr	r3, [r7, #12]
 8009cce:	6a1a      	ldr	r2, [r3, #32]
 8009cd0:	68bb      	ldr	r3, [r7, #8]
 8009cd2:	f003 030f 	and.w	r3, r3, #15
 8009cd6:	6879      	ldr	r1, [r7, #4]
 8009cd8:	fa01 f303 	lsl.w	r3, r1, r3
 8009cdc:	431a      	orrs	r2, r3
 8009cde:	68fb      	ldr	r3, [r7, #12]
 8009ce0:	621a      	str	r2, [r3, #32]
 8009ce2:	bf00      	nop
 8009ce4:	371c      	adds	r7, #28
 8009ce6:	46bd      	mov	sp, r7
 8009ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cec:	4770      	bx	lr

08009cee <HAL_UART_Init>:
 8009cee:	b580      	push	{r7, lr}
 8009cf0:	b082      	sub	sp, #8
 8009cf2:	af00      	add	r7, sp, #0
 8009cf4:	6078      	str	r0, [r7, #4]
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	2b00      	cmp	r3, #0
 8009cfa:	d101      	bne.n	8009d00 <HAL_UART_Init+0x12>
 8009cfc:	2301      	movs	r3, #1
 8009cfe:	e042      	b.n	8009d86 <HAL_UART_Init+0x98>
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009d06:	2b00      	cmp	r3, #0
 8009d08:	d106      	bne.n	8009d18 <HAL_UART_Init+0x2a>
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	2200      	movs	r2, #0
 8009d0e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009d12:	6878      	ldr	r0, [r7, #4]
 8009d14:	f7f8 fbc6 	bl	80024a4 <HAL_UART_MspInit>
 8009d18:	687b      	ldr	r3, [r7, #4]
 8009d1a:	2224      	movs	r2, #36	@ 0x24
 8009d1c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	681a      	ldr	r2, [r3, #0]
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	681b      	ldr	r3, [r3, #0]
 8009d2a:	f022 0201 	bic.w	r2, r2, #1
 8009d2e:	601a      	str	r2, [r3, #0]
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009d34:	2b00      	cmp	r3, #0
 8009d36:	d002      	beq.n	8009d3e <HAL_UART_Init+0x50>
 8009d38:	6878      	ldr	r0, [r7, #4]
 8009d3a:	f000 ff6f 	bl	800ac1c <UART_AdvFeatureConfig>
 8009d3e:	6878      	ldr	r0, [r7, #4]
 8009d40:	f000 fca0 	bl	800a684 <UART_SetConfig>
 8009d44:	4603      	mov	r3, r0
 8009d46:	2b01      	cmp	r3, #1
 8009d48:	d101      	bne.n	8009d4e <HAL_UART_Init+0x60>
 8009d4a:	2301      	movs	r3, #1
 8009d4c:	e01b      	b.n	8009d86 <HAL_UART_Init+0x98>
 8009d4e:	687b      	ldr	r3, [r7, #4]
 8009d50:	681b      	ldr	r3, [r3, #0]
 8009d52:	685a      	ldr	r2, [r3, #4]
 8009d54:	687b      	ldr	r3, [r7, #4]
 8009d56:	681b      	ldr	r3, [r3, #0]
 8009d58:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8009d5c:	605a      	str	r2, [r3, #4]
 8009d5e:	687b      	ldr	r3, [r7, #4]
 8009d60:	681b      	ldr	r3, [r3, #0]
 8009d62:	689a      	ldr	r2, [r3, #8]
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	681b      	ldr	r3, [r3, #0]
 8009d68:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8009d6c:	609a      	str	r2, [r3, #8]
 8009d6e:	687b      	ldr	r3, [r7, #4]
 8009d70:	681b      	ldr	r3, [r3, #0]
 8009d72:	681a      	ldr	r2, [r3, #0]
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	681b      	ldr	r3, [r3, #0]
 8009d78:	f042 0201 	orr.w	r2, r2, #1
 8009d7c:	601a      	str	r2, [r3, #0]
 8009d7e:	6878      	ldr	r0, [r7, #4]
 8009d80:	f000 ffee 	bl	800ad60 <UART_CheckIdleState>
 8009d84:	4603      	mov	r3, r0
 8009d86:	4618      	mov	r0, r3
 8009d88:	3708      	adds	r7, #8
 8009d8a:	46bd      	mov	sp, r7
 8009d8c:	bd80      	pop	{r7, pc}

08009d8e <HAL_UART_Transmit>:
 8009d8e:	b580      	push	{r7, lr}
 8009d90:	b08a      	sub	sp, #40	@ 0x28
 8009d92:	af02      	add	r7, sp, #8
 8009d94:	60f8      	str	r0, [r7, #12]
 8009d96:	60b9      	str	r1, [r7, #8]
 8009d98:	603b      	str	r3, [r7, #0]
 8009d9a:	4613      	mov	r3, r2
 8009d9c:	80fb      	strh	r3, [r7, #6]
 8009d9e:	68fb      	ldr	r3, [r7, #12]
 8009da0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009da4:	2b20      	cmp	r3, #32
 8009da6:	d17b      	bne.n	8009ea0 <HAL_UART_Transmit+0x112>
 8009da8:	68bb      	ldr	r3, [r7, #8]
 8009daa:	2b00      	cmp	r3, #0
 8009dac:	d002      	beq.n	8009db4 <HAL_UART_Transmit+0x26>
 8009dae:	88fb      	ldrh	r3, [r7, #6]
 8009db0:	2b00      	cmp	r3, #0
 8009db2:	d101      	bne.n	8009db8 <HAL_UART_Transmit+0x2a>
 8009db4:	2301      	movs	r3, #1
 8009db6:	e074      	b.n	8009ea2 <HAL_UART_Transmit+0x114>
 8009db8:	68fb      	ldr	r3, [r7, #12]
 8009dba:	2200      	movs	r2, #0
 8009dbc:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009dc0:	68fb      	ldr	r3, [r7, #12]
 8009dc2:	2221      	movs	r2, #33	@ 0x21
 8009dc4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009dc8:	f7f8 fcb8 	bl	800273c <HAL_GetTick>
 8009dcc:	6178      	str	r0, [r7, #20]
 8009dce:	68fb      	ldr	r3, [r7, #12]
 8009dd0:	88fa      	ldrh	r2, [r7, #6]
 8009dd2:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
 8009dd6:	68fb      	ldr	r3, [r7, #12]
 8009dd8:	88fa      	ldrh	r2, [r7, #6]
 8009dda:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8009dde:	68fb      	ldr	r3, [r7, #12]
 8009de0:	689b      	ldr	r3, [r3, #8]
 8009de2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8009de6:	d108      	bne.n	8009dfa <HAL_UART_Transmit+0x6c>
 8009de8:	68fb      	ldr	r3, [r7, #12]
 8009dea:	691b      	ldr	r3, [r3, #16]
 8009dec:	2b00      	cmp	r3, #0
 8009dee:	d104      	bne.n	8009dfa <HAL_UART_Transmit+0x6c>
 8009df0:	2300      	movs	r3, #0
 8009df2:	61fb      	str	r3, [r7, #28]
 8009df4:	68bb      	ldr	r3, [r7, #8]
 8009df6:	61bb      	str	r3, [r7, #24]
 8009df8:	e003      	b.n	8009e02 <HAL_UART_Transmit+0x74>
 8009dfa:	68bb      	ldr	r3, [r7, #8]
 8009dfc:	61fb      	str	r3, [r7, #28]
 8009dfe:	2300      	movs	r3, #0
 8009e00:	61bb      	str	r3, [r7, #24]
 8009e02:	e030      	b.n	8009e66 <HAL_UART_Transmit+0xd8>
 8009e04:	683b      	ldr	r3, [r7, #0]
 8009e06:	9300      	str	r3, [sp, #0]
 8009e08:	697b      	ldr	r3, [r7, #20]
 8009e0a:	2200      	movs	r2, #0
 8009e0c:	2180      	movs	r1, #128	@ 0x80
 8009e0e:	68f8      	ldr	r0, [r7, #12]
 8009e10:	f001 f850 	bl	800aeb4 <UART_WaitOnFlagUntilTimeout>
 8009e14:	4603      	mov	r3, r0
 8009e16:	2b00      	cmp	r3, #0
 8009e18:	d005      	beq.n	8009e26 <HAL_UART_Transmit+0x98>
 8009e1a:	68fb      	ldr	r3, [r7, #12]
 8009e1c:	2220      	movs	r2, #32
 8009e1e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009e22:	2303      	movs	r3, #3
 8009e24:	e03d      	b.n	8009ea2 <HAL_UART_Transmit+0x114>
 8009e26:	69fb      	ldr	r3, [r7, #28]
 8009e28:	2b00      	cmp	r3, #0
 8009e2a:	d10b      	bne.n	8009e44 <HAL_UART_Transmit+0xb6>
 8009e2c:	69bb      	ldr	r3, [r7, #24]
 8009e2e:	881b      	ldrh	r3, [r3, #0]
 8009e30:	461a      	mov	r2, r3
 8009e32:	68fb      	ldr	r3, [r7, #12]
 8009e34:	681b      	ldr	r3, [r3, #0]
 8009e36:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009e3a:	629a      	str	r2, [r3, #40]	@ 0x28
 8009e3c:	69bb      	ldr	r3, [r7, #24]
 8009e3e:	3302      	adds	r3, #2
 8009e40:	61bb      	str	r3, [r7, #24]
 8009e42:	e007      	b.n	8009e54 <HAL_UART_Transmit+0xc6>
 8009e44:	69fb      	ldr	r3, [r7, #28]
 8009e46:	781a      	ldrb	r2, [r3, #0]
 8009e48:	68fb      	ldr	r3, [r7, #12]
 8009e4a:	681b      	ldr	r3, [r3, #0]
 8009e4c:	629a      	str	r2, [r3, #40]	@ 0x28
 8009e4e:	69fb      	ldr	r3, [r7, #28]
 8009e50:	3301      	adds	r3, #1
 8009e52:	61fb      	str	r3, [r7, #28]
 8009e54:	68fb      	ldr	r3, [r7, #12]
 8009e56:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 8009e5a:	b29b      	uxth	r3, r3
 8009e5c:	3b01      	subs	r3, #1
 8009e5e:	b29a      	uxth	r2, r3
 8009e60:	68fb      	ldr	r3, [r7, #12]
 8009e62:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8009e66:	68fb      	ldr	r3, [r7, #12]
 8009e68:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 8009e6c:	b29b      	uxth	r3, r3
 8009e6e:	2b00      	cmp	r3, #0
 8009e70:	d1c8      	bne.n	8009e04 <HAL_UART_Transmit+0x76>
 8009e72:	683b      	ldr	r3, [r7, #0]
 8009e74:	9300      	str	r3, [sp, #0]
 8009e76:	697b      	ldr	r3, [r7, #20]
 8009e78:	2200      	movs	r2, #0
 8009e7a:	2140      	movs	r1, #64	@ 0x40
 8009e7c:	68f8      	ldr	r0, [r7, #12]
 8009e7e:	f001 f819 	bl	800aeb4 <UART_WaitOnFlagUntilTimeout>
 8009e82:	4603      	mov	r3, r0
 8009e84:	2b00      	cmp	r3, #0
 8009e86:	d005      	beq.n	8009e94 <HAL_UART_Transmit+0x106>
 8009e88:	68fb      	ldr	r3, [r7, #12]
 8009e8a:	2220      	movs	r2, #32
 8009e8c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009e90:	2303      	movs	r3, #3
 8009e92:	e006      	b.n	8009ea2 <HAL_UART_Transmit+0x114>
 8009e94:	68fb      	ldr	r3, [r7, #12]
 8009e96:	2220      	movs	r2, #32
 8009e98:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009e9c:	2300      	movs	r3, #0
 8009e9e:	e000      	b.n	8009ea2 <HAL_UART_Transmit+0x114>
 8009ea0:	2302      	movs	r3, #2
 8009ea2:	4618      	mov	r0, r3
 8009ea4:	3720      	adds	r7, #32
 8009ea6:	46bd      	mov	sp, r7
 8009ea8:	bd80      	pop	{r7, pc}
	...

08009eac <HAL_UART_Transmit_DMA>:
 8009eac:	b580      	push	{r7, lr}
 8009eae:	b08a      	sub	sp, #40	@ 0x28
 8009eb0:	af00      	add	r7, sp, #0
 8009eb2:	60f8      	str	r0, [r7, #12]
 8009eb4:	60b9      	str	r1, [r7, #8]
 8009eb6:	4613      	mov	r3, r2
 8009eb8:	80fb      	strh	r3, [r7, #6]
 8009eba:	68fb      	ldr	r3, [r7, #12]
 8009ebc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009ec0:	2b20      	cmp	r3, #32
 8009ec2:	d167      	bne.n	8009f94 <HAL_UART_Transmit_DMA+0xe8>
 8009ec4:	68bb      	ldr	r3, [r7, #8]
 8009ec6:	2b00      	cmp	r3, #0
 8009ec8:	d002      	beq.n	8009ed0 <HAL_UART_Transmit_DMA+0x24>
 8009eca:	88fb      	ldrh	r3, [r7, #6]
 8009ecc:	2b00      	cmp	r3, #0
 8009ece:	d101      	bne.n	8009ed4 <HAL_UART_Transmit_DMA+0x28>
 8009ed0:	2301      	movs	r3, #1
 8009ed2:	e060      	b.n	8009f96 <HAL_UART_Transmit_DMA+0xea>
 8009ed4:	68fb      	ldr	r3, [r7, #12]
 8009ed6:	68ba      	ldr	r2, [r7, #8]
 8009ed8:	651a      	str	r2, [r3, #80]	@ 0x50
 8009eda:	68fb      	ldr	r3, [r7, #12]
 8009edc:	88fa      	ldrh	r2, [r7, #6]
 8009ede:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
 8009ee2:	68fb      	ldr	r3, [r7, #12]
 8009ee4:	88fa      	ldrh	r2, [r7, #6]
 8009ee6:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8009eea:	68fb      	ldr	r3, [r7, #12]
 8009eec:	2200      	movs	r2, #0
 8009eee:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009ef2:	68fb      	ldr	r3, [r7, #12]
 8009ef4:	2221      	movs	r2, #33	@ 0x21
 8009ef6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009efa:	68fb      	ldr	r3, [r7, #12]
 8009efc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009efe:	2b00      	cmp	r3, #0
 8009f00:	d028      	beq.n	8009f54 <HAL_UART_Transmit_DMA+0xa8>
 8009f02:	68fb      	ldr	r3, [r7, #12]
 8009f04:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009f06:	4a26      	ldr	r2, [pc, #152]	@ (8009fa0 <HAL_UART_Transmit_DMA+0xf4>)
 8009f08:	62da      	str	r2, [r3, #44]	@ 0x2c
 8009f0a:	68fb      	ldr	r3, [r7, #12]
 8009f0c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009f0e:	4a25      	ldr	r2, [pc, #148]	@ (8009fa4 <HAL_UART_Transmit_DMA+0xf8>)
 8009f10:	631a      	str	r2, [r3, #48]	@ 0x30
 8009f12:	68fb      	ldr	r3, [r7, #12]
 8009f14:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009f16:	4a24      	ldr	r2, [pc, #144]	@ (8009fa8 <HAL_UART_Transmit_DMA+0xfc>)
 8009f18:	635a      	str	r2, [r3, #52]	@ 0x34
 8009f1a:	68fb      	ldr	r3, [r7, #12]
 8009f1c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8009f1e:	2200      	movs	r2, #0
 8009f20:	639a      	str	r2, [r3, #56]	@ 0x38
 8009f22:	68fb      	ldr	r3, [r7, #12]
 8009f24:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
 8009f26:	68fb      	ldr	r3, [r7, #12]
 8009f28:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009f2a:	4619      	mov	r1, r3
 8009f2c:	68fb      	ldr	r3, [r7, #12]
 8009f2e:	681b      	ldr	r3, [r3, #0]
 8009f30:	3328      	adds	r3, #40	@ 0x28
 8009f32:	461a      	mov	r2, r3
 8009f34:	88fb      	ldrh	r3, [r7, #6]
 8009f36:	f7fb fe89 	bl	8005c4c <HAL_DMA_Start_IT>
 8009f3a:	4603      	mov	r3, r0
 8009f3c:	2b00      	cmp	r3, #0
 8009f3e:	d009      	beq.n	8009f54 <HAL_UART_Transmit_DMA+0xa8>
 8009f40:	68fb      	ldr	r3, [r7, #12]
 8009f42:	2210      	movs	r2, #16
 8009f44:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009f48:	68fb      	ldr	r3, [r7, #12]
 8009f4a:	2220      	movs	r2, #32
 8009f4c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009f50:	2301      	movs	r3, #1
 8009f52:	e020      	b.n	8009f96 <HAL_UART_Transmit_DMA+0xea>
 8009f54:	68fb      	ldr	r3, [r7, #12]
 8009f56:	681b      	ldr	r3, [r3, #0]
 8009f58:	2240      	movs	r2, #64	@ 0x40
 8009f5a:	621a      	str	r2, [r3, #32]
 8009f5c:	68fb      	ldr	r3, [r7, #12]
 8009f5e:	681b      	ldr	r3, [r3, #0]
 8009f60:	3308      	adds	r3, #8
 8009f62:	617b      	str	r3, [r7, #20]
 8009f64:	697b      	ldr	r3, [r7, #20]
 8009f66:	e853 3f00 	ldrex	r3, [r3]
 8009f6a:	613b      	str	r3, [r7, #16]
 8009f6c:	693b      	ldr	r3, [r7, #16]
 8009f6e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009f72:	627b      	str	r3, [r7, #36]	@ 0x24
 8009f74:	68fb      	ldr	r3, [r7, #12]
 8009f76:	681b      	ldr	r3, [r3, #0]
 8009f78:	3308      	adds	r3, #8
 8009f7a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8009f7c:	623a      	str	r2, [r7, #32]
 8009f7e:	61fb      	str	r3, [r7, #28]
 8009f80:	69f9      	ldr	r1, [r7, #28]
 8009f82:	6a3a      	ldr	r2, [r7, #32]
 8009f84:	e841 2300 	strex	r3, r2, [r1]
 8009f88:	61bb      	str	r3, [r7, #24]
 8009f8a:	69bb      	ldr	r3, [r7, #24]
 8009f8c:	2b00      	cmp	r3, #0
 8009f8e:	d1e5      	bne.n	8009f5c <HAL_UART_Transmit_DMA+0xb0>
 8009f90:	2300      	movs	r3, #0
 8009f92:	e000      	b.n	8009f96 <HAL_UART_Transmit_DMA+0xea>
 8009f94:	2302      	movs	r3, #2
 8009f96:	4618      	mov	r0, r3
 8009f98:	3728      	adds	r7, #40	@ 0x28
 8009f9a:	46bd      	mov	sp, r7
 8009f9c:	bd80      	pop	{r7, pc}
 8009f9e:	bf00      	nop
 8009fa0:	0800b22b 	.word	0x0800b22b
 8009fa4:	0800b2c5 	.word	0x0800b2c5
 8009fa8:	0800b44b 	.word	0x0800b44b

08009fac <HAL_UART_IRQHandler>:
 8009fac:	b580      	push	{r7, lr}
 8009fae:	b0ba      	sub	sp, #232	@ 0xe8
 8009fb0:	af00      	add	r7, sp, #0
 8009fb2:	6078      	str	r0, [r7, #4]
 8009fb4:	687b      	ldr	r3, [r7, #4]
 8009fb6:	681b      	ldr	r3, [r3, #0]
 8009fb8:	69db      	ldr	r3, [r3, #28]
 8009fba:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8009fbe:	687b      	ldr	r3, [r7, #4]
 8009fc0:	681b      	ldr	r3, [r3, #0]
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	681b      	ldr	r3, [r3, #0]
 8009fcc:	689b      	ldr	r3, [r3, #8]
 8009fce:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8009fd2:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 8009fd6:	f640 030f 	movw	r3, #2063	@ 0x80f
 8009fda:	4013      	ands	r3, r2
 8009fdc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8009fe0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8009fe4:	2b00      	cmp	r3, #0
 8009fe6:	d11b      	bne.n	800a020 <HAL_UART_IRQHandler+0x74>
 8009fe8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009fec:	f003 0320 	and.w	r3, r3, #32
 8009ff0:	2b00      	cmp	r3, #0
 8009ff2:	d015      	beq.n	800a020 <HAL_UART_IRQHandler+0x74>
 8009ff4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009ff8:	f003 0320 	and.w	r3, r3, #32
 8009ffc:	2b00      	cmp	r3, #0
 8009ffe:	d105      	bne.n	800a00c <HAL_UART_IRQHandler+0x60>
 800a000:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a004:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a008:	2b00      	cmp	r3, #0
 800a00a:	d009      	beq.n	800a020 <HAL_UART_IRQHandler+0x74>
 800a00c:	687b      	ldr	r3, [r7, #4]
 800a00e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a010:	2b00      	cmp	r3, #0
 800a012:	f000 82e3 	beq.w	800a5dc <HAL_UART_IRQHandler+0x630>
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a01a:	6878      	ldr	r0, [r7, #4]
 800a01c:	4798      	blx	r3
 800a01e:	e2dd      	b.n	800a5dc <HAL_UART_IRQHandler+0x630>
 800a020:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800a024:	2b00      	cmp	r3, #0
 800a026:	f000 8123 	beq.w	800a270 <HAL_UART_IRQHandler+0x2c4>
 800a02a:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 800a02e:	4b8d      	ldr	r3, [pc, #564]	@ (800a264 <HAL_UART_IRQHandler+0x2b8>)
 800a030:	4013      	ands	r3, r2
 800a032:	2b00      	cmp	r3, #0
 800a034:	d106      	bne.n	800a044 <HAL_UART_IRQHandler+0x98>
 800a036:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 800a03a:	4b8b      	ldr	r3, [pc, #556]	@ (800a268 <HAL_UART_IRQHandler+0x2bc>)
 800a03c:	4013      	ands	r3, r2
 800a03e:	2b00      	cmp	r3, #0
 800a040:	f000 8116 	beq.w	800a270 <HAL_UART_IRQHandler+0x2c4>
 800a044:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a048:	f003 0301 	and.w	r3, r3, #1
 800a04c:	2b00      	cmp	r3, #0
 800a04e:	d011      	beq.n	800a074 <HAL_UART_IRQHandler+0xc8>
 800a050:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a054:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800a058:	2b00      	cmp	r3, #0
 800a05a:	d00b      	beq.n	800a074 <HAL_UART_IRQHandler+0xc8>
 800a05c:	687b      	ldr	r3, [r7, #4]
 800a05e:	681b      	ldr	r3, [r3, #0]
 800a060:	2201      	movs	r2, #1
 800a062:	621a      	str	r2, [r3, #32]
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a06a:	f043 0201 	orr.w	r2, r3, #1
 800a06e:	687b      	ldr	r3, [r7, #4]
 800a070:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a074:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a078:	f003 0302 	and.w	r3, r3, #2
 800a07c:	2b00      	cmp	r3, #0
 800a07e:	d011      	beq.n	800a0a4 <HAL_UART_IRQHandler+0xf8>
 800a080:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a084:	f003 0301 	and.w	r3, r3, #1
 800a088:	2b00      	cmp	r3, #0
 800a08a:	d00b      	beq.n	800a0a4 <HAL_UART_IRQHandler+0xf8>
 800a08c:	687b      	ldr	r3, [r7, #4]
 800a08e:	681b      	ldr	r3, [r3, #0]
 800a090:	2202      	movs	r2, #2
 800a092:	621a      	str	r2, [r3, #32]
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a09a:	f043 0204 	orr.w	r2, r3, #4
 800a09e:	687b      	ldr	r3, [r7, #4]
 800a0a0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a0a4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a0a8:	f003 0304 	and.w	r3, r3, #4
 800a0ac:	2b00      	cmp	r3, #0
 800a0ae:	d011      	beq.n	800a0d4 <HAL_UART_IRQHandler+0x128>
 800a0b0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a0b4:	f003 0301 	and.w	r3, r3, #1
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	d00b      	beq.n	800a0d4 <HAL_UART_IRQHandler+0x128>
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	681b      	ldr	r3, [r3, #0]
 800a0c0:	2204      	movs	r2, #4
 800a0c2:	621a      	str	r2, [r3, #32]
 800a0c4:	687b      	ldr	r3, [r7, #4]
 800a0c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a0ca:	f043 0202 	orr.w	r2, r3, #2
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a0d4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a0d8:	f003 0308 	and.w	r3, r3, #8
 800a0dc:	2b00      	cmp	r3, #0
 800a0de:	d017      	beq.n	800a110 <HAL_UART_IRQHandler+0x164>
 800a0e0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a0e4:	f003 0320 	and.w	r3, r3, #32
 800a0e8:	2b00      	cmp	r3, #0
 800a0ea:	d105      	bne.n	800a0f8 <HAL_UART_IRQHandler+0x14c>
 800a0ec:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 800a0f0:	4b5c      	ldr	r3, [pc, #368]	@ (800a264 <HAL_UART_IRQHandler+0x2b8>)
 800a0f2:	4013      	ands	r3, r2
 800a0f4:	2b00      	cmp	r3, #0
 800a0f6:	d00b      	beq.n	800a110 <HAL_UART_IRQHandler+0x164>
 800a0f8:	687b      	ldr	r3, [r7, #4]
 800a0fa:	681b      	ldr	r3, [r3, #0]
 800a0fc:	2208      	movs	r2, #8
 800a0fe:	621a      	str	r2, [r3, #32]
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a106:	f043 0208 	orr.w	r2, r3, #8
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a110:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a114:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800a118:	2b00      	cmp	r3, #0
 800a11a:	d012      	beq.n	800a142 <HAL_UART_IRQHandler+0x196>
 800a11c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a120:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800a124:	2b00      	cmp	r3, #0
 800a126:	d00c      	beq.n	800a142 <HAL_UART_IRQHandler+0x196>
 800a128:	687b      	ldr	r3, [r7, #4]
 800a12a:	681b      	ldr	r3, [r3, #0]
 800a12c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800a130:	621a      	str	r2, [r3, #32]
 800a132:	687b      	ldr	r3, [r7, #4]
 800a134:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a138:	f043 0220 	orr.w	r2, r3, #32
 800a13c:	687b      	ldr	r3, [r7, #4]
 800a13e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a142:	687b      	ldr	r3, [r7, #4]
 800a144:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a148:	2b00      	cmp	r3, #0
 800a14a:	f000 8249 	beq.w	800a5e0 <HAL_UART_IRQHandler+0x634>
 800a14e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a152:	f003 0320 	and.w	r3, r3, #32
 800a156:	2b00      	cmp	r3, #0
 800a158:	d013      	beq.n	800a182 <HAL_UART_IRQHandler+0x1d6>
 800a15a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a15e:	f003 0320 	and.w	r3, r3, #32
 800a162:	2b00      	cmp	r3, #0
 800a164:	d105      	bne.n	800a172 <HAL_UART_IRQHandler+0x1c6>
 800a166:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a16a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a16e:	2b00      	cmp	r3, #0
 800a170:	d007      	beq.n	800a182 <HAL_UART_IRQHandler+0x1d6>
 800a172:	687b      	ldr	r3, [r7, #4]
 800a174:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a176:	2b00      	cmp	r3, #0
 800a178:	d003      	beq.n	800a182 <HAL_UART_IRQHandler+0x1d6>
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a17e:	6878      	ldr	r0, [r7, #4]
 800a180:	4798      	blx	r3
 800a182:	687b      	ldr	r3, [r7, #4]
 800a184:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a188:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800a18c:	687b      	ldr	r3, [r7, #4]
 800a18e:	681b      	ldr	r3, [r3, #0]
 800a190:	689b      	ldr	r3, [r3, #8]
 800a192:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a196:	2b40      	cmp	r3, #64	@ 0x40
 800a198:	d005      	beq.n	800a1a6 <HAL_UART_IRQHandler+0x1fa>
 800a19a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800a19e:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800a1a2:	2b00      	cmp	r3, #0
 800a1a4:	d054      	beq.n	800a250 <HAL_UART_IRQHandler+0x2a4>
 800a1a6:	6878      	ldr	r0, [r7, #4]
 800a1a8:	f000 ffd9 	bl	800b15e <UART_EndRxTransfer>
 800a1ac:	687b      	ldr	r3, [r7, #4]
 800a1ae:	681b      	ldr	r3, [r3, #0]
 800a1b0:	689b      	ldr	r3, [r3, #8]
 800a1b2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a1b6:	2b40      	cmp	r3, #64	@ 0x40
 800a1b8:	d146      	bne.n	800a248 <HAL_UART_IRQHandler+0x29c>
 800a1ba:	687b      	ldr	r3, [r7, #4]
 800a1bc:	681b      	ldr	r3, [r3, #0]
 800a1be:	3308      	adds	r3, #8
 800a1c0:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800a1c4:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800a1c8:	e853 3f00 	ldrex	r3, [r3]
 800a1cc:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800a1d0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a1d4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a1d8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800a1dc:	687b      	ldr	r3, [r7, #4]
 800a1de:	681b      	ldr	r3, [r3, #0]
 800a1e0:	3308      	adds	r3, #8
 800a1e2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800a1e6:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800a1ea:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800a1ee:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800a1f2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800a1f6:	e841 2300 	strex	r3, r2, [r1]
 800a1fa:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800a1fe:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800a202:	2b00      	cmp	r3, #0
 800a204:	d1d9      	bne.n	800a1ba <HAL_UART_IRQHandler+0x20e>
 800a206:	687b      	ldr	r3, [r7, #4]
 800a208:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a20c:	2b00      	cmp	r3, #0
 800a20e:	d017      	beq.n	800a240 <HAL_UART_IRQHandler+0x294>
 800a210:	687b      	ldr	r3, [r7, #4]
 800a212:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a216:	4a15      	ldr	r2, [pc, #84]	@ (800a26c <HAL_UART_IRQHandler+0x2c0>)
 800a218:	639a      	str	r2, [r3, #56]	@ 0x38
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a220:	4618      	mov	r0, r3
 800a222:	f7fb fde7 	bl	8005df4 <HAL_DMA_Abort_IT>
 800a226:	4603      	mov	r3, r0
 800a228:	2b00      	cmp	r3, #0
 800a22a:	d019      	beq.n	800a260 <HAL_UART_IRQHandler+0x2b4>
 800a22c:	687b      	ldr	r3, [r7, #4]
 800a22e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a232:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a234:	687a      	ldr	r2, [r7, #4]
 800a236:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800a23a:	4610      	mov	r0, r2
 800a23c:	4798      	blx	r3
 800a23e:	e00f      	b.n	800a260 <HAL_UART_IRQHandler+0x2b4>
 800a240:	6878      	ldr	r0, [r7, #4]
 800a242:	f000 f9ff 	bl	800a644 <HAL_UART_ErrorCallback>
 800a246:	e00b      	b.n	800a260 <HAL_UART_IRQHandler+0x2b4>
 800a248:	6878      	ldr	r0, [r7, #4]
 800a24a:	f000 f9fb 	bl	800a644 <HAL_UART_ErrorCallback>
 800a24e:	e007      	b.n	800a260 <HAL_UART_IRQHandler+0x2b4>
 800a250:	6878      	ldr	r0, [r7, #4]
 800a252:	f000 f9f7 	bl	800a644 <HAL_UART_ErrorCallback>
 800a256:	687b      	ldr	r3, [r7, #4]
 800a258:	2200      	movs	r2, #0
 800a25a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a25e:	e1bf      	b.n	800a5e0 <HAL_UART_IRQHandler+0x634>
 800a260:	bf00      	nop
 800a262:	e1bd      	b.n	800a5e0 <HAL_UART_IRQHandler+0x634>
 800a264:	10000001 	.word	0x10000001
 800a268:	04000120 	.word	0x04000120
 800a26c:	0800b4cb 	.word	0x0800b4cb
 800a270:	687b      	ldr	r3, [r7, #4]
 800a272:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800a274:	2b01      	cmp	r3, #1
 800a276:	f040 8153 	bne.w	800a520 <HAL_UART_IRQHandler+0x574>
 800a27a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a27e:	f003 0310 	and.w	r3, r3, #16
 800a282:	2b00      	cmp	r3, #0
 800a284:	f000 814c 	beq.w	800a520 <HAL_UART_IRQHandler+0x574>
 800a288:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a28c:	f003 0310 	and.w	r3, r3, #16
 800a290:	2b00      	cmp	r3, #0
 800a292:	f000 8145 	beq.w	800a520 <HAL_UART_IRQHandler+0x574>
 800a296:	687b      	ldr	r3, [r7, #4]
 800a298:	681b      	ldr	r3, [r3, #0]
 800a29a:	2210      	movs	r2, #16
 800a29c:	621a      	str	r2, [r3, #32]
 800a29e:	687b      	ldr	r3, [r7, #4]
 800a2a0:	681b      	ldr	r3, [r3, #0]
 800a2a2:	689b      	ldr	r3, [r3, #8]
 800a2a4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a2a8:	2b40      	cmp	r3, #64	@ 0x40
 800a2aa:	f040 80bb 	bne.w	800a424 <HAL_UART_IRQHandler+0x478>
 800a2ae:	687b      	ldr	r3, [r7, #4]
 800a2b0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a2b4:	681b      	ldr	r3, [r3, #0]
 800a2b6:	685b      	ldr	r3, [r3, #4]
 800a2b8:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 800a2bc:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800a2c0:	2b00      	cmp	r3, #0
 800a2c2:	f000 818f 	beq.w	800a5e4 <HAL_UART_IRQHandler+0x638>
 800a2c6:	687b      	ldr	r3, [r7, #4]
 800a2c8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800a2cc:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800a2d0:	429a      	cmp	r2, r3
 800a2d2:	f080 8187 	bcs.w	800a5e4 <HAL_UART_IRQHandler+0x638>
 800a2d6:	687b      	ldr	r3, [r7, #4]
 800a2d8:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800a2dc:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800a2e0:	687b      	ldr	r3, [r7, #4]
 800a2e2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a2e6:	681b      	ldr	r3, [r3, #0]
 800a2e8:	681b      	ldr	r3, [r3, #0]
 800a2ea:	f003 0320 	and.w	r3, r3, #32
 800a2ee:	2b00      	cmp	r3, #0
 800a2f0:	f040 8087 	bne.w	800a402 <HAL_UART_IRQHandler+0x456>
 800a2f4:	687b      	ldr	r3, [r7, #4]
 800a2f6:	681b      	ldr	r3, [r3, #0]
 800a2f8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800a2fc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800a300:	e853 3f00 	ldrex	r3, [r3]
 800a304:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800a308:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800a30c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800a310:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800a314:	687b      	ldr	r3, [r7, #4]
 800a316:	681b      	ldr	r3, [r3, #0]
 800a318:	461a      	mov	r2, r3
 800a31a:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a31e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800a322:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 800a326:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800a32a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800a32e:	e841 2300 	strex	r3, r2, [r1]
 800a332:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800a336:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a33a:	2b00      	cmp	r3, #0
 800a33c:	d1da      	bne.n	800a2f4 <HAL_UART_IRQHandler+0x348>
 800a33e:	687b      	ldr	r3, [r7, #4]
 800a340:	681b      	ldr	r3, [r3, #0]
 800a342:	3308      	adds	r3, #8
 800a344:	677b      	str	r3, [r7, #116]	@ 0x74
 800a346:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a348:	e853 3f00 	ldrex	r3, [r3]
 800a34c:	673b      	str	r3, [r7, #112]	@ 0x70
 800a34e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800a350:	f023 0301 	bic.w	r3, r3, #1
 800a354:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800a358:	687b      	ldr	r3, [r7, #4]
 800a35a:	681b      	ldr	r3, [r3, #0]
 800a35c:	3308      	adds	r3, #8
 800a35e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800a362:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800a366:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800a368:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800a36a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800a36e:	e841 2300 	strex	r3, r2, [r1]
 800a372:	67bb      	str	r3, [r7, #120]	@ 0x78
 800a374:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800a376:	2b00      	cmp	r3, #0
 800a378:	d1e1      	bne.n	800a33e <HAL_UART_IRQHandler+0x392>
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	681b      	ldr	r3, [r3, #0]
 800a37e:	3308      	adds	r3, #8
 800a380:	663b      	str	r3, [r7, #96]	@ 0x60
 800a382:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800a384:	e853 3f00 	ldrex	r3, [r3]
 800a388:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800a38a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800a38c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a390:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800a394:	687b      	ldr	r3, [r7, #4]
 800a396:	681b      	ldr	r3, [r3, #0]
 800a398:	3308      	adds	r3, #8
 800a39a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800a39e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800a3a0:	66bb      	str	r3, [r7, #104]	@ 0x68
 800a3a2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800a3a4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800a3a6:	e841 2300 	strex	r3, r2, [r1]
 800a3aa:	667b      	str	r3, [r7, #100]	@ 0x64
 800a3ac:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a3ae:	2b00      	cmp	r3, #0
 800a3b0:	d1e3      	bne.n	800a37a <HAL_UART_IRQHandler+0x3ce>
 800a3b2:	687b      	ldr	r3, [r7, #4]
 800a3b4:	2220      	movs	r2, #32
 800a3b6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	2200      	movs	r2, #0
 800a3be:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a3c0:	687b      	ldr	r3, [r7, #4]
 800a3c2:	681b      	ldr	r3, [r3, #0]
 800a3c4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a3c6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a3c8:	e853 3f00 	ldrex	r3, [r3]
 800a3cc:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a3ce:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a3d0:	f023 0310 	bic.w	r3, r3, #16
 800a3d4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a3d8:	687b      	ldr	r3, [r7, #4]
 800a3da:	681b      	ldr	r3, [r3, #0]
 800a3dc:	461a      	mov	r2, r3
 800a3de:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a3e2:	65bb      	str	r3, [r7, #88]	@ 0x58
 800a3e4:	657a      	str	r2, [r7, #84]	@ 0x54
 800a3e6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800a3e8:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800a3ea:	e841 2300 	strex	r3, r2, [r1]
 800a3ee:	653b      	str	r3, [r7, #80]	@ 0x50
 800a3f0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800a3f2:	2b00      	cmp	r3, #0
 800a3f4:	d1e4      	bne.n	800a3c0 <HAL_UART_IRQHandler+0x414>
 800a3f6:	687b      	ldr	r3, [r7, #4]
 800a3f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a3fc:	4618      	mov	r0, r3
 800a3fe:	f7fb fca0 	bl	8005d42 <HAL_DMA_Abort>
 800a402:	687b      	ldr	r3, [r7, #4]
 800a404:	2202      	movs	r2, #2
 800a406:	671a      	str	r2, [r3, #112]	@ 0x70
 800a408:	687b      	ldr	r3, [r7, #4]
 800a40a:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a414:	b29b      	uxth	r3, r3
 800a416:	1ad3      	subs	r3, r2, r3
 800a418:	b29b      	uxth	r3, r3
 800a41a:	4619      	mov	r1, r3
 800a41c:	6878      	ldr	r0, [r7, #4]
<<<<<<< HEAD
 800a41e:	f001 fdb1 	bl	800bf84 <HAL_UARTEx_RxEventCallback>
=======
 800a41e:	f002 ff5b 	bl	800d2d8 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
 800a422:	e0df      	b.n	800a5e4 <HAL_UART_IRQHandler+0x638>
 800a424:	687b      	ldr	r3, [r7, #4]
 800a426:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a430:	b29b      	uxth	r3, r3
 800a432:	1ad3      	subs	r3, r2, r3
 800a434:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 800a438:	687b      	ldr	r3, [r7, #4]
 800a43a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a43e:	b29b      	uxth	r3, r3
 800a440:	2b00      	cmp	r3, #0
 800a442:	f000 80d1 	beq.w	800a5e8 <HAL_UART_IRQHandler+0x63c>
 800a446:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800a44a:	2b00      	cmp	r3, #0
 800a44c:	f000 80cc 	beq.w	800a5e8 <HAL_UART_IRQHandler+0x63c>
 800a450:	687b      	ldr	r3, [r7, #4]
 800a452:	681b      	ldr	r3, [r3, #0]
 800a454:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a456:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a458:	e853 3f00 	ldrex	r3, [r3]
 800a45c:	637b      	str	r3, [r7, #52]	@ 0x34
 800a45e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a460:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a464:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800a468:	687b      	ldr	r3, [r7, #4]
 800a46a:	681b      	ldr	r3, [r3, #0]
 800a46c:	461a      	mov	r2, r3
 800a46e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a472:	647b      	str	r3, [r7, #68]	@ 0x44
 800a474:	643a      	str	r2, [r7, #64]	@ 0x40
 800a476:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800a478:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800a47a:	e841 2300 	strex	r3, r2, [r1]
 800a47e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a480:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a482:	2b00      	cmp	r3, #0
 800a484:	d1e4      	bne.n	800a450 <HAL_UART_IRQHandler+0x4a4>
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	3308      	adds	r3, #8
 800a48c:	627b      	str	r3, [r7, #36]	@ 0x24
 800a48e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a490:	e853 3f00 	ldrex	r3, [r3]
 800a494:	623b      	str	r3, [r7, #32]
 800a496:	6a3b      	ldr	r3, [r7, #32]
 800a498:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a49c:	f023 0301 	bic.w	r3, r3, #1
 800a4a0:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800a4a4:	687b      	ldr	r3, [r7, #4]
 800a4a6:	681b      	ldr	r3, [r3, #0]
 800a4a8:	3308      	adds	r3, #8
 800a4aa:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800a4ae:	633a      	str	r2, [r7, #48]	@ 0x30
 800a4b0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a4b2:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a4b4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a4b6:	e841 2300 	strex	r3, r2, [r1]
 800a4ba:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a4bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a4be:	2b00      	cmp	r3, #0
 800a4c0:	d1e1      	bne.n	800a486 <HAL_UART_IRQHandler+0x4da>
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	2220      	movs	r2, #32
 800a4c6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a4ca:	687b      	ldr	r3, [r7, #4]
 800a4cc:	2200      	movs	r2, #0
 800a4ce:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	2200      	movs	r2, #0
 800a4d4:	675a      	str	r2, [r3, #116]	@ 0x74
 800a4d6:	687b      	ldr	r3, [r7, #4]
 800a4d8:	681b      	ldr	r3, [r3, #0]
 800a4da:	613b      	str	r3, [r7, #16]
 800a4dc:	693b      	ldr	r3, [r7, #16]
 800a4de:	e853 3f00 	ldrex	r3, [r3]
 800a4e2:	60fb      	str	r3, [r7, #12]
 800a4e4:	68fb      	ldr	r3, [r7, #12]
 800a4e6:	f023 0310 	bic.w	r3, r3, #16
 800a4ea:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	681b      	ldr	r3, [r3, #0]
 800a4f2:	461a      	mov	r2, r3
 800a4f4:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800a4f8:	61fb      	str	r3, [r7, #28]
 800a4fa:	61ba      	str	r2, [r7, #24]
 800a4fc:	69b9      	ldr	r1, [r7, #24]
 800a4fe:	69fa      	ldr	r2, [r7, #28]
 800a500:	e841 2300 	strex	r3, r2, [r1]
 800a504:	617b      	str	r3, [r7, #20]
 800a506:	697b      	ldr	r3, [r7, #20]
 800a508:	2b00      	cmp	r3, #0
 800a50a:	d1e4      	bne.n	800a4d6 <HAL_UART_IRQHandler+0x52a>
 800a50c:	687b      	ldr	r3, [r7, #4]
 800a50e:	2202      	movs	r2, #2
 800a510:	671a      	str	r2, [r3, #112]	@ 0x70
 800a512:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800a516:	4619      	mov	r1, r3
 800a518:	6878      	ldr	r0, [r7, #4]
<<<<<<< HEAD
 800a51a:	f001 fd33 	bl	800bf84 <HAL_UARTEx_RxEventCallback>
=======
 800a51a:	f002 fedd 	bl	800d2d8 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
 800a51e:	e063      	b.n	800a5e8 <HAL_UART_IRQHandler+0x63c>
 800a520:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a524:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800a528:	2b00      	cmp	r3, #0
 800a52a:	d00e      	beq.n	800a54a <HAL_UART_IRQHandler+0x59e>
 800a52c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a530:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800a534:	2b00      	cmp	r3, #0
 800a536:	d008      	beq.n	800a54a <HAL_UART_IRQHandler+0x59e>
 800a538:	687b      	ldr	r3, [r7, #4]
 800a53a:	681b      	ldr	r3, [r3, #0]
 800a53c:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800a540:	621a      	str	r2, [r3, #32]
 800a542:	6878      	ldr	r0, [r7, #4]
 800a544:	f001 f802 	bl	800b54c <HAL_UARTEx_WakeupCallback>
 800a548:	e051      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a54a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a54e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a552:	2b00      	cmp	r3, #0
 800a554:	d014      	beq.n	800a580 <HAL_UART_IRQHandler+0x5d4>
 800a556:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a55a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a55e:	2b00      	cmp	r3, #0
 800a560:	d105      	bne.n	800a56e <HAL_UART_IRQHandler+0x5c2>
 800a562:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a566:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a56a:	2b00      	cmp	r3, #0
 800a56c:	d008      	beq.n	800a580 <HAL_UART_IRQHandler+0x5d4>
 800a56e:	687b      	ldr	r3, [r7, #4]
 800a570:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a572:	2b00      	cmp	r3, #0
 800a574:	d03a      	beq.n	800a5ec <HAL_UART_IRQHandler+0x640>
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a57a:	6878      	ldr	r0, [r7, #4]
 800a57c:	4798      	blx	r3
 800a57e:	e035      	b.n	800a5ec <HAL_UART_IRQHandler+0x640>
 800a580:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a584:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a588:	2b00      	cmp	r3, #0
 800a58a:	d009      	beq.n	800a5a0 <HAL_UART_IRQHandler+0x5f4>
 800a58c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a590:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a594:	2b00      	cmp	r3, #0
 800a596:	d003      	beq.n	800a5a0 <HAL_UART_IRQHandler+0x5f4>
 800a598:	6878      	ldr	r0, [r7, #4]
 800a59a:	f000 ffac 	bl	800b4f6 <UART_EndTransmit_IT>
 800a59e:	e026      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5a0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a5a4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a5a8:	2b00      	cmp	r3, #0
 800a5aa:	d009      	beq.n	800a5c0 <HAL_UART_IRQHandler+0x614>
 800a5ac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a5b0:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800a5b4:	2b00      	cmp	r3, #0
 800a5b6:	d003      	beq.n	800a5c0 <HAL_UART_IRQHandler+0x614>
 800a5b8:	6878      	ldr	r0, [r7, #4]
 800a5ba:	f000 ffdb 	bl	800b574 <HAL_UARTEx_TxFifoEmptyCallback>
 800a5be:	e016      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5c0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a5c4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800a5c8:	2b00      	cmp	r3, #0
 800a5ca:	d010      	beq.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5cc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a5d0:	2b00      	cmp	r3, #0
 800a5d2:	da0c      	bge.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5d4:	6878      	ldr	r0, [r7, #4]
 800a5d6:	f000 ffc3 	bl	800b560 <HAL_UARTEx_RxFifoFullCallback>
 800a5da:	e008      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5dc:	bf00      	nop
 800a5de:	e006      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5e0:	bf00      	nop
 800a5e2:	e004      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5e4:	bf00      	nop
 800a5e6:	e002      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5e8:	bf00      	nop
 800a5ea:	e000      	b.n	800a5ee <HAL_UART_IRQHandler+0x642>
 800a5ec:	bf00      	nop
 800a5ee:	37e8      	adds	r7, #232	@ 0xe8
 800a5f0:	46bd      	mov	sp, r7
 800a5f2:	bd80      	pop	{r7, pc}

0800a5f4 <HAL_UART_TxCpltCallback>:
 800a5f4:	b480      	push	{r7}
 800a5f6:	b083      	sub	sp, #12
 800a5f8:	af00      	add	r7, sp, #0
 800a5fa:	6078      	str	r0, [r7, #4]
 800a5fc:	bf00      	nop
 800a5fe:	370c      	adds	r7, #12
 800a600:	46bd      	mov	sp, r7
 800a602:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a606:	4770      	bx	lr

0800a608 <HAL_UART_TxHalfCpltCallback>:
 800a608:	b480      	push	{r7}
 800a60a:	b083      	sub	sp, #12
 800a60c:	af00      	add	r7, sp, #0
 800a60e:	6078      	str	r0, [r7, #4]
 800a610:	bf00      	nop
 800a612:	370c      	adds	r7, #12
 800a614:	46bd      	mov	sp, r7
 800a616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a61a:	4770      	bx	lr

0800a61c <HAL_UART_RxCpltCallback>:
 800a61c:	b480      	push	{r7}
 800a61e:	b083      	sub	sp, #12
 800a620:	af00      	add	r7, sp, #0
 800a622:	6078      	str	r0, [r7, #4]
 800a624:	bf00      	nop
 800a626:	370c      	adds	r7, #12
 800a628:	46bd      	mov	sp, r7
 800a62a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a62e:	4770      	bx	lr

0800a630 <HAL_UART_RxHalfCpltCallback>:
 800a630:	b480      	push	{r7}
 800a632:	b083      	sub	sp, #12
 800a634:	af00      	add	r7, sp, #0
 800a636:	6078      	str	r0, [r7, #4]
 800a638:	bf00      	nop
 800a63a:	370c      	adds	r7, #12
 800a63c:	46bd      	mov	sp, r7
 800a63e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a642:	4770      	bx	lr

0800a644 <HAL_UART_ErrorCallback>:
 800a644:	b480      	push	{r7}
 800a646:	b083      	sub	sp, #12
 800a648:	af00      	add	r7, sp, #0
 800a64a:	6078      	str	r0, [r7, #4]
 800a64c:	bf00      	nop
 800a64e:	370c      	adds	r7, #12
 800a650:	46bd      	mov	sp, r7
 800a652:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a656:	4770      	bx	lr

0800a658 <HAL_UART_GetState>:
 800a658:	b480      	push	{r7}
 800a65a:	b085      	sub	sp, #20
 800a65c:	af00      	add	r7, sp, #0
 800a65e:	6078      	str	r0, [r7, #4]
 800a660:	687b      	ldr	r3, [r7, #4]
 800a662:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a666:	60fb      	str	r3, [r7, #12]
 800a668:	687b      	ldr	r3, [r7, #4]
 800a66a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800a66e:	60bb      	str	r3, [r7, #8]
 800a670:	68fa      	ldr	r2, [r7, #12]
 800a672:	68bb      	ldr	r3, [r7, #8]
 800a674:	4313      	orrs	r3, r2
 800a676:	4618      	mov	r0, r3
 800a678:	3714      	adds	r7, #20
 800a67a:	46bd      	mov	sp, r7
 800a67c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a680:	4770      	bx	lr
	...

0800a684 <UART_SetConfig>:
 800a684:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800a688:	b08c      	sub	sp, #48	@ 0x30
 800a68a:	af00      	add	r7, sp, #0
 800a68c:	6178      	str	r0, [r7, #20]
 800a68e:	2300      	movs	r3, #0
 800a690:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800a694:	697b      	ldr	r3, [r7, #20]
 800a696:	689a      	ldr	r2, [r3, #8]
 800a698:	697b      	ldr	r3, [r7, #20]
 800a69a:	691b      	ldr	r3, [r3, #16]
 800a69c:	431a      	orrs	r2, r3
 800a69e:	697b      	ldr	r3, [r7, #20]
 800a6a0:	695b      	ldr	r3, [r3, #20]
 800a6a2:	431a      	orrs	r2, r3
 800a6a4:	697b      	ldr	r3, [r7, #20]
 800a6a6:	69db      	ldr	r3, [r3, #28]
 800a6a8:	4313      	orrs	r3, r2
 800a6aa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a6ac:	697b      	ldr	r3, [r7, #20]
 800a6ae:	681b      	ldr	r3, [r3, #0]
 800a6b0:	681a      	ldr	r2, [r3, #0]
 800a6b2:	4bab      	ldr	r3, [pc, #684]	@ (800a960 <UART_SetConfig+0x2dc>)
 800a6b4:	4013      	ands	r3, r2
 800a6b6:	697a      	ldr	r2, [r7, #20]
 800a6b8:	6812      	ldr	r2, [r2, #0]
 800a6ba:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a6bc:	430b      	orrs	r3, r1
 800a6be:	6013      	str	r3, [r2, #0]
 800a6c0:	697b      	ldr	r3, [r7, #20]
 800a6c2:	681b      	ldr	r3, [r3, #0]
 800a6c4:	685b      	ldr	r3, [r3, #4]
 800a6c6:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800a6ca:	697b      	ldr	r3, [r7, #20]
 800a6cc:	68da      	ldr	r2, [r3, #12]
 800a6ce:	697b      	ldr	r3, [r7, #20]
 800a6d0:	681b      	ldr	r3, [r3, #0]
 800a6d2:	430a      	orrs	r2, r1
 800a6d4:	605a      	str	r2, [r3, #4]
 800a6d6:	697b      	ldr	r3, [r7, #20]
 800a6d8:	699b      	ldr	r3, [r3, #24]
 800a6da:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a6dc:	697b      	ldr	r3, [r7, #20]
 800a6de:	681b      	ldr	r3, [r3, #0]
 800a6e0:	4aa0      	ldr	r2, [pc, #640]	@ (800a964 <UART_SetConfig+0x2e0>)
 800a6e2:	4293      	cmp	r3, r2
 800a6e4:	d004      	beq.n	800a6f0 <UART_SetConfig+0x6c>
 800a6e6:	697b      	ldr	r3, [r7, #20]
 800a6e8:	6a1b      	ldr	r3, [r3, #32]
 800a6ea:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a6ec:	4313      	orrs	r3, r2
 800a6ee:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a6f0:	697b      	ldr	r3, [r7, #20]
 800a6f2:	681b      	ldr	r3, [r3, #0]
 800a6f4:	689b      	ldr	r3, [r3, #8]
 800a6f6:	f023 436e 	bic.w	r3, r3, #3992977408	@ 0xee000000
 800a6fa:	f423 6330 	bic.w	r3, r3, #2816	@ 0xb00
 800a6fe:	697a      	ldr	r2, [r7, #20]
 800a700:	6812      	ldr	r2, [r2, #0]
 800a702:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a704:	430b      	orrs	r3, r1
 800a706:	6093      	str	r3, [r2, #8]
 800a708:	697b      	ldr	r3, [r7, #20]
 800a70a:	681b      	ldr	r3, [r3, #0]
 800a70c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a70e:	f023 010f 	bic.w	r1, r3, #15
 800a712:	697b      	ldr	r3, [r7, #20]
 800a714:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800a716:	697b      	ldr	r3, [r7, #20]
 800a718:	681b      	ldr	r3, [r3, #0]
 800a71a:	430a      	orrs	r2, r1
 800a71c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800a71e:	697b      	ldr	r3, [r7, #20]
 800a720:	681b      	ldr	r3, [r3, #0]
 800a722:	4a91      	ldr	r2, [pc, #580]	@ (800a968 <UART_SetConfig+0x2e4>)
 800a724:	4293      	cmp	r3, r2
 800a726:	d125      	bne.n	800a774 <UART_SetConfig+0xf0>
 800a728:	4b90      	ldr	r3, [pc, #576]	@ (800a96c <UART_SetConfig+0x2e8>)
 800a72a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a72e:	f003 0303 	and.w	r3, r3, #3
 800a732:	2b03      	cmp	r3, #3
 800a734:	d81a      	bhi.n	800a76c <UART_SetConfig+0xe8>
 800a736:	a201      	add	r2, pc, #4	@ (adr r2, 800a73c <UART_SetConfig+0xb8>)
 800a738:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a73c:	0800a74d 	.word	0x0800a74d
 800a740:	0800a75d 	.word	0x0800a75d
 800a744:	0800a755 	.word	0x0800a755
 800a748:	0800a765 	.word	0x0800a765
 800a74c:	2301      	movs	r3, #1
 800a74e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a752:	e0d6      	b.n	800a902 <UART_SetConfig+0x27e>
 800a754:	2302      	movs	r3, #2
 800a756:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a75a:	e0d2      	b.n	800a902 <UART_SetConfig+0x27e>
 800a75c:	2304      	movs	r3, #4
 800a75e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a762:	e0ce      	b.n	800a902 <UART_SetConfig+0x27e>
 800a764:	2308      	movs	r3, #8
 800a766:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a76a:	e0ca      	b.n	800a902 <UART_SetConfig+0x27e>
 800a76c:	2310      	movs	r3, #16
 800a76e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a772:	e0c6      	b.n	800a902 <UART_SetConfig+0x27e>
 800a774:	697b      	ldr	r3, [r7, #20]
 800a776:	681b      	ldr	r3, [r3, #0]
 800a778:	4a7d      	ldr	r2, [pc, #500]	@ (800a970 <UART_SetConfig+0x2ec>)
 800a77a:	4293      	cmp	r3, r2
 800a77c:	d138      	bne.n	800a7f0 <UART_SetConfig+0x16c>
 800a77e:	4b7b      	ldr	r3, [pc, #492]	@ (800a96c <UART_SetConfig+0x2e8>)
 800a780:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a784:	f003 030c 	and.w	r3, r3, #12
 800a788:	2b0c      	cmp	r3, #12
 800a78a:	d82d      	bhi.n	800a7e8 <UART_SetConfig+0x164>
 800a78c:	a201      	add	r2, pc, #4	@ (adr r2, 800a794 <UART_SetConfig+0x110>)
 800a78e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a792:	bf00      	nop
 800a794:	0800a7c9 	.word	0x0800a7c9
 800a798:	0800a7e9 	.word	0x0800a7e9
 800a79c:	0800a7e9 	.word	0x0800a7e9
 800a7a0:	0800a7e9 	.word	0x0800a7e9
 800a7a4:	0800a7d9 	.word	0x0800a7d9
 800a7a8:	0800a7e9 	.word	0x0800a7e9
 800a7ac:	0800a7e9 	.word	0x0800a7e9
 800a7b0:	0800a7e9 	.word	0x0800a7e9
 800a7b4:	0800a7d1 	.word	0x0800a7d1
 800a7b8:	0800a7e9 	.word	0x0800a7e9
 800a7bc:	0800a7e9 	.word	0x0800a7e9
 800a7c0:	0800a7e9 	.word	0x0800a7e9
 800a7c4:	0800a7e1 	.word	0x0800a7e1
 800a7c8:	2300      	movs	r3, #0
 800a7ca:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7ce:	e098      	b.n	800a902 <UART_SetConfig+0x27e>
 800a7d0:	2302      	movs	r3, #2
 800a7d2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7d6:	e094      	b.n	800a902 <UART_SetConfig+0x27e>
 800a7d8:	2304      	movs	r3, #4
 800a7da:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7de:	e090      	b.n	800a902 <UART_SetConfig+0x27e>
 800a7e0:	2308      	movs	r3, #8
 800a7e2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7e6:	e08c      	b.n	800a902 <UART_SetConfig+0x27e>
 800a7e8:	2310      	movs	r3, #16
 800a7ea:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7ee:	e088      	b.n	800a902 <UART_SetConfig+0x27e>
 800a7f0:	697b      	ldr	r3, [r7, #20]
 800a7f2:	681b      	ldr	r3, [r3, #0]
 800a7f4:	4a5f      	ldr	r2, [pc, #380]	@ (800a974 <UART_SetConfig+0x2f0>)
 800a7f6:	4293      	cmp	r3, r2
 800a7f8:	d125      	bne.n	800a846 <UART_SetConfig+0x1c2>
 800a7fa:	4b5c      	ldr	r3, [pc, #368]	@ (800a96c <UART_SetConfig+0x2e8>)
 800a7fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a800:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800a804:	2b30      	cmp	r3, #48	@ 0x30
 800a806:	d016      	beq.n	800a836 <UART_SetConfig+0x1b2>
 800a808:	2b30      	cmp	r3, #48	@ 0x30
 800a80a:	d818      	bhi.n	800a83e <UART_SetConfig+0x1ba>
 800a80c:	2b20      	cmp	r3, #32
 800a80e:	d00a      	beq.n	800a826 <UART_SetConfig+0x1a2>
 800a810:	2b20      	cmp	r3, #32
 800a812:	d814      	bhi.n	800a83e <UART_SetConfig+0x1ba>
 800a814:	2b00      	cmp	r3, #0
 800a816:	d002      	beq.n	800a81e <UART_SetConfig+0x19a>
 800a818:	2b10      	cmp	r3, #16
 800a81a:	d008      	beq.n	800a82e <UART_SetConfig+0x1aa>
 800a81c:	e00f      	b.n	800a83e <UART_SetConfig+0x1ba>
 800a81e:	2300      	movs	r3, #0
 800a820:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a824:	e06d      	b.n	800a902 <UART_SetConfig+0x27e>
 800a826:	2302      	movs	r3, #2
 800a828:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a82c:	e069      	b.n	800a902 <UART_SetConfig+0x27e>
 800a82e:	2304      	movs	r3, #4
 800a830:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a834:	e065      	b.n	800a902 <UART_SetConfig+0x27e>
 800a836:	2308      	movs	r3, #8
 800a838:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a83c:	e061      	b.n	800a902 <UART_SetConfig+0x27e>
 800a83e:	2310      	movs	r3, #16
 800a840:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a844:	e05d      	b.n	800a902 <UART_SetConfig+0x27e>
 800a846:	697b      	ldr	r3, [r7, #20]
 800a848:	681b      	ldr	r3, [r3, #0]
 800a84a:	4a4b      	ldr	r2, [pc, #300]	@ (800a978 <UART_SetConfig+0x2f4>)
 800a84c:	4293      	cmp	r3, r2
 800a84e:	d125      	bne.n	800a89c <UART_SetConfig+0x218>
 800a850:	4b46      	ldr	r3, [pc, #280]	@ (800a96c <UART_SetConfig+0x2e8>)
 800a852:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a856:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800a85a:	2bc0      	cmp	r3, #192	@ 0xc0
 800a85c:	d016      	beq.n	800a88c <UART_SetConfig+0x208>
 800a85e:	2bc0      	cmp	r3, #192	@ 0xc0
 800a860:	d818      	bhi.n	800a894 <UART_SetConfig+0x210>
 800a862:	2b80      	cmp	r3, #128	@ 0x80
 800a864:	d00a      	beq.n	800a87c <UART_SetConfig+0x1f8>
 800a866:	2b80      	cmp	r3, #128	@ 0x80
 800a868:	d814      	bhi.n	800a894 <UART_SetConfig+0x210>
 800a86a:	2b00      	cmp	r3, #0
 800a86c:	d002      	beq.n	800a874 <UART_SetConfig+0x1f0>
 800a86e:	2b40      	cmp	r3, #64	@ 0x40
 800a870:	d008      	beq.n	800a884 <UART_SetConfig+0x200>
 800a872:	e00f      	b.n	800a894 <UART_SetConfig+0x210>
 800a874:	2300      	movs	r3, #0
 800a876:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a87a:	e042      	b.n	800a902 <UART_SetConfig+0x27e>
 800a87c:	2302      	movs	r3, #2
 800a87e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a882:	e03e      	b.n	800a902 <UART_SetConfig+0x27e>
 800a884:	2304      	movs	r3, #4
 800a886:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a88a:	e03a      	b.n	800a902 <UART_SetConfig+0x27e>
 800a88c:	2308      	movs	r3, #8
 800a88e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a892:	e036      	b.n	800a902 <UART_SetConfig+0x27e>
 800a894:	2310      	movs	r3, #16
 800a896:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a89a:	e032      	b.n	800a902 <UART_SetConfig+0x27e>
 800a89c:	697b      	ldr	r3, [r7, #20]
 800a89e:	681b      	ldr	r3, [r3, #0]
 800a8a0:	4a30      	ldr	r2, [pc, #192]	@ (800a964 <UART_SetConfig+0x2e0>)
 800a8a2:	4293      	cmp	r3, r2
 800a8a4:	d12a      	bne.n	800a8fc <UART_SetConfig+0x278>
 800a8a6:	4b31      	ldr	r3, [pc, #196]	@ (800a96c <UART_SetConfig+0x2e8>)
 800a8a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a8ac:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800a8b0:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a8b4:	d01a      	beq.n	800a8ec <UART_SetConfig+0x268>
 800a8b6:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a8ba:	d81b      	bhi.n	800a8f4 <UART_SetConfig+0x270>
 800a8bc:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a8c0:	d00c      	beq.n	800a8dc <UART_SetConfig+0x258>
 800a8c2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a8c6:	d815      	bhi.n	800a8f4 <UART_SetConfig+0x270>
 800a8c8:	2b00      	cmp	r3, #0
 800a8ca:	d003      	beq.n	800a8d4 <UART_SetConfig+0x250>
 800a8cc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a8d0:	d008      	beq.n	800a8e4 <UART_SetConfig+0x260>
 800a8d2:	e00f      	b.n	800a8f4 <UART_SetConfig+0x270>
 800a8d4:	2300      	movs	r3, #0
 800a8d6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a8da:	e012      	b.n	800a902 <UART_SetConfig+0x27e>
 800a8dc:	2302      	movs	r3, #2
 800a8de:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a8e2:	e00e      	b.n	800a902 <UART_SetConfig+0x27e>
 800a8e4:	2304      	movs	r3, #4
 800a8e6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a8ea:	e00a      	b.n	800a902 <UART_SetConfig+0x27e>
 800a8ec:	2308      	movs	r3, #8
 800a8ee:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a8f2:	e006      	b.n	800a902 <UART_SetConfig+0x27e>
 800a8f4:	2310      	movs	r3, #16
 800a8f6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a8fa:	e002      	b.n	800a902 <UART_SetConfig+0x27e>
 800a8fc:	2310      	movs	r3, #16
 800a8fe:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a902:	697b      	ldr	r3, [r7, #20]
 800a904:	681b      	ldr	r3, [r3, #0]
 800a906:	4a17      	ldr	r2, [pc, #92]	@ (800a964 <UART_SetConfig+0x2e0>)
 800a908:	4293      	cmp	r3, r2
 800a90a:	f040 80a8 	bne.w	800aa5e <UART_SetConfig+0x3da>
 800a90e:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800a912:	2b08      	cmp	r3, #8
 800a914:	d834      	bhi.n	800a980 <UART_SetConfig+0x2fc>
 800a916:	a201      	add	r2, pc, #4	@ (adr r2, 800a91c <UART_SetConfig+0x298>)
 800a918:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a91c:	0800a941 	.word	0x0800a941
 800a920:	0800a981 	.word	0x0800a981
 800a924:	0800a949 	.word	0x0800a949
 800a928:	0800a981 	.word	0x0800a981
 800a92c:	0800a94f 	.word	0x0800a94f
 800a930:	0800a981 	.word	0x0800a981
 800a934:	0800a981 	.word	0x0800a981
 800a938:	0800a981 	.word	0x0800a981
 800a93c:	0800a957 	.word	0x0800a957
 800a940:	f7fc fde2 	bl	8007508 <HAL_RCC_GetPCLK1Freq>
 800a944:	6278      	str	r0, [r7, #36]	@ 0x24
 800a946:	e021      	b.n	800a98c <UART_SetConfig+0x308>
 800a948:	4b0c      	ldr	r3, [pc, #48]	@ (800a97c <UART_SetConfig+0x2f8>)
 800a94a:	627b      	str	r3, [r7, #36]	@ 0x24
 800a94c:	e01e      	b.n	800a98c <UART_SetConfig+0x308>
 800a94e:	f7fc fd6d 	bl	800742c <HAL_RCC_GetSysClockFreq>
 800a952:	6278      	str	r0, [r7, #36]	@ 0x24
 800a954:	e01a      	b.n	800a98c <UART_SetConfig+0x308>
 800a956:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800a95a:	627b      	str	r3, [r7, #36]	@ 0x24
 800a95c:	e016      	b.n	800a98c <UART_SetConfig+0x308>
 800a95e:	bf00      	nop
 800a960:	cfff69f3 	.word	0xcfff69f3
 800a964:	40008000 	.word	0x40008000
 800a968:	40013800 	.word	0x40013800
 800a96c:	40021000 	.word	0x40021000
 800a970:	40004400 	.word	0x40004400
 800a974:	40004800 	.word	0x40004800
 800a978:	40004c00 	.word	0x40004c00
 800a97c:	00f42400 	.word	0x00f42400
 800a980:	2300      	movs	r3, #0
 800a982:	627b      	str	r3, [r7, #36]	@ 0x24
 800a984:	2301      	movs	r3, #1
 800a986:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800a98a:	bf00      	nop
 800a98c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a98e:	2b00      	cmp	r3, #0
 800a990:	f000 812a 	beq.w	800abe8 <UART_SetConfig+0x564>
 800a994:	697b      	ldr	r3, [r7, #20]
 800a996:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a998:	4a9e      	ldr	r2, [pc, #632]	@ (800ac14 <UART_SetConfig+0x590>)
 800a99a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a99e:	461a      	mov	r2, r3
 800a9a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a9a2:	fbb3 f3f2 	udiv	r3, r3, r2
 800a9a6:	61bb      	str	r3, [r7, #24]
 800a9a8:	697b      	ldr	r3, [r7, #20]
 800a9aa:	685a      	ldr	r2, [r3, #4]
 800a9ac:	4613      	mov	r3, r2
 800a9ae:	005b      	lsls	r3, r3, #1
 800a9b0:	4413      	add	r3, r2
 800a9b2:	69ba      	ldr	r2, [r7, #24]
 800a9b4:	429a      	cmp	r2, r3
 800a9b6:	d305      	bcc.n	800a9c4 <UART_SetConfig+0x340>
 800a9b8:	697b      	ldr	r3, [r7, #20]
 800a9ba:	685b      	ldr	r3, [r3, #4]
 800a9bc:	031b      	lsls	r3, r3, #12
 800a9be:	69ba      	ldr	r2, [r7, #24]
 800a9c0:	429a      	cmp	r2, r3
 800a9c2:	d903      	bls.n	800a9cc <UART_SetConfig+0x348>
 800a9c4:	2301      	movs	r3, #1
 800a9c6:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800a9ca:	e10d      	b.n	800abe8 <UART_SetConfig+0x564>
 800a9cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a9ce:	2200      	movs	r2, #0
 800a9d0:	60bb      	str	r3, [r7, #8]
 800a9d2:	60fa      	str	r2, [r7, #12]
 800a9d4:	697b      	ldr	r3, [r7, #20]
 800a9d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9d8:	4a8e      	ldr	r2, [pc, #568]	@ (800ac14 <UART_SetConfig+0x590>)
 800a9da:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a9de:	b29b      	uxth	r3, r3
 800a9e0:	2200      	movs	r2, #0
 800a9e2:	603b      	str	r3, [r7, #0]
 800a9e4:	607a      	str	r2, [r7, #4]
 800a9e6:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a9ea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a9ee:	f7f6 f973 	bl	8000cd8 <__aeabi_uldivmod>
 800a9f2:	4602      	mov	r2, r0
 800a9f4:	460b      	mov	r3, r1
 800a9f6:	4610      	mov	r0, r2
 800a9f8:	4619      	mov	r1, r3
 800a9fa:	f04f 0200 	mov.w	r2, #0
 800a9fe:	f04f 0300 	mov.w	r3, #0
 800aa02:	020b      	lsls	r3, r1, #8
 800aa04:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800aa08:	0202      	lsls	r2, r0, #8
 800aa0a:	6979      	ldr	r1, [r7, #20]
 800aa0c:	6849      	ldr	r1, [r1, #4]
 800aa0e:	0849      	lsrs	r1, r1, #1
 800aa10:	2000      	movs	r0, #0
 800aa12:	460c      	mov	r4, r1
 800aa14:	4605      	mov	r5, r0
 800aa16:	eb12 0804 	adds.w	r8, r2, r4
 800aa1a:	eb43 0905 	adc.w	r9, r3, r5
 800aa1e:	697b      	ldr	r3, [r7, #20]
 800aa20:	685b      	ldr	r3, [r3, #4]
 800aa22:	2200      	movs	r2, #0
 800aa24:	469a      	mov	sl, r3
 800aa26:	4693      	mov	fp, r2
 800aa28:	4652      	mov	r2, sl
 800aa2a:	465b      	mov	r3, fp
 800aa2c:	4640      	mov	r0, r8
 800aa2e:	4649      	mov	r1, r9
 800aa30:	f7f6 f952 	bl	8000cd8 <__aeabi_uldivmod>
 800aa34:	4602      	mov	r2, r0
 800aa36:	460b      	mov	r3, r1
 800aa38:	4613      	mov	r3, r2
 800aa3a:	623b      	str	r3, [r7, #32]
 800aa3c:	6a3b      	ldr	r3, [r7, #32]
 800aa3e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800aa42:	d308      	bcc.n	800aa56 <UART_SetConfig+0x3d2>
 800aa44:	6a3b      	ldr	r3, [r7, #32]
 800aa46:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800aa4a:	d204      	bcs.n	800aa56 <UART_SetConfig+0x3d2>
 800aa4c:	697b      	ldr	r3, [r7, #20]
 800aa4e:	681b      	ldr	r3, [r3, #0]
 800aa50:	6a3a      	ldr	r2, [r7, #32]
 800aa52:	60da      	str	r2, [r3, #12]
 800aa54:	e0c8      	b.n	800abe8 <UART_SetConfig+0x564>
 800aa56:	2301      	movs	r3, #1
 800aa58:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800aa5c:	e0c4      	b.n	800abe8 <UART_SetConfig+0x564>
 800aa5e:	697b      	ldr	r3, [r7, #20]
 800aa60:	69db      	ldr	r3, [r3, #28]
 800aa62:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800aa66:	d167      	bne.n	800ab38 <UART_SetConfig+0x4b4>
 800aa68:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800aa6c:	2b08      	cmp	r3, #8
 800aa6e:	d828      	bhi.n	800aac2 <UART_SetConfig+0x43e>
 800aa70:	a201      	add	r2, pc, #4	@ (adr r2, 800aa78 <UART_SetConfig+0x3f4>)
 800aa72:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aa76:	bf00      	nop
 800aa78:	0800aa9d 	.word	0x0800aa9d
 800aa7c:	0800aaa5 	.word	0x0800aaa5
 800aa80:	0800aaad 	.word	0x0800aaad
 800aa84:	0800aac3 	.word	0x0800aac3
 800aa88:	0800aab3 	.word	0x0800aab3
 800aa8c:	0800aac3 	.word	0x0800aac3
 800aa90:	0800aac3 	.word	0x0800aac3
 800aa94:	0800aac3 	.word	0x0800aac3
 800aa98:	0800aabb 	.word	0x0800aabb
 800aa9c:	f7fc fd34 	bl	8007508 <HAL_RCC_GetPCLK1Freq>
 800aaa0:	6278      	str	r0, [r7, #36]	@ 0x24
 800aaa2:	e014      	b.n	800aace <UART_SetConfig+0x44a>
 800aaa4:	f7fc fd46 	bl	8007534 <HAL_RCC_GetPCLK2Freq>
 800aaa8:	6278      	str	r0, [r7, #36]	@ 0x24
 800aaaa:	e010      	b.n	800aace <UART_SetConfig+0x44a>
 800aaac:	4b5a      	ldr	r3, [pc, #360]	@ (800ac18 <UART_SetConfig+0x594>)
 800aaae:	627b      	str	r3, [r7, #36]	@ 0x24
 800aab0:	e00d      	b.n	800aace <UART_SetConfig+0x44a>
 800aab2:	f7fc fcbb 	bl	800742c <HAL_RCC_GetSysClockFreq>
 800aab6:	6278      	str	r0, [r7, #36]	@ 0x24
 800aab8:	e009      	b.n	800aace <UART_SetConfig+0x44a>
 800aaba:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800aabe:	627b      	str	r3, [r7, #36]	@ 0x24
 800aac0:	e005      	b.n	800aace <UART_SetConfig+0x44a>
 800aac2:	2300      	movs	r3, #0
 800aac4:	627b      	str	r3, [r7, #36]	@ 0x24
 800aac6:	2301      	movs	r3, #1
 800aac8:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800aacc:	bf00      	nop
 800aace:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aad0:	2b00      	cmp	r3, #0
 800aad2:	f000 8089 	beq.w	800abe8 <UART_SetConfig+0x564>
 800aad6:	697b      	ldr	r3, [r7, #20]
 800aad8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aada:	4a4e      	ldr	r2, [pc, #312]	@ (800ac14 <UART_SetConfig+0x590>)
 800aadc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800aae0:	461a      	mov	r2, r3
 800aae2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aae4:	fbb3 f3f2 	udiv	r3, r3, r2
 800aae8:	005a      	lsls	r2, r3, #1
 800aaea:	697b      	ldr	r3, [r7, #20]
 800aaec:	685b      	ldr	r3, [r3, #4]
 800aaee:	085b      	lsrs	r3, r3, #1
 800aaf0:	441a      	add	r2, r3
 800aaf2:	697b      	ldr	r3, [r7, #20]
 800aaf4:	685b      	ldr	r3, [r3, #4]
 800aaf6:	fbb2 f3f3 	udiv	r3, r2, r3
 800aafa:	623b      	str	r3, [r7, #32]
 800aafc:	6a3b      	ldr	r3, [r7, #32]
 800aafe:	2b0f      	cmp	r3, #15
 800ab00:	d916      	bls.n	800ab30 <UART_SetConfig+0x4ac>
 800ab02:	6a3b      	ldr	r3, [r7, #32]
 800ab04:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800ab08:	d212      	bcs.n	800ab30 <UART_SetConfig+0x4ac>
 800ab0a:	6a3b      	ldr	r3, [r7, #32]
 800ab0c:	b29b      	uxth	r3, r3
 800ab0e:	f023 030f 	bic.w	r3, r3, #15
 800ab12:	83fb      	strh	r3, [r7, #30]
 800ab14:	6a3b      	ldr	r3, [r7, #32]
 800ab16:	085b      	lsrs	r3, r3, #1
 800ab18:	b29b      	uxth	r3, r3
 800ab1a:	f003 0307 	and.w	r3, r3, #7
 800ab1e:	b29a      	uxth	r2, r3
 800ab20:	8bfb      	ldrh	r3, [r7, #30]
 800ab22:	4313      	orrs	r3, r2
 800ab24:	83fb      	strh	r3, [r7, #30]
 800ab26:	697b      	ldr	r3, [r7, #20]
 800ab28:	681b      	ldr	r3, [r3, #0]
 800ab2a:	8bfa      	ldrh	r2, [r7, #30]
 800ab2c:	60da      	str	r2, [r3, #12]
 800ab2e:	e05b      	b.n	800abe8 <UART_SetConfig+0x564>
 800ab30:	2301      	movs	r3, #1
 800ab32:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800ab36:	e057      	b.n	800abe8 <UART_SetConfig+0x564>
 800ab38:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800ab3c:	2b08      	cmp	r3, #8
 800ab3e:	d828      	bhi.n	800ab92 <UART_SetConfig+0x50e>
 800ab40:	a201      	add	r2, pc, #4	@ (adr r2, 800ab48 <UART_SetConfig+0x4c4>)
 800ab42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ab46:	bf00      	nop
 800ab48:	0800ab6d 	.word	0x0800ab6d
 800ab4c:	0800ab75 	.word	0x0800ab75
 800ab50:	0800ab7d 	.word	0x0800ab7d
 800ab54:	0800ab93 	.word	0x0800ab93
 800ab58:	0800ab83 	.word	0x0800ab83
 800ab5c:	0800ab93 	.word	0x0800ab93
 800ab60:	0800ab93 	.word	0x0800ab93
 800ab64:	0800ab93 	.word	0x0800ab93
 800ab68:	0800ab8b 	.word	0x0800ab8b
 800ab6c:	f7fc fccc 	bl	8007508 <HAL_RCC_GetPCLK1Freq>
 800ab70:	6278      	str	r0, [r7, #36]	@ 0x24
 800ab72:	e014      	b.n	800ab9e <UART_SetConfig+0x51a>
 800ab74:	f7fc fcde 	bl	8007534 <HAL_RCC_GetPCLK2Freq>
 800ab78:	6278      	str	r0, [r7, #36]	@ 0x24
 800ab7a:	e010      	b.n	800ab9e <UART_SetConfig+0x51a>
 800ab7c:	4b26      	ldr	r3, [pc, #152]	@ (800ac18 <UART_SetConfig+0x594>)
 800ab7e:	627b      	str	r3, [r7, #36]	@ 0x24
 800ab80:	e00d      	b.n	800ab9e <UART_SetConfig+0x51a>
 800ab82:	f7fc fc53 	bl	800742c <HAL_RCC_GetSysClockFreq>
 800ab86:	6278      	str	r0, [r7, #36]	@ 0x24
 800ab88:	e009      	b.n	800ab9e <UART_SetConfig+0x51a>
 800ab8a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ab8e:	627b      	str	r3, [r7, #36]	@ 0x24
 800ab90:	e005      	b.n	800ab9e <UART_SetConfig+0x51a>
 800ab92:	2300      	movs	r3, #0
 800ab94:	627b      	str	r3, [r7, #36]	@ 0x24
 800ab96:	2301      	movs	r3, #1
 800ab98:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800ab9c:	bf00      	nop
 800ab9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aba0:	2b00      	cmp	r3, #0
 800aba2:	d021      	beq.n	800abe8 <UART_SetConfig+0x564>
 800aba4:	697b      	ldr	r3, [r7, #20]
 800aba6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aba8:	4a1a      	ldr	r2, [pc, #104]	@ (800ac14 <UART_SetConfig+0x590>)
 800abaa:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800abae:	461a      	mov	r2, r3
 800abb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800abb2:	fbb3 f2f2 	udiv	r2, r3, r2
 800abb6:	697b      	ldr	r3, [r7, #20]
 800abb8:	685b      	ldr	r3, [r3, #4]
 800abba:	085b      	lsrs	r3, r3, #1
 800abbc:	441a      	add	r2, r3
 800abbe:	697b      	ldr	r3, [r7, #20]
 800abc0:	685b      	ldr	r3, [r3, #4]
 800abc2:	fbb2 f3f3 	udiv	r3, r2, r3
 800abc6:	623b      	str	r3, [r7, #32]
 800abc8:	6a3b      	ldr	r3, [r7, #32]
 800abca:	2b0f      	cmp	r3, #15
 800abcc:	d909      	bls.n	800abe2 <UART_SetConfig+0x55e>
 800abce:	6a3b      	ldr	r3, [r7, #32]
 800abd0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800abd4:	d205      	bcs.n	800abe2 <UART_SetConfig+0x55e>
 800abd6:	6a3b      	ldr	r3, [r7, #32]
 800abd8:	b29a      	uxth	r2, r3
 800abda:	697b      	ldr	r3, [r7, #20]
 800abdc:	681b      	ldr	r3, [r3, #0]
 800abde:	60da      	str	r2, [r3, #12]
 800abe0:	e002      	b.n	800abe8 <UART_SetConfig+0x564>
 800abe2:	2301      	movs	r3, #1
 800abe4:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800abe8:	697b      	ldr	r3, [r7, #20]
 800abea:	2201      	movs	r2, #1
 800abec:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800abf0:	697b      	ldr	r3, [r7, #20]
 800abf2:	2201      	movs	r2, #1
 800abf4:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800abf8:	697b      	ldr	r3, [r7, #20]
 800abfa:	2200      	movs	r2, #0
 800abfc:	675a      	str	r2, [r3, #116]	@ 0x74
 800abfe:	697b      	ldr	r3, [r7, #20]
 800ac00:	2200      	movs	r2, #0
 800ac02:	679a      	str	r2, [r3, #120]	@ 0x78
 800ac04:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 800ac08:	4618      	mov	r0, r3
 800ac0a:	3730      	adds	r7, #48	@ 0x30
 800ac0c:	46bd      	mov	sp, r7
 800ac0e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800ac12:	bf00      	nop
 800ac14:	08012894 	.word	0x08012894
 800ac18:	00f42400 	.word	0x00f42400

0800ac1c <UART_AdvFeatureConfig>:
 800ac1c:	b480      	push	{r7}
 800ac1e:	b083      	sub	sp, #12
 800ac20:	af00      	add	r7, sp, #0
 800ac22:	6078      	str	r0, [r7, #4]
 800ac24:	687b      	ldr	r3, [r7, #4]
 800ac26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac28:	f003 0308 	and.w	r3, r3, #8
 800ac2c:	2b00      	cmp	r3, #0
 800ac2e:	d00a      	beq.n	800ac46 <UART_AdvFeatureConfig+0x2a>
 800ac30:	687b      	ldr	r3, [r7, #4]
 800ac32:	681b      	ldr	r3, [r3, #0]
 800ac34:	685b      	ldr	r3, [r3, #4]
 800ac36:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800ac3a:	687b      	ldr	r3, [r7, #4]
 800ac3c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800ac3e:	687b      	ldr	r3, [r7, #4]
 800ac40:	681b      	ldr	r3, [r3, #0]
 800ac42:	430a      	orrs	r2, r1
 800ac44:	605a      	str	r2, [r3, #4]
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac4a:	f003 0301 	and.w	r3, r3, #1
 800ac4e:	2b00      	cmp	r3, #0
 800ac50:	d00a      	beq.n	800ac68 <UART_AdvFeatureConfig+0x4c>
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	681b      	ldr	r3, [r3, #0]
 800ac56:	685b      	ldr	r3, [r3, #4]
 800ac58:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 800ac5c:	687b      	ldr	r3, [r7, #4]
 800ac5e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ac60:	687b      	ldr	r3, [r7, #4]
 800ac62:	681b      	ldr	r3, [r3, #0]
 800ac64:	430a      	orrs	r2, r1
 800ac66:	605a      	str	r2, [r3, #4]
 800ac68:	687b      	ldr	r3, [r7, #4]
 800ac6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac6c:	f003 0302 	and.w	r3, r3, #2
 800ac70:	2b00      	cmp	r3, #0
 800ac72:	d00a      	beq.n	800ac8a <UART_AdvFeatureConfig+0x6e>
 800ac74:	687b      	ldr	r3, [r7, #4]
 800ac76:	681b      	ldr	r3, [r3, #0]
 800ac78:	685b      	ldr	r3, [r3, #4]
 800ac7a:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800ac7e:	687b      	ldr	r3, [r7, #4]
 800ac80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800ac82:	687b      	ldr	r3, [r7, #4]
 800ac84:	681b      	ldr	r3, [r3, #0]
 800ac86:	430a      	orrs	r2, r1
 800ac88:	605a      	str	r2, [r3, #4]
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac8e:	f003 0304 	and.w	r3, r3, #4
 800ac92:	2b00      	cmp	r3, #0
 800ac94:	d00a      	beq.n	800acac <UART_AdvFeatureConfig+0x90>
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	681b      	ldr	r3, [r3, #0]
 800ac9a:	685b      	ldr	r3, [r3, #4]
 800ac9c:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800aca4:	687b      	ldr	r3, [r7, #4]
 800aca6:	681b      	ldr	r3, [r3, #0]
 800aca8:	430a      	orrs	r2, r1
 800acaa:	605a      	str	r2, [r3, #4]
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800acb0:	f003 0310 	and.w	r3, r3, #16
 800acb4:	2b00      	cmp	r3, #0
 800acb6:	d00a      	beq.n	800acce <UART_AdvFeatureConfig+0xb2>
 800acb8:	687b      	ldr	r3, [r7, #4]
 800acba:	681b      	ldr	r3, [r3, #0]
 800acbc:	689b      	ldr	r3, [r3, #8]
 800acbe:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800acc2:	687b      	ldr	r3, [r7, #4]
 800acc4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800acc6:	687b      	ldr	r3, [r7, #4]
 800acc8:	681b      	ldr	r3, [r3, #0]
 800acca:	430a      	orrs	r2, r1
 800accc:	609a      	str	r2, [r3, #8]
 800acce:	687b      	ldr	r3, [r7, #4]
 800acd0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800acd2:	f003 0320 	and.w	r3, r3, #32
 800acd6:	2b00      	cmp	r3, #0
 800acd8:	d00a      	beq.n	800acf0 <UART_AdvFeatureConfig+0xd4>
 800acda:	687b      	ldr	r3, [r7, #4]
 800acdc:	681b      	ldr	r3, [r3, #0]
 800acde:	689b      	ldr	r3, [r3, #8]
 800ace0:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800ace4:	687b      	ldr	r3, [r7, #4]
 800ace6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800ace8:	687b      	ldr	r3, [r7, #4]
 800acea:	681b      	ldr	r3, [r3, #0]
 800acec:	430a      	orrs	r2, r1
 800acee:	609a      	str	r2, [r3, #8]
 800acf0:	687b      	ldr	r3, [r7, #4]
 800acf2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800acf4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800acf8:	2b00      	cmp	r3, #0
 800acfa:	d01a      	beq.n	800ad32 <UART_AdvFeatureConfig+0x116>
 800acfc:	687b      	ldr	r3, [r7, #4]
 800acfe:	681b      	ldr	r3, [r3, #0]
 800ad00:	685b      	ldr	r3, [r3, #4]
 800ad02:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	681b      	ldr	r3, [r3, #0]
 800ad0e:	430a      	orrs	r2, r1
 800ad10:	605a      	str	r2, [r3, #4]
 800ad12:	687b      	ldr	r3, [r7, #4]
 800ad14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ad16:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800ad1a:	d10a      	bne.n	800ad32 <UART_AdvFeatureConfig+0x116>
 800ad1c:	687b      	ldr	r3, [r7, #4]
 800ad1e:	681b      	ldr	r3, [r3, #0]
 800ad20:	685b      	ldr	r3, [r3, #4]
 800ad22:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800ad26:	687b      	ldr	r3, [r7, #4]
 800ad28:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	681b      	ldr	r3, [r3, #0]
 800ad2e:	430a      	orrs	r2, r1
 800ad30:	605a      	str	r2, [r3, #4]
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ad36:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	d00a      	beq.n	800ad54 <UART_AdvFeatureConfig+0x138>
 800ad3e:	687b      	ldr	r3, [r7, #4]
 800ad40:	681b      	ldr	r3, [r3, #0]
 800ad42:	685b      	ldr	r3, [r3, #4]
 800ad44:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800ad48:	687b      	ldr	r3, [r7, #4]
 800ad4a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800ad4c:	687b      	ldr	r3, [r7, #4]
 800ad4e:	681b      	ldr	r3, [r3, #0]
 800ad50:	430a      	orrs	r2, r1
 800ad52:	605a      	str	r2, [r3, #4]
 800ad54:	bf00      	nop
 800ad56:	370c      	adds	r7, #12
 800ad58:	46bd      	mov	sp, r7
 800ad5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad5e:	4770      	bx	lr

0800ad60 <UART_CheckIdleState>:
 800ad60:	b580      	push	{r7, lr}
 800ad62:	b098      	sub	sp, #96	@ 0x60
 800ad64:	af02      	add	r7, sp, #8
 800ad66:	6078      	str	r0, [r7, #4]
 800ad68:	687b      	ldr	r3, [r7, #4]
 800ad6a:	2200      	movs	r2, #0
 800ad6c:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800ad70:	f7f7 fce4 	bl	800273c <HAL_GetTick>
 800ad74:	6578      	str	r0, [r7, #84]	@ 0x54
 800ad76:	687b      	ldr	r3, [r7, #4]
 800ad78:	681b      	ldr	r3, [r3, #0]
 800ad7a:	681b      	ldr	r3, [r3, #0]
 800ad7c:	f003 0308 	and.w	r3, r3, #8
 800ad80:	2b08      	cmp	r3, #8
 800ad82:	d12f      	bne.n	800ade4 <UART_CheckIdleState+0x84>
 800ad84:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800ad88:	9300      	str	r3, [sp, #0]
 800ad8a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800ad8c:	2200      	movs	r2, #0
 800ad8e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800ad92:	6878      	ldr	r0, [r7, #4]
 800ad94:	f000 f88e 	bl	800aeb4 <UART_WaitOnFlagUntilTimeout>
 800ad98:	4603      	mov	r3, r0
 800ad9a:	2b00      	cmp	r3, #0
 800ad9c:	d022      	beq.n	800ade4 <UART_CheckIdleState+0x84>
 800ad9e:	687b      	ldr	r3, [r7, #4]
 800ada0:	681b      	ldr	r3, [r3, #0]
 800ada2:	63bb      	str	r3, [r7, #56]	@ 0x38
 800ada4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ada6:	e853 3f00 	ldrex	r3, [r3]
 800adaa:	637b      	str	r3, [r7, #52]	@ 0x34
 800adac:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800adae:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800adb2:	653b      	str	r3, [r7, #80]	@ 0x50
 800adb4:	687b      	ldr	r3, [r7, #4]
 800adb6:	681b      	ldr	r3, [r3, #0]
 800adb8:	461a      	mov	r2, r3
 800adba:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800adbc:	647b      	str	r3, [r7, #68]	@ 0x44
 800adbe:	643a      	str	r2, [r7, #64]	@ 0x40
 800adc0:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800adc2:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800adc4:	e841 2300 	strex	r3, r2, [r1]
 800adc8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800adca:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800adcc:	2b00      	cmp	r3, #0
 800adce:	d1e6      	bne.n	800ad9e <UART_CheckIdleState+0x3e>
 800add0:	687b      	ldr	r3, [r7, #4]
 800add2:	2220      	movs	r2, #32
 800add4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800add8:	687b      	ldr	r3, [r7, #4]
 800adda:	2200      	movs	r2, #0
 800addc:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ade0:	2303      	movs	r3, #3
 800ade2:	e063      	b.n	800aeac <UART_CheckIdleState+0x14c>
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	681b      	ldr	r3, [r3, #0]
 800ade8:	681b      	ldr	r3, [r3, #0]
 800adea:	f003 0304 	and.w	r3, r3, #4
 800adee:	2b04      	cmp	r3, #4
 800adf0:	d149      	bne.n	800ae86 <UART_CheckIdleState+0x126>
 800adf2:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800adf6:	9300      	str	r3, [sp, #0]
 800adf8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800adfa:	2200      	movs	r2, #0
 800adfc:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800ae00:	6878      	ldr	r0, [r7, #4]
 800ae02:	f000 f857 	bl	800aeb4 <UART_WaitOnFlagUntilTimeout>
 800ae06:	4603      	mov	r3, r0
 800ae08:	2b00      	cmp	r3, #0
 800ae0a:	d03c      	beq.n	800ae86 <UART_CheckIdleState+0x126>
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	681b      	ldr	r3, [r3, #0]
 800ae10:	627b      	str	r3, [r7, #36]	@ 0x24
 800ae12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ae14:	e853 3f00 	ldrex	r3, [r3]
 800ae18:	623b      	str	r3, [r7, #32]
 800ae1a:	6a3b      	ldr	r3, [r7, #32]
 800ae1c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800ae20:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	681b      	ldr	r3, [r3, #0]
 800ae26:	461a      	mov	r2, r3
 800ae28:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800ae2a:	633b      	str	r3, [r7, #48]	@ 0x30
 800ae2c:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800ae2e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800ae30:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800ae32:	e841 2300 	strex	r3, r2, [r1]
 800ae36:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ae38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ae3a:	2b00      	cmp	r3, #0
 800ae3c:	d1e6      	bne.n	800ae0c <UART_CheckIdleState+0xac>
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	681b      	ldr	r3, [r3, #0]
 800ae42:	3308      	adds	r3, #8
 800ae44:	613b      	str	r3, [r7, #16]
 800ae46:	693b      	ldr	r3, [r7, #16]
 800ae48:	e853 3f00 	ldrex	r3, [r3]
 800ae4c:	60fb      	str	r3, [r7, #12]
 800ae4e:	68fb      	ldr	r3, [r7, #12]
 800ae50:	f023 0301 	bic.w	r3, r3, #1
 800ae54:	64bb      	str	r3, [r7, #72]	@ 0x48
 800ae56:	687b      	ldr	r3, [r7, #4]
 800ae58:	681b      	ldr	r3, [r3, #0]
 800ae5a:	3308      	adds	r3, #8
 800ae5c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800ae5e:	61fa      	str	r2, [r7, #28]
 800ae60:	61bb      	str	r3, [r7, #24]
 800ae62:	69b9      	ldr	r1, [r7, #24]
 800ae64:	69fa      	ldr	r2, [r7, #28]
 800ae66:	e841 2300 	strex	r3, r2, [r1]
 800ae6a:	617b      	str	r3, [r7, #20]
 800ae6c:	697b      	ldr	r3, [r7, #20]
 800ae6e:	2b00      	cmp	r3, #0
 800ae70:	d1e5      	bne.n	800ae3e <UART_CheckIdleState+0xde>
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	2220      	movs	r2, #32
 800ae76:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	2200      	movs	r2, #0
 800ae7e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ae82:	2303      	movs	r3, #3
 800ae84:	e012      	b.n	800aeac <UART_CheckIdleState+0x14c>
 800ae86:	687b      	ldr	r3, [r7, #4]
 800ae88:	2220      	movs	r2, #32
 800ae8a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	2220      	movs	r2, #32
 800ae92:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800ae96:	687b      	ldr	r3, [r7, #4]
 800ae98:	2200      	movs	r2, #0
 800ae9a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800ae9c:	687b      	ldr	r3, [r7, #4]
 800ae9e:	2200      	movs	r2, #0
 800aea0:	671a      	str	r2, [r3, #112]	@ 0x70
 800aea2:	687b      	ldr	r3, [r7, #4]
 800aea4:	2200      	movs	r2, #0
 800aea6:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800aeaa:	2300      	movs	r3, #0
 800aeac:	4618      	mov	r0, r3
 800aeae:	3758      	adds	r7, #88	@ 0x58
 800aeb0:	46bd      	mov	sp, r7
 800aeb2:	bd80      	pop	{r7, pc}

0800aeb4 <UART_WaitOnFlagUntilTimeout>:
 800aeb4:	b580      	push	{r7, lr}
 800aeb6:	b084      	sub	sp, #16
 800aeb8:	af00      	add	r7, sp, #0
 800aeba:	60f8      	str	r0, [r7, #12]
 800aebc:	60b9      	str	r1, [r7, #8]
 800aebe:	603b      	str	r3, [r7, #0]
 800aec0:	4613      	mov	r3, r2
 800aec2:	71fb      	strb	r3, [r7, #7]
 800aec4:	e04f      	b.n	800af66 <UART_WaitOnFlagUntilTimeout+0xb2>
 800aec6:	69bb      	ldr	r3, [r7, #24]
 800aec8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800aecc:	d04b      	beq.n	800af66 <UART_WaitOnFlagUntilTimeout+0xb2>
 800aece:	f7f7 fc35 	bl	800273c <HAL_GetTick>
 800aed2:	4602      	mov	r2, r0
 800aed4:	683b      	ldr	r3, [r7, #0]
 800aed6:	1ad3      	subs	r3, r2, r3
 800aed8:	69ba      	ldr	r2, [r7, #24]
 800aeda:	429a      	cmp	r2, r3
 800aedc:	d302      	bcc.n	800aee4 <UART_WaitOnFlagUntilTimeout+0x30>
 800aede:	69bb      	ldr	r3, [r7, #24]
 800aee0:	2b00      	cmp	r3, #0
 800aee2:	d101      	bne.n	800aee8 <UART_WaitOnFlagUntilTimeout+0x34>
 800aee4:	2303      	movs	r3, #3
 800aee6:	e04e      	b.n	800af86 <UART_WaitOnFlagUntilTimeout+0xd2>
 800aee8:	68fb      	ldr	r3, [r7, #12]
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	681b      	ldr	r3, [r3, #0]
 800aeee:	f003 0304 	and.w	r3, r3, #4
 800aef2:	2b00      	cmp	r3, #0
 800aef4:	d037      	beq.n	800af66 <UART_WaitOnFlagUntilTimeout+0xb2>
 800aef6:	68bb      	ldr	r3, [r7, #8]
 800aef8:	2b80      	cmp	r3, #128	@ 0x80
 800aefa:	d034      	beq.n	800af66 <UART_WaitOnFlagUntilTimeout+0xb2>
 800aefc:	68bb      	ldr	r3, [r7, #8]
 800aefe:	2b40      	cmp	r3, #64	@ 0x40
 800af00:	d031      	beq.n	800af66 <UART_WaitOnFlagUntilTimeout+0xb2>
 800af02:	68fb      	ldr	r3, [r7, #12]
 800af04:	681b      	ldr	r3, [r3, #0]
 800af06:	69db      	ldr	r3, [r3, #28]
 800af08:	f003 0308 	and.w	r3, r3, #8
 800af0c:	2b08      	cmp	r3, #8
 800af0e:	d110      	bne.n	800af32 <UART_WaitOnFlagUntilTimeout+0x7e>
 800af10:	68fb      	ldr	r3, [r7, #12]
 800af12:	681b      	ldr	r3, [r3, #0]
 800af14:	2208      	movs	r2, #8
 800af16:	621a      	str	r2, [r3, #32]
 800af18:	68f8      	ldr	r0, [r7, #12]
 800af1a:	f000 f920 	bl	800b15e <UART_EndRxTransfer>
 800af1e:	68fb      	ldr	r3, [r7, #12]
 800af20:	2208      	movs	r2, #8
 800af22:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800af26:	68fb      	ldr	r3, [r7, #12]
 800af28:	2200      	movs	r2, #0
 800af2a:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800af2e:	2301      	movs	r3, #1
 800af30:	e029      	b.n	800af86 <UART_WaitOnFlagUntilTimeout+0xd2>
 800af32:	68fb      	ldr	r3, [r7, #12]
 800af34:	681b      	ldr	r3, [r3, #0]
 800af36:	69db      	ldr	r3, [r3, #28]
 800af38:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800af3c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800af40:	d111      	bne.n	800af66 <UART_WaitOnFlagUntilTimeout+0xb2>
 800af42:	68fb      	ldr	r3, [r7, #12]
 800af44:	681b      	ldr	r3, [r3, #0]
 800af46:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800af4a:	621a      	str	r2, [r3, #32]
 800af4c:	68f8      	ldr	r0, [r7, #12]
 800af4e:	f000 f906 	bl	800b15e <UART_EndRxTransfer>
 800af52:	68fb      	ldr	r3, [r7, #12]
 800af54:	2220      	movs	r2, #32
 800af56:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800af5a:	68fb      	ldr	r3, [r7, #12]
 800af5c:	2200      	movs	r2, #0
 800af5e:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800af62:	2303      	movs	r3, #3
 800af64:	e00f      	b.n	800af86 <UART_WaitOnFlagUntilTimeout+0xd2>
 800af66:	68fb      	ldr	r3, [r7, #12]
 800af68:	681b      	ldr	r3, [r3, #0]
 800af6a:	69da      	ldr	r2, [r3, #28]
 800af6c:	68bb      	ldr	r3, [r7, #8]
 800af6e:	4013      	ands	r3, r2
 800af70:	68ba      	ldr	r2, [r7, #8]
 800af72:	429a      	cmp	r2, r3
 800af74:	bf0c      	ite	eq
 800af76:	2301      	moveq	r3, #1
 800af78:	2300      	movne	r3, #0
 800af7a:	b2db      	uxtb	r3, r3
 800af7c:	461a      	mov	r2, r3
 800af7e:	79fb      	ldrb	r3, [r7, #7]
 800af80:	429a      	cmp	r2, r3
 800af82:	d0a0      	beq.n	800aec6 <UART_WaitOnFlagUntilTimeout+0x12>
 800af84:	2300      	movs	r3, #0
 800af86:	4618      	mov	r0, r3
 800af88:	3710      	adds	r7, #16
 800af8a:	46bd      	mov	sp, r7
 800af8c:	bd80      	pop	{r7, pc}
	...

0800af90 <UART_Start_Receive_DMA>:
 800af90:	b580      	push	{r7, lr}
 800af92:	b096      	sub	sp, #88	@ 0x58
 800af94:	af00      	add	r7, sp, #0
 800af96:	60f8      	str	r0, [r7, #12]
 800af98:	60b9      	str	r1, [r7, #8]
 800af9a:	4613      	mov	r3, r2
 800af9c:	80fb      	strh	r3, [r7, #6]
 800af9e:	68fb      	ldr	r3, [r7, #12]
 800afa0:	68ba      	ldr	r2, [r7, #8]
 800afa2:	659a      	str	r2, [r3, #88]	@ 0x58
 800afa4:	68fb      	ldr	r3, [r7, #12]
 800afa6:	88fa      	ldrh	r2, [r7, #6]
 800afa8:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800afac:	68fb      	ldr	r3, [r7, #12]
 800afae:	2200      	movs	r2, #0
 800afb0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800afb4:	68fb      	ldr	r3, [r7, #12]
 800afb6:	2222      	movs	r2, #34	@ 0x22
 800afb8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800afbc:	68fb      	ldr	r3, [r7, #12]
 800afbe:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800afc2:	2b00      	cmp	r3, #0
 800afc4:	d02d      	beq.n	800b022 <UART_Start_Receive_DMA+0x92>
 800afc6:	68fb      	ldr	r3, [r7, #12]
 800afc8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800afcc:	4a40      	ldr	r2, [pc, #256]	@ (800b0d0 <UART_Start_Receive_DMA+0x140>)
 800afce:	62da      	str	r2, [r3, #44]	@ 0x2c
 800afd0:	68fb      	ldr	r3, [r7, #12]
 800afd2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800afd6:	4a3f      	ldr	r2, [pc, #252]	@ (800b0d4 <UART_Start_Receive_DMA+0x144>)
 800afd8:	631a      	str	r2, [r3, #48]	@ 0x30
 800afda:	68fb      	ldr	r3, [r7, #12]
 800afdc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800afe0:	4a3d      	ldr	r2, [pc, #244]	@ (800b0d8 <UART_Start_Receive_DMA+0x148>)
 800afe2:	635a      	str	r2, [r3, #52]	@ 0x34
 800afe4:	68fb      	ldr	r3, [r7, #12]
 800afe6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800afea:	2200      	movs	r2, #0
 800afec:	639a      	str	r2, [r3, #56]	@ 0x38
 800afee:	68fb      	ldr	r3, [r7, #12]
 800aff0:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
 800aff4:	68fb      	ldr	r3, [r7, #12]
 800aff6:	681b      	ldr	r3, [r3, #0]
 800aff8:	3324      	adds	r3, #36	@ 0x24
 800affa:	4619      	mov	r1, r3
 800affc:	68fb      	ldr	r3, [r7, #12]
 800affe:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b000:	461a      	mov	r2, r3
 800b002:	88fb      	ldrh	r3, [r7, #6]
 800b004:	f7fa fe22 	bl	8005c4c <HAL_DMA_Start_IT>
 800b008:	4603      	mov	r3, r0
 800b00a:	2b00      	cmp	r3, #0
 800b00c:	d009      	beq.n	800b022 <UART_Start_Receive_DMA+0x92>
 800b00e:	68fb      	ldr	r3, [r7, #12]
 800b010:	2210      	movs	r2, #16
 800b012:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800b016:	68fb      	ldr	r3, [r7, #12]
 800b018:	2220      	movs	r2, #32
 800b01a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800b01e:	2301      	movs	r3, #1
 800b020:	e051      	b.n	800b0c6 <UART_Start_Receive_DMA+0x136>
 800b022:	68fb      	ldr	r3, [r7, #12]
 800b024:	691b      	ldr	r3, [r3, #16]
 800b026:	2b00      	cmp	r3, #0
 800b028:	d018      	beq.n	800b05c <UART_Start_Receive_DMA+0xcc>
 800b02a:	68fb      	ldr	r3, [r7, #12]
 800b02c:	681b      	ldr	r3, [r3, #0]
 800b02e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800b030:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b032:	e853 3f00 	ldrex	r3, [r3]
 800b036:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b038:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b03a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b03e:	657b      	str	r3, [r7, #84]	@ 0x54
 800b040:	68fb      	ldr	r3, [r7, #12]
 800b042:	681b      	ldr	r3, [r3, #0]
 800b044:	461a      	mov	r2, r3
 800b046:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800b048:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b04a:	647a      	str	r2, [r7, #68]	@ 0x44
 800b04c:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 800b04e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b050:	e841 2300 	strex	r3, r2, [r1]
 800b054:	643b      	str	r3, [r7, #64]	@ 0x40
 800b056:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b058:	2b00      	cmp	r3, #0
 800b05a:	d1e6      	bne.n	800b02a <UART_Start_Receive_DMA+0x9a>
 800b05c:	68fb      	ldr	r3, [r7, #12]
 800b05e:	681b      	ldr	r3, [r3, #0]
 800b060:	3308      	adds	r3, #8
 800b062:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b064:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b066:	e853 3f00 	ldrex	r3, [r3]
 800b06a:	627b      	str	r3, [r7, #36]	@ 0x24
 800b06c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b06e:	f043 0301 	orr.w	r3, r3, #1
 800b072:	653b      	str	r3, [r7, #80]	@ 0x50
 800b074:	68fb      	ldr	r3, [r7, #12]
 800b076:	681b      	ldr	r3, [r3, #0]
 800b078:	3308      	adds	r3, #8
 800b07a:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800b07c:	637a      	str	r2, [r7, #52]	@ 0x34
 800b07e:	633b      	str	r3, [r7, #48]	@ 0x30
 800b080:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800b082:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800b084:	e841 2300 	strex	r3, r2, [r1]
 800b088:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b08a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b08c:	2b00      	cmp	r3, #0
 800b08e:	d1e5      	bne.n	800b05c <UART_Start_Receive_DMA+0xcc>
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	681b      	ldr	r3, [r3, #0]
 800b094:	3308      	adds	r3, #8
 800b096:	617b      	str	r3, [r7, #20]
 800b098:	697b      	ldr	r3, [r7, #20]
 800b09a:	e853 3f00 	ldrex	r3, [r3]
 800b09e:	613b      	str	r3, [r7, #16]
 800b0a0:	693b      	ldr	r3, [r7, #16]
 800b0a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800b0a6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b0a8:	68fb      	ldr	r3, [r7, #12]
 800b0aa:	681b      	ldr	r3, [r3, #0]
 800b0ac:	3308      	adds	r3, #8
 800b0ae:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800b0b0:	623a      	str	r2, [r7, #32]
 800b0b2:	61fb      	str	r3, [r7, #28]
 800b0b4:	69f9      	ldr	r1, [r7, #28]
 800b0b6:	6a3a      	ldr	r2, [r7, #32]
 800b0b8:	e841 2300 	strex	r3, r2, [r1]
 800b0bc:	61bb      	str	r3, [r7, #24]
 800b0be:	69bb      	ldr	r3, [r7, #24]
 800b0c0:	2b00      	cmp	r3, #0
 800b0c2:	d1e5      	bne.n	800b090 <UART_Start_Receive_DMA+0x100>
 800b0c4:	2300      	movs	r3, #0
 800b0c6:	4618      	mov	r0, r3
 800b0c8:	3758      	adds	r7, #88	@ 0x58
 800b0ca:	46bd      	mov	sp, r7
 800b0cc:	bd80      	pop	{r7, pc}
 800b0ce:	bf00      	nop
 800b0d0:	0800b2e1 	.word	0x0800b2e1
 800b0d4:	0800b40d 	.word	0x0800b40d
 800b0d8:	0800b44b 	.word	0x0800b44b

0800b0dc <UART_EndTxTransfer>:
 800b0dc:	b480      	push	{r7}
 800b0de:	b08f      	sub	sp, #60	@ 0x3c
 800b0e0:	af00      	add	r7, sp, #0
 800b0e2:	6078      	str	r0, [r7, #4]
 800b0e4:	687b      	ldr	r3, [r7, #4]
 800b0e6:	681b      	ldr	r3, [r3, #0]
 800b0e8:	623b      	str	r3, [r7, #32]
 800b0ea:	6a3b      	ldr	r3, [r7, #32]
 800b0ec:	e853 3f00 	ldrex	r3, [r3]
 800b0f0:	61fb      	str	r3, [r7, #28]
 800b0f2:	69fb      	ldr	r3, [r7, #28]
 800b0f4:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 800b0f8:	637b      	str	r3, [r7, #52]	@ 0x34
 800b0fa:	687b      	ldr	r3, [r7, #4]
 800b0fc:	681b      	ldr	r3, [r3, #0]
 800b0fe:	461a      	mov	r2, r3
 800b100:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b102:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b104:	62ba      	str	r2, [r7, #40]	@ 0x28
 800b106:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800b108:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b10a:	e841 2300 	strex	r3, r2, [r1]
 800b10e:	627b      	str	r3, [r7, #36]	@ 0x24
 800b110:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b112:	2b00      	cmp	r3, #0
 800b114:	d1e6      	bne.n	800b0e4 <UART_EndTxTransfer+0x8>
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	3308      	adds	r3, #8
 800b11c:	60fb      	str	r3, [r7, #12]
 800b11e:	68fb      	ldr	r3, [r7, #12]
 800b120:	e853 3f00 	ldrex	r3, [r3]
 800b124:	60bb      	str	r3, [r7, #8]
 800b126:	68bb      	ldr	r3, [r7, #8]
 800b128:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800b12c:	633b      	str	r3, [r7, #48]	@ 0x30
 800b12e:	687b      	ldr	r3, [r7, #4]
 800b130:	681b      	ldr	r3, [r3, #0]
 800b132:	3308      	adds	r3, #8
 800b134:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800b136:	61ba      	str	r2, [r7, #24]
 800b138:	617b      	str	r3, [r7, #20]
 800b13a:	6979      	ldr	r1, [r7, #20]
 800b13c:	69ba      	ldr	r2, [r7, #24]
 800b13e:	e841 2300 	strex	r3, r2, [r1]
 800b142:	613b      	str	r3, [r7, #16]
 800b144:	693b      	ldr	r3, [r7, #16]
 800b146:	2b00      	cmp	r3, #0
 800b148:	d1e5      	bne.n	800b116 <UART_EndTxTransfer+0x3a>
 800b14a:	687b      	ldr	r3, [r7, #4]
 800b14c:	2220      	movs	r2, #32
 800b14e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b152:	bf00      	nop
 800b154:	373c      	adds	r7, #60	@ 0x3c
 800b156:	46bd      	mov	sp, r7
 800b158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b15c:	4770      	bx	lr

0800b15e <UART_EndRxTransfer>:
 800b15e:	b480      	push	{r7}
 800b160:	b095      	sub	sp, #84	@ 0x54
 800b162:	af00      	add	r7, sp, #0
 800b164:	6078      	str	r0, [r7, #4]
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	681b      	ldr	r3, [r3, #0]
 800b16a:	637b      	str	r3, [r7, #52]	@ 0x34
 800b16c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b16e:	e853 3f00 	ldrex	r3, [r3]
 800b172:	633b      	str	r3, [r7, #48]	@ 0x30
 800b174:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800b176:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800b17a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	681b      	ldr	r3, [r3, #0]
 800b180:	461a      	mov	r2, r3
 800b182:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b184:	643b      	str	r3, [r7, #64]	@ 0x40
 800b186:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800b188:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800b18a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800b18c:	e841 2300 	strex	r3, r2, [r1]
 800b190:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b192:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b194:	2b00      	cmp	r3, #0
 800b196:	d1e6      	bne.n	800b166 <UART_EndRxTransfer+0x8>
 800b198:	687b      	ldr	r3, [r7, #4]
 800b19a:	681b      	ldr	r3, [r3, #0]
 800b19c:	3308      	adds	r3, #8
 800b19e:	623b      	str	r3, [r7, #32]
 800b1a0:	6a3b      	ldr	r3, [r7, #32]
 800b1a2:	e853 3f00 	ldrex	r3, [r3]
 800b1a6:	61fb      	str	r3, [r7, #28]
 800b1a8:	69fb      	ldr	r3, [r7, #28]
 800b1aa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800b1ae:	f023 0301 	bic.w	r3, r3, #1
 800b1b2:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b1b4:	687b      	ldr	r3, [r7, #4]
 800b1b6:	681b      	ldr	r3, [r3, #0]
 800b1b8:	3308      	adds	r3, #8
 800b1ba:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b1bc:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800b1be:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b1c0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800b1c2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b1c4:	e841 2300 	strex	r3, r2, [r1]
 800b1c8:	627b      	str	r3, [r7, #36]	@ 0x24
 800b1ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b1cc:	2b00      	cmp	r3, #0
 800b1ce:	d1e3      	bne.n	800b198 <UART_EndRxTransfer+0x3a>
 800b1d0:	687b      	ldr	r3, [r7, #4]
 800b1d2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b1d4:	2b01      	cmp	r3, #1
 800b1d6:	d118      	bne.n	800b20a <UART_EndRxTransfer+0xac>
 800b1d8:	687b      	ldr	r3, [r7, #4]
 800b1da:	681b      	ldr	r3, [r3, #0]
 800b1dc:	60fb      	str	r3, [r7, #12]
 800b1de:	68fb      	ldr	r3, [r7, #12]
 800b1e0:	e853 3f00 	ldrex	r3, [r3]
 800b1e4:	60bb      	str	r3, [r7, #8]
 800b1e6:	68bb      	ldr	r3, [r7, #8]
 800b1e8:	f023 0310 	bic.w	r3, r3, #16
 800b1ec:	647b      	str	r3, [r7, #68]	@ 0x44
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	681b      	ldr	r3, [r3, #0]
 800b1f2:	461a      	mov	r2, r3
 800b1f4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b1f6:	61bb      	str	r3, [r7, #24]
 800b1f8:	617a      	str	r2, [r7, #20]
 800b1fa:	6979      	ldr	r1, [r7, #20]
 800b1fc:	69ba      	ldr	r2, [r7, #24]
 800b1fe:	e841 2300 	strex	r3, r2, [r1]
 800b202:	613b      	str	r3, [r7, #16]
 800b204:	693b      	ldr	r3, [r7, #16]
 800b206:	2b00      	cmp	r3, #0
 800b208:	d1e6      	bne.n	800b1d8 <UART_EndRxTransfer+0x7a>
 800b20a:	687b      	ldr	r3, [r7, #4]
 800b20c:	2220      	movs	r2, #32
 800b20e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800b212:	687b      	ldr	r3, [r7, #4]
 800b214:	2200      	movs	r2, #0
 800b216:	66da      	str	r2, [r3, #108]	@ 0x6c
 800b218:	687b      	ldr	r3, [r7, #4]
 800b21a:	2200      	movs	r2, #0
 800b21c:	675a      	str	r2, [r3, #116]	@ 0x74
 800b21e:	bf00      	nop
 800b220:	3754      	adds	r7, #84	@ 0x54
 800b222:	46bd      	mov	sp, r7
 800b224:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b228:	4770      	bx	lr

0800b22a <UART_DMATransmitCplt>:
 800b22a:	b580      	push	{r7, lr}
 800b22c:	b090      	sub	sp, #64	@ 0x40
 800b22e:	af00      	add	r7, sp, #0
 800b230:	6078      	str	r0, [r7, #4]
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b236:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800b238:	687b      	ldr	r3, [r7, #4]
 800b23a:	681b      	ldr	r3, [r3, #0]
 800b23c:	681b      	ldr	r3, [r3, #0]
 800b23e:	f003 0320 	and.w	r3, r3, #32
 800b242:	2b00      	cmp	r3, #0
 800b244:	d137      	bne.n	800b2b6 <UART_DMATransmitCplt+0x8c>
 800b246:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b248:	2200      	movs	r2, #0
 800b24a:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 800b24e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b250:	681b      	ldr	r3, [r3, #0]
 800b252:	3308      	adds	r3, #8
 800b254:	627b      	str	r3, [r7, #36]	@ 0x24
 800b256:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b258:	e853 3f00 	ldrex	r3, [r3]
 800b25c:	623b      	str	r3, [r7, #32]
 800b25e:	6a3b      	ldr	r3, [r7, #32]
 800b260:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800b264:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b266:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b268:	681b      	ldr	r3, [r3, #0]
 800b26a:	3308      	adds	r3, #8
 800b26c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b26e:	633a      	str	r2, [r7, #48]	@ 0x30
 800b270:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b272:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800b274:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800b276:	e841 2300 	strex	r3, r2, [r1]
 800b27a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b27c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b27e:	2b00      	cmp	r3, #0
 800b280:	d1e5      	bne.n	800b24e <UART_DMATransmitCplt+0x24>
 800b282:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b284:	681b      	ldr	r3, [r3, #0]
 800b286:	613b      	str	r3, [r7, #16]
 800b288:	693b      	ldr	r3, [r7, #16]
 800b28a:	e853 3f00 	ldrex	r3, [r3]
 800b28e:	60fb      	str	r3, [r7, #12]
 800b290:	68fb      	ldr	r3, [r7, #12]
 800b292:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800b296:	637b      	str	r3, [r7, #52]	@ 0x34
 800b298:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	461a      	mov	r2, r3
 800b29e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b2a0:	61fb      	str	r3, [r7, #28]
 800b2a2:	61ba      	str	r2, [r7, #24]
 800b2a4:	69b9      	ldr	r1, [r7, #24]
 800b2a6:	69fa      	ldr	r2, [r7, #28]
 800b2a8:	e841 2300 	strex	r3, r2, [r1]
 800b2ac:	617b      	str	r3, [r7, #20]
 800b2ae:	697b      	ldr	r3, [r7, #20]
 800b2b0:	2b00      	cmp	r3, #0
 800b2b2:	d1e6      	bne.n	800b282 <UART_DMATransmitCplt+0x58>
 800b2b4:	e002      	b.n	800b2bc <UART_DMATransmitCplt+0x92>
 800b2b6:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 800b2b8:	f7ff f99c 	bl	800a5f4 <HAL_UART_TxCpltCallback>
 800b2bc:	bf00      	nop
 800b2be:	3740      	adds	r7, #64	@ 0x40
 800b2c0:	46bd      	mov	sp, r7
 800b2c2:	bd80      	pop	{r7, pc}

0800b2c4 <UART_DMATxHalfCplt>:
 800b2c4:	b580      	push	{r7, lr}
 800b2c6:	b084      	sub	sp, #16
 800b2c8:	af00      	add	r7, sp, #0
 800b2ca:	6078      	str	r0, [r7, #4]
 800b2cc:	687b      	ldr	r3, [r7, #4]
 800b2ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b2d0:	60fb      	str	r3, [r7, #12]
 800b2d2:	68f8      	ldr	r0, [r7, #12]
 800b2d4:	f7ff f998 	bl	800a608 <HAL_UART_TxHalfCpltCallback>
 800b2d8:	bf00      	nop
 800b2da:	3710      	adds	r7, #16
 800b2dc:	46bd      	mov	sp, r7
 800b2de:	bd80      	pop	{r7, pc}

0800b2e0 <UART_DMAReceiveCplt>:
 800b2e0:	b580      	push	{r7, lr}
 800b2e2:	b09c      	sub	sp, #112	@ 0x70
 800b2e4:	af00      	add	r7, sp, #0
 800b2e6:	6078      	str	r0, [r7, #4]
 800b2e8:	687b      	ldr	r3, [r7, #4]
 800b2ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b2ec:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800b2ee:	687b      	ldr	r3, [r7, #4]
 800b2f0:	681b      	ldr	r3, [r3, #0]
 800b2f2:	681b      	ldr	r3, [r3, #0]
 800b2f4:	f003 0320 	and.w	r3, r3, #32
 800b2f8:	2b00      	cmp	r3, #0
 800b2fa:	d171      	bne.n	800b3e0 <UART_DMAReceiveCplt+0x100>
 800b2fc:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b2fe:	2200      	movs	r2, #0
 800b300:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b304:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b306:	681b      	ldr	r3, [r3, #0]
 800b308:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b30a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b30c:	e853 3f00 	ldrex	r3, [r3]
 800b310:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b312:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800b314:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800b318:	66bb      	str	r3, [r7, #104]	@ 0x68
 800b31a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b31c:	681b      	ldr	r3, [r3, #0]
 800b31e:	461a      	mov	r2, r3
 800b320:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800b322:	65bb      	str	r3, [r7, #88]	@ 0x58
 800b324:	657a      	str	r2, [r7, #84]	@ 0x54
 800b326:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800b328:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800b32a:	e841 2300 	strex	r3, r2, [r1]
 800b32e:	653b      	str	r3, [r7, #80]	@ 0x50
 800b330:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800b332:	2b00      	cmp	r3, #0
 800b334:	d1e6      	bne.n	800b304 <UART_DMAReceiveCplt+0x24>
 800b336:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b338:	681b      	ldr	r3, [r3, #0]
 800b33a:	3308      	adds	r3, #8
 800b33c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b33e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b340:	e853 3f00 	ldrex	r3, [r3]
 800b344:	637b      	str	r3, [r7, #52]	@ 0x34
 800b346:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b348:	f023 0301 	bic.w	r3, r3, #1
 800b34c:	667b      	str	r3, [r7, #100]	@ 0x64
 800b34e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b350:	681b      	ldr	r3, [r3, #0]
 800b352:	3308      	adds	r3, #8
 800b354:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 800b356:	647a      	str	r2, [r7, #68]	@ 0x44
 800b358:	643b      	str	r3, [r7, #64]	@ 0x40
 800b35a:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800b35c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800b35e:	e841 2300 	strex	r3, r2, [r1]
 800b362:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800b364:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b366:	2b00      	cmp	r3, #0
 800b368:	d1e5      	bne.n	800b336 <UART_DMAReceiveCplt+0x56>
 800b36a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b36c:	681b      	ldr	r3, [r3, #0]
 800b36e:	3308      	adds	r3, #8
 800b370:	627b      	str	r3, [r7, #36]	@ 0x24
 800b372:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b374:	e853 3f00 	ldrex	r3, [r3]
 800b378:	623b      	str	r3, [r7, #32]
 800b37a:	6a3b      	ldr	r3, [r7, #32]
 800b37c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800b380:	663b      	str	r3, [r7, #96]	@ 0x60
 800b382:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b384:	681b      	ldr	r3, [r3, #0]
 800b386:	3308      	adds	r3, #8
 800b388:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800b38a:	633a      	str	r2, [r7, #48]	@ 0x30
 800b38c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b38e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800b390:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800b392:	e841 2300 	strex	r3, r2, [r1]
 800b396:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b398:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b39a:	2b00      	cmp	r3, #0
 800b39c:	d1e5      	bne.n	800b36a <UART_DMAReceiveCplt+0x8a>
 800b39e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b3a0:	2220      	movs	r2, #32
 800b3a2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800b3a6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b3a8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b3aa:	2b01      	cmp	r3, #1
 800b3ac:	d118      	bne.n	800b3e0 <UART_DMAReceiveCplt+0x100>
 800b3ae:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b3b0:	681b      	ldr	r3, [r3, #0]
 800b3b2:	613b      	str	r3, [r7, #16]
 800b3b4:	693b      	ldr	r3, [r7, #16]
 800b3b6:	e853 3f00 	ldrex	r3, [r3]
 800b3ba:	60fb      	str	r3, [r7, #12]
 800b3bc:	68fb      	ldr	r3, [r7, #12]
 800b3be:	f023 0310 	bic.w	r3, r3, #16
 800b3c2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800b3c4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b3c6:	681b      	ldr	r3, [r3, #0]
 800b3c8:	461a      	mov	r2, r3
 800b3ca:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800b3cc:	61fb      	str	r3, [r7, #28]
 800b3ce:	61ba      	str	r2, [r7, #24]
 800b3d0:	69b9      	ldr	r1, [r7, #24]
 800b3d2:	69fa      	ldr	r2, [r7, #28]
 800b3d4:	e841 2300 	strex	r3, r2, [r1]
 800b3d8:	617b      	str	r3, [r7, #20]
 800b3da:	697b      	ldr	r3, [r7, #20]
 800b3dc:	2b00      	cmp	r3, #0
 800b3de:	d1e6      	bne.n	800b3ae <UART_DMAReceiveCplt+0xce>
 800b3e0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b3e2:	2200      	movs	r2, #0
 800b3e4:	671a      	str	r2, [r3, #112]	@ 0x70
 800b3e6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b3e8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b3ea:	2b01      	cmp	r3, #1
 800b3ec:	d107      	bne.n	800b3fe <UART_DMAReceiveCplt+0x11e>
 800b3ee:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b3f0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800b3f4:	4619      	mov	r1, r3
 800b3f6:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
<<<<<<< HEAD
 800b3f8:	f000 fdc4 	bl	800bf84 <HAL_UARTEx_RxEventCallback>
=======
 800b3f8:	f001 ff6e 	bl	800d2d8 <HAL_UARTEx_RxEventCallback>
#else
    /*Call legacy weak Rx complete callback*/
    HAL_UART_RxCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
  }
}
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
 800b3fc:	e002      	b.n	800b404 <UART_DMAReceiveCplt+0x124>
 800b3fe:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 800b400:	f7ff f90c 	bl	800a61c <HAL_UART_RxCpltCallback>
 800b404:	bf00      	nop
 800b406:	3770      	adds	r7, #112	@ 0x70
 800b408:	46bd      	mov	sp, r7
 800b40a:	bd80      	pop	{r7, pc}

0800b40c <UART_DMARxHalfCplt>:
 800b40c:	b580      	push	{r7, lr}
 800b40e:	b084      	sub	sp, #16
 800b410:	af00      	add	r7, sp, #0
 800b412:	6078      	str	r0, [r7, #4]
 800b414:	687b      	ldr	r3, [r7, #4]
 800b416:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b418:	60fb      	str	r3, [r7, #12]
 800b41a:	68fb      	ldr	r3, [r7, #12]
 800b41c:	2201      	movs	r2, #1
 800b41e:	671a      	str	r2, [r3, #112]	@ 0x70
 800b420:	68fb      	ldr	r3, [r7, #12]
 800b422:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b424:	2b01      	cmp	r3, #1
 800b426:	d109      	bne.n	800b43c <UART_DMARxHalfCplt+0x30>
 800b428:	68fb      	ldr	r3, [r7, #12]
 800b42a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800b42e:	085b      	lsrs	r3, r3, #1
 800b430:	b29b      	uxth	r3, r3
 800b432:	4619      	mov	r1, r3
 800b434:	68f8      	ldr	r0, [r7, #12]
<<<<<<< HEAD
 800b436:	f000 fda5 	bl	800bf84 <HAL_UARTEx_RxEventCallback>
=======
 800b436:	f001 ff4f 	bl	800d2d8 <HAL_UARTEx_RxEventCallback>
#else
    /*Call legacy weak Rx Half complete callback*/
    HAL_UART_RxHalfCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
  }
}
>>>>>>> 60405d7732d27f990061413422bc871c12f44986
 800b43a:	e002      	b.n	800b442 <UART_DMARxHalfCplt+0x36>
 800b43c:	68f8      	ldr	r0, [r7, #12]
 800b43e:	f7ff f8f7 	bl	800a630 <HAL_UART_RxHalfCpltCallback>
 800b442:	bf00      	nop
 800b444:	3710      	adds	r7, #16
 800b446:	46bd      	mov	sp, r7
 800b448:	bd80      	pop	{r7, pc}

0800b44a <UART_DMAError>:
 800b44a:	b580      	push	{r7, lr}
 800b44c:	b086      	sub	sp, #24
 800b44e:	af00      	add	r7, sp, #0
 800b450:	6078      	str	r0, [r7, #4]
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b456:	617b      	str	r3, [r7, #20]
 800b458:	697b      	ldr	r3, [r7, #20]
 800b45a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800b45e:	613b      	str	r3, [r7, #16]
 800b460:	697b      	ldr	r3, [r7, #20]
 800b462:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b466:	60fb      	str	r3, [r7, #12]
 800b468:	697b      	ldr	r3, [r7, #20]
 800b46a:	681b      	ldr	r3, [r3, #0]
 800b46c:	689b      	ldr	r3, [r3, #8]
 800b46e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800b472:	2b80      	cmp	r3, #128	@ 0x80
 800b474:	d109      	bne.n	800b48a <UART_DMAError+0x40>
 800b476:	693b      	ldr	r3, [r7, #16]
 800b478:	2b21      	cmp	r3, #33	@ 0x21
 800b47a:	d106      	bne.n	800b48a <UART_DMAError+0x40>
 800b47c:	697b      	ldr	r3, [r7, #20]
 800b47e:	2200      	movs	r2, #0
 800b480:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 800b484:	6978      	ldr	r0, [r7, #20]
 800b486:	f7ff fe29 	bl	800b0dc <UART_EndTxTransfer>
 800b48a:	697b      	ldr	r3, [r7, #20]
 800b48c:	681b      	ldr	r3, [r3, #0]
 800b48e:	689b      	ldr	r3, [r3, #8]
 800b490:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800b494:	2b40      	cmp	r3, #64	@ 0x40
 800b496:	d109      	bne.n	800b4ac <UART_DMAError+0x62>
 800b498:	68fb      	ldr	r3, [r7, #12]
 800b49a:	2b22      	cmp	r3, #34	@ 0x22
 800b49c:	d106      	bne.n	800b4ac <UART_DMAError+0x62>
 800b49e:	697b      	ldr	r3, [r7, #20]
 800b4a0:	2200      	movs	r2, #0
 800b4a2:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b4a6:	6978      	ldr	r0, [r7, #20]
 800b4a8:	f7ff fe59 	bl	800b15e <UART_EndRxTransfer>
 800b4ac:	697b      	ldr	r3, [r7, #20]
 800b4ae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800b4b2:	f043 0210 	orr.w	r2, r3, #16
 800b4b6:	697b      	ldr	r3, [r7, #20]
 800b4b8:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800b4bc:	6978      	ldr	r0, [r7, #20]
 800b4be:	f7ff f8c1 	bl	800a644 <HAL_UART_ErrorCallback>
 800b4c2:	bf00      	nop
 800b4c4:	3718      	adds	r7, #24
 800b4c6:	46bd      	mov	sp, r7
 800b4c8:	bd80      	pop	{r7, pc}

0800b4ca <UART_DMAAbortOnError>:
 800b4ca:	b580      	push	{r7, lr}
 800b4cc:	b084      	sub	sp, #16
 800b4ce:	af00      	add	r7, sp, #0
 800b4d0:	6078      	str	r0, [r7, #4]
 800b4d2:	687b      	ldr	r3, [r7, #4]
 800b4d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b4d6:	60fb      	str	r3, [r7, #12]
 800b4d8:	68fb      	ldr	r3, [r7, #12]
 800b4da:	2200      	movs	r2, #0
 800b4dc:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b4e0:	68fb      	ldr	r3, [r7, #12]
 800b4e2:	2200      	movs	r2, #0
 800b4e4:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 800b4e8:	68f8      	ldr	r0, [r7, #12]
 800b4ea:	f7ff f8ab 	bl	800a644 <HAL_UART_ErrorCallback>
 800b4ee:	bf00      	nop
 800b4f0:	3710      	adds	r7, #16
 800b4f2:	46bd      	mov	sp, r7
 800b4f4:	bd80      	pop	{r7, pc}

0800b4f6 <UART_EndTransmit_IT>:
 800b4f6:	b580      	push	{r7, lr}
 800b4f8:	b088      	sub	sp, #32
 800b4fa:	af00      	add	r7, sp, #0
 800b4fc:	6078      	str	r0, [r7, #4]
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	681b      	ldr	r3, [r3, #0]
 800b502:	60fb      	str	r3, [r7, #12]
 800b504:	68fb      	ldr	r3, [r7, #12]
 800b506:	e853 3f00 	ldrex	r3, [r3]
 800b50a:	60bb      	str	r3, [r7, #8]
 800b50c:	68bb      	ldr	r3, [r7, #8]
 800b50e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800b512:	61fb      	str	r3, [r7, #28]
 800b514:	687b      	ldr	r3, [r7, #4]
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	461a      	mov	r2, r3
 800b51a:	69fb      	ldr	r3, [r7, #28]
 800b51c:	61bb      	str	r3, [r7, #24]
 800b51e:	617a      	str	r2, [r7, #20]
 800b520:	6979      	ldr	r1, [r7, #20]
 800b522:	69ba      	ldr	r2, [r7, #24]
 800b524:	e841 2300 	strex	r3, r2, [r1]
 800b528:	613b      	str	r3, [r7, #16]
 800b52a:	693b      	ldr	r3, [r7, #16]
 800b52c:	2b00      	cmp	r3, #0
 800b52e:	d1e6      	bne.n	800b4fe <UART_EndTransmit_IT+0x8>
 800b530:	687b      	ldr	r3, [r7, #4]
 800b532:	2220      	movs	r2, #32
 800b534:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b538:	687b      	ldr	r3, [r7, #4]
 800b53a:	2200      	movs	r2, #0
 800b53c:	679a      	str	r2, [r3, #120]	@ 0x78
 800b53e:	6878      	ldr	r0, [r7, #4]
 800b540:	f7ff f858 	bl	800a5f4 <HAL_UART_TxCpltCallback>
 800b544:	bf00      	nop
 800b546:	3720      	adds	r7, #32
 800b548:	46bd      	mov	sp, r7
 800b54a:	bd80      	pop	{r7, pc}

0800b54c <HAL_UARTEx_WakeupCallback>:
 800b54c:	b480      	push	{r7}
 800b54e:	b083      	sub	sp, #12
 800b550:	af00      	add	r7, sp, #0
 800b552:	6078      	str	r0, [r7, #4]
 800b554:	bf00      	nop
 800b556:	370c      	adds	r7, #12
 800b558:	46bd      	mov	sp, r7
 800b55a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b55e:	4770      	bx	lr

0800b560 <HAL_UARTEx_RxFifoFullCallback>:
 800b560:	b480      	push	{r7}
 800b562:	b083      	sub	sp, #12
 800b564:	af00      	add	r7, sp, #0
 800b566:	6078      	str	r0, [r7, #4]
 800b568:	bf00      	nop
 800b56a:	370c      	adds	r7, #12
 800b56c:	46bd      	mov	sp, r7
 800b56e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b572:	4770      	bx	lr

0800b574 <HAL_UARTEx_TxFifoEmptyCallback>:
 800b574:	b480      	push	{r7}
 800b576:	b083      	sub	sp, #12
 800b578:	af00      	add	r7, sp, #0
 800b57a:	6078      	str	r0, [r7, #4]
 800b57c:	bf00      	nop
 800b57e:	370c      	adds	r7, #12
 800b580:	46bd      	mov	sp, r7
 800b582:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b586:	4770      	bx	lr

0800b588 <HAL_UARTEx_DisableFifoMode>:
 800b588:	b480      	push	{r7}
 800b58a:	b085      	sub	sp, #20
 800b58c:	af00      	add	r7, sp, #0
 800b58e:	6078      	str	r0, [r7, #4]
 800b590:	687b      	ldr	r3, [r7, #4]
 800b592:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800b596:	2b01      	cmp	r3, #1
 800b598:	d101      	bne.n	800b59e <HAL_UARTEx_DisableFifoMode+0x16>
 800b59a:	2302      	movs	r3, #2
 800b59c:	e027      	b.n	800b5ee <HAL_UARTEx_DisableFifoMode+0x66>
 800b59e:	687b      	ldr	r3, [r7, #4]
 800b5a0:	2201      	movs	r2, #1
 800b5a2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	2224      	movs	r2, #36	@ 0x24
 800b5aa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	681b      	ldr	r3, [r3, #0]
 800b5b2:	681b      	ldr	r3, [r3, #0]
 800b5b4:	60fb      	str	r3, [r7, #12]
 800b5b6:	687b      	ldr	r3, [r7, #4]
 800b5b8:	681b      	ldr	r3, [r3, #0]
 800b5ba:	681a      	ldr	r2, [r3, #0]
 800b5bc:	687b      	ldr	r3, [r7, #4]
 800b5be:	681b      	ldr	r3, [r3, #0]
 800b5c0:	f022 0201 	bic.w	r2, r2, #1
 800b5c4:	601a      	str	r2, [r3, #0]
 800b5c6:	68fb      	ldr	r3, [r7, #12]
 800b5c8:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800b5cc:	60fb      	str	r3, [r7, #12]
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	2200      	movs	r2, #0
 800b5d2:	665a      	str	r2, [r3, #100]	@ 0x64
 800b5d4:	687b      	ldr	r3, [r7, #4]
 800b5d6:	681b      	ldr	r3, [r3, #0]
 800b5d8:	68fa      	ldr	r2, [r7, #12]
 800b5da:	601a      	str	r2, [r3, #0]
 800b5dc:	687b      	ldr	r3, [r7, #4]
 800b5de:	2220      	movs	r2, #32
 800b5e0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b5e4:	687b      	ldr	r3, [r7, #4]
 800b5e6:	2200      	movs	r2, #0
 800b5e8:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800b5ec:	2300      	movs	r3, #0
 800b5ee:	4618      	mov	r0, r3
 800b5f0:	3714      	adds	r7, #20
 800b5f2:	46bd      	mov	sp, r7
 800b5f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5f8:	4770      	bx	lr

0800b5fa <HAL_UARTEx_SetTxFifoThreshold>:
 800b5fa:	b580      	push	{r7, lr}
 800b5fc:	b084      	sub	sp, #16
 800b5fe:	af00      	add	r7, sp, #0
 800b600:	6078      	str	r0, [r7, #4]
 800b602:	6039      	str	r1, [r7, #0]
 800b604:	687b      	ldr	r3, [r7, #4]
 800b606:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800b60a:	2b01      	cmp	r3, #1
 800b60c:	d101      	bne.n	800b612 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800b60e:	2302      	movs	r3, #2
 800b610:	e02d      	b.n	800b66e <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800b612:	687b      	ldr	r3, [r7, #4]
 800b614:	2201      	movs	r2, #1
 800b616:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	2224      	movs	r2, #36	@ 0x24
 800b61e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b622:	687b      	ldr	r3, [r7, #4]
 800b624:	681b      	ldr	r3, [r3, #0]
 800b626:	681b      	ldr	r3, [r3, #0]
 800b628:	60fb      	str	r3, [r7, #12]
 800b62a:	687b      	ldr	r3, [r7, #4]
 800b62c:	681b      	ldr	r3, [r3, #0]
 800b62e:	681a      	ldr	r2, [r3, #0]
 800b630:	687b      	ldr	r3, [r7, #4]
 800b632:	681b      	ldr	r3, [r3, #0]
 800b634:	f022 0201 	bic.w	r2, r2, #1
 800b638:	601a      	str	r2, [r3, #0]
 800b63a:	687b      	ldr	r3, [r7, #4]
 800b63c:	681b      	ldr	r3, [r3, #0]
 800b63e:	689b      	ldr	r3, [r3, #8]
 800b640:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 800b644:	687b      	ldr	r3, [r7, #4]
 800b646:	681b      	ldr	r3, [r3, #0]
 800b648:	683a      	ldr	r2, [r7, #0]
 800b64a:	430a      	orrs	r2, r1
 800b64c:	609a      	str	r2, [r3, #8]
 800b64e:	6878      	ldr	r0, [r7, #4]
 800b650:	f000 f8a4 	bl	800b79c <UARTEx_SetNbDataToProcess>
 800b654:	687b      	ldr	r3, [r7, #4]
 800b656:	681b      	ldr	r3, [r3, #0]
 800b658:	68fa      	ldr	r2, [r7, #12]
 800b65a:	601a      	str	r2, [r3, #0]
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	2220      	movs	r2, #32
 800b660:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b664:	687b      	ldr	r3, [r7, #4]
 800b666:	2200      	movs	r2, #0
 800b668:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800b66c:	2300      	movs	r3, #0
 800b66e:	4618      	mov	r0, r3
 800b670:	3710      	adds	r7, #16
 800b672:	46bd      	mov	sp, r7
 800b674:	bd80      	pop	{r7, pc}

0800b676 <HAL_UARTEx_SetRxFifoThreshold>:
 800b676:	b580      	push	{r7, lr}
 800b678:	b084      	sub	sp, #16
 800b67a:	af00      	add	r7, sp, #0
 800b67c:	6078      	str	r0, [r7, #4]
 800b67e:	6039      	str	r1, [r7, #0]
 800b680:	687b      	ldr	r3, [r7, #4]
 800b682:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800b686:	2b01      	cmp	r3, #1
 800b688:	d101      	bne.n	800b68e <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800b68a:	2302      	movs	r3, #2
 800b68c:	e02d      	b.n	800b6ea <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800b68e:	687b      	ldr	r3, [r7, #4]
 800b690:	2201      	movs	r2, #1
 800b692:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800b696:	687b      	ldr	r3, [r7, #4]
 800b698:	2224      	movs	r2, #36	@ 0x24
 800b69a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b69e:	687b      	ldr	r3, [r7, #4]
 800b6a0:	681b      	ldr	r3, [r3, #0]
 800b6a2:	681b      	ldr	r3, [r3, #0]
 800b6a4:	60fb      	str	r3, [r7, #12]
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	681b      	ldr	r3, [r3, #0]
 800b6aa:	681a      	ldr	r2, [r3, #0]
 800b6ac:	687b      	ldr	r3, [r7, #4]
 800b6ae:	681b      	ldr	r3, [r3, #0]
 800b6b0:	f022 0201 	bic.w	r2, r2, #1
 800b6b4:	601a      	str	r2, [r3, #0]
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	681b      	ldr	r3, [r3, #0]
 800b6ba:	689b      	ldr	r3, [r3, #8]
 800b6bc:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 800b6c0:	687b      	ldr	r3, [r7, #4]
 800b6c2:	681b      	ldr	r3, [r3, #0]
 800b6c4:	683a      	ldr	r2, [r7, #0]
 800b6c6:	430a      	orrs	r2, r1
 800b6c8:	609a      	str	r2, [r3, #8]
 800b6ca:	6878      	ldr	r0, [r7, #4]
 800b6cc:	f000 f866 	bl	800b79c <UARTEx_SetNbDataToProcess>
 800b6d0:	687b      	ldr	r3, [r7, #4]
 800b6d2:	681b      	ldr	r3, [r3, #0]
 800b6d4:	68fa      	ldr	r2, [r7, #12]
 800b6d6:	601a      	str	r2, [r3, #0]
 800b6d8:	687b      	ldr	r3, [r7, #4]
 800b6da:	2220      	movs	r2, #32
 800b6dc:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b6e0:	687b      	ldr	r3, [r7, #4]
 800b6e2:	2200      	movs	r2, #0
 800b6e4:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800b6e8:	2300      	movs	r3, #0
 800b6ea:	4618      	mov	r0, r3
 800b6ec:	3710      	adds	r7, #16
 800b6ee:	46bd      	mov	sp, r7
 800b6f0:	bd80      	pop	{r7, pc}

0800b6f2 <HAL_UARTEx_ReceiveToIdle_DMA>:
 800b6f2:	b580      	push	{r7, lr}
 800b6f4:	b08c      	sub	sp, #48	@ 0x30
 800b6f6:	af00      	add	r7, sp, #0
 800b6f8:	60f8      	str	r0, [r7, #12]
 800b6fa:	60b9      	str	r1, [r7, #8]
 800b6fc:	4613      	mov	r3, r2
 800b6fe:	80fb      	strh	r3, [r7, #6]
 800b700:	68fb      	ldr	r3, [r7, #12]
 800b702:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b706:	2b20      	cmp	r3, #32
 800b708:	d142      	bne.n	800b790 <HAL_UARTEx_ReceiveToIdle_DMA+0x9e>
 800b70a:	68bb      	ldr	r3, [r7, #8]
 800b70c:	2b00      	cmp	r3, #0
 800b70e:	d002      	beq.n	800b716 <HAL_UARTEx_ReceiveToIdle_DMA+0x24>
 800b710:	88fb      	ldrh	r3, [r7, #6]
 800b712:	2b00      	cmp	r3, #0
 800b714:	d101      	bne.n	800b71a <HAL_UARTEx_ReceiveToIdle_DMA+0x28>
 800b716:	2301      	movs	r3, #1
 800b718:	e03b      	b.n	800b792 <HAL_UARTEx_ReceiveToIdle_DMA+0xa0>
 800b71a:	68fb      	ldr	r3, [r7, #12]
 800b71c:	2201      	movs	r2, #1
 800b71e:	66da      	str	r2, [r3, #108]	@ 0x6c
 800b720:	68fb      	ldr	r3, [r7, #12]
 800b722:	2200      	movs	r2, #0
 800b724:	671a      	str	r2, [r3, #112]	@ 0x70
 800b726:	88fb      	ldrh	r3, [r7, #6]
 800b728:	461a      	mov	r2, r3
 800b72a:	68b9      	ldr	r1, [r7, #8]
 800b72c:	68f8      	ldr	r0, [r7, #12]
 800b72e:	f7ff fc2f 	bl	800af90 <UART_Start_Receive_DMA>
 800b732:	4603      	mov	r3, r0
 800b734:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800b738:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800b73c:	2b00      	cmp	r3, #0
 800b73e:	d124      	bne.n	800b78a <HAL_UARTEx_ReceiveToIdle_DMA+0x98>
 800b740:	68fb      	ldr	r3, [r7, #12]
 800b742:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b744:	2b01      	cmp	r3, #1
 800b746:	d11d      	bne.n	800b784 <HAL_UARTEx_ReceiveToIdle_DMA+0x92>
 800b748:	68fb      	ldr	r3, [r7, #12]
 800b74a:	681b      	ldr	r3, [r3, #0]
 800b74c:	2210      	movs	r2, #16
 800b74e:	621a      	str	r2, [r3, #32]
 800b750:	68fb      	ldr	r3, [r7, #12]
 800b752:	681b      	ldr	r3, [r3, #0]
 800b754:	61bb      	str	r3, [r7, #24]
 800b756:	69bb      	ldr	r3, [r7, #24]
 800b758:	e853 3f00 	ldrex	r3, [r3]
 800b75c:	617b      	str	r3, [r7, #20]
 800b75e:	697b      	ldr	r3, [r7, #20]
 800b760:	f043 0310 	orr.w	r3, r3, #16
 800b764:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b766:	68fb      	ldr	r3, [r7, #12]
 800b768:	681b      	ldr	r3, [r3, #0]
 800b76a:	461a      	mov	r2, r3
 800b76c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b76e:	627b      	str	r3, [r7, #36]	@ 0x24
 800b770:	623a      	str	r2, [r7, #32]
 800b772:	6a39      	ldr	r1, [r7, #32]
 800b774:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800b776:	e841 2300 	strex	r3, r2, [r1]
 800b77a:	61fb      	str	r3, [r7, #28]
 800b77c:	69fb      	ldr	r3, [r7, #28]
 800b77e:	2b00      	cmp	r3, #0
 800b780:	d1e6      	bne.n	800b750 <HAL_UARTEx_ReceiveToIdle_DMA+0x5e>
 800b782:	e002      	b.n	800b78a <HAL_UARTEx_ReceiveToIdle_DMA+0x98>
 800b784:	2301      	movs	r3, #1
 800b786:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800b78a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800b78e:	e000      	b.n	800b792 <HAL_UARTEx_ReceiveToIdle_DMA+0xa0>
 800b790:	2302      	movs	r3, #2
 800b792:	4618      	mov	r0, r3
 800b794:	3730      	adds	r7, #48	@ 0x30
 800b796:	46bd      	mov	sp, r7
 800b798:	bd80      	pop	{r7, pc}
	...

0800b79c <UARTEx_SetNbDataToProcess>:
 800b79c:	b480      	push	{r7}
 800b79e:	b085      	sub	sp, #20
 800b7a0:	af00      	add	r7, sp, #0
 800b7a2:	6078      	str	r0, [r7, #4]
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b7a8:	2b00      	cmp	r3, #0
 800b7aa:	d108      	bne.n	800b7be <UARTEx_SetNbDataToProcess+0x22>
 800b7ac:	687b      	ldr	r3, [r7, #4]
 800b7ae:	2201      	movs	r2, #1
 800b7b0:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800b7b4:	687b      	ldr	r3, [r7, #4]
 800b7b6:	2201      	movs	r2, #1
 800b7b8:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800b7bc:	e031      	b.n	800b822 <UARTEx_SetNbDataToProcess+0x86>
 800b7be:	2308      	movs	r3, #8
 800b7c0:	73fb      	strb	r3, [r7, #15]
 800b7c2:	2308      	movs	r3, #8
 800b7c4:	73bb      	strb	r3, [r7, #14]
 800b7c6:	687b      	ldr	r3, [r7, #4]
 800b7c8:	681b      	ldr	r3, [r3, #0]
 800b7ca:	689b      	ldr	r3, [r3, #8]
 800b7cc:	0e5b      	lsrs	r3, r3, #25
 800b7ce:	b2db      	uxtb	r3, r3
 800b7d0:	f003 0307 	and.w	r3, r3, #7
 800b7d4:	737b      	strb	r3, [r7, #13]
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	681b      	ldr	r3, [r3, #0]
 800b7da:	689b      	ldr	r3, [r3, #8]
 800b7dc:	0f5b      	lsrs	r3, r3, #29
 800b7de:	b2db      	uxtb	r3, r3
 800b7e0:	f003 0307 	and.w	r3, r3, #7
 800b7e4:	733b      	strb	r3, [r7, #12]
 800b7e6:	7bbb      	ldrb	r3, [r7, #14]
 800b7e8:	7b3a      	ldrb	r2, [r7, #12]
 800b7ea:	4911      	ldr	r1, [pc, #68]	@ (800b830 <UARTEx_SetNbDataToProcess+0x94>)
 800b7ec:	5c8a      	ldrb	r2, [r1, r2]
 800b7ee:	fb02 f303 	mul.w	r3, r2, r3
 800b7f2:	7b3a      	ldrb	r2, [r7, #12]
 800b7f4:	490f      	ldr	r1, [pc, #60]	@ (800b834 <UARTEx_SetNbDataToProcess+0x98>)
 800b7f6:	5c8a      	ldrb	r2, [r1, r2]
 800b7f8:	fb93 f3f2 	sdiv	r3, r3, r2
 800b7fc:	b29a      	uxth	r2, r3
 800b7fe:	687b      	ldr	r3, [r7, #4]
 800b800:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800b804:	7bfb      	ldrb	r3, [r7, #15]
 800b806:	7b7a      	ldrb	r2, [r7, #13]
 800b808:	4909      	ldr	r1, [pc, #36]	@ (800b830 <UARTEx_SetNbDataToProcess+0x94>)
 800b80a:	5c8a      	ldrb	r2, [r1, r2]
 800b80c:	fb02 f303 	mul.w	r3, r2, r3
 800b810:	7b7a      	ldrb	r2, [r7, #13]
 800b812:	4908      	ldr	r1, [pc, #32]	@ (800b834 <UARTEx_SetNbDataToProcess+0x98>)
 800b814:	5c8a      	ldrb	r2, [r1, r2]
 800b816:	fb93 f3f2 	sdiv	r3, r3, r2
 800b81a:	b29a      	uxth	r2, r3
 800b81c:	687b      	ldr	r3, [r7, #4]
 800b81e:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800b822:	bf00      	nop
 800b824:	3714      	adds	r7, #20
 800b826:	46bd      	mov	sp, r7
 800b828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b82c:	4770      	bx	lr
 800b82e:	bf00      	nop
 800b830:	080128ac 	.word	0x080128ac
 800b834:	080128b4 	.word	0x080128b4

0800b838 <goToZeroElecAngle>:
#include "pid.h"
#include "lowpass_filter.h"
#include "app.h"

void goToZeroElecAngle(BldcMotor *motor)
{
 800b838:	b580      	push	{r7, lr}
 800b83a:	b082      	sub	sp, #8
 800b83c:	af00      	add	r7, sp, #0
 800b83e:	6078      	str	r0, [r7, #4]
    setTorque(motor, 0, OPEN_LOOP_TORQUE, 0);
 800b840:	ed9f 1a08 	vldr	s2, [pc, #32]	@ 800b864 <goToZeroElecAngle+0x2c>
 800b844:	eddf 0a08 	vldr	s1, [pc, #32]	@ 800b868 <goToZeroElecAngle+0x30>
 800b848:	ed9f 0a06 	vldr	s0, [pc, #24]	@ 800b864 <goToZeroElecAngle+0x2c>
 800b84c:	6878      	ldr	r0, [r7, #4]
 800b84e:	f001 f82b 	bl	800c8a8 <setTorque>
    delay(700);
 800b852:	f44f 702f 	mov.w	r0, #700	@ 0x2bc
 800b856:	f002 f8b7 	bl	800d9c8 <delay>
}
 800b85a:	bf00      	nop
 800b85c:	3708      	adds	r7, #8
 800b85e:	46bd      	mov	sp, r7
 800b860:	bd80      	pop	{r7, pc}
 800b862:	bf00      	nop
 800b864:	00000000 	.word	0x00000000
 800b868:	405db3d7 	.word	0x405db3d7

0800b86c <alignSensor>:
void alignSensor(BldcMotor *motor)
{
 800b86c:	b580      	push	{r7, lr}
 800b86e:	b08a      	sub	sp, #40	@ 0x28
 800b870:	af00      	add	r7, sp, #0
 800b872:	6078      	str	r0, [r7, #4]
    for (int i = 0; i <= 500; i++)
 800b874:	2300      	movs	r3, #0
 800b876:	627b      	str	r3, [r7, #36]	@ 0x24
 800b878:	e025      	b.n	800b8c6 <alignSensor+0x5a>
    {
        float angle = _3PI_2 + _2PI * i / 500.0f;
 800b87a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b87c:	ee07 3a90 	vmov	s15, r3
 800b880:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b884:	ed9f 7a79 	vldr	s14, [pc, #484]	@ 800ba6c <alignSensor+0x200>
 800b888:	ee27 7a87 	vmul.f32	s14, s15, s14
 800b88c:	eddf 6a78 	vldr	s13, [pc, #480]	@ 800ba70 <alignSensor+0x204>
 800b890:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b894:	ed9f 7a77 	vldr	s14, [pc, #476]	@ 800ba74 <alignSensor+0x208>
 800b898:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b89c:	edc7 7a02 	vstr	s15, [r7, #8]
        setTorque(motor, OPEN_LOOP_TORQUE, 0, angle);
 800b8a0:	ed97 1a02 	vldr	s2, [r7, #8]
 800b8a4:	eddf 0a74 	vldr	s1, [pc, #464]	@ 800ba78 <alignSensor+0x20c>
 800b8a8:	ed9f 0a74 	vldr	s0, [pc, #464]	@ 800ba7c <alignSensor+0x210>
 800b8ac:	6878      	ldr	r0, [r7, #4]
 800b8ae:	f000 fffb 	bl	800c8a8 <setTorque>
        encoderUpdate(&motor->magEncoder);
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	4618      	mov	r0, r3
 800b8b6:	f000 fccf 	bl	800c258 <encoderUpdate>
        delay(2);
 800b8ba:	2002      	movs	r0, #2
 800b8bc:	f002 f884 	bl	800d9c8 <delay>
    for (int i = 0; i <= 500; i++)
 800b8c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b8c2:	3301      	adds	r3, #1
 800b8c4:	627b      	str	r3, [r7, #36]	@ 0x24
 800b8c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b8c8:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800b8cc:	ddd5      	ble.n	800b87a <alignSensor+0xe>
    }
    encoderUpdate(&motor->magEncoder);
 800b8ce:	687b      	ldr	r3, [r7, #4]
 800b8d0:	4618      	mov	r0, r3
 800b8d2:	f000 fcc1 	bl	800c258 <encoderUpdate>
    float mid_angle = motor->magEncoder.fullAngle;
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	695b      	ldr	r3, [r3, #20]
 800b8da:	61fb      	str	r3, [r7, #28]
    // move one electrical revolution backwards
    for (int i = 500; i >= 0; i--)
 800b8dc:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 800b8e0:	623b      	str	r3, [r7, #32]
 800b8e2:	e025      	b.n	800b930 <alignSensor+0xc4>
    {
        float angle = _3PI_2 + _2PI * i / 500.0f;
 800b8e4:	6a3b      	ldr	r3, [r7, #32]
 800b8e6:	ee07 3a90 	vmov	s15, r3
 800b8ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b8ee:	ed9f 7a5f 	vldr	s14, [pc, #380]	@ 800ba6c <alignSensor+0x200>
 800b8f2:	ee27 7a87 	vmul.f32	s14, s15, s14
 800b8f6:	eddf 6a5e 	vldr	s13, [pc, #376]	@ 800ba70 <alignSensor+0x204>
 800b8fa:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b8fe:	ed9f 7a5d 	vldr	s14, [pc, #372]	@ 800ba74 <alignSensor+0x208>
 800b902:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b906:	edc7 7a03 	vstr	s15, [r7, #12]
        setTorque(motor, OPEN_LOOP_TORQUE, 0, angle);
 800b90a:	ed97 1a03 	vldr	s2, [r7, #12]
 800b90e:	eddf 0a5a 	vldr	s1, [pc, #360]	@ 800ba78 <alignSensor+0x20c>
 800b912:	ed9f 0a5a 	vldr	s0, [pc, #360]	@ 800ba7c <alignSensor+0x210>
 800b916:	6878      	ldr	r0, [r7, #4]
 800b918:	f000 ffc6 	bl	800c8a8 <setTorque>
        encoderUpdate(&motor->magEncoder);
 800b91c:	687b      	ldr	r3, [r7, #4]
 800b91e:	4618      	mov	r0, r3
 800b920:	f000 fc9a 	bl	800c258 <encoderUpdate>
        delay(2);
 800b924:	2002      	movs	r0, #2
 800b926:	f002 f84f 	bl	800d9c8 <delay>
    for (int i = 500; i >= 0; i--)
 800b92a:	6a3b      	ldr	r3, [r7, #32]
 800b92c:	3b01      	subs	r3, #1
 800b92e:	623b      	str	r3, [r7, #32]
 800b930:	6a3b      	ldr	r3, [r7, #32]
 800b932:	2b00      	cmp	r3, #0
 800b934:	dad6      	bge.n	800b8e4 <alignSensor+0x78>
    }
    encoderUpdate(&motor->magEncoder);
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	4618      	mov	r0, r3
 800b93a:	f000 fc8d 	bl	800c258 <encoderUpdate>
    float end_angle = motor->magEncoder.fullAngle;
 800b93e:	687b      	ldr	r3, [r7, #4]
 800b940:	695b      	ldr	r3, [r3, #20]
 800b942:	61bb      	str	r3, [r7, #24]
    // setPhaseVoltage(0, 0, 0);
    delay(200);
 800b944:	20c8      	movs	r0, #200	@ 0xc8
 800b946:	f002 f83f 	bl	800d9c8 <delay>

    // determine the direction the sensor moved
    float moved = fabs(mid_angle - end_angle);
 800b94a:	ed97 7a07 	vldr	s14, [r7, #28]
 800b94e:	edd7 7a06 	vldr	s15, [r7, #24]
 800b952:	ee77 7a67 	vsub.f32	s15, s14, s15
 800b956:	eef0 7ae7 	vabs.f32	s15, s15
 800b95a:	edc7 7a05 	vstr	s15, [r7, #20]
    if (moved < MIN_ANGLE_DETECT_MOVEMENT)
 800b95e:	edd7 7a05 	vldr	s15, [r7, #20]
 800b962:	ed9f 7a47 	vldr	s14, [pc, #284]	@ 800ba80 <alignSensor+0x214>
 800b966:	eef4 7ac7 	vcmpe.f32	s15, s14
 800b96a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b96e:	d503      	bpl.n	800b978 <alignSensor+0x10c>
    { // minimum angle to detect movement
        FOC_log("Failed to notice movement\n");
 800b970:	4844      	ldr	r0, [pc, #272]	@ (800ba84 <alignSensor+0x218>)
 800b972:	f001 fccd 	bl	800d310 <FOC_log>
        return 0; // failed calibration
 800b976:	e075      	b.n	800ba64 <alignSensor+0x1f8>
    }
    else if (mid_angle < end_angle)
 800b978:	ed97 7a07 	vldr	s14, [r7, #28]
 800b97c:	edd7 7a06 	vldr	s15, [r7, #24]
 800b980:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b984:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b988:	d507      	bpl.n	800b99a <alignSensor+0x12e>
    {
        FOC_log("sensor_direction==CCW\n");
 800b98a:	483f      	ldr	r0, [pc, #252]	@ (800ba88 <alignSensor+0x21c>)
 800b98c:	f001 fcc0 	bl	800d310 <FOC_log>
        motor->magEncoder.direction = CCW;
 800b990:	687b      	ldr	r3, [r7, #4]
 800b992:	22ff      	movs	r2, #255	@ 0xff
 800b994:	f883 2020 	strb.w	r2, [r3, #32]
 800b998:	e006      	b.n	800b9a8 <alignSensor+0x13c>
    }
    else
    {
        FOC_log("sensor_direction==CW\n");
 800b99a:	483c      	ldr	r0, [pc, #240]	@ (800ba8c <alignSensor+0x220>)
 800b99c:	f001 fcb8 	bl	800d310 <FOC_log>
        motor->magEncoder.direction = CW;
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	2201      	movs	r2, #1
 800b9a4:	f883 2020 	strb.w	r2, [r3, #32]
    }
    // check pole pair number
    bool pp_check_result = !(fabs(moved * motor->pole_pairs - _2PI) > 0.5f); // 0.5f is arbitrary number it can be lower or higher!
 800b9a8:	687b      	ldr	r3, [r7, #4]
 800b9aa:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800b9ae:	ee07 3a90 	vmov	s15, r3
 800b9b2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800b9b6:	edd7 7a05 	vldr	s15, [r7, #20]
 800b9ba:	ee67 7a27 	vmul.f32	s15, s14, s15
 800b9be:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 800ba6c <alignSensor+0x200>
 800b9c2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800b9c6:	eef0 7ae7 	vabs.f32	s15, s15
 800b9ca:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800b9ce:	eef4 7ac7 	vcmpe.f32	s15, s14
 800b9d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b9d6:	bfcc      	ite	gt
 800b9d8:	2301      	movgt	r3, #1
 800b9da:	2300      	movle	r3, #0
 800b9dc:	b2db      	uxtb	r3, r3
 800b9de:	f083 0301 	eor.w	r3, r3, #1
 800b9e2:	b2db      	uxtb	r3, r3
 800b9e4:	74fb      	strb	r3, [r7, #19]
    if (pp_check_result == false)
 800b9e6:	7cfb      	ldrb	r3, [r7, #19]
 800b9e8:	2b00      	cmp	r3, #0
 800b9ea:	d10f      	bne.n	800ba0c <alignSensor+0x1a0>
    {
        FOC_log("PP check: fail - estimated pp: \n", _2PI / moved);
 800b9ec:	ed9f 7a1f 	vldr	s14, [pc, #124]	@ 800ba6c <alignSensor+0x200>
 800b9f0:	edd7 7a05 	vldr	s15, [r7, #20]
 800b9f4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800b9f8:	ee16 0a90 	vmov	r0, s13
 800b9fc:	f7f4 fdcc 	bl	8000598 <__aeabi_f2d>
 800ba00:	4602      	mov	r2, r0
 800ba02:	460b      	mov	r3, r1
 800ba04:	4822      	ldr	r0, [pc, #136]	@ (800ba90 <alignSensor+0x224>)
 800ba06:	f001 fc83 	bl	800d310 <FOC_log>
 800ba0a:	e002      	b.n	800ba12 <alignSensor+0x1a6>
    }
    else
    {
        FOC_log("PP check: OK!\n");
 800ba0c:	4821      	ldr	r0, [pc, #132]	@ (800ba94 <alignSensor+0x228>)
 800ba0e:	f001 fc7f 	bl	800d310 <FOC_log>
    }

    // align the electrical phases of the motor and sensor
    // set angle -90(270 = 3PI/2) degrees
    goToZeroElecAngle(motor);
 800ba12:	6878      	ldr	r0, [r7, #4]
 800ba14:	f7ff ff10 	bl	800b838 <goToZeroElecAngle>
    // read the sensor
    encoderUpdate(&motor->magEncoder);
 800ba18:	687b      	ldr	r3, [r7, #4]
 800ba1a:	4618      	mov	r0, r3
 800ba1c:	f000 fc1c 	bl	800c258 <encoderUpdate>
    // get the current zero electric angle
    motor->zeroElectricAngleOffSet = 0;
 800ba20:	687b      	ldr	r3, [r7, #4]
 800ba22:	f04f 0200 	mov.w	r2, #0
 800ba26:	635a      	str	r2, [r3, #52]	@ 0x34
    getElecAngle(motor);
 800ba28:	6878      	ldr	r0, [r7, #4]
 800ba2a:	f000 f839 	bl	800baa0 <getElecAngle>
    motor->zeroElectricAngleOffSet = motor->angle_el;
 800ba2e:	687b      	ldr	r3, [r7, #4]
 800ba30:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800ba32:	687b      	ldr	r3, [r7, #4]
 800ba34:	635a      	str	r2, [r3, #52]	@ 0x34
    // zero_electric_angle =  _normalizeAngle(_electricalAngle(sensor_direction*sensor->getAngle(), pole_pairs));
    // delay(20);
    // encoderUpdate(&motor->magEncoder);
    getElecAngle(motor);
 800ba36:	6878      	ldr	r0, [r7, #4]
 800ba38:	f000 f832 	bl	800baa0 <getElecAngle>
    // motor->zeroElectricAngleOffSet = 0;
    // FOC_log("[zeroAngleOffset]:%f  [zeroAngle]:%f\r\n", motor->zeroElectricAngleOffSet, motor->angle_el);
    FOC_log("[zeroAngleOffset]:%f\n", motor->zeroElectricAngleOffSet);
 800ba3c:	687b      	ldr	r3, [r7, #4]
 800ba3e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ba40:	4618      	mov	r0, r3
 800ba42:	f7f4 fda9 	bl	8000598 <__aeabi_f2d>
 800ba46:	4602      	mov	r2, r0
 800ba48:	460b      	mov	r3, r1
 800ba4a:	4813      	ldr	r0, [pc, #76]	@ (800ba98 <alignSensor+0x22c>)
 800ba4c:	f001 fc60 	bl	800d310 <FOC_log>
    FOC_log("[zeroAngle]:%f\n", motor->angle_el);
 800ba50:	687b      	ldr	r3, [r7, #4]
 800ba52:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ba54:	4618      	mov	r0, r3
 800ba56:	f7f4 fd9f 	bl	8000598 <__aeabi_f2d>
 800ba5a:	4602      	mov	r2, r0
 800ba5c:	460b      	mov	r3, r1
 800ba5e:	480f      	ldr	r0, [pc, #60]	@ (800ba9c <alignSensor+0x230>)
 800ba60:	f001 fc56 	bl	800d310 <FOC_log>
    // // make sure the angle_el is about zero

    // delay(200);
}
 800ba64:	3728      	adds	r7, #40	@ 0x28
 800ba66:	46bd      	mov	sp, r7
 800ba68:	bd80      	pop	{r7, pc}
 800ba6a:	bf00      	nop
 800ba6c:	40c90fdb 	.word	0x40c90fdb
 800ba70:	43fa0000 	.word	0x43fa0000
 800ba74:	4096cbe4 	.word	0x4096cbe4
 800ba78:	00000000 	.word	0x00000000
 800ba7c:	405db3d7 	.word	0x405db3d7
 800ba80:	3d7ecfa9 	.word	0x3d7ecfa9
 800ba84:	08012730 	.word	0x08012730
 800ba88:	0801274c 	.word	0x0801274c
 800ba8c:	08012764 	.word	0x08012764
 800ba90:	0801277c 	.word	0x0801277c
 800ba94:	080127a0 	.word	0x080127a0
 800ba98:	080127b0 	.word	0x080127b0
 800ba9c:	080127c8 	.word	0x080127c8

0800baa0 <getElecAngle>:

void getElecAngle(BldcMotor *motor)
{
 800baa0:	b580      	push	{r7, lr}
 800baa2:	b082      	sub	sp, #8
 800baa4:	af00      	add	r7, sp, #0
 800baa6:	6078      	str	r0, [r7, #4]
    motor->angle_el = _normalizeAngle(motor->magEncoder.direction * motor->pole_pairs * motor->magEncoder.shaftAngle - motor->zeroElectricAngleOffSet);
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	f993 3020 	ldrsb.w	r3, [r3, #32]
 800baae:	461a      	mov	r2, r3
 800bab0:	687b      	ldr	r3, [r7, #4]
 800bab2:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800bab6:	fb02 f303 	mul.w	r3, r2, r3
 800baba:	ee07 3a90 	vmov	s15, r3
 800babe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	edd3 7a04 	vldr	s15, [r3, #16]
 800bac8:	ee27 7a27 	vmul.f32	s14, s14, s15
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 800bad2:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bad6:	eeb0 0a67 	vmov.f32	s0, s15
 800bada:	f000 fd5d 	bl	800c598 <_normalizeAngle>
 800bade:	eef0 7a40 	vmov.f32	s15, s0
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	edc3 7a0f 	vstr	s15, [r3, #60]	@ 0x3c
}
 800bae8:	bf00      	nop
 800baea:	3708      	adds	r7, #8
 800baec:	46bd      	mov	sp, r7
 800baee:	bd80      	pop	{r7, pc}

0800baf0 <foc>:

void foc(BldcMotor *motor, uint32_t adc_a, uint32_t adc_b)
{
 800baf0:	b580      	push	{r7, lr}
 800baf2:	b088      	sub	sp, #32
 800baf4:	af00      	add	r7, sp, #0
 800baf6:	60f8      	str	r0, [r7, #12]
 800baf8:	60b9      	str	r1, [r7, #8]
 800bafa:	607a      	str	r2, [r7, #4]

    if (motor->state == MOTOR_CALIBRATE)
 800bafc:	68fb      	ldr	r3, [r7, #12]
 800bafe:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bb02:	2b00      	cmp	r3, #0
 800bb04:	d111      	bne.n	800bb2a <foc+0x3a>
    {
        getCurrentOffsets(motor, adc_a, adc_b, 100);
 800bb06:	2364      	movs	r3, #100	@ 0x64
 800bb08:	687a      	ldr	r2, [r7, #4]
 800bb0a:	68b9      	ldr	r1, [r7, #8]
 800bb0c:	68f8      	ldr	r0, [r7, #12]
 800bb0e:	f000 f9ab 	bl	800be68 <getCurrentOffsets>
        alignSensor(motor);
 800bb12:	68f8      	ldr	r0, [r7, #12]
 800bb14:	f7ff feaa 	bl	800b86c <alignSensor>
        motor->state = MOTOR_READY;
 800bb18:	68fb      	ldr	r3, [r7, #12]
 800bb1a:	2201      	movs	r2, #1
 800bb1c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        motor->stopPwm();
 800bb20:	68fb      	ldr	r3, [r7, #12]
 800bb22:	f8d3 3138 	ldr.w	r3, [r3, #312]	@ 0x138
 800bb26:	4798      	blx	r3
                break;
            }
            setTorque(motor, motor->Uq, motor->Ud, motor->angle_el);
        }
    }
}
 800bb28:	e191      	b.n	800be4e <foc+0x35e>
        getPhaseCurrents(motor, adc_a, adc_b);
 800bb2a:	687a      	ldr	r2, [r7, #4]
 800bb2c:	68b9      	ldr	r1, [r7, #8]
 800bb2e:	68f8      	ldr	r0, [r7, #12]
 800bb30:	f000 fa6e 	bl	800c010 <getPhaseCurrents>
        getABCurrents(motor);
 800bb34:	68f8      	ldr	r0, [r7, #12]
 800bb36:	f000 fafd 	bl	800c134 <getABCurrents>
        getDQCurrents(motor);
 800bb3a:	68f8      	ldr	r0, [r7, #12]
 800bb3c:	f000 fb20 	bl	800c180 <getDQCurrents>
        motor->Iq = lpfOperator(&motor->IqFilter, motor->Iq);
 800bb40:	68fb      	ldr	r3, [r7, #12]
 800bb42:	f103 02f0 	add.w	r2, r3, #240	@ 0xf0
 800bb46:	68fb      	ldr	r3, [r7, #12]
 800bb48:	edd3 7a17 	vldr	s15, [r3, #92]	@ 0x5c
 800bb4c:	eeb0 0a67 	vmov.f32	s0, s15
 800bb50:	4610      	mov	r0, r2
 800bb52:	f000 fc19 	bl	800c388 <lpfOperator>
 800bb56:	eef0 7a40 	vmov.f32	s15, s0
 800bb5a:	68fb      	ldr	r3, [r7, #12]
 800bb5c:	edc3 7a17 	vstr	s15, [r3, #92]	@ 0x5c
        motor->Id = lpfOperator(&motor->IdFilter, motor->Id);
 800bb60:	68fb      	ldr	r3, [r7, #12]
 800bb62:	f103 02fc 	add.w	r2, r3, #252	@ 0xfc
 800bb66:	68fb      	ldr	r3, [r7, #12]
 800bb68:	edd3 7a16 	vldr	s15, [r3, #88]	@ 0x58
 800bb6c:	eeb0 0a67 	vmov.f32	s0, s15
 800bb70:	4610      	mov	r0, r2
 800bb72:	f000 fc09 	bl	800c388 <lpfOperator>
 800bb76:	eef0 7a40 	vmov.f32	s15, s0
 800bb7a:	68fb      	ldr	r3, [r7, #12]
 800bb7c:	edc3 7a16 	vstr	s15, [r3, #88]	@ 0x58
        encoderUpdate(&motor->magEncoder);
 800bb80:	68fb      	ldr	r3, [r7, #12]
 800bb82:	4618      	mov	r0, r3
 800bb84:	f000 fb68 	bl	800c258 <encoderUpdate>
        motor->magEncoder.velocity = lpfOperator(&motor->velocityFilter, motor->magEncoder.velocity);
 800bb88:	68fb      	ldr	r3, [r7, #12]
 800bb8a:	f503 7284 	add.w	r2, r3, #264	@ 0x108
 800bb8e:	68fb      	ldr	r3, [r7, #12]
 800bb90:	edd3 7a06 	vldr	s15, [r3, #24]
 800bb94:	eeb0 0a67 	vmov.f32	s0, s15
 800bb98:	4610      	mov	r0, r2
 800bb9a:	f000 fbf5 	bl	800c388 <lpfOperator>
 800bb9e:	eef0 7a40 	vmov.f32	s15, s0
 800bba2:	68fb      	ldr	r3, [r7, #12]
 800bba4:	edc3 7a06 	vstr	s15, [r3, #24]
        getElecAngle(motor);
 800bba8:	68f8      	ldr	r0, [r7, #12]
 800bbaa:	f7ff ff79 	bl	800baa0 <getElecAngle>
        if (motor->state == MOTOR_READY)
 800bbae:	68fb      	ldr	r3, [r7, #12]
 800bbb0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bbb4:	2b01      	cmp	r3, #1
 800bbb6:	f000 814a 	beq.w	800be4e <foc+0x35e>
        else if (motor->state == MOTOR_START)
 800bbba:	68fb      	ldr	r3, [r7, #12]
 800bbbc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800bbc0:	2b02      	cmp	r3, #2
 800bbc2:	f040 8144 	bne.w	800be4e <foc+0x35e>
            switch (motor->controlType)
 800bbc6:	68fb      	ldr	r3, [r7, #12]
 800bbc8:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800bbcc:	2b03      	cmp	r3, #3
 800bbce:	f200 812c 	bhi.w	800be2a <foc+0x33a>
 800bbd2:	a201      	add	r2, pc, #4	@ (adr r2, 800bbd8 <foc+0xe8>)
 800bbd4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bbd8:	0800bbe9 	.word	0x0800bbe9
 800bbdc:	0800bc53 	.word	0x0800bc53
 800bbe0:	0800bca9 	.word	0x0800bca9
 800bbe4:	0800bd59 	.word	0x0800bd59
                if (motor->torqueType == VOLTAGE)
 800bbe8:	68fb      	ldr	r3, [r7, #12]
 800bbea:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 800bbee:	2b00      	cmp	r3, #0
 800bbf0:	d105      	bne.n	800bbfe <foc+0x10e>
                    motor->Uq = motor->target;
 800bbf2:	68fb      	ldr	r3, [r7, #12]
 800bbf4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800bbf6:	68fb      	ldr	r3, [r7, #12]
 800bbf8:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
                break;
 800bbfc:	e115      	b.n	800be2a <foc+0x33a>
                    motor->Ud = pidOperator(&motor->pidId, 0 - motor->Id);
 800bbfe:	68fb      	ldr	r3, [r7, #12]
 800bc00:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 800bc04:	68fb      	ldr	r3, [r7, #12]
 800bc06:	edd3 7a16 	vldr	s15, [r3, #88]	@ 0x58
 800bc0a:	ed9f 7a93 	vldr	s14, [pc, #588]	@ 800be58 <foc+0x368>
 800bc0e:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bc12:	eeb0 0a67 	vmov.f32	s0, s15
 800bc16:	4610      	mov	r0, r2
 800bc18:	f000 fd3e 	bl	800c698 <pidOperator>
 800bc1c:	eef0 7a40 	vmov.f32	s15, s0
 800bc20:	68fb      	ldr	r3, [r7, #12]
 800bc22:	edc3 7a45 	vstr	s15, [r3, #276]	@ 0x114
                    motor->Uq = pidOperator(&motor->pidIq, motor->target - motor->Iq);
 800bc26:	68fb      	ldr	r3, [r7, #12]
 800bc28:	f103 0284 	add.w	r2, r3, #132	@ 0x84
 800bc2c:	68fb      	ldr	r3, [r7, #12]
 800bc2e:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 800bc32:	68fb      	ldr	r3, [r7, #12]
 800bc34:	edd3 7a17 	vldr	s15, [r3, #92]	@ 0x5c
 800bc38:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bc3c:	eeb0 0a67 	vmov.f32	s0, s15
 800bc40:	4610      	mov	r0, r2
 800bc42:	f000 fd29 	bl	800c698 <pidOperator>
 800bc46:	eef0 7a40 	vmov.f32	s15, s0
 800bc4a:	68fb      	ldr	r3, [r7, #12]
 800bc4c:	edc3 7a46 	vstr	s15, [r3, #280]	@ 0x118
                break;
 800bc50:	e0eb      	b.n	800be2a <foc+0x33a>
                shaftAngle = _normalizeAngle(shaftAngle + motor->target * motor->Ts);
 800bc52:	68fb      	ldr	r3, [r7, #12]
 800bc54:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 800bc58:	68fb      	ldr	r3, [r7, #12]
 800bc5a:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800bc5e:	ee27 7a27 	vmul.f32	s14, s14, s15
 800bc62:	4b7e      	ldr	r3, [pc, #504]	@ (800be5c <foc+0x36c>)
 800bc64:	edd3 7a00 	vldr	s15, [r3]
 800bc68:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bc6c:	eeb0 0a67 	vmov.f32	s0, s15
 800bc70:	f000 fc92 	bl	800c598 <_normalizeAngle>
 800bc74:	eef0 7a40 	vmov.f32	s15, s0
 800bc78:	4b78      	ldr	r3, [pc, #480]	@ (800be5c <foc+0x36c>)
 800bc7a:	edc3 7a00 	vstr	s15, [r3]
                motor->angle_el = _electricalAngle(shaftAngle, motor->pole_pairs);
 800bc7e:	4b77      	ldr	r3, [pc, #476]	@ (800be5c <foc+0x36c>)
 800bc80:	edd3 7a00 	vldr	s15, [r3]
 800bc84:	68fb      	ldr	r3, [r7, #12]
 800bc86:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800bc8a:	4618      	mov	r0, r3
 800bc8c:	eeb0 0a67 	vmov.f32	s0, s15
 800bc90:	f000 fcb8 	bl	800c604 <_electricalAngle>
 800bc94:	eef0 7a40 	vmov.f32	s15, s0
 800bc98:	68fb      	ldr	r3, [r7, #12]
 800bc9a:	edc3 7a0f 	vstr	s15, [r3, #60]	@ 0x3c
                motor->Uq = OPEN_LOOP_TORQUE;
 800bc9e:	68fb      	ldr	r3, [r7, #12]
 800bca0:	4a6f      	ldr	r2, [pc, #444]	@ (800be60 <foc+0x370>)
 800bca2:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
                break;
 800bca6:	e0c0      	b.n	800be2a <foc+0x33a>
                if (motor->torqueType == VOLTAGE)
 800bca8:	68fb      	ldr	r3, [r7, #12]
 800bcaa:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 800bcae:	2b00      	cmp	r3, #0
 800bcb0:	d116      	bne.n	800bce0 <foc+0x1f0>
                    velocityErr = motor->target - motor->magEncoder.velocity;
 800bcb2:	68fb      	ldr	r3, [r7, #12]
 800bcb4:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 800bcb8:	68fb      	ldr	r3, [r7, #12]
 800bcba:	edd3 7a06 	vldr	s15, [r3, #24]
 800bcbe:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bcc2:	edc7 7a04 	vstr	s15, [r7, #16]
                    motor->Uq = pidOperator(&motor->velocityPID, velocityErr);
 800bcc6:	68fb      	ldr	r3, [r7, #12]
 800bcc8:	33a8      	adds	r3, #168	@ 0xa8
 800bcca:	ed97 0a04 	vldr	s0, [r7, #16]
 800bcce:	4618      	mov	r0, r3
 800bcd0:	f000 fce2 	bl	800c698 <pidOperator>
 800bcd4:	eef0 7a40 	vmov.f32	s15, s0
 800bcd8:	68fb      	ldr	r3, [r7, #12]
 800bcda:	edc3 7a46 	vstr	s15, [r3, #280]	@ 0x118
                break;
 800bcde:	e0a4      	b.n	800be2a <foc+0x33a>
                    velocityErr = motor->target - motor->magEncoder.velocity;
 800bce0:	68fb      	ldr	r3, [r7, #12]
 800bce2:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 800bce6:	68fb      	ldr	r3, [r7, #12]
 800bce8:	edd3 7a06 	vldr	s15, [r3, #24]
 800bcec:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bcf0:	edc7 7a04 	vstr	s15, [r7, #16]
                    IqRef = pidOperator(&motor->velocityPID, velocityErr);
 800bcf4:	68fb      	ldr	r3, [r7, #12]
 800bcf6:	33a8      	adds	r3, #168	@ 0xa8
 800bcf8:	ed97 0a04 	vldr	s0, [r7, #16]
 800bcfc:	4618      	mov	r0, r3
 800bcfe:	f000 fccb 	bl	800c698 <pidOperator>
 800bd02:	ed87 0a05 	vstr	s0, [r7, #20]
                    motor->Ud = pidOperator(&motor->pidId, 0 - motor->Id);
 800bd06:	68fb      	ldr	r3, [r7, #12]
 800bd08:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 800bd0c:	68fb      	ldr	r3, [r7, #12]
 800bd0e:	edd3 7a16 	vldr	s15, [r3, #88]	@ 0x58
 800bd12:	ed9f 7a51 	vldr	s14, [pc, #324]	@ 800be58 <foc+0x368>
 800bd16:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bd1a:	eeb0 0a67 	vmov.f32	s0, s15
 800bd1e:	4610      	mov	r0, r2
 800bd20:	f000 fcba 	bl	800c698 <pidOperator>
 800bd24:	eef0 7a40 	vmov.f32	s15, s0
 800bd28:	68fb      	ldr	r3, [r7, #12]
 800bd2a:	edc3 7a45 	vstr	s15, [r3, #276]	@ 0x114
                    motor->Uq = pidOperator(&motor->pidIq, IqRef - motor->Iq);
 800bd2e:	68fb      	ldr	r3, [r7, #12]
 800bd30:	f103 0284 	add.w	r2, r3, #132	@ 0x84
 800bd34:	68fb      	ldr	r3, [r7, #12]
 800bd36:	edd3 7a17 	vldr	s15, [r3, #92]	@ 0x5c
 800bd3a:	ed97 7a05 	vldr	s14, [r7, #20]
 800bd3e:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bd42:	eeb0 0a67 	vmov.f32	s0, s15
 800bd46:	4610      	mov	r0, r2
 800bd48:	f000 fca6 	bl	800c698 <pidOperator>
 800bd4c:	eef0 7a40 	vmov.f32	s15, s0
 800bd50:	68fb      	ldr	r3, [r7, #12]
 800bd52:	edc3 7a46 	vstr	s15, [r3, #280]	@ 0x118
                break;
 800bd56:	e068      	b.n	800be2a <foc+0x33a>
                if (motor->torqueType == VOLTAGE)
 800bd58:	68fb      	ldr	r3, [r7, #12]
 800bd5a:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 800bd5e:	2b00      	cmp	r3, #0
 800bd60:	d116      	bne.n	800bd90 <foc+0x2a0>
                    angleErr = motor->target - motor->magEncoder.fullAngle;
 800bd62:	68fb      	ldr	r3, [r7, #12]
 800bd64:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 800bd68:	68fb      	ldr	r3, [r7, #12]
 800bd6a:	edd3 7a05 	vldr	s15, [r3, #20]
 800bd6e:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bd72:	edc7 7a07 	vstr	s15, [r7, #28]
                    motor->Uq = pidOperator(&motor->anglePID, angleErr);
 800bd76:	68fb      	ldr	r3, [r7, #12]
 800bd78:	33cc      	adds	r3, #204	@ 0xcc
 800bd7a:	ed97 0a07 	vldr	s0, [r7, #28]
 800bd7e:	4618      	mov	r0, r3
 800bd80:	f000 fc8a 	bl	800c698 <pidOperator>
 800bd84:	eef0 7a40 	vmov.f32	s15, s0
 800bd88:	68fb      	ldr	r3, [r7, #12]
 800bd8a:	edc3 7a46 	vstr	s15, [r3, #280]	@ 0x118
                break;
 800bd8e:	e04b      	b.n	800be28 <foc+0x338>
                    angleErr = motor->target - motor->magEncoder.fullAngle;
 800bd90:	68fb      	ldr	r3, [r7, #12]
 800bd92:	ed93 7a0c 	vldr	s14, [r3, #48]	@ 0x30
 800bd96:	68fb      	ldr	r3, [r7, #12]
 800bd98:	edd3 7a05 	vldr	s15, [r3, #20]
 800bd9c:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bda0:	edc7 7a07 	vstr	s15, [r7, #28]
                    velocityRef = pidOperator(&motor->anglePID, angleErr);
 800bda4:	68fb      	ldr	r3, [r7, #12]
 800bda6:	33cc      	adds	r3, #204	@ 0xcc
 800bda8:	ed97 0a07 	vldr	s0, [r7, #28]
 800bdac:	4618      	mov	r0, r3
 800bdae:	f000 fc73 	bl	800c698 <pidOperator>
 800bdb2:	ed87 0a06 	vstr	s0, [r7, #24]
                    IqRef = pidOperator(&motor->velocityPID, velocityRef - motor->magEncoder.velocity);
 800bdb6:	68fb      	ldr	r3, [r7, #12]
 800bdb8:	f103 02a8 	add.w	r2, r3, #168	@ 0xa8
 800bdbc:	68fb      	ldr	r3, [r7, #12]
 800bdbe:	edd3 7a06 	vldr	s15, [r3, #24]
 800bdc2:	ed97 7a06 	vldr	s14, [r7, #24]
 800bdc6:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bdca:	eeb0 0a67 	vmov.f32	s0, s15
 800bdce:	4610      	mov	r0, r2
 800bdd0:	f000 fc62 	bl	800c698 <pidOperator>
 800bdd4:	ed87 0a05 	vstr	s0, [r7, #20]
                    motor->Ud = pidOperator(&motor->pidId, 0 - motor->Id);
 800bdd8:	68fb      	ldr	r3, [r7, #12]
 800bdda:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 800bdde:	68fb      	ldr	r3, [r7, #12]
 800bde0:	edd3 7a16 	vldr	s15, [r3, #88]	@ 0x58
 800bde4:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 800be58 <foc+0x368>
 800bde8:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bdec:	eeb0 0a67 	vmov.f32	s0, s15
 800bdf0:	4610      	mov	r0, r2
 800bdf2:	f000 fc51 	bl	800c698 <pidOperator>
 800bdf6:	eef0 7a40 	vmov.f32	s15, s0
 800bdfa:	68fb      	ldr	r3, [r7, #12]
 800bdfc:	edc3 7a45 	vstr	s15, [r3, #276]	@ 0x114
                    motor->Uq = pidOperator(&motor->pidIq, IqRef - motor->Iq);
 800be00:	68fb      	ldr	r3, [r7, #12]
 800be02:	f103 0284 	add.w	r2, r3, #132	@ 0x84
 800be06:	68fb      	ldr	r3, [r7, #12]
 800be08:	edd3 7a17 	vldr	s15, [r3, #92]	@ 0x5c
 800be0c:	ed97 7a05 	vldr	s14, [r7, #20]
 800be10:	ee77 7a67 	vsub.f32	s15, s14, s15
 800be14:	eeb0 0a67 	vmov.f32	s0, s15
 800be18:	4610      	mov	r0, r2
 800be1a:	f000 fc3d 	bl	800c698 <pidOperator>
 800be1e:	eef0 7a40 	vmov.f32	s15, s0
 800be22:	68fb      	ldr	r3, [r7, #12]
 800be24:	edc3 7a46 	vstr	s15, [r3, #280]	@ 0x118
                break;
 800be28:	bf00      	nop
            setTorque(motor, motor->Uq, motor->Ud, motor->angle_el);
 800be2a:	68fb      	ldr	r3, [r7, #12]
 800be2c:	edd3 7a46 	vldr	s15, [r3, #280]	@ 0x118
 800be30:	68fb      	ldr	r3, [r7, #12]
 800be32:	ed93 7a45 	vldr	s14, [r3, #276]	@ 0x114
 800be36:	68fb      	ldr	r3, [r7, #12]
 800be38:	edd3 6a0f 	vldr	s13, [r3, #60]	@ 0x3c
 800be3c:	eeb0 1a66 	vmov.f32	s2, s13
 800be40:	eef0 0a47 	vmov.f32	s1, s14
 800be44:	eeb0 0a67 	vmov.f32	s0, s15
 800be48:	68f8      	ldr	r0, [r7, #12]
 800be4a:	f000 fd2d 	bl	800c8a8 <setTorque>
}
 800be4e:	bf00      	nop
 800be50:	3720      	adds	r7, #32
 800be52:	46bd      	mov	sp, r7
 800be54:	bd80      	pop	{r7, pc}
 800be56:	bf00      	nop
 800be58:	00000000 	.word	0x00000000
 800be5c:	200006f8 	.word	0x200006f8
 800be60:	405db3d7 	.word	0x405db3d7
 800be64:	00000000 	.word	0x00000000

0800be68 <getCurrentOffsets>:
#include "math_utils.h"
#include "comm.h"

// Function finding zero offsets of the ADC
void getCurrentOffsets(BldcMotor *motor, uint32_t adc_a, uint32_t adc_b, uint32_t rounds)
{
 800be68:	b5b0      	push	{r4, r5, r7, lr}
 800be6a:	b086      	sub	sp, #24
 800be6c:	af00      	add	r7, sp, #0
 800be6e:	60f8      	str	r0, [r7, #12]
 800be70:	60b9      	str	r1, [r7, #8]
 800be72:	607a      	str	r2, [r7, #4]
 800be74:	603b      	str	r3, [r7, #0]
    // find adc offset = zero current voltage
    motor->offset_ia = 0;
 800be76:	68fb      	ldr	r3, [r7, #12]
 800be78:	f04f 0200 	mov.w	r2, #0
 800be7c:	641a      	str	r2, [r3, #64]	@ 0x40
    motor->offset_ib = 0;
 800be7e:	68fb      	ldr	r3, [r7, #12]
 800be80:	f04f 0200 	mov.w	r2, #0
 800be84:	645a      	str	r2, [r3, #68]	@ 0x44
    // read the adc voltage  times ( arbitrary number )
    for (int i = 0; i < rounds; i++)
 800be86:	2300      	movs	r3, #0
 800be88:	617b      	str	r3, [r7, #20]
 800be8a:	e076      	b.n	800bf7a <getCurrentOffsets+0x112>
    {
        motor->offset_ia += ADC_2_CURRENT(adc_a);
 800be8c:	68fb      	ldr	r3, [r7, #12]
 800be8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800be90:	4618      	mov	r0, r3
 800be92:	f7f4 fb81 	bl	8000598 <__aeabi_f2d>
 800be96:	4604      	mov	r4, r0
 800be98:	460d      	mov	r5, r1
 800be9a:	68bb      	ldr	r3, [r7, #8]
 800be9c:	ee07 3a90 	vmov	s15, r3
 800bea0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bea4:	ed9f 7a56 	vldr	s14, [pc, #344]	@ 800c000 <getCurrentOffsets+0x198>
 800bea8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800beac:	ee17 0a90 	vmov	r0, s15
 800beb0:	f7f4 fb72 	bl	8000598 <__aeabi_f2d>
 800beb4:	a34c      	add	r3, pc, #304	@ (adr r3, 800bfe8 <getCurrentOffsets+0x180>)
 800beb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800beba:	f7f4 fcef 	bl	800089c <__aeabi_ddiv>
 800bebe:	4602      	mov	r2, r0
 800bec0:	460b      	mov	r3, r1
 800bec2:	4610      	mov	r0, r2
 800bec4:	4619      	mov	r1, r3
 800bec6:	a34a      	add	r3, pc, #296	@ (adr r3, 800bff0 <getCurrentOffsets+0x188>)
 800bec8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800becc:	f7f4 fce6 	bl	800089c <__aeabi_ddiv>
 800bed0:	4602      	mov	r2, r0
 800bed2:	460b      	mov	r3, r1
 800bed4:	4610      	mov	r0, r2
 800bed6:	4619      	mov	r1, r3
 800bed8:	a347      	add	r3, pc, #284	@ (adr r3, 800bff8 <getCurrentOffsets+0x190>)
 800beda:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bede:	f7f4 fcdd 	bl	800089c <__aeabi_ddiv>
 800bee2:	4602      	mov	r2, r0
 800bee4:	460b      	mov	r3, r1
 800bee6:	4620      	mov	r0, r4
 800bee8:	4629      	mov	r1, r5
 800beea:	f7f4 f9f7 	bl	80002dc <__adddf3>
 800beee:	4602      	mov	r2, r0
 800bef0:	460b      	mov	r3, r1
 800bef2:	4610      	mov	r0, r2
 800bef4:	4619      	mov	r1, r3
 800bef6:	f7f4 fe9f 	bl	8000c38 <__aeabi_d2f>
 800befa:	4602      	mov	r2, r0
 800befc:	68fb      	ldr	r3, [r7, #12]
 800befe:	641a      	str	r2, [r3, #64]	@ 0x40
        motor->offset_ib += ADC_2_CURRENT(adc_b);
 800bf00:	68fb      	ldr	r3, [r7, #12]
 800bf02:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bf04:	4618      	mov	r0, r3
 800bf06:	f7f4 fb47 	bl	8000598 <__aeabi_f2d>
 800bf0a:	4604      	mov	r4, r0
 800bf0c:	460d      	mov	r5, r1
 800bf0e:	687b      	ldr	r3, [r7, #4]
 800bf10:	ee07 3a90 	vmov	s15, r3
 800bf14:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800bf18:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 800c000 <getCurrentOffsets+0x198>
 800bf1c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800bf20:	ee17 0a90 	vmov	r0, s15
 800bf24:	f7f4 fb38 	bl	8000598 <__aeabi_f2d>
 800bf28:	a32f      	add	r3, pc, #188	@ (adr r3, 800bfe8 <getCurrentOffsets+0x180>)
 800bf2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf2e:	f7f4 fcb5 	bl	800089c <__aeabi_ddiv>
 800bf32:	4602      	mov	r2, r0
 800bf34:	460b      	mov	r3, r1
 800bf36:	4610      	mov	r0, r2
 800bf38:	4619      	mov	r1, r3
 800bf3a:	a32d      	add	r3, pc, #180	@ (adr r3, 800bff0 <getCurrentOffsets+0x188>)
 800bf3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf40:	f7f4 fcac 	bl	800089c <__aeabi_ddiv>
 800bf44:	4602      	mov	r2, r0
 800bf46:	460b      	mov	r3, r1
 800bf48:	4610      	mov	r0, r2
 800bf4a:	4619      	mov	r1, r3
 800bf4c:	a32a      	add	r3, pc, #168	@ (adr r3, 800bff8 <getCurrentOffsets+0x190>)
 800bf4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf52:	f7f4 fca3 	bl	800089c <__aeabi_ddiv>
 800bf56:	4602      	mov	r2, r0
 800bf58:	460b      	mov	r3, r1
 800bf5a:	4620      	mov	r0, r4
 800bf5c:	4629      	mov	r1, r5
 800bf5e:	f7f4 f9bd 	bl	80002dc <__adddf3>
 800bf62:	4602      	mov	r2, r0
 800bf64:	460b      	mov	r3, r1
 800bf66:	4610      	mov	r0, r2
 800bf68:	4619      	mov	r1, r3
 800bf6a:	f7f4 fe65 	bl	8000c38 <__aeabi_d2f>
 800bf6e:	4602      	mov	r2, r0
 800bf70:	68fb      	ldr	r3, [r7, #12]
 800bf72:	645a      	str	r2, [r3, #68]	@ 0x44
    for (int i = 0; i < rounds; i++)
 800bf74:	697b      	ldr	r3, [r7, #20]
 800bf76:	3301      	adds	r3, #1
 800bf78:	617b      	str	r3, [r7, #20]
 800bf7a:	697b      	ldr	r3, [r7, #20]
 800bf7c:	683a      	ldr	r2, [r7, #0]
 800bf7e:	429a      	cmp	r2, r3
 800bf80:	d884      	bhi.n	800be8c <getCurrentOffsets+0x24>
    }
    // calculate the mean offsets
    motor->offset_ia = motor->offset_ia / rounds;
 800bf82:	68fb      	ldr	r3, [r7, #12]
 800bf84:	edd3 6a10 	vldr	s13, [r3, #64]	@ 0x40
 800bf88:	683b      	ldr	r3, [r7, #0]
 800bf8a:	ee07 3a90 	vmov	s15, r3
 800bf8e:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800bf92:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bf96:	68fb      	ldr	r3, [r7, #12]
 800bf98:	edc3 7a10 	vstr	s15, [r3, #64]	@ 0x40
    motor->offset_ib = motor->offset_ib / rounds;
 800bf9c:	68fb      	ldr	r3, [r7, #12]
 800bf9e:	edd3 6a11 	vldr	s13, [r3, #68]	@ 0x44
 800bfa2:	683b      	ldr	r3, [r7, #0]
 800bfa4:	ee07 3a90 	vmov	s15, r3
 800bfa8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800bfac:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bfb0:	68fb      	ldr	r3, [r7, #12]
 800bfb2:	edc3 7a11 	vstr	s15, [r3, #68]	@ 0x44

    // FOC_log("[offset_ia]:%f  [offset_ib]:%f\r\n", motor->offset_ia, motor->offset_ib);
    // printf("[offset_ia]:%f  [offset_ib]:%f\r\n", motor->offset_ia, motor->offset_ib);
    FOC_log("[offset_ia]:%f\r\n", motor->offset_ia);
 800bfb6:	68fb      	ldr	r3, [r7, #12]
 800bfb8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800bfba:	4618      	mov	r0, r3
 800bfbc:	f7f4 faec 	bl	8000598 <__aeabi_f2d>
 800bfc0:	4602      	mov	r2, r0
 800bfc2:	460b      	mov	r3, r1
 800bfc4:	480f      	ldr	r0, [pc, #60]	@ (800c004 <getCurrentOffsets+0x19c>)
 800bfc6:	f001 f9a3 	bl	800d310 <FOC_log>
    FOC_log("[offset_ib]:%f\r\n", motor->offset_ib);
 800bfca:	68fb      	ldr	r3, [r7, #12]
 800bfcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bfce:	4618      	mov	r0, r3
 800bfd0:	f7f4 fae2 	bl	8000598 <__aeabi_f2d>
 800bfd4:	4602      	mov	r2, r0
 800bfd6:	460b      	mov	r3, r1
 800bfd8:	480b      	ldr	r0, [pc, #44]	@ (800c008 <getCurrentOffsets+0x1a0>)
 800bfda:	f001 f999 	bl	800d310 <FOC_log>
    // _dbg_printf("[offset_ia]:%f  [offset_ib]:%f\r\n", motor->offset_ia, motor->offset_ib);
}
 800bfde:	bf00      	nop
 800bfe0:	3718      	adds	r7, #24
 800bfe2:	46bd      	mov	sp, r7
 800bfe4:	bdb0      	pop	{r4, r5, r7, pc}
 800bfe6:	bf00      	nop
 800bfe8:	00000000 	.word	0x00000000
 800bfec:	40affe00 	.word	0x40affe00
 800bff0:	40000000 	.word	0x40000000
 800bff4:	3f747ae1 	.word	0x3f747ae1
 800bff8:	a0000000 	.word	0xa0000000
 800bffc:	401d554c 	.word	0x401d554c
 800c000:	40533333 	.word	0x40533333
 800c004:	080127d8 	.word	0x080127d8
 800c008:	080127ec 	.word	0x080127ec
 800c00c:	00000000 	.word	0x00000000

0800c010 <getPhaseCurrents>:

// read all three phase currents (if possible 2 or 3)
void getPhaseCurrents(BldcMotor *motor, uint32_t adc_a, uint32_t adc_b)
{
 800c010:	b5b0      	push	{r4, r5, r7, lr}
 800c012:	b084      	sub	sp, #16
 800c014:	af00      	add	r7, sp, #0
 800c016:	60f8      	str	r0, [r7, #12]
 800c018:	60b9      	str	r1, [r7, #8]
 800c01a:	607a      	str	r2, [r7, #4]
    motor->Ia = ADC_2_CURRENT(adc_a) - motor->offset_ia; // amps
 800c01c:	68bb      	ldr	r3, [r7, #8]
 800c01e:	ee07 3a90 	vmov	s15, r3
 800c022:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800c026:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 800c130 <getPhaseCurrents+0x120>
 800c02a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c02e:	ee17 0a90 	vmov	r0, s15
 800c032:	f7f4 fab1 	bl	8000598 <__aeabi_f2d>
 800c036:	a338      	add	r3, pc, #224	@ (adr r3, 800c118 <getPhaseCurrents+0x108>)
 800c038:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c03c:	f7f4 fc2e 	bl	800089c <__aeabi_ddiv>
 800c040:	4602      	mov	r2, r0
 800c042:	460b      	mov	r3, r1
 800c044:	4610      	mov	r0, r2
 800c046:	4619      	mov	r1, r3
 800c048:	a335      	add	r3, pc, #212	@ (adr r3, 800c120 <getPhaseCurrents+0x110>)
 800c04a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c04e:	f7f4 fc25 	bl	800089c <__aeabi_ddiv>
 800c052:	4602      	mov	r2, r0
 800c054:	460b      	mov	r3, r1
 800c056:	4610      	mov	r0, r2
 800c058:	4619      	mov	r1, r3
 800c05a:	a333      	add	r3, pc, #204	@ (adr r3, 800c128 <getPhaseCurrents+0x118>)
 800c05c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c060:	f7f4 fc1c 	bl	800089c <__aeabi_ddiv>
 800c064:	4602      	mov	r2, r0
 800c066:	460b      	mov	r3, r1
 800c068:	4614      	mov	r4, r2
 800c06a:	461d      	mov	r5, r3
 800c06c:	68fb      	ldr	r3, [r7, #12]
 800c06e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c070:	4618      	mov	r0, r3
 800c072:	f7f4 fa91 	bl	8000598 <__aeabi_f2d>
 800c076:	4602      	mov	r2, r0
 800c078:	460b      	mov	r3, r1
 800c07a:	4620      	mov	r0, r4
 800c07c:	4629      	mov	r1, r5
 800c07e:	f7f4 f92b 	bl	80002d8 <__aeabi_dsub>
 800c082:	4602      	mov	r2, r0
 800c084:	460b      	mov	r3, r1
 800c086:	4610      	mov	r0, r2
 800c088:	4619      	mov	r1, r3
 800c08a:	f7f4 fdd5 	bl	8000c38 <__aeabi_d2f>
 800c08e:	4602      	mov	r2, r0
 800c090:	68fb      	ldr	r3, [r7, #12]
 800c092:	649a      	str	r2, [r3, #72]	@ 0x48
    motor->Ib = ADC_2_CURRENT(adc_b) - motor->offset_ib;
 800c094:	687b      	ldr	r3, [r7, #4]
 800c096:	ee07 3a90 	vmov	s15, r3
 800c09a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800c09e:	ed9f 7a24 	vldr	s14, [pc, #144]	@ 800c130 <getPhaseCurrents+0x120>
 800c0a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c0a6:	ee17 0a90 	vmov	r0, s15
 800c0aa:	f7f4 fa75 	bl	8000598 <__aeabi_f2d>
 800c0ae:	a31a      	add	r3, pc, #104	@ (adr r3, 800c118 <getPhaseCurrents+0x108>)
 800c0b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c0b4:	f7f4 fbf2 	bl	800089c <__aeabi_ddiv>
 800c0b8:	4602      	mov	r2, r0
 800c0ba:	460b      	mov	r3, r1
 800c0bc:	4610      	mov	r0, r2
 800c0be:	4619      	mov	r1, r3
 800c0c0:	a317      	add	r3, pc, #92	@ (adr r3, 800c120 <getPhaseCurrents+0x110>)
 800c0c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c0c6:	f7f4 fbe9 	bl	800089c <__aeabi_ddiv>
 800c0ca:	4602      	mov	r2, r0
 800c0cc:	460b      	mov	r3, r1
 800c0ce:	4610      	mov	r0, r2
 800c0d0:	4619      	mov	r1, r3
 800c0d2:	a315      	add	r3, pc, #84	@ (adr r3, 800c128 <getPhaseCurrents+0x118>)
 800c0d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c0d8:	f7f4 fbe0 	bl	800089c <__aeabi_ddiv>
 800c0dc:	4602      	mov	r2, r0
 800c0de:	460b      	mov	r3, r1
 800c0e0:	4614      	mov	r4, r2
 800c0e2:	461d      	mov	r5, r3
 800c0e4:	68fb      	ldr	r3, [r7, #12]
 800c0e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c0e8:	4618      	mov	r0, r3
 800c0ea:	f7f4 fa55 	bl	8000598 <__aeabi_f2d>
 800c0ee:	4602      	mov	r2, r0
 800c0f0:	460b      	mov	r3, r1
 800c0f2:	4620      	mov	r0, r4
 800c0f4:	4629      	mov	r1, r5
 800c0f6:	f7f4 f8ef 	bl	80002d8 <__aeabi_dsub>
 800c0fa:	4602      	mov	r2, r0
 800c0fc:	460b      	mov	r3, r1
 800c0fe:	4610      	mov	r0, r2
 800c100:	4619      	mov	r1, r3
 800c102:	f7f4 fd99 	bl	8000c38 <__aeabi_d2f>
 800c106:	4602      	mov	r2, r0
 800c108:	68fb      	ldr	r3, [r7, #12]
 800c10a:	64da      	str	r2, [r3, #76]	@ 0x4c
}
 800c10c:	bf00      	nop
 800c10e:	3710      	adds	r7, #16
 800c110:	46bd      	mov	sp, r7
 800c112:	bdb0      	pop	{r4, r5, r7, pc}
 800c114:	f3af 8000 	nop.w
 800c118:	00000000 	.word	0x00000000
 800c11c:	40affe00 	.word	0x40affe00
 800c120:	40000000 	.word	0x40000000
 800c124:	3f747ae1 	.word	0x3f747ae1
 800c128:	a0000000 	.word	0xa0000000
 800c12c:	401d554c 	.word	0x401d554c
 800c130:	40533333 	.word	0x40533333

0800c134 <getABCurrents>:
// Ibeta = 1/sqrt(3) * Ia + 1/sqrt(3) * 2Ib
/*============================================================================*/
//   calculating Alpha Beta currents from phase currents
//   - function calculating Clarke transform of the phase currents
void getABCurrents(BldcMotor *motor)
{
 800c134:	b480      	push	{r7}
 800c136:	b083      	sub	sp, #12
 800c138:	af00      	add	r7, sp, #0
 800c13a:	6078      	str	r0, [r7, #4]
    motor->Ialpha = motor->Ia;
 800c13c:	687b      	ldr	r3, [r7, #4]
 800c13e:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800c140:	687b      	ldr	r3, [r7, #4]
 800c142:	651a      	str	r2, [r3, #80]	@ 0x50
    motor->Ibeta = _1_SQRT3 * motor->Ia + _2_SQRT3 * motor->Ib;
 800c144:	687b      	ldr	r3, [r7, #4]
 800c146:	edd3 7a12 	vldr	s15, [r3, #72]	@ 0x48
 800c14a:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 800c178 <getABCurrents+0x44>
 800c14e:	ee27 7a87 	vmul.f32	s14, s15, s14
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	edd3 7a13 	vldr	s15, [r3, #76]	@ 0x4c
 800c158:	eddf 6a08 	vldr	s13, [pc, #32]	@ 800c17c <getABCurrents+0x48>
 800c15c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800c160:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c164:	687b      	ldr	r3, [r7, #4]
 800c166:	edc3 7a15 	vstr	s15, [r3, #84]	@ 0x54
}
 800c16a:	bf00      	nop
 800c16c:	370c      	adds	r7, #12
 800c16e:	46bd      	mov	sp, r7
 800c170:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c174:	4770      	bx	lr
 800c176:	bf00      	nop
 800c178:	3f13cd3a 	.word	0x3f13cd3a
 800c17c:	3f93cd3a 	.word	0x3f93cd3a

0800c180 <getDQCurrents>:
/*============================================================================*/
// function used with the foc algorihtm
//   calculating D and Q currents from Alpha Beta currents and electrical angle
//   - function calculating Clarke transform of the phase currents
void getDQCurrents(BldcMotor *motor)
{
 800c180:	b580      	push	{r7, lr}
 800c182:	b084      	sub	sp, #16
 800c184:	af00      	add	r7, sp, #0
 800c186:	6078      	str	r0, [r7, #4]
    float ct;
    float st;
    _sincos(motor->angle_el, &st, &ct);
 800c188:	687b      	ldr	r3, [r7, #4]
 800c18a:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 800c18e:	f107 020c 	add.w	r2, r7, #12
 800c192:	f107 0308 	add.w	r3, r7, #8
 800c196:	4611      	mov	r1, r2
 800c198:	4618      	mov	r0, r3
 800c19a:	eeb0 0a67 	vmov.f32	s0, s15
 800c19e:	f000 f9db 	bl	800c558 <_sincos>
    motor->Id = motor->Ialpha * ct + motor->Ibeta * st;
 800c1a2:	687b      	ldr	r3, [r7, #4]
 800c1a4:	ed93 7a14 	vldr	s14, [r3, #80]	@ 0x50
 800c1a8:	edd7 7a03 	vldr	s15, [r7, #12]
 800c1ac:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c1b0:	687b      	ldr	r3, [r7, #4]
 800c1b2:	edd3 6a15 	vldr	s13, [r3, #84]	@ 0x54
 800c1b6:	edd7 7a02 	vldr	s15, [r7, #8]
 800c1ba:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c1be:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c1c2:	687b      	ldr	r3, [r7, #4]
 800c1c4:	edc3 7a16 	vstr	s15, [r3, #88]	@ 0x58
    motor->Iq = motor->Ibeta * ct - motor->Ialpha * st;
 800c1c8:	687b      	ldr	r3, [r7, #4]
 800c1ca:	ed93 7a15 	vldr	s14, [r3, #84]	@ 0x54
 800c1ce:	edd7 7a03 	vldr	s15, [r7, #12]
 800c1d2:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c1d6:	687b      	ldr	r3, [r7, #4]
 800c1d8:	edd3 6a14 	vldr	s13, [r3, #80]	@ 0x50
 800c1dc:	edd7 7a02 	vldr	s15, [r7, #8]
 800c1e0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c1e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 800c1e8:	687b      	ldr	r3, [r7, #4]
 800c1ea:	edc3 7a17 	vstr	s15, [r3, #92]	@ 0x5c
 800c1ee:	bf00      	nop
 800c1f0:	3710      	adds	r7, #16
 800c1f2:	46bd      	mov	sp, r7
 800c1f4:	bd80      	pop	{r7, pc}

0800c1f6 <encoderInit>:

#include "encoder.h"
#include "math_utils.h"
void encoderInit(MagEncoder *encoder, float _Ts, float (*_getRawAngle)(void))
{
 800c1f6:	b480      	push	{r7}
 800c1f8:	b085      	sub	sp, #20
 800c1fa:	af00      	add	r7, sp, #0
 800c1fc:	60f8      	str	r0, [r7, #12]
 800c1fe:	ed87 0a02 	vstr	s0, [r7, #8]
 800c202:	6079      	str	r1, [r7, #4]
    encoder->angle_prev = 0;
 800c204:	68fb      	ldr	r3, [r7, #12]
 800c206:	f04f 0200 	mov.w	r2, #0
 800c20a:	601a      	str	r2, [r3, #0]
    encoder->vel_angle_prev = 0;
 800c20c:	68fb      	ldr	r3, [r7, #12]
 800c20e:	f04f 0200 	mov.w	r2, #0
 800c212:	605a      	str	r2, [r3, #4]
    encoder->full_rotations = 0;
 800c214:	68fb      	ldr	r3, [r7, #12]
 800c216:	2200      	movs	r2, #0
 800c218:	609a      	str	r2, [r3, #8]
    encoder->vel_full_rotations = 0;
 800c21a:	68fb      	ldr	r3, [r7, #12]
 800c21c:	2200      	movs	r2, #0
 800c21e:	60da      	str	r2, [r3, #12]
    encoder->shaftAngle = 0;
 800c220:	68fb      	ldr	r3, [r7, #12]
 800c222:	f04f 0200 	mov.w	r2, #0
 800c226:	611a      	str	r2, [r3, #16]
    encoder->fullAngle = 0;
 800c228:	68fb      	ldr	r3, [r7, #12]
 800c22a:	f04f 0200 	mov.w	r2, #0
 800c22e:	615a      	str	r2, [r3, #20]
    encoder->velocity = 0;
 800c230:	68fb      	ldr	r3, [r7, #12]
 800c232:	f04f 0200 	mov.w	r2, #0
 800c236:	619a      	str	r2, [r3, #24]
    encoder->Ts = _Ts;
 800c238:	68fb      	ldr	r3, [r7, #12]
 800c23a:	68ba      	ldr	r2, [r7, #8]
 800c23c:	61da      	str	r2, [r3, #28]
    encoder->getRawAngle = _getRawAngle;
 800c23e:	68fb      	ldr	r3, [r7, #12]
 800c240:	687a      	ldr	r2, [r7, #4]
 800c242:	625a      	str	r2, [r3, #36]	@ 0x24
    encoder->direction = UNKNOWN;
 800c244:	68fb      	ldr	r3, [r7, #12]
 800c246:	2200      	movs	r2, #0
 800c248:	f883 2020 	strb.w	r2, [r3, #32]
}
 800c24c:	bf00      	nop
 800c24e:	3714      	adds	r7, #20
 800c250:	46bd      	mov	sp, r7
 800c252:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c256:	4770      	bx	lr

0800c258 <encoderUpdate>:

void encoderUpdate(MagEncoder *encoder)
{
 800c258:	b580      	push	{r7, lr}
 800c25a:	b084      	sub	sp, #16
 800c25c:	af00      	add	r7, sp, #0
 800c25e:	6078      	str	r0, [r7, #4]
    float val = encoder->getRawAngle();
 800c260:	687b      	ldr	r3, [r7, #4]
 800c262:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c264:	4798      	blx	r3
 800c266:	ed87 0a03 	vstr	s0, [r7, #12]

    float d_angle = val - encoder->angle_prev;
 800c26a:	687b      	ldr	r3, [r7, #4]
 800c26c:	edd3 7a00 	vldr	s15, [r3]
 800c270:	ed97 7a03 	vldr	s14, [r7, #12]
 800c274:	ee77 7a67 	vsub.f32	s15, s14, s15
 800c278:	edc7 7a02 	vstr	s15, [r7, #8]
    // 圈数检测
    if (abs(d_angle) > (0.8f * _2PI))
 800c27c:	edd7 7a02 	vldr	s15, [r7, #8]
 800c280:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c284:	ee17 3a90 	vmov	r3, s15
 800c288:	2b00      	cmp	r3, #0
 800c28a:	bfb8      	it	lt
 800c28c:	425b      	neglt	r3, r3
 800c28e:	ee07 3a90 	vmov	s15, r3
 800c292:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c296:	ed9f 7a2e 	vldr	s14, [pc, #184]	@ 800c350 <encoderUpdate+0xf8>
 800c29a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800c29e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2a2:	dd0f      	ble.n	800c2c4 <encoderUpdate+0x6c>
        encoder->full_rotations += (d_angle > 0) ? -1 : 1;
 800c2a4:	687b      	ldr	r3, [r7, #4]
 800c2a6:	689b      	ldr	r3, [r3, #8]
 800c2a8:	edd7 7a02 	vldr	s15, [r7, #8]
 800c2ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c2b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2b4:	dd02      	ble.n	800c2bc <encoderUpdate+0x64>
 800c2b6:	f04f 32ff 	mov.w	r2, #4294967295
 800c2ba:	e000      	b.n	800c2be <encoderUpdate+0x66>
 800c2bc:	2201      	movs	r2, #1
 800c2be:	441a      	add	r2, r3
 800c2c0:	687b      	ldr	r3, [r7, #4]
 800c2c2:	609a      	str	r2, [r3, #8]

    // angle
    encoder->angle_prev = val;
 800c2c4:	687b      	ldr	r3, [r7, #4]
 800c2c6:	68fa      	ldr	r2, [r7, #12]
 800c2c8:	601a      	str	r2, [r3, #0]
    encoder->shaftAngle = val;
 800c2ca:	687b      	ldr	r3, [r7, #4]
 800c2cc:	68fa      	ldr	r2, [r7, #12]
 800c2ce:	611a      	str	r2, [r3, #16]
    encoder->fullAngle = (float)encoder->full_rotations * _2PI + encoder->angle_prev;
 800c2d0:	687b      	ldr	r3, [r7, #4]
 800c2d2:	689b      	ldr	r3, [r3, #8]
 800c2d4:	ee07 3a90 	vmov	s15, r3
 800c2d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c2dc:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 800c354 <encoderUpdate+0xfc>
 800c2e0:	ee27 7a87 	vmul.f32	s14, s15, s14
 800c2e4:	687b      	ldr	r3, [r7, #4]
 800c2e6:	edd3 7a00 	vldr	s15, [r3]
 800c2ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c2ee:	687b      	ldr	r3, [r7, #4]
 800c2f0:	edc3 7a05 	vstr	s15, [r3, #20]

    // 速度计算
    val = ((float)(encoder->full_rotations - encoder->vel_full_rotations) * _2PI + (encoder->angle_prev - encoder->vel_angle_prev)) / encoder->Ts;
 800c2f4:	687b      	ldr	r3, [r7, #4]
 800c2f6:	689a      	ldr	r2, [r3, #8]
 800c2f8:	687b      	ldr	r3, [r7, #4]
 800c2fa:	68db      	ldr	r3, [r3, #12]
 800c2fc:	1ad3      	subs	r3, r2, r3
 800c2fe:	ee07 3a90 	vmov	s15, r3
 800c302:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c306:	ed9f 7a13 	vldr	s14, [pc, #76]	@ 800c354 <encoderUpdate+0xfc>
 800c30a:	ee27 7a87 	vmul.f32	s14, s15, s14
 800c30e:	687b      	ldr	r3, [r7, #4]
 800c310:	edd3 6a00 	vldr	s13, [r3]
 800c314:	687b      	ldr	r3, [r7, #4]
 800c316:	edd3 7a01 	vldr	s15, [r3, #4]
 800c31a:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800c31e:	ee77 6a27 	vadd.f32	s13, s14, s15
 800c322:	687b      	ldr	r3, [r7, #4]
 800c324:	ed93 7a07 	vldr	s14, [r3, #28]
 800c328:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c32c:	edc7 7a03 	vstr	s15, [r7, #12]
    // 保存变量以待将来使用
    encoder->vel_angle_prev = encoder->angle_prev;
 800c330:	687b      	ldr	r3, [r7, #4]
 800c332:	681a      	ldr	r2, [r3, #0]
 800c334:	687b      	ldr	r3, [r7, #4]
 800c336:	605a      	str	r2, [r3, #4]
    encoder->vel_full_rotations = encoder->full_rotations;
 800c338:	687b      	ldr	r3, [r7, #4]
 800c33a:	689a      	ldr	r2, [r3, #8]
 800c33c:	687b      	ldr	r3, [r7, #4]
 800c33e:	60da      	str	r2, [r3, #12]
    encoder->velocity = val;
 800c340:	687b      	ldr	r3, [r7, #4]
 800c342:	68fa      	ldr	r2, [r7, #12]
 800c344:	619a      	str	r2, [r3, #24]
}
 800c346:	bf00      	nop
 800c348:	3710      	adds	r7, #16
 800c34a:	46bd      	mov	sp, r7
 800c34c:	bd80      	pop	{r7, pc}
 800c34e:	bf00      	nop
 800c350:	40a0d97c 	.word	0x40a0d97c
 800c354:	40c90fdb 	.word	0x40c90fdb

0800c358 <lpfInit>:
#include "lowpass_filter.h"

void lpfInit(LowPassFilter *filter, const float _Tf, const float _dt)
{
 800c358:	b480      	push	{r7}
 800c35a:	b085      	sub	sp, #20
 800c35c:	af00      	add	r7, sp, #0
 800c35e:	60f8      	str	r0, [r7, #12]
 800c360:	ed87 0a02 	vstr	s0, [r7, #8]
 800c364:	edc7 0a01 	vstr	s1, [r7, #4]
    filter->Tf = _Tf;
 800c368:	68fb      	ldr	r3, [r7, #12]
 800c36a:	68ba      	ldr	r2, [r7, #8]
 800c36c:	601a      	str	r2, [r3, #0]
    filter->dt = _dt;
 800c36e:	68fb      	ldr	r3, [r7, #12]
 800c370:	687a      	ldr	r2, [r7, #4]
 800c372:	605a      	str	r2, [r3, #4]
    filter->y_prev = 0;
 800c374:	68fb      	ldr	r3, [r7, #12]
 800c376:	f04f 0200 	mov.w	r2, #0
 800c37a:	609a      	str	r2, [r3, #8]
}
 800c37c:	bf00      	nop
 800c37e:	3714      	adds	r7, #20
 800c380:	46bd      	mov	sp, r7
 800c382:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c386:	4770      	bx	lr

0800c388 <lpfOperator>:

float lpfOperator(LowPassFilter *filter, float x)
{
 800c388:	b480      	push	{r7}
 800c38a:	b085      	sub	sp, #20
 800c38c:	af00      	add	r7, sp, #0
 800c38e:	6078      	str	r0, [r7, #4]
 800c390:	ed87 0a00 	vstr	s0, [r7]

    float alpha = filter->Tf / (filter->Tf + filter->dt);
 800c394:	687b      	ldr	r3, [r7, #4]
 800c396:	edd3 6a00 	vldr	s13, [r3]
 800c39a:	687b      	ldr	r3, [r7, #4]
 800c39c:	ed93 7a00 	vldr	s14, [r3]
 800c3a0:	687b      	ldr	r3, [r7, #4]
 800c3a2:	edd3 7a01 	vldr	s15, [r3, #4]
 800c3a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c3aa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c3ae:	edc7 7a03 	vstr	s15, [r7, #12]
    float y = alpha * filter->y_prev + (1.0f - alpha) * x;
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	ed93 7a02 	vldr	s14, [r3, #8]
 800c3b8:	edd7 7a03 	vldr	s15, [r7, #12]
 800c3bc:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c3c0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800c3c4:	edd7 7a03 	vldr	s15, [r7, #12]
 800c3c8:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800c3cc:	edd7 7a00 	vldr	s15, [r7]
 800c3d0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c3d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c3d8:	edc7 7a02 	vstr	s15, [r7, #8]
    filter->y_prev = y;
 800c3dc:	687b      	ldr	r3, [r7, #4]
 800c3de:	68ba      	ldr	r2, [r7, #8]
 800c3e0:	609a      	str	r2, [r3, #8]

    return y;
 800c3e2:	68bb      	ldr	r3, [r7, #8]
 800c3e4:	ee07 3a90 	vmov	s15, r3
}
 800c3e8:	eeb0 0a67 	vmov.f32	s0, s15
 800c3ec:	3714      	adds	r7, #20
 800c3ee:	46bd      	mov	sp, r7
 800c3f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3f4:	4770      	bx	lr
	...

0800c3f8 <_sin>:

// function approximating the sine calculation by using fixed size array
// uses a 65 element lookup table and interpolation
// thanks to @dekutree for his work on optimizing this
__attribute__((weak)) float _sin(float a)
{
 800c3f8:	b580      	push	{r7, lr}
 800c3fa:	b086      	sub	sp, #24
 800c3fc:	af00      	add	r7, sp, #0
 800c3fe:	ed87 0a01 	vstr	s0, [r7, #4]
  // 16bit integer array for sine lookup. interpolation is used for better precision
  // 16 bit precision on sine value, 8 bit fractional value for interpolation, 6bit LUT size
  // resulting precision compared to stdlib sine is 0.00006480 (RMS difference in range -PI,PI for 3217 steps)
  static uint16_t sine_array[65] = {0, 804, 1608, 2411, 3212, 4011, 4808, 5602, 6393, 7180, 7962, 8740, 9512, 10279, 11039, 11793, 12540, 13279, 14010, 14733, 15447, 16151, 16846, 17531, 18205, 18868, 19520, 20160, 20788, 21403, 22006, 22595, 23170, 23732, 24279, 24812, 25330, 25833, 26320, 26791, 27246, 27684, 28106, 28511, 28899, 29269, 29622, 29957, 30274, 30572, 30853, 31114, 31357, 31581, 31786, 31972, 32138, 32286, 32413, 32522, 32610, 32679, 32729, 32758, 32768};
  unsigned int i = (unsigned int)(a * (64 * 4 * 256.0 / _2PI));
 800c402:	6878      	ldr	r0, [r7, #4]
 800c404:	f7f4 f8c8 	bl	8000598 <__aeabi_f2d>
 800c408:	a339      	add	r3, pc, #228	@ (adr r3, 800c4f0 <_sin+0xf8>)
 800c40a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c40e:	f7f4 f91b 	bl	8000648 <__aeabi_dmul>
 800c412:	4602      	mov	r2, r0
 800c414:	460b      	mov	r3, r1
 800c416:	4610      	mov	r0, r2
 800c418:	4619      	mov	r1, r3
 800c41a:	f7f4 fbed 	bl	8000bf8 <__aeabi_d2uiz>
 800c41e:	4603      	mov	r3, r0
 800c420:	60fb      	str	r3, [r7, #12]
  int t1, t2, frac = i & 0xff;
 800c422:	68fb      	ldr	r3, [r7, #12]
 800c424:	b2db      	uxtb	r3, r3
 800c426:	60bb      	str	r3, [r7, #8]
  i = (i >> 8) & 0xff;
 800c428:	68fb      	ldr	r3, [r7, #12]
 800c42a:	0a1b      	lsrs	r3, r3, #8
 800c42c:	b2db      	uxtb	r3, r3
 800c42e:	60fb      	str	r3, [r7, #12]
  if (i < 64)
 800c430:	68fb      	ldr	r3, [r7, #12]
 800c432:	2b3f      	cmp	r3, #63	@ 0x3f
 800c434:	d80b      	bhi.n	800c44e <_sin+0x56>
  {
    t1 = sine_array[i];
 800c436:	4a2c      	ldr	r2, [pc, #176]	@ (800c4e8 <_sin+0xf0>)
 800c438:	68fb      	ldr	r3, [r7, #12]
 800c43a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c43e:	617b      	str	r3, [r7, #20]
    t2 = sine_array[i + 1];
 800c440:	68fb      	ldr	r3, [r7, #12]
 800c442:	3301      	adds	r3, #1
 800c444:	4a28      	ldr	r2, [pc, #160]	@ (800c4e8 <_sin+0xf0>)
 800c446:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c44a:	613b      	str	r3, [r7, #16]
 800c44c:	e033      	b.n	800c4b6 <_sin+0xbe>
  }
  else if (i < 128)
 800c44e:	68fb      	ldr	r3, [r7, #12]
 800c450:	2b7f      	cmp	r3, #127	@ 0x7f
 800c452:	d80e      	bhi.n	800c472 <_sin+0x7a>
  {
    t1 = sine_array[128 - i];
 800c454:	68fb      	ldr	r3, [r7, #12]
 800c456:	f1c3 0380 	rsb	r3, r3, #128	@ 0x80
 800c45a:	4a23      	ldr	r2, [pc, #140]	@ (800c4e8 <_sin+0xf0>)
 800c45c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c460:	617b      	str	r3, [r7, #20]
    t2 = sine_array[127 - i];
 800c462:	68fb      	ldr	r3, [r7, #12]
 800c464:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 800c468:	4a1f      	ldr	r2, [pc, #124]	@ (800c4e8 <_sin+0xf0>)
 800c46a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c46e:	613b      	str	r3, [r7, #16]
 800c470:	e021      	b.n	800c4b6 <_sin+0xbe>
  }
  else if (i < 192)
 800c472:	68fb      	ldr	r3, [r7, #12]
 800c474:	2bbf      	cmp	r3, #191	@ 0xbf
 800c476:	d80e      	bhi.n	800c496 <_sin+0x9e>
  {
    t1 = -sine_array[-128 + i];
 800c478:	68fb      	ldr	r3, [r7, #12]
 800c47a:	3b80      	subs	r3, #128	@ 0x80
 800c47c:	4a1a      	ldr	r2, [pc, #104]	@ (800c4e8 <_sin+0xf0>)
 800c47e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c482:	425b      	negs	r3, r3
 800c484:	617b      	str	r3, [r7, #20]
    t2 = -sine_array[-127 + i];
 800c486:	68fb      	ldr	r3, [r7, #12]
 800c488:	3b7f      	subs	r3, #127	@ 0x7f
 800c48a:	4a17      	ldr	r2, [pc, #92]	@ (800c4e8 <_sin+0xf0>)
 800c48c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c490:	425b      	negs	r3, r3
 800c492:	613b      	str	r3, [r7, #16]
 800c494:	e00f      	b.n	800c4b6 <_sin+0xbe>
  }
  else
  {
    t1 = -sine_array[256 - i];
 800c496:	68fb      	ldr	r3, [r7, #12]
 800c498:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 800c49c:	4a12      	ldr	r2, [pc, #72]	@ (800c4e8 <_sin+0xf0>)
 800c49e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c4a2:	425b      	negs	r3, r3
 800c4a4:	617b      	str	r3, [r7, #20]
    t2 = -sine_array[255 - i];
 800c4a6:	68fb      	ldr	r3, [r7, #12]
 800c4a8:	f1c3 03ff 	rsb	r3, r3, #255	@ 0xff
 800c4ac:	4a0e      	ldr	r2, [pc, #56]	@ (800c4e8 <_sin+0xf0>)
 800c4ae:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c4b2:	425b      	negs	r3, r3
 800c4b4:	613b      	str	r3, [r7, #16]
  }
  return (1.0f / 32768.0f) * (t1 + (((t2 - t1) * frac) >> 8));
 800c4b6:	693a      	ldr	r2, [r7, #16]
 800c4b8:	697b      	ldr	r3, [r7, #20]
 800c4ba:	1ad3      	subs	r3, r2, r3
 800c4bc:	68ba      	ldr	r2, [r7, #8]
 800c4be:	fb02 f303 	mul.w	r3, r2, r3
 800c4c2:	121a      	asrs	r2, r3, #8
 800c4c4:	697b      	ldr	r3, [r7, #20]
 800c4c6:	4413      	add	r3, r2
 800c4c8:	ee07 3a90 	vmov	s15, r3
 800c4cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c4d0:	ed9f 7a06 	vldr	s14, [pc, #24]	@ 800c4ec <_sin+0xf4>
 800c4d4:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 800c4d8:	eeb0 0a67 	vmov.f32	s0, s15
 800c4dc:	3718      	adds	r7, #24
 800c4de:	46bd      	mov	sp, r7
 800c4e0:	bd80      	pop	{r7, pc}
 800c4e2:	bf00      	nop
 800c4e4:	f3af 8000 	nop.w
 800c4e8:	2000000c 	.word	0x2000000c
 800c4ec:	38000000 	.word	0x38000000
 800c4f0:	6446f9b4 	.word	0x6446f9b4
 800c4f4:	40c45f30 	.word	0x40c45f30

0800c4f8 <_cos>:
// ~55us (float array)
// ~56us (int array)
// precision +-0.005
// it has to receive an angle in between 0 and 2PI
__attribute__((weak)) float _cos(float a)
{
 800c4f8:	b580      	push	{r7, lr}
 800c4fa:	b084      	sub	sp, #16
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	ed87 0a01 	vstr	s0, [r7, #4]
  float a_sin = a + _PI_2;
 800c502:	edd7 7a01 	vldr	s15, [r7, #4]
 800c506:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 800c550 <_cos+0x58>
 800c50a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800c50e:	edc7 7a03 	vstr	s15, [r7, #12]
  a_sin = a_sin > _2PI ? a_sin - _2PI : a_sin;
 800c512:	edd7 7a03 	vldr	s15, [r7, #12]
 800c516:	ed9f 7a0f 	vldr	s14, [pc, #60]	@ 800c554 <_cos+0x5c>
 800c51a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800c51e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c522:	dd06      	ble.n	800c532 <_cos+0x3a>
 800c524:	edd7 7a03 	vldr	s15, [r7, #12]
 800c528:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 800c554 <_cos+0x5c>
 800c52c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800c530:	e001      	b.n	800c536 <_cos+0x3e>
 800c532:	edd7 7a03 	vldr	s15, [r7, #12]
 800c536:	edc7 7a03 	vstr	s15, [r7, #12]
  return _sin(a_sin);
 800c53a:	ed97 0a03 	vldr	s0, [r7, #12]
 800c53e:	f7ff ff5b 	bl	800c3f8 <_sin>
 800c542:	eef0 7a40 	vmov.f32	s15, s0
}
 800c546:	eeb0 0a67 	vmov.f32	s0, s15
 800c54a:	3710      	adds	r7, #16
 800c54c:	46bd      	mov	sp, r7
 800c54e:	bd80      	pop	{r7, pc}
 800c550:	3fc90fdb 	.word	0x3fc90fdb
 800c554:	40c90fdb 	.word	0x40c90fdb

0800c558 <_sincos>:

__attribute__((weak)) void _sincos(float a, float *s, float *c)
{
 800c558:	b580      	push	{r7, lr}
 800c55a:	b084      	sub	sp, #16
 800c55c:	af00      	add	r7, sp, #0
 800c55e:	ed87 0a03 	vstr	s0, [r7, #12]
 800c562:	60b8      	str	r0, [r7, #8]
 800c564:	6079      	str	r1, [r7, #4]
  *s = _sin(a);
 800c566:	ed97 0a03 	vldr	s0, [r7, #12]
 800c56a:	f7ff ff45 	bl	800c3f8 <_sin>
 800c56e:	eef0 7a40 	vmov.f32	s15, s0
 800c572:	68bb      	ldr	r3, [r7, #8]
 800c574:	edc3 7a00 	vstr	s15, [r3]
  *c = _cos(a);
 800c578:	ed97 0a03 	vldr	s0, [r7, #12]
 800c57c:	f7ff ffbc 	bl	800c4f8 <_cos>
 800c580:	eef0 7a40 	vmov.f32	s15, s0
 800c584:	687b      	ldr	r3, [r7, #4]
 800c586:	edc3 7a00 	vstr	s15, [r3]
}
 800c58a:	bf00      	nop
 800c58c:	3710      	adds	r7, #16
 800c58e:	46bd      	mov	sp, r7
 800c590:	bd80      	pop	{r7, pc}
 800c592:	0000      	movs	r0, r0
 800c594:	0000      	movs	r0, r0
	...

0800c598 <_normalizeAngle>:
  return r;
}

// normalizing radian angle to [0,2PI]
__attribute__((weak)) float _normalizeAngle(float angle)
{
 800c598:	b580      	push	{r7, lr}
 800c59a:	b084      	sub	sp, #16
 800c59c:	af00      	add	r7, sp, #0
 800c59e:	ed87 0a01 	vstr	s0, [r7, #4]
  float a = fmod(angle, _2PI);
 800c5a2:	6878      	ldr	r0, [r7, #4]
 800c5a4:	f7f3 fff8 	bl	8000598 <__aeabi_f2d>
 800c5a8:	4602      	mov	r2, r0
 800c5aa:	460b      	mov	r3, r1
 800c5ac:	ed9f 1b12 	vldr	d1, [pc, #72]	@ 800c5f8 <_normalizeAngle+0x60>
 800c5b0:	ec43 2b10 	vmov	d0, r2, r3
 800c5b4:	f005 ff76 	bl	80124a4 <fmod>
 800c5b8:	ec53 2b10 	vmov	r2, r3, d0
 800c5bc:	4610      	mov	r0, r2
 800c5be:	4619      	mov	r1, r3
 800c5c0:	f7f4 fb3a 	bl	8000c38 <__aeabi_d2f>
 800c5c4:	4603      	mov	r3, r0
 800c5c6:	60fb      	str	r3, [r7, #12]
  return a >= 0 ? a : (a + _2PI);
 800c5c8:	edd7 7a03 	vldr	s15, [r7, #12]
 800c5cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c5d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5d4:	db02      	blt.n	800c5dc <_normalizeAngle+0x44>
 800c5d6:	edd7 7a03 	vldr	s15, [r7, #12]
 800c5da:	e005      	b.n	800c5e8 <_normalizeAngle+0x50>
 800c5dc:	edd7 7a03 	vldr	s15, [r7, #12]
 800c5e0:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 800c600 <_normalizeAngle+0x68>
 800c5e4:	ee77 7a87 	vadd.f32	s15, s15, s14
}
 800c5e8:	eeb0 0a67 	vmov.f32	s0, s15
 800c5ec:	3710      	adds	r7, #16
 800c5ee:	46bd      	mov	sp, r7
 800c5f0:	bd80      	pop	{r7, pc}
 800c5f2:	bf00      	nop
 800c5f4:	f3af 8000 	nop.w
 800c5f8:	60000000 	.word	0x60000000
 800c5fc:	401921fb 	.word	0x401921fb
 800c600:	40c90fdb 	.word	0x40c90fdb

0800c604 <_electricalAngle>:

// Electrical angle calculation
float _electricalAngle(float shaft_angle, int pole_pairs)
{
 800c604:	b480      	push	{r7}
 800c606:	b083      	sub	sp, #12
 800c608:	af00      	add	r7, sp, #0
 800c60a:	ed87 0a01 	vstr	s0, [r7, #4]
 800c60e:	6038      	str	r0, [r7, #0]
  return (shaft_angle * pole_pairs);
 800c610:	683b      	ldr	r3, [r7, #0]
 800c612:	ee07 3a90 	vmov	s15, r3
 800c616:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800c61a:	edd7 7a01 	vldr	s15, [r7, #4]
 800c61e:	ee67 7a27 	vmul.f32	s15, s14, s15
}
 800c622:	eeb0 0a67 	vmov.f32	s0, s15
 800c626:	370c      	adds	r7, #12
 800c628:	46bd      	mov	sp, r7
 800c62a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c62e:	4770      	bx	lr

0800c630 <pidInit>:
#include "pid.h"
#include "math_utils.h"

void pidInit(PidController *pidController, float _P, float _I, float _D, float _ramp, float _limit, float _Ts)
{
 800c630:	b480      	push	{r7}
 800c632:	b089      	sub	sp, #36	@ 0x24
 800c634:	af00      	add	r7, sp, #0
 800c636:	61f8      	str	r0, [r7, #28]
 800c638:	ed87 0a06 	vstr	s0, [r7, #24]
 800c63c:	edc7 0a05 	vstr	s1, [r7, #20]
 800c640:	ed87 1a04 	vstr	s2, [r7, #16]
 800c644:	edc7 1a03 	vstr	s3, [r7, #12]
 800c648:	ed87 2a02 	vstr	s4, [r7, #8]
 800c64c:	edc7 2a01 	vstr	s5, [r7, #4]
    pidController->P = _P;
 800c650:	69fb      	ldr	r3, [r7, #28]
 800c652:	69ba      	ldr	r2, [r7, #24]
 800c654:	601a      	str	r2, [r3, #0]
    pidController->I = _I;
 800c656:	69fb      	ldr	r3, [r7, #28]
 800c658:	697a      	ldr	r2, [r7, #20]
 800c65a:	605a      	str	r2, [r3, #4]
    pidController->D = _D;
 800c65c:	69fb      	ldr	r3, [r7, #28]
 800c65e:	693a      	ldr	r2, [r7, #16]
 800c660:	609a      	str	r2, [r3, #8]
    pidController->output_ramp = _ramp;
 800c662:	69fb      	ldr	r3, [r7, #28]
 800c664:	68fa      	ldr	r2, [r7, #12]
 800c666:	60da      	str	r2, [r3, #12]
    pidController->limit = _limit;
 800c668:	69fb      	ldr	r3, [r7, #28]
 800c66a:	68ba      	ldr	r2, [r7, #8]
 800c66c:	611a      	str	r2, [r3, #16]
    pidController->Ts = _Ts;
 800c66e:	69fb      	ldr	r3, [r7, #28]
 800c670:	687a      	ldr	r2, [r7, #4]
 800c672:	621a      	str	r2, [r3, #32]
    pidController->error_prev = 0;
 800c674:	69fb      	ldr	r3, [r7, #28]
 800c676:	f04f 0200 	mov.w	r2, #0
 800c67a:	615a      	str	r2, [r3, #20]
    pidController->output_prev = 0;
 800c67c:	69fb      	ldr	r3, [r7, #28]
 800c67e:	f04f 0200 	mov.w	r2, #0
 800c682:	619a      	str	r2, [r3, #24]
    pidController->integral_prev = 0;
 800c684:	69fb      	ldr	r3, [r7, #28]
 800c686:	f04f 0200 	mov.w	r2, #0
 800c68a:	61da      	str	r2, [r3, #28]
}
 800c68c:	bf00      	nop
 800c68e:	3724      	adds	r7, #36	@ 0x24
 800c690:	46bd      	mov	sp, r7
 800c692:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c696:	4770      	bx	lr

0800c698 <pidOperator>:

// PID controller function
float pidOperator(PidController *pidController, float error)
{
 800c698:	b480      	push	{r7}
 800c69a:	b08b      	sub	sp, #44	@ 0x2c
 800c69c:	af00      	add	r7, sp, #0
 800c69e:	6078      	str	r0, [r7, #4]
 800c6a0:	ed87 0a00 	vstr	s0, [r7]
    // u(s) = (P + I/s + Ds)e(s)
    // Discrete implementations
    // proportional part
    // u_p  = P *e(k)
    float proportional = pidController->P * error;
 800c6a4:	687b      	ldr	r3, [r7, #4]
 800c6a6:	edd3 7a00 	vldr	s15, [r3]
 800c6aa:	ed97 7a00 	vldr	s14, [r7]
 800c6ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c6b2:	edc7 7a08 	vstr	s15, [r7, #32]
    // Tustin transform of the integral part
    // u_ik = u_ik_1  + I*Ts/2*(ek + ek_1)
    float a = 0.5f * (error + pidController->error_prev);
 800c6b6:	687b      	ldr	r3, [r7, #4]
 800c6b8:	ed93 7a05 	vldr	s14, [r3, #20]
 800c6bc:	edd7 7a00 	vldr	s15, [r7]
 800c6c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c6c4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800c6c8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c6cc:	edc7 7a07 	vstr	s15, [r7, #28]
    float b = pidController->I * pidController->Ts;
 800c6d0:	687b      	ldr	r3, [r7, #4]
 800c6d2:	ed93 7a01 	vldr	s14, [r3, #4]
 800c6d6:	687b      	ldr	r3, [r7, #4]
 800c6d8:	edd3 7a08 	vldr	s15, [r3, #32]
 800c6dc:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c6e0:	edc7 7a06 	vstr	s15, [r7, #24]
    float integral = pidController->integral_prev + pidController->I * pidController->Ts * 0.5f * (error + pidController->error_prev);
 800c6e4:	687b      	ldr	r3, [r7, #4]
 800c6e6:	ed93 7a07 	vldr	s14, [r3, #28]
 800c6ea:	687b      	ldr	r3, [r7, #4]
 800c6ec:	edd3 6a01 	vldr	s13, [r3, #4]
 800c6f0:	687b      	ldr	r3, [r7, #4]
 800c6f2:	edd3 7a08 	vldr	s15, [r3, #32]
 800c6f6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c6fa:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 800c6fe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800c702:	687b      	ldr	r3, [r7, #4]
 800c704:	ed93 6a05 	vldr	s12, [r3, #20]
 800c708:	edd7 7a00 	vldr	s15, [r7]
 800c70c:	ee76 7a27 	vadd.f32	s15, s12, s15
 800c710:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c714:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c718:	edc7 7a05 	vstr	s15, [r7, #20]
    // antiwindup - limit the output
    integral = _constrain(integral, -pidController->limit, pidController->limit);
 800c71c:	687b      	ldr	r3, [r7, #4]
 800c71e:	edd3 7a04 	vldr	s15, [r3, #16]
 800c722:	eef1 7a67 	vneg.f32	s15, s15
 800c726:	ed97 7a05 	vldr	s14, [r7, #20]
 800c72a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c72e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c732:	d505      	bpl.n	800c740 <pidOperator+0xa8>
 800c734:	687b      	ldr	r3, [r7, #4]
 800c736:	edd3 7a04 	vldr	s15, [r3, #16]
 800c73a:	eef1 7a67 	vneg.f32	s15, s15
 800c73e:	e00f      	b.n	800c760 <pidOperator+0xc8>
 800c740:	687b      	ldr	r3, [r7, #4]
 800c742:	edd3 7a04 	vldr	s15, [r3, #16]
 800c746:	ed97 7a05 	vldr	s14, [r7, #20]
 800c74a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c74e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c752:	dd03      	ble.n	800c75c <pidOperator+0xc4>
 800c754:	687b      	ldr	r3, [r7, #4]
 800c756:	edd3 7a04 	vldr	s15, [r3, #16]
 800c75a:	e001      	b.n	800c760 <pidOperator+0xc8>
 800c75c:	edd7 7a05 	vldr	s15, [r7, #20]
 800c760:	edc7 7a05 	vstr	s15, [r7, #20]
    // Discrete derivation
    // u_dk = D(ek - ek_1)/Ts
    float derivative = pidController->D * (error - pidController->error_prev) / pidController->Ts;
 800c764:	687b      	ldr	r3, [r7, #4]
 800c766:	ed93 7a02 	vldr	s14, [r3, #8]
 800c76a:	687b      	ldr	r3, [r7, #4]
 800c76c:	edd3 7a05 	vldr	s15, [r3, #20]
 800c770:	edd7 6a00 	vldr	s13, [r7]
 800c774:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800c778:	ee67 6a27 	vmul.f32	s13, s14, s15
 800c77c:	687b      	ldr	r3, [r7, #4]
 800c77e:	ed93 7a08 	vldr	s14, [r3, #32]
 800c782:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c786:	edc7 7a04 	vstr	s15, [r7, #16]

    // sum all the components
    float output = proportional + integral + derivative;
 800c78a:	ed97 7a08 	vldr	s14, [r7, #32]
 800c78e:	edd7 7a05 	vldr	s15, [r7, #20]
 800c792:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c796:	ed97 7a04 	vldr	s14, [r7, #16]
 800c79a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c79e:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    // antiwindup - limit the output variable
    output = _constrain(output, -pidController->limit, pidController->limit);
 800c7a2:	687b      	ldr	r3, [r7, #4]
 800c7a4:	edd3 7a04 	vldr	s15, [r3, #16]
 800c7a8:	eef1 7a67 	vneg.f32	s15, s15
 800c7ac:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 800c7b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c7b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7b8:	d505      	bpl.n	800c7c6 <pidOperator+0x12e>
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	edd3 7a04 	vldr	s15, [r3, #16]
 800c7c0:	eef1 7a67 	vneg.f32	s15, s15
 800c7c4:	e00f      	b.n	800c7e6 <pidOperator+0x14e>
 800c7c6:	687b      	ldr	r3, [r7, #4]
 800c7c8:	edd3 7a04 	vldr	s15, [r3, #16]
 800c7cc:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 800c7d0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c7d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7d8:	dd03      	ble.n	800c7e2 <pidOperator+0x14a>
 800c7da:	687b      	ldr	r3, [r7, #4]
 800c7dc:	edd3 7a04 	vldr	s15, [r3, #16]
 800c7e0:	e001      	b.n	800c7e6 <pidOperator+0x14e>
 800c7e2:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800c7e6:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24

    // if output ramp defined
    if (pidController->output_ramp > 0)
 800c7ea:	687b      	ldr	r3, [r7, #4]
 800c7ec:	edd3 7a03 	vldr	s15, [r3, #12]
 800c7f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c7f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7f8:	dd42      	ble.n	800c880 <pidOperator+0x1e8>
    {
        // limit the acceleration by ramping the output
        float output_rate = (output - pidController->output_prev) / pidController->Ts;
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	edd3 7a06 	vldr	s15, [r3, #24]
 800c800:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 800c804:	ee77 6a67 	vsub.f32	s13, s14, s15
 800c808:	687b      	ldr	r3, [r7, #4]
 800c80a:	ed93 7a08 	vldr	s14, [r3, #32]
 800c80e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800c812:	edc7 7a03 	vstr	s15, [r7, #12]
        if (output_rate > pidController->output_ramp)
 800c816:	687b      	ldr	r3, [r7, #4]
 800c818:	edd3 7a03 	vldr	s15, [r3, #12]
 800c81c:	ed97 7a03 	vldr	s14, [r7, #12]
 800c820:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c828:	dd0f      	ble.n	800c84a <pidOperator+0x1b2>
            output = pidController->output_prev + pidController->output_ramp * pidController->Ts;
 800c82a:	687b      	ldr	r3, [r7, #4]
 800c82c:	ed93 7a06 	vldr	s14, [r3, #24]
 800c830:	687b      	ldr	r3, [r7, #4]
 800c832:	edd3 6a03 	vldr	s13, [r3, #12]
 800c836:	687b      	ldr	r3, [r7, #4]
 800c838:	edd3 7a08 	vldr	s15, [r3, #32]
 800c83c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c840:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c844:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
 800c848:	e01a      	b.n	800c880 <pidOperator+0x1e8>
        else if (output_rate < -pidController->output_ramp)
 800c84a:	687b      	ldr	r3, [r7, #4]
 800c84c:	edd3 7a03 	vldr	s15, [r3, #12]
 800c850:	eef1 7a67 	vneg.f32	s15, s15
 800c854:	ed97 7a03 	vldr	s14, [r7, #12]
 800c858:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c85c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c860:	d50e      	bpl.n	800c880 <pidOperator+0x1e8>
            output = pidController->output_prev - pidController->output_ramp * pidController->Ts;
 800c862:	687b      	ldr	r3, [r7, #4]
 800c864:	ed93 7a06 	vldr	s14, [r3, #24]
 800c868:	687b      	ldr	r3, [r7, #4]
 800c86a:	edd3 6a03 	vldr	s13, [r3, #12]
 800c86e:	687b      	ldr	r3, [r7, #4]
 800c870:	edd3 7a08 	vldr	s15, [r3, #32]
 800c874:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c878:	ee77 7a67 	vsub.f32	s15, s14, s15
 800c87c:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24
    }
    // saving for the next pass
    pidController->integral_prev = integral;
 800c880:	687b      	ldr	r3, [r7, #4]
 800c882:	697a      	ldr	r2, [r7, #20]
 800c884:	61da      	str	r2, [r3, #28]
    pidController->output_prev = output;
 800c886:	687b      	ldr	r3, [r7, #4]
 800c888:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c88a:	619a      	str	r2, [r3, #24]
    pidController->error_prev = error;
 800c88c:	687b      	ldr	r3, [r7, #4]
 800c88e:	683a      	ldr	r2, [r7, #0]
 800c890:	615a      	str	r2, [r3, #20]
    return output;
 800c892:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c894:	ee07 3a90 	vmov	s15, r3
}
 800c898:	eeb0 0a67 	vmov.f32	s0, s15
 800c89c:	372c      	adds	r7, #44	@ 0x2c
 800c89e:	46bd      	mov	sp, r7
 800c8a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8a4:	4770      	bx	lr
	...

0800c8a8 <setTorque>:
    motor->updatePwm(HALP_PWM_PERIOD * motor->Ta, HALP_PWM_PERIOD * motor->Tb, HALP_PWM_PERIOD * motor->Tc);
}
#elif 1

void setTorque(BldcMotor *motor, float Uq, float Ud, float angle_el)
{
 800c8a8:	b580      	push	{r7, lr}
 800c8aa:	b08e      	sub	sp, #56	@ 0x38
 800c8ac:	af00      	add	r7, sp, #0
 800c8ae:	60f8      	str	r0, [r7, #12]
 800c8b0:	ed87 0a02 	vstr	s0, [r7, #8]
 800c8b4:	edc7 0a01 	vstr	s1, [r7, #4]
 800c8b8:	ed87 1a00 	vstr	s2, [r7]
    float Ualpha, Ubeta;
    float Ua, Ub, Uc;

    // Sinusoidal PWM modulation
    // Inverse Park + Clarke transformation
    _sincos(angle_el, &_sa, &_ca);
 800c8bc:	f107 0214 	add.w	r2, r7, #20
 800c8c0:	f107 0310 	add.w	r3, r7, #16
 800c8c4:	4611      	mov	r1, r2
 800c8c6:	4618      	mov	r0, r3
 800c8c8:	ed97 0a00 	vldr	s0, [r7]
 800c8cc:	f7ff fe44 	bl	800c558 <_sincos>

    // Inverse park transform
    Ualpha = _ca * Ud - _sa * Uq; // -sin(angle) * Uq;
 800c8d0:	ed97 7a05 	vldr	s14, [r7, #20]
 800c8d4:	edd7 7a01 	vldr	s15, [r7, #4]
 800c8d8:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c8dc:	edd7 6a04 	vldr	s13, [r7, #16]
 800c8e0:	edd7 7a02 	vldr	s15, [r7, #8]
 800c8e4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c8e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 800c8ec:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34
    Ubeta = _sa * Ud + _ca * Uq;  //  cos(angle) * Uq;
 800c8f0:	ed97 7a04 	vldr	s14, [r7, #16]
 800c8f4:	edd7 7a01 	vldr	s15, [r7, #4]
 800c8f8:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c8fc:	edd7 6a05 	vldr	s13, [r7, #20]
 800c900:	edd7 7a02 	vldr	s15, [r7, #8]
 800c904:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c908:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c90c:	edc7 7a0c 	vstr	s15, [r7, #48]	@ 0x30

    // Clarke transform
    Ua = Ualpha;
 800c910:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c912:	62fb      	str	r3, [r7, #44]	@ 0x2c
    Ub = -0.5f * Ualpha + _SQRT3_2 * Ubeta;
 800c914:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 800c918:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 800c91c:	ee27 7a87 	vmul.f32	s14, s15, s14
 800c920:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 800c924:	eddf 6a95 	vldr	s13, [pc, #596]	@ 800cb7c <setTorque+0x2d4>
 800c928:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800c92c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c930:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28
    Uc = -0.5f * Ualpha - _SQRT3_2 * Ubeta;
 800c934:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 800c938:	eebe 7a00 	vmov.f32	s14, #224	@ 0xbf000000 -0.5
 800c93c:	ee27 7a87 	vmul.f32	s14, s15, s14
 800c940:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 800c944:	eddf 6a8d 	vldr	s13, [pc, #564]	@ 800cb7c <setTorque+0x2d4>
 800c948:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800c94c:	ee77 7a67 	vsub.f32	s15, s14, s15
 800c950:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24

    center = UqMAX / 2;
 800c954:	4b8a      	ldr	r3, [pc, #552]	@ (800cb80 <setTorque+0x2d8>)
 800c956:	623b      	str	r3, [r7, #32]

    // discussed here: https://community.simplefoc.com/t/embedded-world-2023-stm32-cordic-co-processor/3107/165?u=candas1
    // a bit more info here: https://microchipdeveloper.com/mct5001:which-zsm-is-best
    // Midpoint Clamp
    float Umin = min(Ua, min(Ub, Uc));
 800c958:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800c95c:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800c960:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c968:	d502      	bpl.n	800c970 <setTorque+0xc8>
 800c96a:	edd7 7a0a 	vldr	s15, [r7, #40]	@ 0x28
 800c96e:	e001      	b.n	800c974 <setTorque+0xcc>
 800c970:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800c974:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 800c978:	eef4 7ac7 	vcmpe.f32	s15, s14
 800c97c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c980:	dd01      	ble.n	800c986 <setTorque+0xde>
 800c982:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c984:	e00b      	b.n	800c99e <setTorque+0xf6>
 800c986:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800c98a:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800c98e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c996:	d501      	bpl.n	800c99c <setTorque+0xf4>
 800c998:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c99a:	e000      	b.n	800c99e <setTorque+0xf6>
 800c99c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c99e:	61fb      	str	r3, [r7, #28]
    float Umax = max(Ua, max(Ub, Uc));
 800c9a0:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800c9a4:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800c9a8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9b0:	dd02      	ble.n	800c9b8 <setTorque+0x110>
 800c9b2:	edd7 7a0a 	vldr	s15, [r7, #40]	@ 0x28
 800c9b6:	e001      	b.n	800c9bc <setTorque+0x114>
 800c9b8:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800c9bc:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 800c9c0:	eef4 7ac7 	vcmpe.f32	s15, s14
 800c9c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9c8:	d501      	bpl.n	800c9ce <setTorque+0x126>
 800c9ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c9cc:	e00b      	b.n	800c9e6 <setTorque+0x13e>
 800c9ce:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800c9d2:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800c9d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9de:	dd01      	ble.n	800c9e4 <setTorque+0x13c>
 800c9e0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c9e2:	e000      	b.n	800c9e6 <setTorque+0x13e>
 800c9e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c9e6:	61bb      	str	r3, [r7, #24]
    center -= (Umax + Umin) / 2;
 800c9e8:	ed97 7a06 	vldr	s14, [r7, #24]
 800c9ec:	edd7 7a07 	vldr	s15, [r7, #28]
 800c9f0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c9f4:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 800c9f8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800c9fc:	ed97 7a08 	vldr	s14, [r7, #32]
 800ca00:	ee77 7a67 	vsub.f32	s15, s14, s15
 800ca04:	edc7 7a08 	vstr	s15, [r7, #32]

    Ua += center;
 800ca08:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 800ca0c:	edd7 7a08 	vldr	s15, [r7, #32]
 800ca10:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ca14:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c
    Ub += center;
 800ca18:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800ca1c:	edd7 7a08 	vldr	s15, [r7, #32]
 800ca20:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ca24:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28
    Uc += center;
 800ca28:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 800ca2c:	edd7 7a08 	vldr	s15, [r7, #32]
 800ca30:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ca34:	edc7 7a09 	vstr	s15, [r7, #36]	@ 0x24

    motor->Ta = _constrain(Ua / U_DC, 0.0f, 1.0f);
 800ca38:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 800ca3c:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800ca40:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ca44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ca48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca4c:	d502      	bpl.n	800ca54 <setTorque+0x1ac>
 800ca4e:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800cb84 <setTorque+0x2dc>
 800ca52:	e015      	b.n	800ca80 <setTorque+0x1d8>
 800ca54:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 800ca58:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800ca5c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ca60:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ca64:	eef4 7ac7 	vcmpe.f32	s15, s14
 800ca68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca6c:	dd02      	ble.n	800ca74 <setTorque+0x1cc>
 800ca6e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800ca72:	e005      	b.n	800ca80 <setTorque+0x1d8>
 800ca74:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 800ca78:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800ca7c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ca80:	68fb      	ldr	r3, [r7, #12]
 800ca82:	edc3 7a49 	vstr	s15, [r3, #292]	@ 0x124
    motor->Tb = _constrain(Ub / U_DC, 0.0f, 1.0f);
 800ca86:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800ca8a:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800ca8e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ca92:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ca96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca9a:	d502      	bpl.n	800caa2 <setTorque+0x1fa>
 800ca9c:	eddf 7a39 	vldr	s15, [pc, #228]	@ 800cb84 <setTorque+0x2dc>
 800caa0:	e015      	b.n	800cace <setTorque+0x226>
 800caa2:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800caa6:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800caaa:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800caae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800cab2:	eef4 7ac7 	vcmpe.f32	s15, s14
 800cab6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800caba:	dd02      	ble.n	800cac2 <setTorque+0x21a>
 800cabc:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800cac0:	e005      	b.n	800cace <setTorque+0x226>
 800cac2:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 800cac6:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800caca:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800cace:	68fb      	ldr	r3, [r7, #12]
 800cad0:	edc3 7a4a 	vstr	s15, [r3, #296]	@ 0x128
    motor->Tc = _constrain(Uc / U_DC, 0.0f, 1.0f);
 800cad4:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 800cad8:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800cadc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800cae0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800cae4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cae8:	d502      	bpl.n	800caf0 <setTorque+0x248>
 800caea:	eddf 7a26 	vldr	s15, [pc, #152]	@ 800cb84 <setTorque+0x2dc>
 800caee:	e015      	b.n	800cb1c <setTorque+0x274>
 800caf0:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 800caf4:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800caf8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800cafc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800cb00:	eef4 7ac7 	vcmpe.f32	s15, s14
 800cb04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cb08:	dd02      	ble.n	800cb10 <setTorque+0x268>
 800cb0a:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800cb0e:	e005      	b.n	800cb1c <setTorque+0x274>
 800cb10:	ed97 7a09 	vldr	s14, [r7, #36]	@ 0x24
 800cb14:	eef2 6a08 	vmov.f32	s13, #40	@ 0x41400000  12.0
 800cb18:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800cb1c:	68fb      	ldr	r3, [r7, #12]
 800cb1e:	edc3 7a4b 	vstr	s15, [r3, #300]	@ 0x12c

    motor->updatePwm(HALP_PWM_PERIOD * motor->Ta, HALP_PWM_PERIOD * motor->Tb, HALP_PWM_PERIOD * motor->Tc);
 800cb22:	68fb      	ldr	r3, [r7, #12]
 800cb24:	f8d3 3130 	ldr.w	r3, [r3, #304]	@ 0x130
 800cb28:	68fa      	ldr	r2, [r7, #12]
 800cb2a:	edd2 7a49 	vldr	s15, [r2, #292]	@ 0x124
 800cb2e:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 800cb88 <setTorque+0x2e0>
 800cb32:	ee67 7a87 	vmul.f32	s15, s15, s14
 800cb36:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800cb3a:	ee17 2a90 	vmov	r2, s15
 800cb3e:	b290      	uxth	r0, r2
 800cb40:	68fa      	ldr	r2, [r7, #12]
 800cb42:	edd2 7a4a 	vldr	s15, [r2, #296]	@ 0x128
 800cb46:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 800cb88 <setTorque+0x2e0>
 800cb4a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800cb4e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800cb52:	ee17 2a90 	vmov	r2, s15
 800cb56:	b291      	uxth	r1, r2
 800cb58:	68fa      	ldr	r2, [r7, #12]
 800cb5a:	edd2 7a4b 	vldr	s15, [r2, #300]	@ 0x12c
 800cb5e:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 800cb88 <setTorque+0x2e0>
 800cb62:	ee67 7a87 	vmul.f32	s15, s15, s14
 800cb66:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800cb6a:	ee17 2a90 	vmov	r2, s15
 800cb6e:	b292      	uxth	r2, r2
 800cb70:	4798      	blx	r3
    // set the voltages in driver
    // driver->setPwm(Ua, Ub, Uc);
}
 800cb72:	bf00      	nop
 800cb74:	3738      	adds	r7, #56	@ 0x38
 800cb76:	46bd      	mov	sp, r7
 800cb78:	bd80      	pop	{r7, pc}
 800cb7a:	bf00      	nop
 800cb7c:	3f5db3d7 	.word	0x3f5db3d7
 800cb80:	405db3d7 	.word	0x405db3d7
 800cb84:	00000000 	.word	0x00000000
 800cb88:	45fa0000 	.word	0x45fa0000

0800cb8c <startPwm1>:

static void standingBy();
static void working(void);
static void updatePwm1(unsigned short int a, unsigned short int b, unsigned short int c);
static void startPwm1()
{
 800cb8c:	b580      	push	{r7, lr}
 800cb8e:	af00      	add	r7, sp, #0
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 800cb90:	2100      	movs	r1, #0
 800cb92:	480c      	ldr	r0, [pc, #48]	@ (800cbc4 <startPwm1+0x38>)
 800cb94:	f7fb fc76 	bl	8008484 <HAL_TIM_PWM_Start>
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 800cb98:	2104      	movs	r1, #4
 800cb9a:	480a      	ldr	r0, [pc, #40]	@ (800cbc4 <startPwm1+0x38>)
 800cb9c:	f7fb fc72 	bl	8008484 <HAL_TIM_PWM_Start>
    HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 800cba0:	2108      	movs	r1, #8
 800cba2:	4808      	ldr	r0, [pc, #32]	@ (800cbc4 <startPwm1+0x38>)
 800cba4:	f7fb fc6e 	bl	8008484 <HAL_TIM_PWM_Start>
    HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 800cba8:	2100      	movs	r1, #0
 800cbaa:	4806      	ldr	r0, [pc, #24]	@ (800cbc4 <startPwm1+0x38>)
 800cbac:	f7fc fd82 	bl	80096b4 <HAL_TIMEx_PWMN_Start>
    HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 800cbb0:	2104      	movs	r1, #4
 800cbb2:	4804      	ldr	r0, [pc, #16]	@ (800cbc4 <startPwm1+0x38>)
 800cbb4:	f7fc fd7e 	bl	80096b4 <HAL_TIMEx_PWMN_Start>
    HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3);
 800cbb8:	2108      	movs	r1, #8
 800cbba:	4802      	ldr	r0, [pc, #8]	@ (800cbc4 <startPwm1+0x38>)
 800cbbc:	f7fc fd7a 	bl	80096b4 <HAL_TIMEx_PWMN_Start>
}
 800cbc0:	bf00      	nop
 800cbc2:	bd80      	pop	{r7, pc}
 800cbc4:	20000508 	.word	0x20000508

0800cbc8 <stopPwm1>:
static void stopPwm1()
{
 800cbc8:	b580      	push	{r7, lr}
 800cbca:	af00      	add	r7, sp, #0
    HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 800cbcc:	2100      	movs	r1, #0
 800cbce:	480c      	ldr	r0, [pc, #48]	@ (800cc00 <stopPwm1+0x38>)
 800cbd0:	f7fb fd58 	bl	8008684 <HAL_TIM_PWM_Stop>
    HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
 800cbd4:	2104      	movs	r1, #4
 800cbd6:	480a      	ldr	r0, [pc, #40]	@ (800cc00 <stopPwm1+0x38>)
 800cbd8:	f7fb fd54 	bl	8008684 <HAL_TIM_PWM_Stop>
    HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 800cbdc:	2108      	movs	r1, #8
 800cbde:	4808      	ldr	r0, [pc, #32]	@ (800cc00 <stopPwm1+0x38>)
 800cbe0:	f7fb fd50 	bl	8008684 <HAL_TIM_PWM_Stop>
    HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_1);
 800cbe4:	2100      	movs	r1, #0
 800cbe6:	4806      	ldr	r0, [pc, #24]	@ (800cc00 <stopPwm1+0x38>)
 800cbe8:	f7fc fe18 	bl	800981c <HAL_TIMEx_PWMN_Stop>
    HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_2);
 800cbec:	2104      	movs	r1, #4
 800cbee:	4804      	ldr	r0, [pc, #16]	@ (800cc00 <stopPwm1+0x38>)
 800cbf0:	f7fc fe14 	bl	800981c <HAL_TIMEx_PWMN_Stop>
    HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_3);
 800cbf4:	2108      	movs	r1, #8
 800cbf6:	4802      	ldr	r0, [pc, #8]	@ (800cc00 <stopPwm1+0x38>)
 800cbf8:	f7fc fe10 	bl	800981c <HAL_TIMEx_PWMN_Stop>
}
 800cbfc:	bf00      	nop
 800cbfe:	bd80      	pop	{r7, pc}
 800cc00:	20000508 	.word	0x20000508

0800cc04 <updatePwm1>:
static void updatePwm1(unsigned short int a, unsigned short int b, unsigned short int c)
{
 800cc04:	b480      	push	{r7}
 800cc06:	b083      	sub	sp, #12
 800cc08:	af00      	add	r7, sp, #0
 800cc0a:	4603      	mov	r3, r0
 800cc0c:	80fb      	strh	r3, [r7, #6]
 800cc0e:	460b      	mov	r3, r1
 800cc10:	80bb      	strh	r3, [r7, #4]
 800cc12:	4613      	mov	r3, r2
 800cc14:	807b      	strh	r3, [r7, #2]
    TIM1->CCR1 = a;
 800cc16:	4a07      	ldr	r2, [pc, #28]	@ (800cc34 <updatePwm1+0x30>)
 800cc18:	88fb      	ldrh	r3, [r7, #6]
 800cc1a:	6353      	str	r3, [r2, #52]	@ 0x34
    TIM1->CCR2 = b;
 800cc1c:	4a05      	ldr	r2, [pc, #20]	@ (800cc34 <updatePwm1+0x30>)
 800cc1e:	88bb      	ldrh	r3, [r7, #4]
 800cc20:	6393      	str	r3, [r2, #56]	@ 0x38
    TIM1->CCR3 = c;
 800cc22:	4a04      	ldr	r2, [pc, #16]	@ (800cc34 <updatePwm1+0x30>)
 800cc24:	887b      	ldrh	r3, [r7, #2]
 800cc26:	63d3      	str	r3, [r2, #60]	@ 0x3c
}
 800cc28:	bf00      	nop
 800cc2a:	370c      	adds	r7, #12
 800cc2c:	46bd      	mov	sp, r7
 800cc2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc32:	4770      	bx	lr
 800cc34:	40012c00 	.word	0x40012c00

0800cc38 <motorInit>:
// should be called before interruption enabled
static void motorInit()
{
 800cc38:	b580      	push	{r7, lr}
 800cc3a:	b086      	sub	sp, #24
 800cc3c:	af00      	add	r7, sp, #0
    motor1.pole_pairs = 7;
 800cc3e:	4ba1      	ldr	r3, [pc, #644]	@ (800cec4 <motorInit+0x28c>)
 800cc40:	2207      	movs	r2, #7
 800cc42:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

    motor1.updatePwm = updatePwm1;
 800cc46:	4b9f      	ldr	r3, [pc, #636]	@ (800cec4 <motorInit+0x28c>)
 800cc48:	4a9f      	ldr	r2, [pc, #636]	@ (800cec8 <motorInit+0x290>)
 800cc4a:	f8c3 2130 	str.w	r2, [r3, #304]	@ 0x130
    motor1.startPwm = startPwm1;
 800cc4e:	4b9d      	ldr	r3, [pc, #628]	@ (800cec4 <motorInit+0x28c>)
 800cc50:	4a9e      	ldr	r2, [pc, #632]	@ (800cecc <motorInit+0x294>)
 800cc52:	f8c3 2134 	str.w	r2, [r3, #308]	@ 0x134
    motor1.stopPwm = stopPwm1;
 800cc56:	4b9b      	ldr	r3, [pc, #620]	@ (800cec4 <motorInit+0x28c>)
 800cc58:	4a9d      	ldr	r2, [pc, #628]	@ (800ced0 <motorInit+0x298>)
 800cc5a:	f8c3 2138 	str.w	r2, [r3, #312]	@ 0x138
    motor1.zeroElectricAngleOffSet = 0;
 800cc5e:	4b99      	ldr	r3, [pc, #612]	@ (800cec4 <motorInit+0x28c>)
 800cc60:	f04f 0200 	mov.w	r2, #0
 800cc64:	635a      	str	r2, [r3, #52]	@ 0x34
    motor1.Ts = 100 * 1e-6f;
 800cc66:	4b97      	ldr	r3, [pc, #604]	@ (800cec4 <motorInit+0x28c>)
 800cc68:	4a9a      	ldr	r2, [pc, #616]	@ (800ced4 <motorInit+0x29c>)
 800cc6a:	62da      	str	r2, [r3, #44]	@ 0x2c
    motor1.torqueType = VOLTAGE;
 800cc6c:	4b95      	ldr	r3, [pc, #596]	@ (800cec4 <motorInit+0x28c>)
 800cc6e:	2200      	movs	r2, #0
 800cc70:	f883 202a 	strb.w	r2, [r3, #42]	@ 0x2a
    motor1.controlType = ANGLE;
 800cc74:	4b93      	ldr	r3, [pc, #588]	@ (800cec4 <motorInit+0x28c>)
 800cc76:	2203      	movs	r2, #3
 800cc78:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
    motor1.state = MOTOR_CALIBRATE;
 800cc7c:	4b91      	ldr	r3, [pc, #580]	@ (800cec4 <motorInit+0x28c>)
 800cc7e:	2200      	movs	r2, #0
 800cc80:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    encoderInit(&motor1.magEncoder, motor1.Ts, MT6701_GetRawAngle);
 800cc84:	4b8f      	ldr	r3, [pc, #572]	@ (800cec4 <motorInit+0x28c>)
 800cc86:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800cc8a:	4993      	ldr	r1, [pc, #588]	@ (800ced8 <motorInit+0x2a0>)
 800cc8c:	eeb0 0a67 	vmov.f32	s0, s15
 800cc90:	488c      	ldr	r0, [pc, #560]	@ (800cec4 <motorInit+0x28c>)
 800cc92:	f7ff fab0 	bl	800c1f6 <encoderInit>

    if (motor1.controlType == TORQUE && motor1.torqueType == CURRENT)
 800cc96:	4b8b      	ldr	r3, [pc, #556]	@ (800cec4 <motorInit+0x28c>)
 800cc98:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800cc9c:	2b00      	cmp	r3, #0
 800cc9e:	d12d      	bne.n	800ccfc <motorInit+0xc4>
 800cca0:	4b88      	ldr	r3, [pc, #544]	@ (800cec4 <motorInit+0x28c>)
 800cca2:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 800cca6:	2b01      	cmp	r3, #1
 800cca8:	d128      	bne.n	800ccfc <motorInit+0xc4>
    {
        float kp, ki;
        kp = -200;
 800ccaa:	4b8c      	ldr	r3, [pc, #560]	@ (800cedc <motorInit+0x2a4>)
 800ccac:	617b      	str	r3, [r7, #20]
        ki = -20;
 800ccae:	4b8c      	ldr	r3, [pc, #560]	@ (800cee0 <motorInit+0x2a8>)
 800ccb0:	613b      	str	r3, [r7, #16]
        pidInit(&motor1.pidId, kp, ki, 0, 0, UqMAX, motor1.Ts);
 800ccb2:	4b84      	ldr	r3, [pc, #528]	@ (800cec4 <motorInit+0x28c>)
 800ccb4:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ccb8:	eef0 2a67 	vmov.f32	s5, s15
 800ccbc:	ed9f 2a89 	vldr	s4, [pc, #548]	@ 800cee4 <motorInit+0x2ac>
 800ccc0:	eddf 1a89 	vldr	s3, [pc, #548]	@ 800cee8 <motorInit+0x2b0>
 800ccc4:	ed9f 1a88 	vldr	s2, [pc, #544]	@ 800cee8 <motorInit+0x2b0>
 800ccc8:	edd7 0a04 	vldr	s1, [r7, #16]
 800cccc:	ed97 0a05 	vldr	s0, [r7, #20]
 800ccd0:	4886      	ldr	r0, [pc, #536]	@ (800ceec <motorInit+0x2b4>)
 800ccd2:	f7ff fcad 	bl	800c630 <pidInit>
        pidInit(&motor1.pidIq, kp, ki, 0, 0, UqMAX, motor1.Ts);
 800ccd6:	4b7b      	ldr	r3, [pc, #492]	@ (800cec4 <motorInit+0x28c>)
 800ccd8:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ccdc:	eef0 2a67 	vmov.f32	s5, s15
 800cce0:	ed9f 2a80 	vldr	s4, [pc, #512]	@ 800cee4 <motorInit+0x2ac>
 800cce4:	eddf 1a80 	vldr	s3, [pc, #512]	@ 800cee8 <motorInit+0x2b0>
 800cce8:	ed9f 1a7f 	vldr	s2, [pc, #508]	@ 800cee8 <motorInit+0x2b0>
 800ccec:	edd7 0a04 	vldr	s1, [r7, #16]
 800ccf0:	ed97 0a05 	vldr	s0, [r7, #20]
 800ccf4:	487e      	ldr	r0, [pc, #504]	@ (800cef0 <motorInit+0x2b8>)
 800ccf6:	f7ff fc9b 	bl	800c630 <pidInit>
    {
 800ccfa:	e0c0      	b.n	800ce7e <motorInit+0x246>
    }
    else if (motor1.controlType == VELOCITY)
 800ccfc:	4b71      	ldr	r3, [pc, #452]	@ (800cec4 <motorInit+0x28c>)
 800ccfe:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800cd02:	2b02      	cmp	r3, #2
 800cd04:	d152      	bne.n	800cdac <motorInit+0x174>
    {
        if (motor1.torqueType == CURRENT)
 800cd06:	4b6f      	ldr	r3, [pc, #444]	@ (800cec4 <motorInit+0x28c>)
 800cd08:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 800cd0c:	2b01      	cmp	r3, #1
 800cd0e:	d13a      	bne.n	800cd86 <motorInit+0x14e>
        {
            pidInit(&motor1.velocityPID, -0.02, -0.01, 0, 0, CURRENT_MAX, motor1.Ts);
 800cd10:	4b6c      	ldr	r3, [pc, #432]	@ (800cec4 <motorInit+0x28c>)
 800cd12:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800cd16:	eef0 2a67 	vmov.f32	s5, s15
 800cd1a:	ed9f 2a76 	vldr	s4, [pc, #472]	@ 800cef4 <motorInit+0x2bc>
 800cd1e:	eddf 1a72 	vldr	s3, [pc, #456]	@ 800cee8 <motorInit+0x2b0>
 800cd22:	ed9f 1a71 	vldr	s2, [pc, #452]	@ 800cee8 <motorInit+0x2b0>
 800cd26:	eddf 0a74 	vldr	s1, [pc, #464]	@ 800cef8 <motorInit+0x2c0>
 800cd2a:	ed9f 0a74 	vldr	s0, [pc, #464]	@ 800cefc <motorInit+0x2c4>
 800cd2e:	4874      	ldr	r0, [pc, #464]	@ (800cf00 <motorInit+0x2c8>)
 800cd30:	f7ff fc7e 	bl	800c630 <pidInit>

            float kp, ki;
            kp = -200;
 800cd34:	4b69      	ldr	r3, [pc, #420]	@ (800cedc <motorInit+0x2a4>)
 800cd36:	607b      	str	r3, [r7, #4]
            ki = -20;
 800cd38:	4b69      	ldr	r3, [pc, #420]	@ (800cee0 <motorInit+0x2a8>)
 800cd3a:	603b      	str	r3, [r7, #0]
            pidInit(&motor1.pidId, kp, ki, 0, 0, UqMAX, motor1.Ts);
 800cd3c:	4b61      	ldr	r3, [pc, #388]	@ (800cec4 <motorInit+0x28c>)
 800cd3e:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800cd42:	eef0 2a67 	vmov.f32	s5, s15
 800cd46:	ed9f 2a67 	vldr	s4, [pc, #412]	@ 800cee4 <motorInit+0x2ac>
 800cd4a:	eddf 1a67 	vldr	s3, [pc, #412]	@ 800cee8 <motorInit+0x2b0>
 800cd4e:	ed9f 1a66 	vldr	s2, [pc, #408]	@ 800cee8 <motorInit+0x2b0>
 800cd52:	edd7 0a00 	vldr	s1, [r7]
 800cd56:	ed97 0a01 	vldr	s0, [r7, #4]
 800cd5a:	4864      	ldr	r0, [pc, #400]	@ (800ceec <motorInit+0x2b4>)
 800cd5c:	f7ff fc68 	bl	800c630 <pidInit>
            pidInit(&motor1.pidIq, kp, ki, 0, 0, UqMAX, motor1.Ts);
 800cd60:	4b58      	ldr	r3, [pc, #352]	@ (800cec4 <motorInit+0x28c>)
 800cd62:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800cd66:	eef0 2a67 	vmov.f32	s5, s15
 800cd6a:	ed9f 2a5e 	vldr	s4, [pc, #376]	@ 800cee4 <motorInit+0x2ac>
 800cd6e:	eddf 1a5e 	vldr	s3, [pc, #376]	@ 800cee8 <motorInit+0x2b0>
 800cd72:	ed9f 1a5d 	vldr	s2, [pc, #372]	@ 800cee8 <motorInit+0x2b0>
 800cd76:	edd7 0a00 	vldr	s1, [r7]
 800cd7a:	ed97 0a01 	vldr	s0, [r7, #4]
 800cd7e:	485c      	ldr	r0, [pc, #368]	@ (800cef0 <motorInit+0x2b8>)
 800cd80:	f7ff fc56 	bl	800c630 <pidInit>
 800cd84:	e07b      	b.n	800ce7e <motorInit+0x246>
        }
        else
        {
            pidInit(&motor1.velocityPID, 0.15, 0.05, 0, 0, UqMAX, motor1.Ts);
 800cd86:	4b4f      	ldr	r3, [pc, #316]	@ (800cec4 <motorInit+0x28c>)
 800cd88:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800cd8c:	eef0 2a67 	vmov.f32	s5, s15
 800cd90:	ed9f 2a54 	vldr	s4, [pc, #336]	@ 800cee4 <motorInit+0x2ac>
 800cd94:	eddf 1a54 	vldr	s3, [pc, #336]	@ 800cee8 <motorInit+0x2b0>
 800cd98:	ed9f 1a53 	vldr	s2, [pc, #332]	@ 800cee8 <motorInit+0x2b0>
 800cd9c:	eddf 0a59 	vldr	s1, [pc, #356]	@ 800cf04 <motorInit+0x2cc>
 800cda0:	ed9f 0a59 	vldr	s0, [pc, #356]	@ 800cf08 <motorInit+0x2d0>
 800cda4:	4856      	ldr	r0, [pc, #344]	@ (800cf00 <motorInit+0x2c8>)
 800cda6:	f7ff fc43 	bl	800c630 <pidInit>
 800cdaa:	e068      	b.n	800ce7e <motorInit+0x246>
        }
    }
    else if (motor1.controlType == ANGLE)
 800cdac:	4b45      	ldr	r3, [pc, #276]	@ (800cec4 <motorInit+0x28c>)
 800cdae:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800cdb2:	2b03      	cmp	r3, #3
 800cdb4:	d163      	bne.n	800ce7e <motorInit+0x246>
    {
        if (motor1.torqueType == CURRENT)
 800cdb6:	4b43      	ldr	r3, [pc, #268]	@ (800cec4 <motorInit+0x28c>)
 800cdb8:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 800cdbc:	2b01      	cmp	r3, #1
 800cdbe:	d14c      	bne.n	800ce5a <motorInit+0x222>
        {
            pidInit(&motor1.anglePID, 2, 0, 0, 0, MAX_VELOCITY, motor1.Ts);
 800cdc0:	4b40      	ldr	r3, [pc, #256]	@ (800cec4 <motorInit+0x28c>)
 800cdc2:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800cdc6:	eef0 2a67 	vmov.f32	s5, s15
 800cdca:	ed9f 2a50 	vldr	s4, [pc, #320]	@ 800cf0c <motorInit+0x2d4>
 800cdce:	eddf 1a46 	vldr	s3, [pc, #280]	@ 800cee8 <motorInit+0x2b0>
 800cdd2:	ed9f 1a45 	vldr	s2, [pc, #276]	@ 800cee8 <motorInit+0x2b0>
 800cdd6:	eddf 0a44 	vldr	s1, [pc, #272]	@ 800cee8 <motorInit+0x2b0>
 800cdda:	eeb0 0a00 	vmov.f32	s0, #0	@ 0x40000000  2.0
 800cdde:	484c      	ldr	r0, [pc, #304]	@ (800cf10 <motorInit+0x2d8>)
 800cde0:	f7ff fc26 	bl	800c630 <pidInit>

            pidInit(&motor1.velocityPID, -0.02, -0.01, 0, 0, CURRENT_MAX, motor1.Ts);
 800cde4:	4b37      	ldr	r3, [pc, #220]	@ (800cec4 <motorInit+0x28c>)
 800cde6:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800cdea:	eef0 2a67 	vmov.f32	s5, s15
 800cdee:	ed9f 2a41 	vldr	s4, [pc, #260]	@ 800cef4 <motorInit+0x2bc>
 800cdf2:	eddf 1a3d 	vldr	s3, [pc, #244]	@ 800cee8 <motorInit+0x2b0>
 800cdf6:	ed9f 1a3c 	vldr	s2, [pc, #240]	@ 800cee8 <motorInit+0x2b0>
 800cdfa:	eddf 0a3f 	vldr	s1, [pc, #252]	@ 800cef8 <motorInit+0x2c0>
 800cdfe:	ed9f 0a3f 	vldr	s0, [pc, #252]	@ 800cefc <motorInit+0x2c4>
 800ce02:	483f      	ldr	r0, [pc, #252]	@ (800cf00 <motorInit+0x2c8>)
 800ce04:	f7ff fc14 	bl	800c630 <pidInit>

            // pidInit(&motor1.anglePID, -0.001, -0.0001, 0, 0, CURRENT_MAX / 2, motor1.Ts);

            float kp, ki;
            kp = -200;
 800ce08:	4b34      	ldr	r3, [pc, #208]	@ (800cedc <motorInit+0x2a4>)
 800ce0a:	60fb      	str	r3, [r7, #12]
            ki = -20;
 800ce0c:	4b34      	ldr	r3, [pc, #208]	@ (800cee0 <motorInit+0x2a8>)
 800ce0e:	60bb      	str	r3, [r7, #8]
            pidInit(&motor1.pidId, kp, ki, 0, 0, UqMAX, motor1.Ts);
 800ce10:	4b2c      	ldr	r3, [pc, #176]	@ (800cec4 <motorInit+0x28c>)
 800ce12:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ce16:	eef0 2a67 	vmov.f32	s5, s15
 800ce1a:	ed9f 2a32 	vldr	s4, [pc, #200]	@ 800cee4 <motorInit+0x2ac>
 800ce1e:	eddf 1a32 	vldr	s3, [pc, #200]	@ 800cee8 <motorInit+0x2b0>
 800ce22:	ed9f 1a31 	vldr	s2, [pc, #196]	@ 800cee8 <motorInit+0x2b0>
 800ce26:	edd7 0a02 	vldr	s1, [r7, #8]
 800ce2a:	ed97 0a03 	vldr	s0, [r7, #12]
 800ce2e:	482f      	ldr	r0, [pc, #188]	@ (800ceec <motorInit+0x2b4>)
 800ce30:	f7ff fbfe 	bl	800c630 <pidInit>
            pidInit(&motor1.pidIq, kp, ki, 0, 0, UqMAX, motor1.Ts);
 800ce34:	4b23      	ldr	r3, [pc, #140]	@ (800cec4 <motorInit+0x28c>)
 800ce36:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ce3a:	eef0 2a67 	vmov.f32	s5, s15
 800ce3e:	ed9f 2a29 	vldr	s4, [pc, #164]	@ 800cee4 <motorInit+0x2ac>
 800ce42:	eddf 1a29 	vldr	s3, [pc, #164]	@ 800cee8 <motorInit+0x2b0>
 800ce46:	ed9f 1a28 	vldr	s2, [pc, #160]	@ 800cee8 <motorInit+0x2b0>
 800ce4a:	edd7 0a02 	vldr	s1, [r7, #8]
 800ce4e:	ed97 0a03 	vldr	s0, [r7, #12]
 800ce52:	4827      	ldr	r0, [pc, #156]	@ (800cef0 <motorInit+0x2b8>)
 800ce54:	f7ff fbec 	bl	800c630 <pidInit>
 800ce58:	e011      	b.n	800ce7e <motorInit+0x246>
        }
        else
        {
            pidInit(&motor1.anglePID, 0.3, 0.001, 0, 0, UqMAX / 2, motor1.Ts);
 800ce5a:	4b1a      	ldr	r3, [pc, #104]	@ (800cec4 <motorInit+0x28c>)
 800ce5c:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ce60:	eef0 2a67 	vmov.f32	s5, s15
 800ce64:	ed9f 2a2b 	vldr	s4, [pc, #172]	@ 800cf14 <motorInit+0x2dc>
 800ce68:	eddf 1a1f 	vldr	s3, [pc, #124]	@ 800cee8 <motorInit+0x2b0>
 800ce6c:	ed9f 1a1e 	vldr	s2, [pc, #120]	@ 800cee8 <motorInit+0x2b0>
 800ce70:	eddf 0a29 	vldr	s1, [pc, #164]	@ 800cf18 <motorInit+0x2e0>
 800ce74:	ed9f 0a29 	vldr	s0, [pc, #164]	@ 800cf1c <motorInit+0x2e4>
 800ce78:	4825      	ldr	r0, [pc, #148]	@ (800cf10 <motorInit+0x2d8>)
 800ce7a:	f7ff fbd9 	bl	800c630 <pidInit>
        }
    }

    lpfInit(&motor1.IqFilter, 0.05, motor1.Ts);
 800ce7e:	4b11      	ldr	r3, [pc, #68]	@ (800cec4 <motorInit+0x28c>)
 800ce80:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ce84:	eef0 0a67 	vmov.f32	s1, s15
 800ce88:	ed9f 0a1e 	vldr	s0, [pc, #120]	@ 800cf04 <motorInit+0x2cc>
 800ce8c:	4824      	ldr	r0, [pc, #144]	@ (800cf20 <motorInit+0x2e8>)
 800ce8e:	f7ff fa63 	bl	800c358 <lpfInit>
    lpfInit(&motor1.IdFilter, 0.05, motor1.Ts);
 800ce92:	4b0c      	ldr	r3, [pc, #48]	@ (800cec4 <motorInit+0x28c>)
 800ce94:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ce98:	eef0 0a67 	vmov.f32	s1, s15
 800ce9c:	ed9f 0a19 	vldr	s0, [pc, #100]	@ 800cf04 <motorInit+0x2cc>
 800cea0:	4820      	ldr	r0, [pc, #128]	@ (800cf24 <motorInit+0x2ec>)
 800cea2:	f7ff fa59 	bl	800c358 <lpfInit>
    lpfInit(&motor1.velocityFilter, 0.01, motor1.Ts);
 800cea6:	4b07      	ldr	r3, [pc, #28]	@ (800cec4 <motorInit+0x28c>)
 800cea8:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800ceac:	eef0 0a67 	vmov.f32	s1, s15
 800ceb0:	ed9f 0a1d 	vldr	s0, [pc, #116]	@ 800cf28 <motorInit+0x2f0>
 800ceb4:	481d      	ldr	r0, [pc, #116]	@ (800cf2c <motorInit+0x2f4>)
 800ceb6:	f7ff fa4f 	bl	800c358 <lpfInit>
}
 800ceba:	bf00      	nop
 800cebc:	3718      	adds	r7, #24
 800cebe:	46bd      	mov	sp, r7
 800cec0:	bd80      	pop	{r7, pc}
 800cec2:	bf00      	nop
 800cec4:	20000700 	.word	0x20000700
 800cec8:	0800cc05 	.word	0x0800cc05
 800cecc:	0800cb8d 	.word	0x0800cb8d
 800ced0:	0800cbc9 	.word	0x0800cbc9
 800ced4:	38d1b717 	.word	0x38d1b717
 800ced8:	0800d98d 	.word	0x0800d98d
 800cedc:	c3480000 	.word	0xc3480000
 800cee0:	c1a00000 	.word	0xc1a00000
 800cee4:	40ddb3d7 	.word	0x40ddb3d7
 800cee8:	00000000 	.word	0x00000000
 800ceec:	20000760 	.word	0x20000760
 800cef0:	20000784 	.word	0x20000784
 800cef4:	3f4ccccd 	.word	0x3f4ccccd
 800cef8:	bc23d70a 	.word	0xbc23d70a
 800cefc:	bca3d70a 	.word	0xbca3d70a
 800cf00:	200007a8 	.word	0x200007a8
 800cf04:	3d4ccccd 	.word	0x3d4ccccd
 800cf08:	3e19999a 	.word	0x3e19999a
 800cf0c:	43960000 	.word	0x43960000
 800cf10:	200007cc 	.word	0x200007cc
 800cf14:	405db3d7 	.word	0x405db3d7
 800cf18:	3a83126f 	.word	0x3a83126f
 800cf1c:	3e99999a 	.word	0x3e99999a
 800cf20:	200007f0 	.word	0x200007f0
 800cf24:	200007fc 	.word	0x200007fc
 800cf28:	3c23d70a 	.word	0x3c23d70a
 800cf2c:	20000808 	.word	0x20000808

0800cf30 <appInit>:
void appInit()
{
 800cf30:	b580      	push	{r7, lr}
 800cf32:	af00      	add	r7, sp, #0
    motorInit();
 800cf34:	f7ff fe80 	bl	800cc38 <motorInit>
}
 800cf38:	bf00      	nop
 800cf3a:	bd80      	pop	{r7, pc}

0800cf3c <appRunning>:
static bool zeroReset;
void appRunning()
{
 800cf3c:	b580      	push	{r7, lr}
 800cf3e:	b086      	sub	sp, #24
 800cf40:	af00      	add	r7, sp, #0

    getKeyState(&keyState);
 800cf42:	485a      	ldr	r0, [pc, #360]	@ (800d0ac <appRunning+0x170>)
 800cf44:	f000 fc80 	bl	800d848 <getKeyState>
    commander_run(&motor1);
 800cf48:	4859      	ldr	r0, [pc, #356]	@ (800d0b0 <appRunning+0x174>)
 800cf4a:	f000 fa1f 	bl	800d38c <commander_run>
    if (++flashCnt >= 10)
 800cf4e:	4b59      	ldr	r3, [pc, #356]	@ (800d0b4 <appRunning+0x178>)
 800cf50:	781b      	ldrb	r3, [r3, #0]
 800cf52:	3301      	adds	r3, #1
 800cf54:	b2da      	uxtb	r2, r3
 800cf56:	4b57      	ldr	r3, [pc, #348]	@ (800d0b4 <appRunning+0x178>)
 800cf58:	701a      	strb	r2, [r3, #0]
 800cf5a:	4b56      	ldr	r3, [pc, #344]	@ (800d0b4 <appRunning+0x178>)
 800cf5c:	781b      	ldrb	r3, [r3, #0]
 800cf5e:	2b09      	cmp	r3, #9
 800cf60:	d902      	bls.n	800cf68 <appRunning+0x2c>
        flashCnt = 0;
 800cf62:	4b54      	ldr	r3, [pc, #336]	@ (800d0b4 <appRunning+0x178>)
 800cf64:	2200      	movs	r2, #0
 800cf66:	701a      	strb	r2, [r3, #0]

    led1On = 0;
 800cf68:	4b53      	ldr	r3, [pc, #332]	@ (800d0b8 <appRunning+0x17c>)
 800cf6a:	2200      	movs	r2, #0
 800cf6c:	701a      	strb	r2, [r3, #0]
    led2On = 0;
 800cf6e:	4b53      	ldr	r3, [pc, #332]	@ (800d0bc <appRunning+0x180>)
 800cf70:	2200      	movs	r2, #0
 800cf72:	701a      	strb	r2, [r3, #0]

    uint32_t Vpoten, adc_vbus;
    float Vbus, goalVelocity;
    HAL_ADC_Start(&hadc1);
 800cf74:	4852      	ldr	r0, [pc, #328]	@ (800d0c0 <appRunning+0x184>)
 800cf76:	f7f5 ffd7 	bl	8002f28 <HAL_ADC_Start>
    HAL_ADC_Start(&hadc2);
 800cf7a:	4852      	ldr	r0, [pc, #328]	@ (800d0c4 <appRunning+0x188>)
 800cf7c:	f7f5 ffd4 	bl	8002f28 <HAL_ADC_Start>
    Vpoten = HAL_ADC_GetValue(&hadc1);
 800cf80:	484f      	ldr	r0, [pc, #316]	@ (800d0c0 <appRunning+0x184>)
 800cf82:	f7f6 f88d 	bl	80030a0 <HAL_ADC_GetValue>
 800cf86:	6178      	str	r0, [r7, #20]

    goalVelocity = map(Vpoten, 0, 4095, -MAX_VELOCITY, MAX_VELOCITY);
 800cf88:	697b      	ldr	r3, [r7, #20]
 800cf8a:	ee07 3a90 	vmov	s15, r3
 800cf8e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cf92:	ed9f 2a4d 	vldr	s4, [pc, #308]	@ 800d0c8 <appRunning+0x18c>
 800cf96:	eddf 1a4d 	vldr	s3, [pc, #308]	@ 800d0cc <appRunning+0x190>
 800cf9a:	ed9f 1a4d 	vldr	s2, [pc, #308]	@ 800d0d0 <appRunning+0x194>
 800cf9e:	eddf 0a4d 	vldr	s1, [pc, #308]	@ 800d0d4 <appRunning+0x198>
 800cfa2:	eeb0 0a67 	vmov.f32	s0, s15
 800cfa6:	f000 fdb2 	bl	800db0e <map>
 800cfaa:	ed87 0a04 	vstr	s0, [r7, #16]

    // goalVelocity = Vpoten / 4095.0f * MAX_VELOCITY;
    float goalTorqueV = map(Vpoten, 0, 4095, -UqMAX, UqMAX);
 800cfae:	697b      	ldr	r3, [r7, #20]
 800cfb0:	ee07 3a90 	vmov	s15, r3
 800cfb4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cfb8:	ed9f 2a47 	vldr	s4, [pc, #284]	@ 800d0d8 <appRunning+0x19c>
 800cfbc:	eddf 1a47 	vldr	s3, [pc, #284]	@ 800d0dc <appRunning+0x1a0>
 800cfc0:	ed9f 1a43 	vldr	s2, [pc, #268]	@ 800d0d0 <appRunning+0x194>
 800cfc4:	eddf 0a43 	vldr	s1, [pc, #268]	@ 800d0d4 <appRunning+0x198>
 800cfc8:	eeb0 0a67 	vmov.f32	s0, s15
 800cfcc:	f000 fd9f 	bl	800db0e <map>
 800cfd0:	ed87 0a03 	vstr	s0, [r7, #12]
    float goalTorqueC = map(Vpoten, 0, 4095, -CURRENT_MAX, CURRENT_MAX);
 800cfd4:	697b      	ldr	r3, [r7, #20]
 800cfd6:	ee07 3a90 	vmov	s15, r3
 800cfda:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800cfde:	ed9f 2a40 	vldr	s4, [pc, #256]	@ 800d0e0 <appRunning+0x1a4>
 800cfe2:	eddf 1a40 	vldr	s3, [pc, #256]	@ 800d0e4 <appRunning+0x1a8>
 800cfe6:	ed9f 1a3a 	vldr	s2, [pc, #232]	@ 800d0d0 <appRunning+0x194>
 800cfea:	eddf 0a3a 	vldr	s1, [pc, #232]	@ 800d0d4 <appRunning+0x198>
 800cfee:	eeb0 0a67 	vmov.f32	s0, s15
 800cff2:	f000 fd8c 	bl	800db0e <map>
 800cff6:	ed87 0a02 	vstr	s0, [r7, #8]

    adc_vbus = HAL_ADC_GetValue(&hadc2);
 800cffa:	4832      	ldr	r0, [pc, #200]	@ (800d0c4 <appRunning+0x188>)
 800cffc:	f7f6 f850 	bl	80030a0 <HAL_ADC_GetValue>
 800d000:	6078      	str	r0, [r7, #4]

    Vbus = adc_vbus * 3.3f / 4096 * 26;
 800d002:	687b      	ldr	r3, [r7, #4]
 800d004:	ee07 3a90 	vmov	s15, r3
 800d008:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800d00c:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 800d0e8 <appRunning+0x1ac>
 800d010:	ee27 7a87 	vmul.f32	s14, s15, s14
 800d014:	eddf 6a35 	vldr	s13, [pc, #212]	@ 800d0ec <appRunning+0x1b0>
 800d018:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800d01c:	eeb3 7a0a 	vmov.f32	s14, #58	@ 0x41d00000  26.0
 800d020:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d024:	edc7 7a00 	vstr	s15, [r7]

    if (motor1.controlType == VELOCITY || motor1.controlType == VELOCITY_OPEN_LOOP)
 800d028:	4b21      	ldr	r3, [pc, #132]	@ (800d0b0 <appRunning+0x174>)
 800d02a:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800d02e:	2b02      	cmp	r3, #2
 800d030:	d004      	beq.n	800d03c <appRunning+0x100>
 800d032:	4b1f      	ldr	r3, [pc, #124]	@ (800d0b0 <appRunning+0x174>)
 800d034:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800d038:	2b01      	cmp	r3, #1
 800d03a:	d103      	bne.n	800d044 <appRunning+0x108>
    {
        motor1.target = goalVelocity;
 800d03c:	4a1c      	ldr	r2, [pc, #112]	@ (800d0b0 <appRunning+0x174>)
 800d03e:	693b      	ldr	r3, [r7, #16]
 800d040:	6313      	str	r3, [r2, #48]	@ 0x30
 800d042:	e01f      	b.n	800d084 <appRunning+0x148>
    }

    else if (motor1.controlType == ANGLE)
 800d044:	4b1a      	ldr	r3, [pc, #104]	@ (800d0b0 <appRunning+0x174>)
 800d046:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800d04a:	2b03      	cmp	r3, #3
 800d04c:	d109      	bne.n	800d062 <appRunning+0x126>
    {
        motor1.target = goalVelocity / 3;
 800d04e:	ed97 7a04 	vldr	s14, [r7, #16]
 800d052:	eef0 6a08 	vmov.f32	s13, #8	@ 0x40400000  3.0
 800d056:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800d05a:	4b15      	ldr	r3, [pc, #84]	@ (800d0b0 <appRunning+0x174>)
 800d05c:	edc3 7a0c 	vstr	s15, [r3, #48]	@ 0x30
 800d060:	e010      	b.n	800d084 <appRunning+0x148>
    }
    else if (motor1.controlType == TORQUE)
 800d062:	4b13      	ldr	r3, [pc, #76]	@ (800d0b0 <appRunning+0x174>)
 800d064:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800d068:	2b00      	cmp	r3, #0
 800d06a:	d10b      	bne.n	800d084 <appRunning+0x148>
    {
        if (motor1.torqueType == VOLTAGE)
 800d06c:	4b10      	ldr	r3, [pc, #64]	@ (800d0b0 <appRunning+0x174>)
 800d06e:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 800d072:	2b00      	cmp	r3, #0
 800d074:	d103      	bne.n	800d07e <appRunning+0x142>
            motor1.target = goalTorqueV;
 800d076:	4a0e      	ldr	r2, [pc, #56]	@ (800d0b0 <appRunning+0x174>)
 800d078:	68fb      	ldr	r3, [r7, #12]
 800d07a:	6313      	str	r3, [r2, #48]	@ 0x30
 800d07c:	e002      	b.n	800d084 <appRunning+0x148>
        else
            motor1.target = goalTorqueC;
 800d07e:	4a0c      	ldr	r2, [pc, #48]	@ (800d0b0 <appRunning+0x174>)
 800d080:	68bb      	ldr	r3, [r7, #8]
 800d082:	6313      	str	r3, [r2, #48]	@ 0x30
    }

    switch (devState)
 800d084:	4b1a      	ldr	r3, [pc, #104]	@ (800d0f0 <appRunning+0x1b4>)
 800d086:	781b      	ldrb	r3, [r3, #0]
 800d088:	2b00      	cmp	r3, #0
 800d08a:	d002      	beq.n	800d092 <appRunning+0x156>
 800d08c:	2b01      	cmp	r3, #1
 800d08e:	d003      	beq.n	800d098 <appRunning+0x15c>
 800d090:	e005      	b.n	800d09e <appRunning+0x162>
    {
    case STANDBY:
        standingBy();
 800d092:	f000 f82f 	bl	800d0f4 <standingBy>
        break;
 800d096:	e002      	b.n	800d09e <appRunning+0x162>

    case WORK:
        working();
 800d098:	f000 f860 	bl	800d15c <working>
        break;
 800d09c:	bf00      	nop
    }

    LED_drive();
 800d09e:	f000 fc11 	bl	800d8c4 <LED_drive>
}
 800d0a2:	bf00      	nop
 800d0a4:	3718      	adds	r7, #24
 800d0a6:	46bd      	mov	sp, r7
 800d0a8:	bd80      	pop	{r7, pc}
 800d0aa:	bf00      	nop
 800d0ac:	200006fd 	.word	0x200006fd
 800d0b0:	20000700 	.word	0x20000700
 800d0b4:	200006fe 	.word	0x200006fe
 800d0b8:	20000948 	.word	0x20000948
 800d0bc:	20000949 	.word	0x20000949
 800d0c0:	20000274 	.word	0x20000274
 800d0c4:	200002e0 	.word	0x200002e0
 800d0c8:	43960000 	.word	0x43960000
 800d0cc:	c3960000 	.word	0xc3960000
 800d0d0:	457ff000 	.word	0x457ff000
 800d0d4:	00000000 	.word	0x00000000
 800d0d8:	40ddb3d7 	.word	0x40ddb3d7
 800d0dc:	c0ddb3d7 	.word	0xc0ddb3d7
 800d0e0:	3f4ccccd 	.word	0x3f4ccccd
 800d0e4:	bf4ccccd 	.word	0xbf4ccccd
 800d0e8:	40533333 	.word	0x40533333
 800d0ec:	45800000 	.word	0x45800000
 800d0f0:	200006fc 	.word	0x200006fc

0800d0f4 <standingBy>:
static void standingBy()
{
 800d0f4:	b580      	push	{r7, lr}
 800d0f6:	af00      	add	r7, sp, #0
    led1On = 1;
 800d0f8:	4b12      	ldr	r3, [pc, #72]	@ (800d144 <standingBy+0x50>)
 800d0fa:	2201      	movs	r2, #1
 800d0fc:	701a      	strb	r2, [r3, #0]
    // setTorque(&motor1, 0, OPEN_LOOP_TORQUE, 0);
    if (zeroReset == 0)
 800d0fe:	4b12      	ldr	r3, [pc, #72]	@ (800d148 <standingBy+0x54>)
 800d100:	781b      	ldrb	r3, [r3, #0]
 800d102:	2b00      	cmp	r3, #0
 800d104:	d106      	bne.n	800d114 <standingBy+0x20>
    {
        goToZeroElecAngle(&motor1);
 800d106:	4811      	ldr	r0, [pc, #68]	@ (800d14c <standingBy+0x58>)
 800d108:	f7fe fb96 	bl	800b838 <goToZeroElecAngle>
        zeroReset = 1;
 800d10c:	4b0e      	ldr	r3, [pc, #56]	@ (800d148 <standingBy+0x54>)
 800d10e:	2201      	movs	r2, #1
 800d110:	701a      	strb	r2, [r3, #0]
 800d112:	e003      	b.n	800d11c <standingBy+0x28>
    }
    else
        motor1.stopPwm();
 800d114:	4b0d      	ldr	r3, [pc, #52]	@ (800d14c <standingBy+0x58>)
 800d116:	f8d3 3138 	ldr.w	r3, [r3, #312]	@ 0x138
 800d11a:	4798      	blx	r3

    if (keyState == USER3_SHORT)
 800d11c:	4b0c      	ldr	r3, [pc, #48]	@ (800d150 <standingBy+0x5c>)
 800d11e:	781b      	ldrb	r3, [r3, #0]
 800d120:	2b03      	cmp	r3, #3
 800d122:	d10d      	bne.n	800d140 <standingBy+0x4c>
    {
        WORK_INIT;
 800d124:	4b0b      	ldr	r3, [pc, #44]	@ (800d154 <standingBy+0x60>)
 800d126:	2201      	movs	r2, #1
 800d128:	701a      	strb	r2, [r3, #0]
 800d12a:	4b0b      	ldr	r3, [pc, #44]	@ (800d158 <standingBy+0x64>)
 800d12c:	2200      	movs	r2, #0
 800d12e:	701a      	strb	r2, [r3, #0]
 800d130:	4b06      	ldr	r3, [pc, #24]	@ (800d14c <standingBy+0x58>)
 800d132:	2202      	movs	r2, #2
 800d134:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800d138:	4b04      	ldr	r3, [pc, #16]	@ (800d14c <standingBy+0x58>)
 800d13a:	f8d3 3134 	ldr.w	r3, [r3, #308]	@ 0x134
 800d13e:	4798      	blx	r3
    }
}
 800d140:	bf00      	nop
 800d142:	bd80      	pop	{r7, pc}
 800d144:	20000948 	.word	0x20000948
 800d148:	2000083c 	.word	0x2000083c
 800d14c:	20000700 	.word	0x20000700
 800d150:	200006fd 	.word	0x200006fd
 800d154:	200006fc 	.word	0x200006fc
 800d158:	200006fe 	.word	0x200006fe

0800d15c <working>:

static void working(void)
{
 800d15c:	b480      	push	{r7}
 800d15e:	af00      	add	r7, sp, #0
    zeroReset = 0;
 800d160:	4b0e      	ldr	r3, [pc, #56]	@ (800d19c <working+0x40>)
 800d162:	2200      	movs	r2, #0
 800d164:	701a      	strb	r2, [r3, #0]
    if (flashCnt < 5)
 800d166:	4b0e      	ldr	r3, [pc, #56]	@ (800d1a0 <working+0x44>)
 800d168:	781b      	ldrb	r3, [r3, #0]
 800d16a:	2b04      	cmp	r3, #4
 800d16c:	d802      	bhi.n	800d174 <working+0x18>
        led2On = 1;
 800d16e:	4b0d      	ldr	r3, [pc, #52]	@ (800d1a4 <working+0x48>)
 800d170:	2201      	movs	r2, #1
 800d172:	701a      	strb	r2, [r3, #0]

    if (keyState == USER3_SHORT)
 800d174:	4b0c      	ldr	r3, [pc, #48]	@ (800d1a8 <working+0x4c>)
 800d176:	781b      	ldrb	r3, [r3, #0]
 800d178:	2b03      	cmp	r3, #3
 800d17a:	d109      	bne.n	800d190 <working+0x34>
    {
        STANDBY_INIT;
 800d17c:	4b0b      	ldr	r3, [pc, #44]	@ (800d1ac <working+0x50>)
 800d17e:	2200      	movs	r2, #0
 800d180:	701a      	strb	r2, [r3, #0]
 800d182:	4b07      	ldr	r3, [pc, #28]	@ (800d1a0 <working+0x44>)
 800d184:	2200      	movs	r2, #0
 800d186:	701a      	strb	r2, [r3, #0]
 800d188:	4b09      	ldr	r3, [pc, #36]	@ (800d1b0 <working+0x54>)
 800d18a:	2201      	movs	r2, #1
 800d18c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        //     {
        //         bldcMotor.focTarget = 23;
        //     }
        // }
    }
}
 800d190:	bf00      	nop
 800d192:	46bd      	mov	sp, r7
 800d194:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d198:	4770      	bx	lr
 800d19a:	bf00      	nop
 800d19c:	2000083c 	.word	0x2000083c
 800d1a0:	200006fe 	.word	0x200006fe
 800d1a4:	20000949 	.word	0x20000949
 800d1a8:	200006fd 	.word	0x200006fd
 800d1ac:	200006fc 	.word	0x200006fc
 800d1b0:	20000700 	.word	0x20000700

0800d1b4 <txDataProcess>:

void txDataProcess()
{
 800d1b4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800d1b8:	b096      	sub	sp, #88	@ 0x58
 800d1ba:	af0e      	add	r7, sp, #56	@ 0x38

    sprintf(txBuffer, "target:%.2f fullAngle:%.2f velocity:%.2f Uq:%.2f Ud:%.2f Iq:%.2f Id:%.2f elec_angle:%.2f\n", motor1.target, motor1.magEncoder.fullAngle, motor1.magEncoder.velocity, motor1.Uq, motor1.Ud, motor1.Iq, motor1.Id, motor1.angle_el);
 800d1bc:	4b2c      	ldr	r3, [pc, #176]	@ (800d270 <txDataProcess+0xbc>)
 800d1be:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d1c0:	4618      	mov	r0, r3
 800d1c2:	f7f3 f9e9 	bl	8000598 <__aeabi_f2d>
 800d1c6:	e9c7 0106 	strd	r0, r1, [r7, #24]
 800d1ca:	4b29      	ldr	r3, [pc, #164]	@ (800d270 <txDataProcess+0xbc>)
 800d1cc:	695b      	ldr	r3, [r3, #20]
 800d1ce:	4618      	mov	r0, r3
 800d1d0:	f7f3 f9e2 	bl	8000598 <__aeabi_f2d>
 800d1d4:	4682      	mov	sl, r0
 800d1d6:	468b      	mov	fp, r1
 800d1d8:	4b25      	ldr	r3, [pc, #148]	@ (800d270 <txDataProcess+0xbc>)
 800d1da:	699b      	ldr	r3, [r3, #24]
 800d1dc:	4618      	mov	r0, r3
 800d1de:	f7f3 f9db 	bl	8000598 <__aeabi_f2d>
 800d1e2:	e9c7 0104 	strd	r0, r1, [r7, #16]
 800d1e6:	4b22      	ldr	r3, [pc, #136]	@ (800d270 <txDataProcess+0xbc>)
 800d1e8:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800d1ec:	4618      	mov	r0, r3
 800d1ee:	f7f3 f9d3 	bl	8000598 <__aeabi_f2d>
 800d1f2:	e9c7 0102 	strd	r0, r1, [r7, #8]
 800d1f6:	4b1e      	ldr	r3, [pc, #120]	@ (800d270 <txDataProcess+0xbc>)
 800d1f8:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 800d1fc:	4618      	mov	r0, r3
 800d1fe:	f7f3 f9cb 	bl	8000598 <__aeabi_f2d>
 800d202:	e9c7 0100 	strd	r0, r1, [r7]
 800d206:	4b1a      	ldr	r3, [pc, #104]	@ (800d270 <txDataProcess+0xbc>)
 800d208:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800d20a:	4618      	mov	r0, r3
 800d20c:	f7f3 f9c4 	bl	8000598 <__aeabi_f2d>
 800d210:	4680      	mov	r8, r0
 800d212:	4689      	mov	r9, r1
 800d214:	4b16      	ldr	r3, [pc, #88]	@ (800d270 <txDataProcess+0xbc>)
 800d216:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800d218:	4618      	mov	r0, r3
 800d21a:	f7f3 f9bd 	bl	8000598 <__aeabi_f2d>
 800d21e:	4604      	mov	r4, r0
 800d220:	460d      	mov	r5, r1
 800d222:	4b13      	ldr	r3, [pc, #76]	@ (800d270 <txDataProcess+0xbc>)
 800d224:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d226:	4618      	mov	r0, r3
 800d228:	f7f3 f9b6 	bl	8000598 <__aeabi_f2d>
 800d22c:	4602      	mov	r2, r0
 800d22e:	460b      	mov	r3, r1
 800d230:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800d234:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
 800d238:	e9cd 8908 	strd	r8, r9, [sp, #32]
 800d23c:	ed97 7b00 	vldr	d7, [r7]
 800d240:	ed8d 7b06 	vstr	d7, [sp, #24]
 800d244:	ed97 7b02 	vldr	d7, [r7, #8]
 800d248:	ed8d 7b04 	vstr	d7, [sp, #16]
 800d24c:	ed97 7b04 	vldr	d7, [r7, #16]
 800d250:	ed8d 7b02 	vstr	d7, [sp, #8]
 800d254:	e9cd ab00 	strd	sl, fp, [sp]
 800d258:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800d25c:	4905      	ldr	r1, [pc, #20]	@ (800d274 <txDataProcess+0xc0>)
 800d25e:	4806      	ldr	r0, [pc, #24]	@ (800d278 <txDataProcess+0xc4>)
 800d260:	f002 face 	bl	800f800 <siprintf>
    // sprintf(txBuffer, "target:%f Uq:%f\n", motor1.target, motor1.Uq);
    // sprintf(txBuffer, "offset_ia:%f offset_ib:%f, Ia:%f, Ib:%f\n", motor1.offset_ia, motor1.offset_ib, motor1.Ia, motor1.Ib);
}
 800d264:	bf00      	nop
 800d266:	3720      	adds	r7, #32
 800d268:	46bd      	mov	sp, r7
 800d26a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800d26e:	bf00      	nop
 800d270:	20000700 	.word	0x20000700
 800d274:	08012800 	.word	0x08012800
 800d278:	20000840 	.word	0x20000840

0800d27c <HAL_ADCEx_InjectedConvCpltCallback>:

void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 800d27c:	b580      	push	{r7, lr}
 800d27e:	b082      	sub	sp, #8
 800d280:	af00      	add	r7, sp, #0
 800d282:	6078      	str	r0, [r7, #4]
    HAL_GPIO_WritePin(TEST_GPIO_Port, TEST_Pin, GPIO_PIN_SET);
 800d284:	2201      	movs	r2, #1
 800d286:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800d28a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800d28e:	f7f9 fab1 	bl	80067f4 <HAL_GPIO_WritePin>
    if (hadc == &hadc1)
 800d292:	687b      	ldr	r3, [r7, #4]
 800d294:	4a0d      	ldr	r2, [pc, #52]	@ (800d2cc <HAL_ADCEx_InjectedConvCpltCallback+0x50>)
 800d296:	4293      	cmp	r3, r2
 800d298:	d10d      	bne.n	800d2b6 <HAL_ADCEx_InjectedConvCpltCallback+0x3a>
    {

        foc(&motor1, hadc1.Instance->JDR1, hadc2.Instance->JDR1);
 800d29a:	4b0c      	ldr	r3, [pc, #48]	@ (800d2cc <HAL_ADCEx_InjectedConvCpltCallback+0x50>)
 800d29c:	681b      	ldr	r3, [r3, #0]
 800d29e:	f8d3 1080 	ldr.w	r1, [r3, #128]	@ 0x80
 800d2a2:	4b0b      	ldr	r3, [pc, #44]	@ (800d2d0 <HAL_ADCEx_InjectedConvCpltCallback+0x54>)
 800d2a4:	681b      	ldr	r3, [r3, #0]
 800d2a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d2aa:	461a      	mov	r2, r3
 800d2ac:	4809      	ldr	r0, [pc, #36]	@ (800d2d4 <HAL_ADCEx_InjectedConvCpltCallback+0x58>)
 800d2ae:	f7fe fc1f 	bl	800baf0 <foc>
        // svpwm_test(&motor1, 4.0f, 0.07f);
        dealPer100us();
 800d2b2:	f000 fc5b 	bl	800db6c <dealPer100us>

        memcpy(tempData, (uint8_t *)&load_data, sizeof(load_data));
        HAL_UART_Transmit_DMA(&huart3, (uint8_t *)tempData, sizeof(tempData));
#endif
    }
    HAL_GPIO_WritePin(TEST_GPIO_Port, TEST_Pin, GPIO_PIN_RESET);
 800d2b6:	2200      	movs	r2, #0
 800d2b8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800d2bc:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800d2c0:	f7f9 fa98 	bl	80067f4 <HAL_GPIO_WritePin>
}
 800d2c4:	bf00      	nop
 800d2c6:	3708      	adds	r7, #8
 800d2c8:	46bd      	mov	sp, r7
 800d2ca:	bd80      	pop	{r7, pc}
 800d2cc:	20000274 	.word	0x20000274
 800d2d0:	200002e0 	.word	0x200002e0
 800d2d4:	20000700 	.word	0x20000700

0800d2d8 <HAL_UARTEx_RxEventCallback>:
bool toProcessData;
uint8_t aRxBuffer;
float comm1, comm2, comm3, comm4, comm5, comm6, comm7, comm8, comm9, comm10, comm11;

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 800d2d8:	b580      	push	{r7, lr}
 800d2da:	b082      	sub	sp, #8
 800d2dc:	af00      	add	r7, sp, #0
 800d2de:	6078      	str	r0, [r7, #4]
 800d2e0:	460b      	mov	r3, r1
 800d2e2:	807b      	strh	r3, [r7, #2]
  if (huart == &huart3)
 800d2e4:	687b      	ldr	r3, [r7, #4]
 800d2e6:	4a07      	ldr	r2, [pc, #28]	@ (800d304 <HAL_UARTEx_RxEventCallback+0x2c>)
 800d2e8:	4293      	cmp	r3, r2
 800d2ea:	d107      	bne.n	800d2fc <HAL_UARTEx_RxEventCallback+0x24>
  {
    // HAL_UART_Transmit_DMA(&huart3, rxBuffer, Size);
    HAL_UARTEx_ReceiveToIdle_DMA(&huart3, rxBuffer, sizeof(rxBuffer));
 800d2ec:	2264      	movs	r2, #100	@ 0x64
 800d2ee:	4906      	ldr	r1, [pc, #24]	@ (800d308 <HAL_UARTEx_RxEventCallback+0x30>)
 800d2f0:	4804      	ldr	r0, [pc, #16]	@ (800d304 <HAL_UARTEx_RxEventCallback+0x2c>)
 800d2f2:	f7fe f9fe 	bl	800b6f2 <HAL_UARTEx_ReceiveToIdle_DMA>
    toProcessData = 1;
 800d2f6:	4b05      	ldr	r3, [pc, #20]	@ (800d30c <HAL_UARTEx_RxEventCallback+0x34>)
 800d2f8:	2201      	movs	r2, #1
 800d2fa:	701a      	strb	r2, [r3, #0]
  }
}
 800d2fc:	bf00      	nop
 800d2fe:	3708      	adds	r7, #8
 800d300:	46bd      	mov	sp, r7
 800d302:	bd80      	pop	{r7, pc}
 800d304:	200005a0 	.word	0x200005a0
 800d308:	200008a4 	.word	0x200008a4
 800d30c:	20000908 	.word	0x20000908

0800d310 <FOC_log>:

// DMA模式
void FOC_log(const char *format, ...)
{
 800d310:	b40f      	push	{r0, r1, r2, r3}
 800d312:	b580      	push	{r7, lr}
 800d314:	b0c2      	sub	sp, #264	@ 0x108
 800d316:	af00      	add	r7, sp, #0
  // length = vsnprintf((char *)txBuffer, sizeof(txBuffer), (char *)format, args);
  // va_end(args);
  // HAL_UART_Transmit_DMA(&huart3, (const char *)txBuffer, length);

  va_list args;           // 定义参数列表变量
  va_start(args, format); // 从format位置开始接收参数表，放在arg里面
 800d318:	f507 738a 	add.w	r3, r7, #276	@ 0x114
 800d31c:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104

  char strBuf[256];               // 定义输出的字符串
  vsprintf(strBuf, format, args); // 使用vsprintf将格式化的数据写入缓冲区
 800d320:	1d3b      	adds	r3, r7, #4
 800d322:	f8d7 2104 	ldr.w	r2, [r7, #260]	@ 0x104
 800d326:	f8d7 1110 	ldr.w	r1, [r7, #272]	@ 0x110
 800d32a:	4618      	mov	r0, r3
 800d32c:	f002 fae2 	bl	800f8f4 <vsiprintf>
  va_end(args);                   // 结束可变参数的使用

  // 等待上次的数据发送完成，避免新的数据覆盖正在传输的数据，导致混乱
  while (HAL_UART_GetState(&huart3) == HAL_UART_STATE_BUSY_TX)
 800d330:	bf00      	nop
 800d332:	480d      	ldr	r0, [pc, #52]	@ (800d368 <FOC_log+0x58>)
 800d334:	f7fd f990 	bl	800a658 <HAL_UART_GetState>
 800d338:	4603      	mov	r3, r0
 800d33a:	2b21      	cmp	r3, #33	@ 0x21
 800d33c:	d0f9      	beq.n	800d332 <FOC_log+0x22>
  {
    // Wait for DMA transfer to complete
  }
  HAL_UART_Transmit(&huart3, (uint8_t *)strBuf, strlen(strBuf), 1000);
 800d33e:	1d3b      	adds	r3, r7, #4
 800d340:	4618      	mov	r0, r3
 800d342:	f7f2 ffbd 	bl	80002c0 <strlen>
 800d346:	4603      	mov	r3, r0
 800d348:	b29a      	uxth	r2, r3
 800d34a:	1d39      	adds	r1, r7, #4
 800d34c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800d350:	4805      	ldr	r0, [pc, #20]	@ (800d368 <FOC_log+0x58>)
 800d352:	f7fc fd1c 	bl	8009d8e <HAL_UART_Transmit>
}
 800d356:	bf00      	nop
 800d358:	f507 7784 	add.w	r7, r7, #264	@ 0x108
 800d35c:	46bd      	mov	sp, r7
 800d35e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d362:	b004      	add	sp, #16
 800d364:	4770      	bx	lr
 800d366:	bf00      	nop
 800d368:	200005a0 	.word	0x200005a0

0800d36c <printLog>:
//   va_end(args);
//   HAL_UART_Transmit_DMA(&huart3, (const char *)txBuffer, length);
// }

void printLog()
{
 800d36c:	b580      	push	{r7, lr}
 800d36e:	af00      	add	r7, sp, #0

#if SHOW_WAVE == 0
  txDataProcess();
 800d370:	f7ff ff20 	bl	800d1b4 <txDataProcess>
  HAL_UART_Transmit_DMA(&huart3, (uint8_t *)txBuffer, sizeof(txBuffer));
 800d374:	2264      	movs	r2, #100	@ 0x64
 800d376:	4903      	ldr	r1, [pc, #12]	@ (800d384 <printLog+0x18>)
 800d378:	4803      	ldr	r0, [pc, #12]	@ (800d388 <printLog+0x1c>)
 800d37a:	f7fc fd97 	bl	8009eac <HAL_UART_Transmit_DMA>
#endif
}
 800d37e:	bf00      	nop
 800d380:	bd80      	pop	{r7, pc}
 800d382:	bf00      	nop
 800d384:	20000840 	.word	0x20000840
 800d388:	200005a0 	.word	0x200005a0

0800d38c <commander_run>:

void commander_run(BldcMotor *motor)
{
 800d38c:	b580      	push	{r7, lr}
 800d38e:	b082      	sub	sp, #8
 800d390:	af00      	add	r7, sp, #0
 800d392:	6078      	str	r0, [r7, #4]
  if (toProcessData == 1)
 800d394:	4b1c      	ldr	r3, [pc, #112]	@ (800d408 <commander_run+0x7c>)
 800d396:	781b      	ldrb	r3, [r3, #0]
 800d398:	2b01      	cmp	r3, #1
 800d39a:	d131      	bne.n	800d400 <commander_run+0x74>
  {
    // memset(txBuffer, '\0', sizeof(txBuffer));

    switch (rxBuffer[0])
 800d39c:	4b1b      	ldr	r3, [pc, #108]	@ (800d40c <commander_run+0x80>)
 800d39e:	781b      	ldrb	r3, [r3, #0]
 800d3a0:	2b48      	cmp	r3, #72	@ 0x48
 800d3a2:	d002      	beq.n	800d3aa <commander_run+0x1e>
 800d3a4:	2b54      	cmp	r3, #84	@ 0x54
 800d3a6:	d00a      	beq.n	800d3be <commander_run+0x32>
 800d3a8:	e027      	b.n	800d3fa <commander_run+0x6e>
    {
    case 'H':
      // sprintf(sndBuff, "Hello World!\r\n");
      // HAL_UART_Transmit_DMA(&huart3, (uint8_t *)sndBuff, sizeof(sndBuff));
      sprintf(txBuffer, "Hello World!\r\n");
 800d3aa:	4919      	ldr	r1, [pc, #100]	@ (800d410 <commander_run+0x84>)
 800d3ac:	4819      	ldr	r0, [pc, #100]	@ (800d414 <commander_run+0x88>)
 800d3ae:	f002 fa27 	bl	800f800 <siprintf>
      HAL_UART_Transmit_DMA(&huart3, (uint8_t *)txBuffer, sizeof(txBuffer));
 800d3b2:	2264      	movs	r2, #100	@ 0x64
 800d3b4:	4917      	ldr	r1, [pc, #92]	@ (800d414 <commander_run+0x88>)
 800d3b6:	4818      	ldr	r0, [pc, #96]	@ (800d418 <commander_run+0x8c>)
 800d3b8:	f7fc fd78 	bl	8009eac <HAL_UART_Transmit_DMA>
      break;
 800d3bc:	e01d      	b.n	800d3fa <commander_run+0x6e>
    case 'T': // T6.28

      motor->target = atof((const char *)(rxBuffer + 1));
 800d3be:	4b17      	ldr	r3, [pc, #92]	@ (800d41c <commander_run+0x90>)
 800d3c0:	4618      	mov	r0, r3
 800d3c2:	f000 fcd5 	bl	800dd70 <atof>
 800d3c6:	ec53 2b10 	vmov	r2, r3, d0
 800d3ca:	4610      	mov	r0, r2
 800d3cc:	4619      	mov	r1, r3
 800d3ce:	f7f3 fc33 	bl	8000c38 <__aeabi_d2f>
 800d3d2:	4602      	mov	r2, r0
 800d3d4:	687b      	ldr	r3, [r7, #4]
 800d3d6:	631a      	str	r2, [r3, #48]	@ 0x30
      sprintf(txBuffer, "Target=%.2f\r\n", motor->target);
 800d3d8:	687b      	ldr	r3, [r7, #4]
 800d3da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d3dc:	4618      	mov	r0, r3
 800d3de:	f7f3 f8db 	bl	8000598 <__aeabi_f2d>
 800d3e2:	4602      	mov	r2, r0
 800d3e4:	460b      	mov	r3, r1
 800d3e6:	490e      	ldr	r1, [pc, #56]	@ (800d420 <commander_run+0x94>)
 800d3e8:	480a      	ldr	r0, [pc, #40]	@ (800d414 <commander_run+0x88>)
 800d3ea:	f002 fa09 	bl	800f800 <siprintf>
      HAL_UART_Transmit_DMA(&huart3, (uint8_t *)txBuffer, sizeof(txBuffer));
 800d3ee:	2264      	movs	r2, #100	@ 0x64
 800d3f0:	4908      	ldr	r1, [pc, #32]	@ (800d414 <commander_run+0x88>)
 800d3f2:	4809      	ldr	r0, [pc, #36]	@ (800d418 <commander_run+0x8c>)
 800d3f4:	f7fc fd5a 	bl	8009eac <HAL_UART_Transmit_DMA>
      // printf("%s", sndBuff);
      // HAL_UART_Transmit_DMA(&huart3, (uint8_t *)sndBuff, sizeof(sndBuff));
      break;
 800d3f8:	bf00      	nop
      // case 'A': // A
      //   sprintf(sndBuff, "Ang=%.2f\r\n", shaftAngle);
      //   printf("%s", sndBuff);
      //   break;
    }
    toProcessData = 0;
 800d3fa:	4b03      	ldr	r3, [pc, #12]	@ (800d408 <commander_run+0x7c>)
 800d3fc:	2200      	movs	r2, #0
 800d3fe:	701a      	strb	r2, [r3, #0]
  }
}
 800d400:	bf00      	nop
 800d402:	3708      	adds	r7, #8
 800d404:	46bd      	mov	sp, r7
 800d406:	bd80      	pop	{r7, pc}
 800d408:	20000908 	.word	0x20000908
 800d40c:	200008a4 	.word	0x200008a4
 800d410:	0801285c 	.word	0x0801285c
 800d414:	20000840 	.word	0x20000840
 800d418:	200005a0 	.word	0x200005a0
 800d41c:	200008a5 	.word	0x200008a5
 800d420:	0801286c 	.word	0x0801286c

0800d424 <getKeyFlags>:
#include "key.h"

static KeyStruct keyStruct[KEY_NUM];

uint getKeyFlags()
{
 800d424:	b580      	push	{r7, lr}
 800d426:	af00      	add	r7, sp, #0
    static uint keyFlagsBak; // back up keyflags for filtering
    static uchar filterCnt;
    static Byte flags;       // real time key flags with bits operation
    static uint keyFlagsBuf; // return key flags after filtering

    flags.byte = 0;
 800d428:	4b3b      	ldr	r3, [pc, #236]	@ (800d518 <getKeyFlags+0xf4>)
 800d42a:	2200      	movs	r2, #0
 800d42c:	701a      	strb	r2, [r3, #0]

    // when IO been multiplexed
    if (HAL_GPIO_ReadPin(SW_PORT, SW1_PIN) == 1)
 800d42e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800d432:	483a      	ldr	r0, [pc, #232]	@ (800d51c <getKeyFlags+0xf8>)
 800d434:	f7f9 f9c6 	bl	80067c4 <HAL_GPIO_ReadPin>
 800d438:	4603      	mov	r3, r0
 800d43a:	2b01      	cmp	r3, #1
 800d43c:	d104      	bne.n	800d448 <getKeyFlags+0x24>
    {
        flags.bits.b0 = 1; // SW1
 800d43e:	4a36      	ldr	r2, [pc, #216]	@ (800d518 <getKeyFlags+0xf4>)
 800d440:	7813      	ldrb	r3, [r2, #0]
 800d442:	f043 0301 	orr.w	r3, r3, #1
 800d446:	7013      	strb	r3, [r2, #0]
    }

    if (HAL_GPIO_ReadPin(SW_PORT, SW2_PIN) == 1)
 800d448:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800d44c:	4833      	ldr	r0, [pc, #204]	@ (800d51c <getKeyFlags+0xf8>)
 800d44e:	f7f9 f9b9 	bl	80067c4 <HAL_GPIO_ReadPin>
 800d452:	4603      	mov	r3, r0
 800d454:	2b01      	cmp	r3, #1
 800d456:	d104      	bne.n	800d462 <getKeyFlags+0x3e>
    {
        flags.bits.b1 = 1; // SW2
 800d458:	4a2f      	ldr	r2, [pc, #188]	@ (800d518 <getKeyFlags+0xf4>)
 800d45a:	7813      	ldrb	r3, [r2, #0]
 800d45c:	f043 0302 	orr.w	r3, r3, #2
 800d460:	7013      	strb	r3, [r2, #0]
    }

    if (HAL_GPIO_ReadPin(SW_PORT, SW3_PIN) == 1)
 800d462:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800d466:	482d      	ldr	r0, [pc, #180]	@ (800d51c <getKeyFlags+0xf8>)
 800d468:	f7f9 f9ac 	bl	80067c4 <HAL_GPIO_ReadPin>
 800d46c:	4603      	mov	r3, r0
 800d46e:	2b01      	cmp	r3, #1
 800d470:	d104      	bne.n	800d47c <getKeyFlags+0x58>
    {
        flags.bits.b2 = 1; // SW3
 800d472:	4a29      	ldr	r2, [pc, #164]	@ (800d518 <getKeyFlags+0xf4>)
 800d474:	7813      	ldrb	r3, [r2, #0]
 800d476:	f043 0304 	orr.w	r3, r3, #4
 800d47a:	7013      	strb	r3, [r2, #0]
    }

    if (flags.byte == keyFlagsBak)
 800d47c:	4b26      	ldr	r3, [pc, #152]	@ (800d518 <getKeyFlags+0xf4>)
 800d47e:	781b      	ldrb	r3, [r3, #0]
 800d480:	461a      	mov	r2, r3
 800d482:	4b27      	ldr	r3, [pc, #156]	@ (800d520 <getKeyFlags+0xfc>)
 800d484:	681b      	ldr	r3, [r3, #0]
 800d486:	429a      	cmp	r2, r3
 800d488:	d13c      	bne.n	800d504 <getKeyFlags+0xe0>
    {
        if (flags.bits.b0)
 800d48a:	4b23      	ldr	r3, [pc, #140]	@ (800d518 <getKeyFlags+0xf4>)
 800d48c:	781b      	ldrb	r3, [r3, #0]
 800d48e:	f003 0301 	and.w	r3, r3, #1
 800d492:	b2db      	uxtb	r3, r3
 800d494:	2b00      	cmp	r3, #0
 800d496:	d006      	beq.n	800d4a6 <getKeyFlags+0x82>
            keyFlagsBuf |= 1;
 800d498:	4b22      	ldr	r3, [pc, #136]	@ (800d524 <getKeyFlags+0x100>)
 800d49a:	681b      	ldr	r3, [r3, #0]
 800d49c:	f043 0301 	orr.w	r3, r3, #1
 800d4a0:	4a20      	ldr	r2, [pc, #128]	@ (800d524 <getKeyFlags+0x100>)
 800d4a2:	6013      	str	r3, [r2, #0]
 800d4a4:	e005      	b.n	800d4b2 <getKeyFlags+0x8e>
        else
            keyFlagsBuf &= ~1;
 800d4a6:	4b1f      	ldr	r3, [pc, #124]	@ (800d524 <getKeyFlags+0x100>)
 800d4a8:	681b      	ldr	r3, [r3, #0]
 800d4aa:	f023 0301 	bic.w	r3, r3, #1
 800d4ae:	4a1d      	ldr	r2, [pc, #116]	@ (800d524 <getKeyFlags+0x100>)
 800d4b0:	6013      	str	r3, [r2, #0]

        if (flags.bits.b1)
 800d4b2:	4b19      	ldr	r3, [pc, #100]	@ (800d518 <getKeyFlags+0xf4>)
 800d4b4:	781b      	ldrb	r3, [r3, #0]
 800d4b6:	f003 0302 	and.w	r3, r3, #2
 800d4ba:	b2db      	uxtb	r3, r3
 800d4bc:	2b00      	cmp	r3, #0
 800d4be:	d006      	beq.n	800d4ce <getKeyFlags+0xaa>
            keyFlagsBuf |= 1 << 1;
 800d4c0:	4b18      	ldr	r3, [pc, #96]	@ (800d524 <getKeyFlags+0x100>)
 800d4c2:	681b      	ldr	r3, [r3, #0]
 800d4c4:	f043 0302 	orr.w	r3, r3, #2
 800d4c8:	4a16      	ldr	r2, [pc, #88]	@ (800d524 <getKeyFlags+0x100>)
 800d4ca:	6013      	str	r3, [r2, #0]
 800d4cc:	e005      	b.n	800d4da <getKeyFlags+0xb6>
        else
            keyFlagsBuf &= ~(1 << 1);
 800d4ce:	4b15      	ldr	r3, [pc, #84]	@ (800d524 <getKeyFlags+0x100>)
 800d4d0:	681b      	ldr	r3, [r3, #0]
 800d4d2:	f023 0302 	bic.w	r3, r3, #2
 800d4d6:	4a13      	ldr	r2, [pc, #76]	@ (800d524 <getKeyFlags+0x100>)
 800d4d8:	6013      	str	r3, [r2, #0]

        if (flags.bits.b2)
 800d4da:	4b0f      	ldr	r3, [pc, #60]	@ (800d518 <getKeyFlags+0xf4>)
 800d4dc:	781b      	ldrb	r3, [r3, #0]
 800d4de:	f003 0304 	and.w	r3, r3, #4
 800d4e2:	b2db      	uxtb	r3, r3
 800d4e4:	2b00      	cmp	r3, #0
 800d4e6:	d006      	beq.n	800d4f6 <getKeyFlags+0xd2>
            keyFlagsBuf |= 1 << 2;
 800d4e8:	4b0e      	ldr	r3, [pc, #56]	@ (800d524 <getKeyFlags+0x100>)
 800d4ea:	681b      	ldr	r3, [r3, #0]
 800d4ec:	f043 0304 	orr.w	r3, r3, #4
 800d4f0:	4a0c      	ldr	r2, [pc, #48]	@ (800d524 <getKeyFlags+0x100>)
 800d4f2:	6013      	str	r3, [r2, #0]
 800d4f4:	e00b      	b.n	800d50e <getKeyFlags+0xea>
        else
            keyFlagsBuf &= ~(1 << 2);
 800d4f6:	4b0b      	ldr	r3, [pc, #44]	@ (800d524 <getKeyFlags+0x100>)
 800d4f8:	681b      	ldr	r3, [r3, #0]
 800d4fa:	f023 0304 	bic.w	r3, r3, #4
 800d4fe:	4a09      	ldr	r2, [pc, #36]	@ (800d524 <getKeyFlags+0x100>)
 800d500:	6013      	str	r3, [r2, #0]
 800d502:	e004      	b.n	800d50e <getKeyFlags+0xea>
    }
    else
    {
        keyFlagsBak = flags.byte;
 800d504:	4b04      	ldr	r3, [pc, #16]	@ (800d518 <getKeyFlags+0xf4>)
 800d506:	781b      	ldrb	r3, [r3, #0]
 800d508:	461a      	mov	r2, r3
 800d50a:	4b05      	ldr	r3, [pc, #20]	@ (800d520 <getKeyFlags+0xfc>)
 800d50c:	601a      	str	r2, [r3, #0]
    }
#if DEBUG_KEY
    // displayStuff = keyFlagsBuf;
#endif

    return keyFlagsBuf;
 800d50e:	4b05      	ldr	r3, [pc, #20]	@ (800d524 <getKeyFlags+0x100>)
 800d510:	681b      	ldr	r3, [r3, #0]
}
 800d512:	4618      	mov	r0, r3
 800d514:	bd80      	pop	{r7, pc}
 800d516:	bf00      	nop
 800d518:	2000093c 	.word	0x2000093c
 800d51c:	48000800 	.word	0x48000800
 800d520:	20000940 	.word	0x20000940
 800d524:	20000944 	.word	0x20000944

0800d528 <keyScan>:

void keyScan()
{
 800d528:	b580      	push	{r7, lr}
 800d52a:	b082      	sub	sp, #8
 800d52c:	af00      	add	r7, sp, #0

    uint keyFlags;

    keyFlags = getKeyFlags();
 800d52e:	f7ff ff79 	bl	800d424 <getKeyFlags>
 800d532:	6038      	str	r0, [r7, #0]

    if (keyFlags == 0)
 800d534:	683b      	ldr	r3, [r7, #0]
 800d536:	2b00      	cmp	r3, #0
 800d538:	d13b      	bne.n	800d5b2 <keyScan+0x8a>
    {
        uchar i;
        for (i = 0; i < KEY_NUM; i++)
 800d53a:	2300      	movs	r3, #0
 800d53c:	71fb      	strb	r3, [r7, #7]
 800d53e:	e035      	b.n	800d5ac <keyScan+0x84>
        {
            if (keyStruct[i].keyType == LONG_WITH_SHORT && keyStruct[i].trigCnt > 0)
 800d540:	79fa      	ldrb	r2, [r7, #7]
 800d542:	4992      	ldr	r1, [pc, #584]	@ (800d78c <keyScan+0x264>)
 800d544:	4613      	mov	r3, r2
 800d546:	005b      	lsls	r3, r3, #1
 800d548:	4413      	add	r3, r2
 800d54a:	009b      	lsls	r3, r3, #2
 800d54c:	440b      	add	r3, r1
 800d54e:	781b      	ldrb	r3, [r3, #0]
 800d550:	2b01      	cmp	r3, #1
 800d552:	d114      	bne.n	800d57e <keyScan+0x56>
 800d554:	79fa      	ldrb	r2, [r7, #7]
 800d556:	498d      	ldr	r1, [pc, #564]	@ (800d78c <keyScan+0x264>)
 800d558:	4613      	mov	r3, r2
 800d55a:	005b      	lsls	r3, r3, #1
 800d55c:	4413      	add	r3, r2
 800d55e:	009b      	lsls	r3, r3, #2
 800d560:	440b      	add	r3, r1
 800d562:	3304      	adds	r3, #4
 800d564:	681b      	ldr	r3, [r3, #0]
 800d566:	2b00      	cmp	r3, #0
 800d568:	d009      	beq.n	800d57e <keyScan+0x56>
            {
                keyStruct[i].trigType = TRIG_SHORT;
 800d56a:	79fa      	ldrb	r2, [r7, #7]
 800d56c:	4987      	ldr	r1, [pc, #540]	@ (800d78c <keyScan+0x264>)
 800d56e:	4613      	mov	r3, r2
 800d570:	005b      	lsls	r3, r3, #1
 800d572:	4413      	add	r3, r2
 800d574:	009b      	lsls	r3, r3, #2
 800d576:	440b      	add	r3, r1
 800d578:	3308      	adds	r3, #8
 800d57a:	2201      	movs	r2, #1
 800d57c:	701a      	strb	r2, [r3, #0]
            }
            keyStruct[i].trigCnt = 0;
 800d57e:	79fa      	ldrb	r2, [r7, #7]
 800d580:	4982      	ldr	r1, [pc, #520]	@ (800d78c <keyScan+0x264>)
 800d582:	4613      	mov	r3, r2
 800d584:	005b      	lsls	r3, r3, #1
 800d586:	4413      	add	r3, r2
 800d588:	009b      	lsls	r3, r3, #2
 800d58a:	440b      	add	r3, r1
 800d58c:	3304      	adds	r3, #4
 800d58e:	2200      	movs	r2, #0
 800d590:	601a      	str	r2, [r3, #0]
            keyStruct[i].preKeyValue = NO_TRIG;
 800d592:	79fa      	ldrb	r2, [r7, #7]
 800d594:	497d      	ldr	r1, [pc, #500]	@ (800d78c <keyScan+0x264>)
 800d596:	4613      	mov	r3, r2
 800d598:	005b      	lsls	r3, r3, #1
 800d59a:	4413      	add	r3, r2
 800d59c:	009b      	lsls	r3, r3, #2
 800d59e:	440b      	add	r3, r1
 800d5a0:	3309      	adds	r3, #9
 800d5a2:	2200      	movs	r2, #0
 800d5a4:	701a      	strb	r2, [r3, #0]
        for (i = 0; i < KEY_NUM; i++)
 800d5a6:	79fb      	ldrb	r3, [r7, #7]
 800d5a8:	3301      	adds	r3, #1
 800d5aa:	71fb      	strb	r3, [r7, #7]
 800d5ac:	79fb      	ldrb	r3, [r7, #7]
 800d5ae:	2b03      	cmp	r3, #3
 800d5b0:	d9c6      	bls.n	800d540 <keyScan+0x18>
    //                keyStruct[0].trigType = keyStruct[1].preKeyValue;
    //            }
    //        }
    //    }

    if (keyStruct[1].preKeyValue == NO_TRIG)
 800d5b2:	4b76      	ldr	r3, [pc, #472]	@ (800d78c <keyScan+0x264>)
 800d5b4:	7d5b      	ldrb	r3, [r3, #21]
 800d5b6:	2b00      	cmp	r3, #0
 800d5b8:	d131      	bne.n	800d61e <keyScan+0xf6>
    {
        if (keyFlags == K(1))
 800d5ba:	683b      	ldr	r3, [r7, #0]
 800d5bc:	2b01      	cmp	r3, #1
 800d5be:	d15d      	bne.n	800d67c <keyScan+0x154>
        {
            if (keyStruct[1].preKeyValue == NO_TRIG)
 800d5c0:	4b72      	ldr	r3, [pc, #456]	@ (800d78c <keyScan+0x264>)
 800d5c2:	7d5b      	ldrb	r3, [r3, #21]
 800d5c4:	2b00      	cmp	r3, #0
 800d5c6:	d159      	bne.n	800d67c <keyScan+0x154>
            {
                if (keyStruct[1].keyType == SHORT || keyStruct[1].keyType == CONTINUOUS)
 800d5c8:	4b70      	ldr	r3, [pc, #448]	@ (800d78c <keyScan+0x264>)
 800d5ca:	7b1b      	ldrb	r3, [r3, #12]
 800d5cc:	2b00      	cmp	r3, #0
 800d5ce:	d003      	beq.n	800d5d8 <keyScan+0xb0>
 800d5d0:	4b6e      	ldr	r3, [pc, #440]	@ (800d78c <keyScan+0x264>)
 800d5d2:	7b1b      	ldrb	r3, [r3, #12]
 800d5d4:	2b02      	cmp	r3, #2
 800d5d6:	d106      	bne.n	800d5e6 <keyScan+0xbe>
                {
                    keyStruct[1].trigType = TRIG_SHORT;
 800d5d8:	4b6c      	ldr	r3, [pc, #432]	@ (800d78c <keyScan+0x264>)
 800d5da:	2201      	movs	r2, #1
 800d5dc:	751a      	strb	r2, [r3, #20]
                    keyStruct[1].preKeyValue = TRIG_SHORT;
 800d5de:	4b6b      	ldr	r3, [pc, #428]	@ (800d78c <keyScan+0x264>)
 800d5e0:	2201      	movs	r2, #1
 800d5e2:	755a      	strb	r2, [r3, #21]
 800d5e4:	e04a      	b.n	800d67c <keyScan+0x154>
                }
                else if (keyStruct[1].keyType == LONG_WITH_SHORT || keyStruct[1].keyType == LONG)
 800d5e6:	4b69      	ldr	r3, [pc, #420]	@ (800d78c <keyScan+0x264>)
 800d5e8:	7b1b      	ldrb	r3, [r3, #12]
 800d5ea:	2b01      	cmp	r3, #1
 800d5ec:	d003      	beq.n	800d5f6 <keyScan+0xce>
 800d5ee:	4b67      	ldr	r3, [pc, #412]	@ (800d78c <keyScan+0x264>)
 800d5f0:	7b1b      	ldrb	r3, [r3, #12]
 800d5f2:	2b03      	cmp	r3, #3
 800d5f4:	d142      	bne.n	800d67c <keyScan+0x154>
                {
                    if (++keyStruct[1].trigCnt >= KEY1_LONG_CNT)
 800d5f6:	4b65      	ldr	r3, [pc, #404]	@ (800d78c <keyScan+0x264>)
 800d5f8:	691b      	ldr	r3, [r3, #16]
 800d5fa:	3301      	adds	r3, #1
 800d5fc:	4a63      	ldr	r2, [pc, #396]	@ (800d78c <keyScan+0x264>)
 800d5fe:	6113      	str	r3, [r2, #16]
 800d600:	4b62      	ldr	r3, [pc, #392]	@ (800d78c <keyScan+0x264>)
 800d602:	691b      	ldr	r3, [r3, #16]
 800d604:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 800d608:	d338      	bcc.n	800d67c <keyScan+0x154>
                    {
                        keyStruct[1].trigCnt = 0;
 800d60a:	4b60      	ldr	r3, [pc, #384]	@ (800d78c <keyScan+0x264>)
 800d60c:	2200      	movs	r2, #0
 800d60e:	611a      	str	r2, [r3, #16]
                        keyStruct[1].trigType = TRIG_LONG;
 800d610:	4b5e      	ldr	r3, [pc, #376]	@ (800d78c <keyScan+0x264>)
 800d612:	2202      	movs	r2, #2
 800d614:	751a      	strb	r2, [r3, #20]
                        keyStruct[1].preKeyValue = TRIG_LONG;
 800d616:	4b5d      	ldr	r3, [pc, #372]	@ (800d78c <keyScan+0x264>)
 800d618:	2202      	movs	r2, #2
 800d61a:	755a      	strb	r2, [r3, #21]
 800d61c:	e02e      	b.n	800d67c <keyScan+0x154>
                    }
                }
            }
        }
    }
    else if (keyStruct[1].keyType == CONTINUOUS)
 800d61e:	4b5b      	ldr	r3, [pc, #364]	@ (800d78c <keyScan+0x264>)
 800d620:	7b1b      	ldrb	r3, [r3, #12]
 800d622:	2b02      	cmp	r3, #2
 800d624:	d12a      	bne.n	800d67c <keyScan+0x154>
    {
        if (keyStruct[1].preKeyValue == TRIG_SHORT) // short key
 800d626:	4b59      	ldr	r3, [pc, #356]	@ (800d78c <keyScan+0x264>)
 800d628:	7d5b      	ldrb	r3, [r3, #21]
 800d62a:	2b01      	cmp	r3, #1
 800d62c:	d112      	bne.n	800d654 <keyScan+0x12c>
        {
            if (++keyStruct[1].trigCnt >= CONTINUOUS_TRIG_CNT)
 800d62e:	4b57      	ldr	r3, [pc, #348]	@ (800d78c <keyScan+0x264>)
 800d630:	691b      	ldr	r3, [r3, #16]
 800d632:	3301      	adds	r3, #1
 800d634:	4a55      	ldr	r2, [pc, #340]	@ (800d78c <keyScan+0x264>)
 800d636:	6113      	str	r3, [r2, #16]
 800d638:	4b54      	ldr	r3, [pc, #336]	@ (800d78c <keyScan+0x264>)
 800d63a:	691b      	ldr	r3, [r3, #16]
 800d63c:	2b63      	cmp	r3, #99	@ 0x63
 800d63e:	d91d      	bls.n	800d67c <keyScan+0x154>
            {
                keyStruct[1].trigCnt = 0;
 800d640:	4b52      	ldr	r3, [pc, #328]	@ (800d78c <keyScan+0x264>)
 800d642:	2200      	movs	r2, #0
 800d644:	611a      	str	r2, [r3, #16]
                keyStruct[1].trigType = TRIG_LONG; // long
 800d646:	4b51      	ldr	r3, [pc, #324]	@ (800d78c <keyScan+0x264>)
 800d648:	2202      	movs	r2, #2
 800d64a:	751a      	strb	r2, [r3, #20]
                keyStruct[1].preKeyValue = TRIG_LONG;
 800d64c:	4b4f      	ldr	r3, [pc, #316]	@ (800d78c <keyScan+0x264>)
 800d64e:	2202      	movs	r2, #2
 800d650:	755a      	strb	r2, [r3, #21]
 800d652:	e013      	b.n	800d67c <keyScan+0x154>
            }
        }
        else if (keyStruct[1].preKeyValue == TRIG_LONG) // long key
 800d654:	4b4d      	ldr	r3, [pc, #308]	@ (800d78c <keyScan+0x264>)
 800d656:	7d5b      	ldrb	r3, [r3, #21]
 800d658:	2b02      	cmp	r3, #2
 800d65a:	d10f      	bne.n	800d67c <keyScan+0x154>
        {
            if (++keyStruct[1].trigCnt >= CONTINUOUS_INTEVAL)
 800d65c:	4b4b      	ldr	r3, [pc, #300]	@ (800d78c <keyScan+0x264>)
 800d65e:	691b      	ldr	r3, [r3, #16]
 800d660:	3301      	adds	r3, #1
 800d662:	4a4a      	ldr	r2, [pc, #296]	@ (800d78c <keyScan+0x264>)
 800d664:	6113      	str	r3, [r2, #16]
 800d666:	4b49      	ldr	r3, [pc, #292]	@ (800d78c <keyScan+0x264>)
 800d668:	691b      	ldr	r3, [r3, #16]
 800d66a:	2b27      	cmp	r3, #39	@ 0x27
 800d66c:	d906      	bls.n	800d67c <keyScan+0x154>
            {
                keyStruct[1].trigCnt = 0;
 800d66e:	4b47      	ldr	r3, [pc, #284]	@ (800d78c <keyScan+0x264>)
 800d670:	2200      	movs	r2, #0
 800d672:	611a      	str	r2, [r3, #16]
                keyStruct[1].trigType = keyStruct[1].preKeyValue;
 800d674:	4b45      	ldr	r3, [pc, #276]	@ (800d78c <keyScan+0x264>)
 800d676:	7d5a      	ldrb	r2, [r3, #21]
 800d678:	4b44      	ldr	r3, [pc, #272]	@ (800d78c <keyScan+0x264>)
 800d67a:	751a      	strb	r2, [r3, #20]
            }
        }
    }

    if (keyStruct[2].preKeyValue == NO_TRIG)
 800d67c:	4b43      	ldr	r3, [pc, #268]	@ (800d78c <keyScan+0x264>)
 800d67e:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800d682:	2b00      	cmp	r3, #0
 800d684:	d131      	bne.n	800d6ea <keyScan+0x1c2>
    {
        if (keyFlags == K(2))
 800d686:	683b      	ldr	r3, [r7, #0]
 800d688:	2b02      	cmp	r3, #2
 800d68a:	d163      	bne.n	800d754 <keyScan+0x22c>
        {

            if (keyStruct[2].keyType == SHORT || keyStruct[2].keyType == CONTINUOUS)
 800d68c:	4b3f      	ldr	r3, [pc, #252]	@ (800d78c <keyScan+0x264>)
 800d68e:	7e1b      	ldrb	r3, [r3, #24]
 800d690:	2b00      	cmp	r3, #0
 800d692:	d003      	beq.n	800d69c <keyScan+0x174>
 800d694:	4b3d      	ldr	r3, [pc, #244]	@ (800d78c <keyScan+0x264>)
 800d696:	7e1b      	ldrb	r3, [r3, #24]
 800d698:	2b02      	cmp	r3, #2
 800d69a:	d108      	bne.n	800d6ae <keyScan+0x186>
            {
                keyStruct[2].trigType = TRIG_SHORT;
 800d69c:	4b3b      	ldr	r3, [pc, #236]	@ (800d78c <keyScan+0x264>)
 800d69e:	2201      	movs	r2, #1
 800d6a0:	f883 2020 	strb.w	r2, [r3, #32]
                keyStruct[2].preKeyValue = TRIG_SHORT;
 800d6a4:	4b39      	ldr	r3, [pc, #228]	@ (800d78c <keyScan+0x264>)
 800d6a6:	2201      	movs	r2, #1
 800d6a8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 800d6ac:	e052      	b.n	800d754 <keyScan+0x22c>
            }
            else if (keyStruct[2].keyType == LONG_WITH_SHORT || keyStruct[2].keyType == LONG)
 800d6ae:	4b37      	ldr	r3, [pc, #220]	@ (800d78c <keyScan+0x264>)
 800d6b0:	7e1b      	ldrb	r3, [r3, #24]
 800d6b2:	2b01      	cmp	r3, #1
 800d6b4:	d003      	beq.n	800d6be <keyScan+0x196>
 800d6b6:	4b35      	ldr	r3, [pc, #212]	@ (800d78c <keyScan+0x264>)
 800d6b8:	7e1b      	ldrb	r3, [r3, #24]
 800d6ba:	2b03      	cmp	r3, #3
 800d6bc:	d14a      	bne.n	800d754 <keyScan+0x22c>
            {
                if (++keyStruct[2].trigCnt >= KEY2_LONG_CNT)
 800d6be:	4b33      	ldr	r3, [pc, #204]	@ (800d78c <keyScan+0x264>)
 800d6c0:	69db      	ldr	r3, [r3, #28]
 800d6c2:	3301      	adds	r3, #1
 800d6c4:	4a31      	ldr	r2, [pc, #196]	@ (800d78c <keyScan+0x264>)
 800d6c6:	61d3      	str	r3, [r2, #28]
 800d6c8:	4b30      	ldr	r3, [pc, #192]	@ (800d78c <keyScan+0x264>)
 800d6ca:	69db      	ldr	r3, [r3, #28]
 800d6cc:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 800d6d0:	d340      	bcc.n	800d754 <keyScan+0x22c>
                {
                    keyStruct[2].trigCnt = 0;
 800d6d2:	4b2e      	ldr	r3, [pc, #184]	@ (800d78c <keyScan+0x264>)
 800d6d4:	2200      	movs	r2, #0
 800d6d6:	61da      	str	r2, [r3, #28]
                    keyStruct[2].trigType = TRIG_LONG;
 800d6d8:	4b2c      	ldr	r3, [pc, #176]	@ (800d78c <keyScan+0x264>)
 800d6da:	2202      	movs	r2, #2
 800d6dc:	f883 2020 	strb.w	r2, [r3, #32]
                    keyStruct[2].preKeyValue = TRIG_LONG;
 800d6e0:	4b2a      	ldr	r3, [pc, #168]	@ (800d78c <keyScan+0x264>)
 800d6e2:	2202      	movs	r2, #2
 800d6e4:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 800d6e8:	e034      	b.n	800d754 <keyScan+0x22c>
                }
            }
        }
    }
    else if (keyStruct[2].keyType == CONTINUOUS)
 800d6ea:	4b28      	ldr	r3, [pc, #160]	@ (800d78c <keyScan+0x264>)
 800d6ec:	7e1b      	ldrb	r3, [r3, #24]
 800d6ee:	2b02      	cmp	r3, #2
 800d6f0:	d130      	bne.n	800d754 <keyScan+0x22c>
    {
        if (keyStruct[2].preKeyValue == TRIG_SHORT) // short key
 800d6f2:	4b26      	ldr	r3, [pc, #152]	@ (800d78c <keyScan+0x264>)
 800d6f4:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800d6f8:	2b01      	cmp	r3, #1
 800d6fa:	d114      	bne.n	800d726 <keyScan+0x1fe>
        {
            if (++keyStruct[2].trigCnt >= CONTINUOUS_TRIG_CNT)
 800d6fc:	4b23      	ldr	r3, [pc, #140]	@ (800d78c <keyScan+0x264>)
 800d6fe:	69db      	ldr	r3, [r3, #28]
 800d700:	3301      	adds	r3, #1
 800d702:	4a22      	ldr	r2, [pc, #136]	@ (800d78c <keyScan+0x264>)
 800d704:	61d3      	str	r3, [r2, #28]
 800d706:	4b21      	ldr	r3, [pc, #132]	@ (800d78c <keyScan+0x264>)
 800d708:	69db      	ldr	r3, [r3, #28]
 800d70a:	2b63      	cmp	r3, #99	@ 0x63
 800d70c:	d922      	bls.n	800d754 <keyScan+0x22c>
            {
                keyStruct[2].trigCnt = 0;
 800d70e:	4b1f      	ldr	r3, [pc, #124]	@ (800d78c <keyScan+0x264>)
 800d710:	2200      	movs	r2, #0
 800d712:	61da      	str	r2, [r3, #28]
                keyStruct[2].trigType = TRIG_LONG; // long
 800d714:	4b1d      	ldr	r3, [pc, #116]	@ (800d78c <keyScan+0x264>)
 800d716:	2202      	movs	r2, #2
 800d718:	f883 2020 	strb.w	r2, [r3, #32]
                keyStruct[2].preKeyValue = TRIG_LONG;
 800d71c:	4b1b      	ldr	r3, [pc, #108]	@ (800d78c <keyScan+0x264>)
 800d71e:	2202      	movs	r2, #2
 800d720:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 800d724:	e016      	b.n	800d754 <keyScan+0x22c>
            }
        }
        else if (keyStruct[2].preKeyValue == TRIG_LONG) // long key
 800d726:	4b19      	ldr	r3, [pc, #100]	@ (800d78c <keyScan+0x264>)
 800d728:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800d72c:	2b02      	cmp	r3, #2
 800d72e:	d111      	bne.n	800d754 <keyScan+0x22c>
        {
            if (++keyStruct[2].trigCnt >= CONTINUOUS_INTEVAL)
 800d730:	4b16      	ldr	r3, [pc, #88]	@ (800d78c <keyScan+0x264>)
 800d732:	69db      	ldr	r3, [r3, #28]
 800d734:	3301      	adds	r3, #1
 800d736:	4a15      	ldr	r2, [pc, #84]	@ (800d78c <keyScan+0x264>)
 800d738:	61d3      	str	r3, [r2, #28]
 800d73a:	4b14      	ldr	r3, [pc, #80]	@ (800d78c <keyScan+0x264>)
 800d73c:	69db      	ldr	r3, [r3, #28]
 800d73e:	2b27      	cmp	r3, #39	@ 0x27
 800d740:	d908      	bls.n	800d754 <keyScan+0x22c>
            {
                keyStruct[2].trigCnt = 0;
 800d742:	4b12      	ldr	r3, [pc, #72]	@ (800d78c <keyScan+0x264>)
 800d744:	2200      	movs	r2, #0
 800d746:	61da      	str	r2, [r3, #28]
                keyStruct[2].trigType = keyStruct[2].preKeyValue;
 800d748:	4b10      	ldr	r3, [pc, #64]	@ (800d78c <keyScan+0x264>)
 800d74a:	f893 2021 	ldrb.w	r2, [r3, #33]	@ 0x21
 800d74e:	4b0f      	ldr	r3, [pc, #60]	@ (800d78c <keyScan+0x264>)
 800d750:	f883 2020 	strb.w	r2, [r3, #32]
            }
        }
    }

    if (keyStruct[3].preKeyValue == NO_TRIG)
 800d754:	4b0d      	ldr	r3, [pc, #52]	@ (800d78c <keyScan+0x264>)
 800d756:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
 800d75a:	2b00      	cmp	r3, #0
 800d75c:	d137      	bne.n	800d7ce <keyScan+0x2a6>
    {
        if (keyFlags == K(3))
 800d75e:	683b      	ldr	r3, [r7, #0]
 800d760:	2b04      	cmp	r3, #4
 800d762:	d16a      	bne.n	800d83a <keyScan+0x312>
        {
            if (keyStruct[3].keyType == SHORT || keyStruct[3].keyType == CONTINUOUS)
 800d764:	4b09      	ldr	r3, [pc, #36]	@ (800d78c <keyScan+0x264>)
 800d766:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800d76a:	2b00      	cmp	r3, #0
 800d76c:	d004      	beq.n	800d778 <keyScan+0x250>
 800d76e:	4b07      	ldr	r3, [pc, #28]	@ (800d78c <keyScan+0x264>)
 800d770:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800d774:	2b02      	cmp	r3, #2
 800d776:	d10b      	bne.n	800d790 <keyScan+0x268>
            {
                keyStruct[3].trigType = TRIG_SHORT;
 800d778:	4b04      	ldr	r3, [pc, #16]	@ (800d78c <keyScan+0x264>)
 800d77a:	2201      	movs	r2, #1
 800d77c:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
                keyStruct[3].preKeyValue = TRIG_SHORT;
 800d780:	4b02      	ldr	r3, [pc, #8]	@ (800d78c <keyScan+0x264>)
 800d782:	2201      	movs	r2, #1
 800d784:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
                keyStruct[3].trigCnt = 0;
                keyStruct[3].trigType = keyStruct[3].preKeyValue;
            }
        }
    }
}
 800d788:	e057      	b.n	800d83a <keyScan+0x312>
 800d78a:	bf00      	nop
 800d78c:	2000090c 	.word	0x2000090c
            else if (keyStruct[3].keyType == LONG_WITH_SHORT || keyStruct[3].keyType == LONG)
 800d790:	4b2c      	ldr	r3, [pc, #176]	@ (800d844 <keyScan+0x31c>)
 800d792:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800d796:	2b01      	cmp	r3, #1
 800d798:	d004      	beq.n	800d7a4 <keyScan+0x27c>
 800d79a:	4b2a      	ldr	r3, [pc, #168]	@ (800d844 <keyScan+0x31c>)
 800d79c:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800d7a0:	2b03      	cmp	r3, #3
 800d7a2:	d14a      	bne.n	800d83a <keyScan+0x312>
                if (++keyStruct[3].trigCnt >= KEY3_LONG_CNT)
 800d7a4:	4b27      	ldr	r3, [pc, #156]	@ (800d844 <keyScan+0x31c>)
 800d7a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d7a8:	3301      	adds	r3, #1
 800d7aa:	4a26      	ldr	r2, [pc, #152]	@ (800d844 <keyScan+0x31c>)
 800d7ac:	6293      	str	r3, [r2, #40]	@ 0x28
 800d7ae:	4b25      	ldr	r3, [pc, #148]	@ (800d844 <keyScan+0x31c>)
 800d7b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d7b2:	2b00      	cmp	r3, #0
 800d7b4:	d041      	beq.n	800d83a <keyScan+0x312>
                    keyStruct[3].trigCnt = 0;
 800d7b6:	4b23      	ldr	r3, [pc, #140]	@ (800d844 <keyScan+0x31c>)
 800d7b8:	2200      	movs	r2, #0
 800d7ba:	629a      	str	r2, [r3, #40]	@ 0x28
                    keyStruct[3].trigType = TRIG_LONG;
 800d7bc:	4b21      	ldr	r3, [pc, #132]	@ (800d844 <keyScan+0x31c>)
 800d7be:	2202      	movs	r2, #2
 800d7c0:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
                    keyStruct[3].preKeyValue = TRIG_LONG;
 800d7c4:	4b1f      	ldr	r3, [pc, #124]	@ (800d844 <keyScan+0x31c>)
 800d7c6:	2202      	movs	r2, #2
 800d7c8:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
}
 800d7cc:	e035      	b.n	800d83a <keyScan+0x312>
    else if (keyStruct[3].keyType == CONTINUOUS)
 800d7ce:	4b1d      	ldr	r3, [pc, #116]	@ (800d844 <keyScan+0x31c>)
 800d7d0:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800d7d4:	2b02      	cmp	r3, #2
 800d7d6:	d130      	bne.n	800d83a <keyScan+0x312>
        if (keyStruct[3].preKeyValue == TRIG_SHORT) // short key
 800d7d8:	4b1a      	ldr	r3, [pc, #104]	@ (800d844 <keyScan+0x31c>)
 800d7da:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
 800d7de:	2b01      	cmp	r3, #1
 800d7e0:	d114      	bne.n	800d80c <keyScan+0x2e4>
            if (++keyStruct[3].trigCnt >= CONTINUOUS_TRIG_CNT)
 800d7e2:	4b18      	ldr	r3, [pc, #96]	@ (800d844 <keyScan+0x31c>)
 800d7e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d7e6:	3301      	adds	r3, #1
 800d7e8:	4a16      	ldr	r2, [pc, #88]	@ (800d844 <keyScan+0x31c>)
 800d7ea:	6293      	str	r3, [r2, #40]	@ 0x28
 800d7ec:	4b15      	ldr	r3, [pc, #84]	@ (800d844 <keyScan+0x31c>)
 800d7ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d7f0:	2b63      	cmp	r3, #99	@ 0x63
 800d7f2:	d922      	bls.n	800d83a <keyScan+0x312>
                keyStruct[3].trigCnt = 0;
 800d7f4:	4b13      	ldr	r3, [pc, #76]	@ (800d844 <keyScan+0x31c>)
 800d7f6:	2200      	movs	r2, #0
 800d7f8:	629a      	str	r2, [r3, #40]	@ 0x28
                keyStruct[3].trigType = TRIG_LONG; // long
 800d7fa:	4b12      	ldr	r3, [pc, #72]	@ (800d844 <keyScan+0x31c>)
 800d7fc:	2202      	movs	r2, #2
 800d7fe:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
                keyStruct[3].preKeyValue = TRIG_LONG;
 800d802:	4b10      	ldr	r3, [pc, #64]	@ (800d844 <keyScan+0x31c>)
 800d804:	2202      	movs	r2, #2
 800d806:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
}
 800d80a:	e016      	b.n	800d83a <keyScan+0x312>
        else if (keyStruct[3].preKeyValue == TRIG_LONG) // long key
 800d80c:	4b0d      	ldr	r3, [pc, #52]	@ (800d844 <keyScan+0x31c>)
 800d80e:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
 800d812:	2b02      	cmp	r3, #2
 800d814:	d111      	bne.n	800d83a <keyScan+0x312>
            if (++keyStruct[3].trigCnt >= CONTINUOUS_INTEVAL)
 800d816:	4b0b      	ldr	r3, [pc, #44]	@ (800d844 <keyScan+0x31c>)
 800d818:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d81a:	3301      	adds	r3, #1
 800d81c:	4a09      	ldr	r2, [pc, #36]	@ (800d844 <keyScan+0x31c>)
 800d81e:	6293      	str	r3, [r2, #40]	@ 0x28
 800d820:	4b08      	ldr	r3, [pc, #32]	@ (800d844 <keyScan+0x31c>)
 800d822:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d824:	2b27      	cmp	r3, #39	@ 0x27
 800d826:	d908      	bls.n	800d83a <keyScan+0x312>
                keyStruct[3].trigCnt = 0;
 800d828:	4b06      	ldr	r3, [pc, #24]	@ (800d844 <keyScan+0x31c>)
 800d82a:	2200      	movs	r2, #0
 800d82c:	629a      	str	r2, [r3, #40]	@ 0x28
                keyStruct[3].trigType = keyStruct[3].preKeyValue;
 800d82e:	4b05      	ldr	r3, [pc, #20]	@ (800d844 <keyScan+0x31c>)
 800d830:	f893 202d 	ldrb.w	r2, [r3, #45]	@ 0x2d
 800d834:	4b03      	ldr	r3, [pc, #12]	@ (800d844 <keyScan+0x31c>)
 800d836:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
}
 800d83a:	bf00      	nop
 800d83c:	3708      	adds	r7, #8
 800d83e:	46bd      	mov	sp, r7
 800d840:	bd80      	pop	{r7, pc}
 800d842:	bf00      	nop
 800d844:	2000090c 	.word	0x2000090c

0800d848 <getKeyState>:

/*
将物理按键转化为逻辑按键
 */
void getKeyState(KeyState *keyState)
{
 800d848:	b480      	push	{r7}
 800d84a:	b085      	sub	sp, #20
 800d84c:	af00      	add	r7, sp, #0
 800d84e:	6078      	str	r0, [r7, #4]
    uchar i;

    if (keyStruct[1].trigType == TRIG_SHORT)
 800d850:	4b1b      	ldr	r3, [pc, #108]	@ (800d8c0 <getKeyState+0x78>)
 800d852:	7d1b      	ldrb	r3, [r3, #20]
 800d854:	2b01      	cmp	r3, #1
 800d856:	d103      	bne.n	800d860 <getKeyState+0x18>
        *keyState = USER1_SHORT;
 800d858:	687b      	ldr	r3, [r7, #4]
 800d85a:	2201      	movs	r2, #1
 800d85c:	701a      	strb	r2, [r3, #0]
 800d85e:	e014      	b.n	800d88a <getKeyState+0x42>
    else if (keyStruct[2].trigType == TRIG_SHORT)
 800d860:	4b17      	ldr	r3, [pc, #92]	@ (800d8c0 <getKeyState+0x78>)
 800d862:	f893 3020 	ldrb.w	r3, [r3, #32]
 800d866:	2b01      	cmp	r3, #1
 800d868:	d103      	bne.n	800d872 <getKeyState+0x2a>
        *keyState = USER2_SHORT;
 800d86a:	687b      	ldr	r3, [r7, #4]
 800d86c:	2202      	movs	r2, #2
 800d86e:	701a      	strb	r2, [r3, #0]
 800d870:	e00b      	b.n	800d88a <getKeyState+0x42>
    else if (keyStruct[3].trigType == TRIG_SHORT)
 800d872:	4b13      	ldr	r3, [pc, #76]	@ (800d8c0 <getKeyState+0x78>)
 800d874:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 800d878:	2b01      	cmp	r3, #1
 800d87a:	d103      	bne.n	800d884 <getKeyState+0x3c>
        *keyState = USER3_SHORT;
 800d87c:	687b      	ldr	r3, [r7, #4]
 800d87e:	2203      	movs	r2, #3
 800d880:	701a      	strb	r2, [r3, #0]
 800d882:	e002      	b.n	800d88a <getKeyState+0x42>
    else
        *keyState = NONE_KEY;
 800d884:	687b      	ldr	r3, [r7, #4]
 800d886:	2200      	movs	r2, #0
 800d888:	701a      	strb	r2, [r3, #0]

    for (i = 0; i < KEY_NUM; i++)
 800d88a:	2300      	movs	r3, #0
 800d88c:	73fb      	strb	r3, [r7, #15]
 800d88e:	e00c      	b.n	800d8aa <getKeyState+0x62>
    {
        keyStruct[i].trigType = NO_TRIG;
 800d890:	7bfa      	ldrb	r2, [r7, #15]
 800d892:	490b      	ldr	r1, [pc, #44]	@ (800d8c0 <getKeyState+0x78>)
 800d894:	4613      	mov	r3, r2
 800d896:	005b      	lsls	r3, r3, #1
 800d898:	4413      	add	r3, r2
 800d89a:	009b      	lsls	r3, r3, #2
 800d89c:	440b      	add	r3, r1
 800d89e:	3308      	adds	r3, #8
 800d8a0:	2200      	movs	r2, #0
 800d8a2:	701a      	strb	r2, [r3, #0]
    for (i = 0; i < KEY_NUM; i++)
 800d8a4:	7bfb      	ldrb	r3, [r7, #15]
 800d8a6:	3301      	adds	r3, #1
 800d8a8:	73fb      	strb	r3, [r7, #15]
 800d8aa:	7bfb      	ldrb	r3, [r7, #15]
 800d8ac:	2b03      	cmp	r3, #3
 800d8ae:	d9ef      	bls.n	800d890 <getKeyState+0x48>
    }
}
 800d8b0:	bf00      	nop
 800d8b2:	bf00      	nop
 800d8b4:	3714      	adds	r7, #20
 800d8b6:	46bd      	mov	sp, r7
 800d8b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8bc:	4770      	bx	lr
 800d8be:	bf00      	nop
 800d8c0:	2000090c 	.word	0x2000090c

0800d8c4 <LED_drive>:
#include "led.h"

bool led1On, led2On;

void LED_drive()
{
 800d8c4:	b580      	push	{r7, lr}
 800d8c6:	af00      	add	r7, sp, #0
    if (led1On)
 800d8c8:	4b0f      	ldr	r3, [pc, #60]	@ (800d908 <LED_drive+0x44>)
 800d8ca:	781b      	ldrb	r3, [r3, #0]
 800d8cc:	2b00      	cmp	r3, #0
 800d8ce:	d005      	beq.n	800d8dc <LED_drive+0x18>
        LED1_ON;
 800d8d0:	2200      	movs	r2, #0
 800d8d2:	2140      	movs	r1, #64	@ 0x40
 800d8d4:	480d      	ldr	r0, [pc, #52]	@ (800d90c <LED_drive+0x48>)
 800d8d6:	f7f8 ff8d 	bl	80067f4 <HAL_GPIO_WritePin>
 800d8da:	e004      	b.n	800d8e6 <LED_drive+0x22>
    else
        LED1_OFF;
 800d8dc:	2201      	movs	r2, #1
 800d8de:	2140      	movs	r1, #64	@ 0x40
 800d8e0:	480a      	ldr	r0, [pc, #40]	@ (800d90c <LED_drive+0x48>)
 800d8e2:	f7f8 ff87 	bl	80067f4 <HAL_GPIO_WritePin>

    if (led2On)
 800d8e6:	4b0a      	ldr	r3, [pc, #40]	@ (800d910 <LED_drive+0x4c>)
 800d8e8:	781b      	ldrb	r3, [r3, #0]
 800d8ea:	2b00      	cmp	r3, #0
 800d8ec:	d005      	beq.n	800d8fa <LED_drive+0x36>
        LED2_ON;
 800d8ee:	2200      	movs	r2, #0
 800d8f0:	2110      	movs	r1, #16
 800d8f2:	4806      	ldr	r0, [pc, #24]	@ (800d90c <LED_drive+0x48>)
 800d8f4:	f7f8 ff7e 	bl	80067f4 <HAL_GPIO_WritePin>
    else
        LED2_OFF;
}
 800d8f8:	e004      	b.n	800d904 <LED_drive+0x40>
        LED2_OFF;
 800d8fa:	2201      	movs	r2, #1
 800d8fc:	2110      	movs	r1, #16
 800d8fe:	4803      	ldr	r0, [pc, #12]	@ (800d90c <LED_drive+0x48>)
 800d900:	f7f8 ff78 	bl	80067f4 <HAL_GPIO_WritePin>
}
 800d904:	bf00      	nop
 800d906:	bd80      	pop	{r7, pc}
 800d908:	20000948 	.word	0x20000948
 800d90c:	48000800 	.word	0x48000800
 800d910:	20000949 	.word	0x20000949

0800d914 <MT6701_GetRawData>:
#include "math_utils.h"
#include "time_utils.h"
// static unsigned int rotationCount, rotationCount_Last;

uint16_t MT6701_GetRawData(void)
{
 800d914:	b580      	push	{r7, lr}
 800d916:	b084      	sub	sp, #16
 800d918:	af02      	add	r7, sp, #8
    uint16_t rawData;
    uint16_t txData = 0xFFFF;
 800d91a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800d91e:	803b      	strh	r3, [r7, #0]
    uint16_t timeOut = 200;
 800d920:	23c8      	movs	r3, #200	@ 0xc8
 800d922:	80fb      	strh	r3, [r7, #6]

    while (HAL_SPI_GetState(&hspi1) != HAL_SPI_STATE_READY)
 800d924:	e006      	b.n	800d934 <MT6701_GetRawData+0x20>
    {
        if (timeOut-- == 0)
 800d926:	88fb      	ldrh	r3, [r7, #6]
 800d928:	1e5a      	subs	r2, r3, #1
 800d92a:	80fa      	strh	r2, [r7, #6]
 800d92c:	2b00      	cmp	r3, #0
 800d92e:	d101      	bne.n	800d934 <MT6701_GetRawData+0x20>
        {
            //   FOC_log("SPI state error!\r\n");
            return 0; // 在超时时直接返回，避免继续执行后续代码
 800d930:	2300      	movs	r3, #0
 800d932:	e025      	b.n	800d980 <MT6701_GetRawData+0x6c>
    while (HAL_SPI_GetState(&hspi1) != HAL_SPI_STATE_READY)
 800d934:	4814      	ldr	r0, [pc, #80]	@ (800d988 <MT6701_GetRawData+0x74>)
 800d936:	f7fa fb16 	bl	8007f66 <HAL_SPI_GetState>
 800d93a:	4603      	mov	r3, r0
 800d93c:	2b01      	cmp	r3, #1
 800d93e:	d1f2      	bne.n	800d926 <MT6701_GetRawData+0x12>
        }
    }

    MT6701_CS_Enable;
 800d940:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800d944:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800d948:	619a      	str	r2, [r3, #24]

    HAL_StatusTypeDef spiStatus = HAL_SPI_TransmitReceive(&hspi1, (uint8_t *)&txData, (uint8_t *)&rawData, 1, HAL_MAX_DELAY);
 800d94a:	1cba      	adds	r2, r7, #2
 800d94c:	4639      	mov	r1, r7
 800d94e:	f04f 33ff 	mov.w	r3, #4294967295
 800d952:	9300      	str	r3, [sp, #0]
 800d954:	2301      	movs	r3, #1
 800d956:	480c      	ldr	r0, [pc, #48]	@ (800d988 <MT6701_GetRawData+0x74>)
 800d958:	f7fa f8e3 	bl	8007b22 <HAL_SPI_TransmitReceive>
 800d95c:	4603      	mov	r3, r0
 800d95e:	717b      	strb	r3, [r7, #5]
    if (spiStatus != HAL_OK)
 800d960:	797b      	ldrb	r3, [r7, #5]
 800d962:	2b00      	cmp	r3, #0
 800d964:	d005      	beq.n	800d972 <MT6701_GetRawData+0x5e>
    {
        MT6701_CS_Disable;
 800d966:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800d96a:	2210      	movs	r2, #16
 800d96c:	619a      	str	r2, [r3, #24]
        //  FOC_log("MT6701 read data error!\r\n");
        return 0; // 在SPI传输错误时直接返回，避免继续执行后续代码
 800d96e:	2300      	movs	r3, #0
 800d970:	e006      	b.n	800d980 <MT6701_GetRawData+0x6c>
    }

    MT6701_CS_Disable;
 800d972:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800d976:	2210      	movs	r2, #16
 800d978:	619a      	str	r2, [r3, #24]

    return rawData >> 2; // 取高14位的角度数据
 800d97a:	887b      	ldrh	r3, [r7, #2]
 800d97c:	089b      	lsrs	r3, r3, #2
 800d97e:	b29b      	uxth	r3, r3
}
 800d980:	4618      	mov	r0, r3
 800d982:	3708      	adds	r7, #8
 800d984:	46bd      	mov	sp, r7
 800d986:	bd80      	pop	{r7, pc}
 800d988:	200004a0 	.word	0x200004a0

0800d98c <MT6701_GetRawAngle>:

// 将传感器原始数据转化为弧度
float MT6701_GetRawAngle(void)
{
 800d98c:	b580      	push	{r7, lr}
 800d98e:	b082      	sub	sp, #8
 800d990:	af00      	add	r7, sp, #0
    uint16_t rawData = MT6701_GetRawData();
 800d992:	f7ff ffbf 	bl	800d914 <MT6701_GetRawData>
 800d996:	4603      	mov	r3, r0
 800d998:	80fb      	strh	r3, [r7, #6]
    return (float)rawData / 16384.0f * _2PI;
 800d99a:	88fb      	ldrh	r3, [r7, #6]
 800d99c:	ee07 3a90 	vmov	s15, r3
 800d9a0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800d9a4:	eddf 6a06 	vldr	s13, [pc, #24]	@ 800d9c0 <MT6701_GetRawAngle+0x34>
 800d9a8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800d9ac:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 800d9c4 <MT6701_GetRawAngle+0x38>
 800d9b0:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 800d9b4:	eeb0 0a67 	vmov.f32	s0, s15
 800d9b8:	3708      	adds	r7, #8
 800d9ba:	46bd      	mov	sp, r7
 800d9bc:	bd80      	pop	{r7, pc}
 800d9be:	bf00      	nop
 800d9c0:	46800000 	.word	0x46800000
 800d9c4:	40c90fdb 	.word	0x40c90fdb

0800d9c8 <delay>:
#include "time_utils.h"

__IO uint32_t m, tms, u, t0;

void delay(uint32_t _ms)
{
 800d9c8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800d9cc:	b082      	sub	sp, #8
 800d9ce:	af00      	add	r7, sp, #0
 800d9d0:	6078      	str	r0, [r7, #4]
    t0 = micros();
 800d9d2:	f000 f83b 	bl	800da4c <micros>
 800d9d6:	4602      	mov	r2, r0
 800d9d8:	460b      	mov	r3, r1
 800d9da:	4b11      	ldr	r3, [pc, #68]	@ (800da20 <delay+0x58>)
 800d9dc:	601a      	str	r2, [r3, #0]
    while (micros() - t0 < _ms * 1000)
 800d9de:	e000      	b.n	800d9e2 <delay+0x1a>
        __NOP();
 800d9e0:	bf00      	nop
    while (micros() - t0 < _ms * 1000)
 800d9e2:	f000 f833 	bl	800da4c <micros>
 800d9e6:	4602      	mov	r2, r0
 800d9e8:	460b      	mov	r3, r1
 800d9ea:	490d      	ldr	r1, [pc, #52]	@ (800da20 <delay+0x58>)
 800d9ec:	6809      	ldr	r1, [r1, #0]
 800d9ee:	2000      	movs	r0, #0
 800d9f0:	468a      	mov	sl, r1
 800d9f2:	4683      	mov	fp, r0
 800d9f4:	ebb2 040a 	subs.w	r4, r2, sl
 800d9f8:	eb63 050b 	sbc.w	r5, r3, fp
 800d9fc:	687b      	ldr	r3, [r7, #4]
 800d9fe:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800da02:	fb02 f303 	mul.w	r3, r2, r3
 800da06:	2200      	movs	r2, #0
 800da08:	4698      	mov	r8, r3
 800da0a:	4691      	mov	r9, r2
 800da0c:	4544      	cmp	r4, r8
 800da0e:	eb75 0309 	sbcs.w	r3, r5, r9
 800da12:	d3e5      	bcc.n	800d9e0 <delay+0x18>
}
 800da14:	bf00      	nop
 800da16:	bf00      	nop
 800da18:	3708      	adds	r7, #8
 800da1a:	46bd      	mov	sp, r7
 800da1c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800da20:	20000958 	.word	0x20000958

0800da24 <LL_SYSTICK_IsActiveCounterFlag>:
    while (_us--)
        __NOP();
}

__STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag()
{
 800da24:	b480      	push	{r7}
 800da26:	af00      	add	r7, sp, #0
    return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 800da28:	4b07      	ldr	r3, [pc, #28]	@ (800da48 <LL_SYSTICK_IsActiveCounterFlag+0x24>)
 800da2a:	681b      	ldr	r3, [r3, #0]
 800da2c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800da30:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800da34:	bf0c      	ite	eq
 800da36:	2301      	moveq	r3, #1
 800da38:	2300      	movne	r3, #0
 800da3a:	b2db      	uxtb	r3, r3
}
 800da3c:	4618      	mov	r0, r3
 800da3e:	46bd      	mov	sp, r7
 800da40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da44:	4770      	bx	lr
 800da46:	bf00      	nop
 800da48:	e000e010 	.word	0xe000e010

0800da4c <micros>:

uint64_t micros()
{
 800da4c:	b5b0      	push	{r4, r5, r7, lr}
 800da4e:	af00      	add	r7, sp, #0
    /* Ensure COUNTFLAG is reset by reading SysTick control and status register */
    LL_SYSTICK_IsActiveCounterFlag();
 800da50:	f7ff ffe8 	bl	800da24 <LL_SYSTICK_IsActiveCounterFlag>
    m = HAL_GetTick();
 800da54:	f7f4 fe72 	bl	800273c <HAL_GetTick>
 800da58:	4603      	mov	r3, r0
 800da5a:	4a1c      	ldr	r2, [pc, #112]	@ (800dacc <micros+0x80>)
 800da5c:	6013      	str	r3, [r2, #0]
    tms = SysTick->LOAD + 1;
 800da5e:	4b1c      	ldr	r3, [pc, #112]	@ (800dad0 <micros+0x84>)
 800da60:	685b      	ldr	r3, [r3, #4]
 800da62:	3301      	adds	r3, #1
 800da64:	4a1b      	ldr	r2, [pc, #108]	@ (800dad4 <micros+0x88>)
 800da66:	6013      	str	r3, [r2, #0]
    u = tms - SysTick->VAL;
 800da68:	4b1a      	ldr	r3, [pc, #104]	@ (800dad4 <micros+0x88>)
 800da6a:	681a      	ldr	r2, [r3, #0]
 800da6c:	4b18      	ldr	r3, [pc, #96]	@ (800dad0 <micros+0x84>)
 800da6e:	689b      	ldr	r3, [r3, #8]
 800da70:	1ad3      	subs	r3, r2, r3
 800da72:	4a19      	ldr	r2, [pc, #100]	@ (800dad8 <micros+0x8c>)
 800da74:	6013      	str	r3, [r2, #0]
    if (LL_SYSTICK_IsActiveCounterFlag())
 800da76:	f7ff ffd5 	bl	800da24 <LL_SYSTICK_IsActiveCounterFlag>
 800da7a:	4603      	mov	r3, r0
 800da7c:	2b00      	cmp	r3, #0
 800da7e:	d00b      	beq.n	800da98 <micros+0x4c>
    {
        m = HAL_GetTick();
 800da80:	f7f4 fe5c 	bl	800273c <HAL_GetTick>
 800da84:	4603      	mov	r3, r0
 800da86:	4a11      	ldr	r2, [pc, #68]	@ (800dacc <micros+0x80>)
 800da88:	6013      	str	r3, [r2, #0]
        u = tms - SysTick->VAL;
 800da8a:	4b12      	ldr	r3, [pc, #72]	@ (800dad4 <micros+0x88>)
 800da8c:	681a      	ldr	r2, [r3, #0]
 800da8e:	4b10      	ldr	r3, [pc, #64]	@ (800dad0 <micros+0x84>)
 800da90:	689b      	ldr	r3, [r3, #8]
 800da92:	1ad3      	subs	r3, r2, r3
 800da94:	4a10      	ldr	r2, [pc, #64]	@ (800dad8 <micros+0x8c>)
 800da96:	6013      	str	r3, [r2, #0]
    }
    return (m * 1000 + (u * 1000) / tms);
 800da98:	4b0c      	ldr	r3, [pc, #48]	@ (800dacc <micros+0x80>)
 800da9a:	681b      	ldr	r3, [r3, #0]
 800da9c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800daa0:	fb03 f202 	mul.w	r2, r3, r2
 800daa4:	4b0c      	ldr	r3, [pc, #48]	@ (800dad8 <micros+0x8c>)
 800daa6:	681b      	ldr	r3, [r3, #0]
 800daa8:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800daac:	fb03 f101 	mul.w	r1, r3, r1
 800dab0:	4b08      	ldr	r3, [pc, #32]	@ (800dad4 <micros+0x88>)
 800dab2:	681b      	ldr	r3, [r3, #0]
 800dab4:	fbb1 f3f3 	udiv	r3, r1, r3
 800dab8:	4413      	add	r3, r2
 800daba:	2200      	movs	r2, #0
 800dabc:	461c      	mov	r4, r3
 800dabe:	4615      	mov	r5, r2
 800dac0:	4622      	mov	r2, r4
 800dac2:	462b      	mov	r3, r5
}
 800dac4:	4610      	mov	r0, r2
 800dac6:	4619      	mov	r1, r3
 800dac8:	bdb0      	pop	{r4, r5, r7, pc}
 800daca:	bf00      	nop
 800dacc:	2000094c 	.word	0x2000094c
 800dad0:	e000e010 	.word	0xe000e010
 800dad4:	20000950 	.word	0x20000950
 800dad8:	20000954 	.word	0x20000954

0800dadc <userMain>:
float HallTheta = 0;
float HallSpeed = 0;
uint8_t HallReadTemp = 0;
//static bool powerLost;
void userMain(void)
{
 800dadc:	b580      	push	{r7, lr}
 800dade:	af00      	add	r7, sp, #0

	if (get5MsFlag())
 800dae0:	f000 f91e 	bl	800dd20 <get5MsFlag>
 800dae4:	4603      	mov	r3, r0
 800dae6:	2b00      	cmp	r3, #0
 800dae8:	d001      	beq.n	800daee <userMain+0x12>
	{
		keyScan();
 800daea:	f7ff fd1d 	bl	800d528 <keyScan>
	}

	if (get100MsFlag())
 800daee:	f000 f92b 	bl	800dd48 <get100MsFlag>
 800daf2:	4603      	mov	r3, r0
 800daf4:	2b00      	cmp	r3, #0
 800daf6:	d001      	beq.n	800dafc <userMain+0x20>
	{
		appRunning();
 800daf8:	f7ff fa20 	bl	800cf3c <appRunning>
	}
#if SHOW_WAVE == 0 //&& COMMAMNDER == 0
	// if (get500MsFlag())
	if (getOneSecFlag())
 800dafc:	f000 f8fc 	bl	800dcf8 <getOneSecFlag>
 800db00:	4603      	mov	r3, r0
 800db02:	2b00      	cmp	r3, #0
 800db04:	d001      	beq.n	800db0a <userMain+0x2e>
	{
		printLog();
 800db06:	f7ff fc31 	bl	800d36c <printLog>
	}
#endif
}
 800db0a:	bf00      	nop
 800db0c:	bd80      	pop	{r7, pc}

0800db0e <map>:

float map(float x, float in_min, float in_max, float out_min, float out_max)
{
 800db0e:	b480      	push	{r7}
 800db10:	b087      	sub	sp, #28
 800db12:	af00      	add	r7, sp, #0
 800db14:	ed87 0a05 	vstr	s0, [r7, #20]
 800db18:	edc7 0a04 	vstr	s1, [r7, #16]
 800db1c:	ed87 1a03 	vstr	s2, [r7, #12]
 800db20:	edc7 1a02 	vstr	s3, [r7, #8]
 800db24:	ed87 2a01 	vstr	s4, [r7, #4]
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 800db28:	ed97 7a05 	vldr	s14, [r7, #20]
 800db2c:	edd7 7a04 	vldr	s15, [r7, #16]
 800db30:	ee37 7a67 	vsub.f32	s14, s14, s15
 800db34:	edd7 6a01 	vldr	s13, [r7, #4]
 800db38:	edd7 7a02 	vldr	s15, [r7, #8]
 800db3c:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800db40:	ee67 6a27 	vmul.f32	s13, s14, s15
 800db44:	ed97 7a03 	vldr	s14, [r7, #12]
 800db48:	edd7 7a04 	vldr	s15, [r7, #16]
 800db4c:	ee77 7a67 	vsub.f32	s15, s14, s15
 800db50:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800db54:	edd7 7a02 	vldr	s15, [r7, #8]
 800db58:	ee77 7a27 	vadd.f32	s15, s14, s15
}
 800db5c:	eeb0 0a67 	vmov.f32	s0, s15
 800db60:	371c      	adds	r7, #28
 800db62:	46bd      	mov	sp, r7
 800db64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db68:	4770      	bx	lr
	...

0800db6c <dealPer100us>:


static bool _5msFlag, _10msFlag, _20msFlag, _30msFlag, _100msFlag, _500msFlag, _1s;
static void dealPerMs();
void dealPer100us()
{
 800db6c:	b580      	push	{r7, lr}
 800db6e:	af00      	add	r7, sp, #0
    static unsigned char cnt;
    if (++cnt >= 10)
 800db70:	4b08      	ldr	r3, [pc, #32]	@ (800db94 <dealPer100us+0x28>)
 800db72:	781b      	ldrb	r3, [r3, #0]
 800db74:	3301      	adds	r3, #1
 800db76:	b2da      	uxtb	r2, r3
 800db78:	4b06      	ldr	r3, [pc, #24]	@ (800db94 <dealPer100us+0x28>)
 800db7a:	701a      	strb	r2, [r3, #0]
 800db7c:	4b05      	ldr	r3, [pc, #20]	@ (800db94 <dealPer100us+0x28>)
 800db7e:	781b      	ldrb	r3, [r3, #0]
 800db80:	2b09      	cmp	r3, #9
 800db82:	d904      	bls.n	800db8e <dealPer100us+0x22>
    {
        cnt = 0;
 800db84:	4b03      	ldr	r3, [pc, #12]	@ (800db94 <dealPer100us+0x28>)
 800db86:	2200      	movs	r2, #0
 800db88:	701a      	strb	r2, [r3, #0]
        dealPerMs();
 800db8a:	f000 f805 	bl	800db98 <dealPerMs>
    }

}
 800db8e:	bf00      	nop
 800db90:	bd80      	pop	{r7, pc}
 800db92:	bf00      	nop
 800db94:	2000096b 	.word	0x2000096b

0800db98 <dealPerMs>:

static void dealPerMs()
{
 800db98:	b480      	push	{r7}
 800db9a:	af00      	add	r7, sp, #0
    static unsigned char _5msCnt, _30msCnt, _20msCnt, _100msCnt, _10msCnt;
    static uint _500msCnt, _1000msCnt;
    if (++_5msCnt >= 5)
 800db9c:	4b45      	ldr	r3, [pc, #276]	@ (800dcb4 <dealPerMs+0x11c>)
 800db9e:	781b      	ldrb	r3, [r3, #0]
 800dba0:	3301      	adds	r3, #1
 800dba2:	b2da      	uxtb	r2, r3
 800dba4:	4b43      	ldr	r3, [pc, #268]	@ (800dcb4 <dealPerMs+0x11c>)
 800dba6:	701a      	strb	r2, [r3, #0]
 800dba8:	4b42      	ldr	r3, [pc, #264]	@ (800dcb4 <dealPerMs+0x11c>)
 800dbaa:	781b      	ldrb	r3, [r3, #0]
 800dbac:	2b04      	cmp	r3, #4
 800dbae:	d905      	bls.n	800dbbc <dealPerMs+0x24>
    {
        _5msCnt = 0;
 800dbb0:	4b40      	ldr	r3, [pc, #256]	@ (800dcb4 <dealPerMs+0x11c>)
 800dbb2:	2200      	movs	r2, #0
 800dbb4:	701a      	strb	r2, [r3, #0]
        _5msFlag = 1;
 800dbb6:	4b40      	ldr	r3, [pc, #256]	@ (800dcb8 <dealPerMs+0x120>)
 800dbb8:	2201      	movs	r2, #1
 800dbba:	701a      	strb	r2, [r3, #0]
    }

    if (++_10msCnt >= 10)
 800dbbc:	4b3f      	ldr	r3, [pc, #252]	@ (800dcbc <dealPerMs+0x124>)
 800dbbe:	781b      	ldrb	r3, [r3, #0]
 800dbc0:	3301      	adds	r3, #1
 800dbc2:	b2da      	uxtb	r2, r3
 800dbc4:	4b3d      	ldr	r3, [pc, #244]	@ (800dcbc <dealPerMs+0x124>)
 800dbc6:	701a      	strb	r2, [r3, #0]
 800dbc8:	4b3c      	ldr	r3, [pc, #240]	@ (800dcbc <dealPerMs+0x124>)
 800dbca:	781b      	ldrb	r3, [r3, #0]
 800dbcc:	2b09      	cmp	r3, #9
 800dbce:	d905      	bls.n	800dbdc <dealPerMs+0x44>
    {
        _10msCnt = 0;
 800dbd0:	4b3a      	ldr	r3, [pc, #232]	@ (800dcbc <dealPerMs+0x124>)
 800dbd2:	2200      	movs	r2, #0
 800dbd4:	701a      	strb	r2, [r3, #0]
        _10msFlag = 1;
 800dbd6:	4b3a      	ldr	r3, [pc, #232]	@ (800dcc0 <dealPerMs+0x128>)
 800dbd8:	2201      	movs	r2, #1
 800dbda:	701a      	strb	r2, [r3, #0]
    }

    if (++_20msCnt >= 20)
 800dbdc:	4b39      	ldr	r3, [pc, #228]	@ (800dcc4 <dealPerMs+0x12c>)
 800dbde:	781b      	ldrb	r3, [r3, #0]
 800dbe0:	3301      	adds	r3, #1
 800dbe2:	b2da      	uxtb	r2, r3
 800dbe4:	4b37      	ldr	r3, [pc, #220]	@ (800dcc4 <dealPerMs+0x12c>)
 800dbe6:	701a      	strb	r2, [r3, #0]
 800dbe8:	4b36      	ldr	r3, [pc, #216]	@ (800dcc4 <dealPerMs+0x12c>)
 800dbea:	781b      	ldrb	r3, [r3, #0]
 800dbec:	2b13      	cmp	r3, #19
 800dbee:	d905      	bls.n	800dbfc <dealPerMs+0x64>
    {
        _20msCnt = 0;
 800dbf0:	4b34      	ldr	r3, [pc, #208]	@ (800dcc4 <dealPerMs+0x12c>)
 800dbf2:	2200      	movs	r2, #0
 800dbf4:	701a      	strb	r2, [r3, #0]
        _20msFlag = 1;
 800dbf6:	4b34      	ldr	r3, [pc, #208]	@ (800dcc8 <dealPerMs+0x130>)
 800dbf8:	2201      	movs	r2, #1
 800dbfa:	701a      	strb	r2, [r3, #0]
    }

    if (++_30msCnt >= 30)
 800dbfc:	4b33      	ldr	r3, [pc, #204]	@ (800dccc <dealPerMs+0x134>)
 800dbfe:	781b      	ldrb	r3, [r3, #0]
 800dc00:	3301      	adds	r3, #1
 800dc02:	b2da      	uxtb	r2, r3
 800dc04:	4b31      	ldr	r3, [pc, #196]	@ (800dccc <dealPerMs+0x134>)
 800dc06:	701a      	strb	r2, [r3, #0]
 800dc08:	4b30      	ldr	r3, [pc, #192]	@ (800dccc <dealPerMs+0x134>)
 800dc0a:	781b      	ldrb	r3, [r3, #0]
 800dc0c:	2b1d      	cmp	r3, #29
 800dc0e:	d905      	bls.n	800dc1c <dealPerMs+0x84>
    {
        _30msCnt = 0;
 800dc10:	4b2e      	ldr	r3, [pc, #184]	@ (800dccc <dealPerMs+0x134>)
 800dc12:	2200      	movs	r2, #0
 800dc14:	701a      	strb	r2, [r3, #0]
        _30msFlag = 1;
 800dc16:	4b2e      	ldr	r3, [pc, #184]	@ (800dcd0 <dealPerMs+0x138>)
 800dc18:	2201      	movs	r2, #1
 800dc1a:	701a      	strb	r2, [r3, #0]
    }

    if (++_100msCnt >= 100)
 800dc1c:	4b2d      	ldr	r3, [pc, #180]	@ (800dcd4 <dealPerMs+0x13c>)
 800dc1e:	781b      	ldrb	r3, [r3, #0]
 800dc20:	3301      	adds	r3, #1
 800dc22:	b2da      	uxtb	r2, r3
 800dc24:	4b2b      	ldr	r3, [pc, #172]	@ (800dcd4 <dealPerMs+0x13c>)
 800dc26:	701a      	strb	r2, [r3, #0]
 800dc28:	4b2a      	ldr	r3, [pc, #168]	@ (800dcd4 <dealPerMs+0x13c>)
 800dc2a:	781b      	ldrb	r3, [r3, #0]
 800dc2c:	2b63      	cmp	r3, #99	@ 0x63
 800dc2e:	d905      	bls.n	800dc3c <dealPerMs+0xa4>
    {
        _100msCnt = 0;
 800dc30:	4b28      	ldr	r3, [pc, #160]	@ (800dcd4 <dealPerMs+0x13c>)
 800dc32:	2200      	movs	r2, #0
 800dc34:	701a      	strb	r2, [r3, #0]
        _100msFlag = 1;
 800dc36:	4b28      	ldr	r3, [pc, #160]	@ (800dcd8 <dealPerMs+0x140>)
 800dc38:	2201      	movs	r2, #1
 800dc3a:	701a      	strb	r2, [r3, #0]
    }

    if (++_500msCnt >= 500)
 800dc3c:	4b27      	ldr	r3, [pc, #156]	@ (800dcdc <dealPerMs+0x144>)
 800dc3e:	681b      	ldr	r3, [r3, #0]
 800dc40:	3301      	adds	r3, #1
 800dc42:	4a26      	ldr	r2, [pc, #152]	@ (800dcdc <dealPerMs+0x144>)
 800dc44:	6013      	str	r3, [r2, #0]
 800dc46:	4b25      	ldr	r3, [pc, #148]	@ (800dcdc <dealPerMs+0x144>)
 800dc48:	681b      	ldr	r3, [r3, #0]
 800dc4a:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800dc4e:	d305      	bcc.n	800dc5c <dealPerMs+0xc4>
    {
        _500msCnt = 0;
 800dc50:	4b22      	ldr	r3, [pc, #136]	@ (800dcdc <dealPerMs+0x144>)
 800dc52:	2200      	movs	r2, #0
 800dc54:	601a      	str	r2, [r3, #0]
        _500msFlag = 1;
 800dc56:	4b22      	ldr	r3, [pc, #136]	@ (800dce0 <dealPerMs+0x148>)
 800dc58:	2201      	movs	r2, #1
 800dc5a:	701a      	strb	r2, [r3, #0]
    }
    if (++_1000msCnt >= 1000)
 800dc5c:	4b21      	ldr	r3, [pc, #132]	@ (800dce4 <dealPerMs+0x14c>)
 800dc5e:	681b      	ldr	r3, [r3, #0]
 800dc60:	3301      	adds	r3, #1
 800dc62:	4a20      	ldr	r2, [pc, #128]	@ (800dce4 <dealPerMs+0x14c>)
 800dc64:	6013      	str	r3, [r2, #0]
 800dc66:	4b1f      	ldr	r3, [pc, #124]	@ (800dce4 <dealPerMs+0x14c>)
 800dc68:	681b      	ldr	r3, [r3, #0]
 800dc6a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800dc6e:	d305      	bcc.n	800dc7c <dealPerMs+0xe4>
    {
        _1000msCnt = 0;
 800dc70:	4b1c      	ldr	r3, [pc, #112]	@ (800dce4 <dealPerMs+0x14c>)
 800dc72:	2200      	movs	r2, #0
 800dc74:	601a      	str	r2, [r3, #0]
        _1s = 1;
 800dc76:	4b1c      	ldr	r3, [pc, #112]	@ (800dce8 <dealPerMs+0x150>)
 800dc78:	2201      	movs	r2, #1
 800dc7a:	701a      	strb	r2, [r3, #0]

        cnt = 0;
    }

#else
    frequence = 50;
 800dc7c:	4b1b      	ldr	r3, [pc, #108]	@ (800dcec <dealPerMs+0x154>)
 800dc7e:	2232      	movs	r2, #50	@ 0x32
 800dc80:	701a      	strb	r2, [r3, #0]
            _1s = 1;
        }
    }
#else

    if (++_1msCnt >= 1000)
 800dc82:	4b1b      	ldr	r3, [pc, #108]	@ (800dcf0 <dealPerMs+0x158>)
 800dc84:	681b      	ldr	r3, [r3, #0]
 800dc86:	3301      	adds	r3, #1
 800dc88:	4a19      	ldr	r2, [pc, #100]	@ (800dcf0 <dealPerMs+0x158>)
 800dc8a:	6013      	str	r3, [r2, #0]
 800dc8c:	4b18      	ldr	r3, [pc, #96]	@ (800dcf0 <dealPerMs+0x158>)
 800dc8e:	681b      	ldr	r3, [r3, #0]
 800dc90:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800dc94:	d305      	bcc.n	800dca2 <dealPerMs+0x10a>
    {
        _1msCnt = 0;
 800dc96:	4b16      	ldr	r3, [pc, #88]	@ (800dcf0 <dealPerMs+0x158>)
 800dc98:	2200      	movs	r2, #0
 800dc9a:	601a      	str	r2, [r3, #0]
        _1s = 1;
 800dc9c:	4b12      	ldr	r3, [pc, #72]	@ (800dce8 <dealPerMs+0x150>)
 800dc9e:	2201      	movs	r2, #1
 800dca0:	701a      	strb	r2, [r3, #0]
    }
#endif
#if SPEED_UP
    _1s = 1;
#endif
    _1ms = 1;
 800dca2:	4b14      	ldr	r3, [pc, #80]	@ (800dcf4 <dealPerMs+0x15c>)
 800dca4:	2201      	movs	r2, #1
 800dca6:	701a      	strb	r2, [r3, #0]




}
 800dca8:	bf00      	nop
 800dcaa:	46bd      	mov	sp, r7
 800dcac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcb0:	4770      	bx	lr
 800dcb2:	bf00      	nop
 800dcb4:	2000096c 	.word	0x2000096c
 800dcb8:	20000965 	.word	0x20000965
 800dcbc:	2000096d 	.word	0x2000096d
 800dcc0:	20000966 	.word	0x20000966
 800dcc4:	2000096e 	.word	0x2000096e
 800dcc8:	20000967 	.word	0x20000967
 800dccc:	2000096f 	.word	0x2000096f
 800dcd0:	20000968 	.word	0x20000968
 800dcd4:	20000970 	.word	0x20000970
 800dcd8:	20000969 	.word	0x20000969
 800dcdc:	20000974 	.word	0x20000974
 800dce0:	2000096a 	.word	0x2000096a
 800dce4:	20000978 	.word	0x20000978
 800dce8:	2000095c 	.word	0x2000095c
 800dcec:	20000964 	.word	0x20000964
 800dcf0:	20000960 	.word	0x20000960
 800dcf4:	2000095d 	.word	0x2000095d

0800dcf8 <getOneSecFlag>:
}



bool getOneSecFlag()
{
 800dcf8:	b480      	push	{r7}
 800dcfa:	af00      	add	r7, sp, #0
    if (_1s)
 800dcfc:	4b07      	ldr	r3, [pc, #28]	@ (800dd1c <getOneSecFlag+0x24>)
 800dcfe:	781b      	ldrb	r3, [r3, #0]
 800dd00:	2b00      	cmp	r3, #0
 800dd02:	d004      	beq.n	800dd0e <getOneSecFlag+0x16>
    {
        _1s = 0;
 800dd04:	4b05      	ldr	r3, [pc, #20]	@ (800dd1c <getOneSecFlag+0x24>)
 800dd06:	2200      	movs	r2, #0
 800dd08:	701a      	strb	r2, [r3, #0]
        return 1;
 800dd0a:	2301      	movs	r3, #1
 800dd0c:	e000      	b.n	800dd10 <getOneSecFlag+0x18>
    }
    else
        return 0;
 800dd0e:	2300      	movs	r3, #0
}
 800dd10:	4618      	mov	r0, r3
 800dd12:	46bd      	mov	sp, r7
 800dd14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd18:	4770      	bx	lr
 800dd1a:	bf00      	nop
 800dd1c:	2000095c 	.word	0x2000095c

0800dd20 <get5MsFlag>:
bool getCrossZero()
{
    return crossZero;
}
bool get5MsFlag()
{
 800dd20:	b480      	push	{r7}
 800dd22:	af00      	add	r7, sp, #0
    if (_5msFlag)
 800dd24:	4b07      	ldr	r3, [pc, #28]	@ (800dd44 <get5MsFlag+0x24>)
 800dd26:	781b      	ldrb	r3, [r3, #0]
 800dd28:	2b00      	cmp	r3, #0
 800dd2a:	d004      	beq.n	800dd36 <get5MsFlag+0x16>
    {
        _5msFlag = 0;
 800dd2c:	4b05      	ldr	r3, [pc, #20]	@ (800dd44 <get5MsFlag+0x24>)
 800dd2e:	2200      	movs	r2, #0
 800dd30:	701a      	strb	r2, [r3, #0]
        return 1;
 800dd32:	2301      	movs	r3, #1
 800dd34:	e000      	b.n	800dd38 <get5MsFlag+0x18>
    }
    else
    {
        return 0;
 800dd36:	2300      	movs	r3, #0
    }
}
 800dd38:	4618      	mov	r0, r3
 800dd3a:	46bd      	mov	sp, r7
 800dd3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd40:	4770      	bx	lr
 800dd42:	bf00      	nop
 800dd44:	20000965 	.word	0x20000965

0800dd48 <get100MsFlag>:
        return 0;
    }
}

bool get100MsFlag()
{
 800dd48:	b480      	push	{r7}
 800dd4a:	af00      	add	r7, sp, #0
    if (_100msFlag)
 800dd4c:	4b07      	ldr	r3, [pc, #28]	@ (800dd6c <get100MsFlag+0x24>)
 800dd4e:	781b      	ldrb	r3, [r3, #0]
 800dd50:	2b00      	cmp	r3, #0
 800dd52:	d004      	beq.n	800dd5e <get100MsFlag+0x16>
    {
        _100msFlag = 0;
 800dd54:	4b05      	ldr	r3, [pc, #20]	@ (800dd6c <get100MsFlag+0x24>)
 800dd56:	2200      	movs	r2, #0
 800dd58:	701a      	strb	r2, [r3, #0]
        return 1;
 800dd5a:	2301      	movs	r3, #1
 800dd5c:	e000      	b.n	800dd60 <get100MsFlag+0x18>
    }
    else
    {
        return 0;
 800dd5e:	2300      	movs	r3, #0
    }
}
 800dd60:	4618      	mov	r0, r3
 800dd62:	46bd      	mov	sp, r7
 800dd64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd68:	4770      	bx	lr
 800dd6a:	bf00      	nop
 800dd6c:	20000969 	.word	0x20000969

0800dd70 <atof>:
 800dd70:	2100      	movs	r1, #0
 800dd72:	f000 be0b 	b.w	800e98c <strtod>

0800dd76 <sulp>:
 800dd76:	b570      	push	{r4, r5, r6, lr}
 800dd78:	4604      	mov	r4, r0
 800dd7a:	460d      	mov	r5, r1
 800dd7c:	ec45 4b10 	vmov	d0, r4, r5
 800dd80:	4616      	mov	r6, r2
 800dd82:	f003 fc7d 	bl	8011680 <__ulp>
 800dd86:	ec51 0b10 	vmov	r0, r1, d0
 800dd8a:	b17e      	cbz	r6, 800ddac <sulp+0x36>
 800dd8c:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800dd90:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800dd94:	2b00      	cmp	r3, #0
 800dd96:	dd09      	ble.n	800ddac <sulp+0x36>
 800dd98:	051b      	lsls	r3, r3, #20
 800dd9a:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 800dd9e:	2400      	movs	r4, #0
 800dda0:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800dda4:	4622      	mov	r2, r4
 800dda6:	462b      	mov	r3, r5
 800dda8:	f7f2 fc4e 	bl	8000648 <__aeabi_dmul>
 800ddac:	ec41 0b10 	vmov	d0, r0, r1
 800ddb0:	bd70      	pop	{r4, r5, r6, pc}
 800ddb2:	0000      	movs	r0, r0
 800ddb4:	0000      	movs	r0, r0
	...

0800ddb8 <_strtod_l>:
 800ddb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddbc:	b09f      	sub	sp, #124	@ 0x7c
 800ddbe:	460c      	mov	r4, r1
 800ddc0:	9217      	str	r2, [sp, #92]	@ 0x5c
 800ddc2:	2200      	movs	r2, #0
 800ddc4:	921a      	str	r2, [sp, #104]	@ 0x68
 800ddc6:	9005      	str	r0, [sp, #20]
 800ddc8:	f04f 0a00 	mov.w	sl, #0
 800ddcc:	f04f 0b00 	mov.w	fp, #0
 800ddd0:	460a      	mov	r2, r1
 800ddd2:	9219      	str	r2, [sp, #100]	@ 0x64
 800ddd4:	7811      	ldrb	r1, [r2, #0]
 800ddd6:	292b      	cmp	r1, #43	@ 0x2b
 800ddd8:	d04a      	beq.n	800de70 <_strtod_l+0xb8>
 800ddda:	d838      	bhi.n	800de4e <_strtod_l+0x96>
 800dddc:	290d      	cmp	r1, #13
 800ddde:	d832      	bhi.n	800de46 <_strtod_l+0x8e>
 800dde0:	2908      	cmp	r1, #8
 800dde2:	d832      	bhi.n	800de4a <_strtod_l+0x92>
 800dde4:	2900      	cmp	r1, #0
 800dde6:	d03b      	beq.n	800de60 <_strtod_l+0xa8>
 800dde8:	2200      	movs	r2, #0
 800ddea:	920b      	str	r2, [sp, #44]	@ 0x2c
 800ddec:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 800ddee:	782a      	ldrb	r2, [r5, #0]
 800ddf0:	2a30      	cmp	r2, #48	@ 0x30
 800ddf2:	f040 80b3 	bne.w	800df5c <_strtod_l+0x1a4>
 800ddf6:	786a      	ldrb	r2, [r5, #1]
 800ddf8:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800ddfc:	2a58      	cmp	r2, #88	@ 0x58
 800ddfe:	d16e      	bne.n	800dede <_strtod_l+0x126>
 800de00:	9302      	str	r3, [sp, #8]
 800de02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800de04:	9301      	str	r3, [sp, #4]
 800de06:	ab1a      	add	r3, sp, #104	@ 0x68
 800de08:	9300      	str	r3, [sp, #0]
 800de0a:	4a8e      	ldr	r2, [pc, #568]	@ (800e044 <_strtod_l+0x28c>)
 800de0c:	9805      	ldr	r0, [sp, #20]
 800de0e:	ab1b      	add	r3, sp, #108	@ 0x6c
 800de10:	a919      	add	r1, sp, #100	@ 0x64
 800de12:	f002 fd27 	bl	8010864 <__gethex>
 800de16:	f010 060f 	ands.w	r6, r0, #15
 800de1a:	4604      	mov	r4, r0
 800de1c:	d005      	beq.n	800de2a <_strtod_l+0x72>
 800de1e:	2e06      	cmp	r6, #6
 800de20:	d128      	bne.n	800de74 <_strtod_l+0xbc>
 800de22:	3501      	adds	r5, #1
 800de24:	2300      	movs	r3, #0
 800de26:	9519      	str	r5, [sp, #100]	@ 0x64
 800de28:	930b      	str	r3, [sp, #44]	@ 0x2c
 800de2a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800de2c:	2b00      	cmp	r3, #0
 800de2e:	f040 858e 	bne.w	800e94e <_strtod_l+0xb96>
 800de32:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800de34:	b1cb      	cbz	r3, 800de6a <_strtod_l+0xb2>
 800de36:	4652      	mov	r2, sl
 800de38:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 800de3c:	ec43 2b10 	vmov	d0, r2, r3
 800de40:	b01f      	add	sp, #124	@ 0x7c
 800de42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de46:	2920      	cmp	r1, #32
 800de48:	d1ce      	bne.n	800dde8 <_strtod_l+0x30>
 800de4a:	3201      	adds	r2, #1
 800de4c:	e7c1      	b.n	800ddd2 <_strtod_l+0x1a>
 800de4e:	292d      	cmp	r1, #45	@ 0x2d
 800de50:	d1ca      	bne.n	800dde8 <_strtod_l+0x30>
 800de52:	2101      	movs	r1, #1
 800de54:	910b      	str	r1, [sp, #44]	@ 0x2c
 800de56:	1c51      	adds	r1, r2, #1
 800de58:	9119      	str	r1, [sp, #100]	@ 0x64
 800de5a:	7852      	ldrb	r2, [r2, #1]
 800de5c:	2a00      	cmp	r2, #0
 800de5e:	d1c5      	bne.n	800ddec <_strtod_l+0x34>
 800de60:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800de62:	9419      	str	r4, [sp, #100]	@ 0x64
 800de64:	2b00      	cmp	r3, #0
 800de66:	f040 8570 	bne.w	800e94a <_strtod_l+0xb92>
 800de6a:	4652      	mov	r2, sl
 800de6c:	465b      	mov	r3, fp
 800de6e:	e7e5      	b.n	800de3c <_strtod_l+0x84>
 800de70:	2100      	movs	r1, #0
 800de72:	e7ef      	b.n	800de54 <_strtod_l+0x9c>
 800de74:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800de76:	b13a      	cbz	r2, 800de88 <_strtod_l+0xd0>
 800de78:	2135      	movs	r1, #53	@ 0x35
 800de7a:	a81c      	add	r0, sp, #112	@ 0x70
 800de7c:	f003 fcfa 	bl	8011874 <__copybits>
 800de80:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800de82:	9805      	ldr	r0, [sp, #20]
 800de84:	f003 f8c8 	bl	8011018 <_Bfree>
 800de88:	3e01      	subs	r6, #1
 800de8a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800de8c:	2e04      	cmp	r6, #4
 800de8e:	d806      	bhi.n	800de9e <_strtod_l+0xe6>
 800de90:	e8df f006 	tbb	[pc, r6]
 800de94:	201d0314 	.word	0x201d0314
 800de98:	14          	.byte	0x14
 800de99:	00          	.byte	0x00
 800de9a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800de9e:	05e1      	lsls	r1, r4, #23
 800dea0:	bf48      	it	mi
 800dea2:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800dea6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800deaa:	0d1b      	lsrs	r3, r3, #20
 800deac:	051b      	lsls	r3, r3, #20
 800deae:	2b00      	cmp	r3, #0
 800deb0:	d1bb      	bne.n	800de2a <_strtod_l+0x72>
 800deb2:	f001 fd8d 	bl	800f9d0 <__errno>
 800deb6:	2322      	movs	r3, #34	@ 0x22
 800deb8:	6003      	str	r3, [r0, #0]
 800deba:	e7b6      	b.n	800de2a <_strtod_l+0x72>
 800debc:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 800dec0:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800dec4:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800dec8:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800decc:	e7e7      	b.n	800de9e <_strtod_l+0xe6>
 800dece:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 800e04c <_strtod_l+0x294>
 800ded2:	e7e4      	b.n	800de9e <_strtod_l+0xe6>
 800ded4:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800ded8:	f04f 3aff 	mov.w	sl, #4294967295
 800dedc:	e7df      	b.n	800de9e <_strtod_l+0xe6>
 800dede:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800dee0:	1c5a      	adds	r2, r3, #1
 800dee2:	9219      	str	r2, [sp, #100]	@ 0x64
 800dee4:	785b      	ldrb	r3, [r3, #1]
 800dee6:	2b30      	cmp	r3, #48	@ 0x30
 800dee8:	d0f9      	beq.n	800dede <_strtod_l+0x126>
 800deea:	2b00      	cmp	r3, #0
 800deec:	d09d      	beq.n	800de2a <_strtod_l+0x72>
 800deee:	2301      	movs	r3, #1
 800def0:	9309      	str	r3, [sp, #36]	@ 0x24
 800def2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800def4:	930c      	str	r3, [sp, #48]	@ 0x30
 800def6:	2300      	movs	r3, #0
 800def8:	9308      	str	r3, [sp, #32]
 800defa:	930a      	str	r3, [sp, #40]	@ 0x28
 800defc:	461f      	mov	r7, r3
 800defe:	220a      	movs	r2, #10
 800df00:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800df02:	7805      	ldrb	r5, [r0, #0]
 800df04:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800df08:	b2d9      	uxtb	r1, r3
 800df0a:	2909      	cmp	r1, #9
 800df0c:	d928      	bls.n	800df60 <_strtod_l+0x1a8>
 800df0e:	494e      	ldr	r1, [pc, #312]	@ (800e048 <_strtod_l+0x290>)
 800df10:	2201      	movs	r2, #1
 800df12:	f001 fd01 	bl	800f918 <strncmp>
 800df16:	2800      	cmp	r0, #0
 800df18:	d032      	beq.n	800df80 <_strtod_l+0x1c8>
 800df1a:	2000      	movs	r0, #0
 800df1c:	462a      	mov	r2, r5
 800df1e:	4681      	mov	r9, r0
 800df20:	463d      	mov	r5, r7
 800df22:	4603      	mov	r3, r0
 800df24:	2a65      	cmp	r2, #101	@ 0x65
 800df26:	d001      	beq.n	800df2c <_strtod_l+0x174>
 800df28:	2a45      	cmp	r2, #69	@ 0x45
 800df2a:	d114      	bne.n	800df56 <_strtod_l+0x19e>
 800df2c:	b91d      	cbnz	r5, 800df36 <_strtod_l+0x17e>
 800df2e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800df30:	4302      	orrs	r2, r0
 800df32:	d095      	beq.n	800de60 <_strtod_l+0xa8>
 800df34:	2500      	movs	r5, #0
 800df36:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800df38:	1c62      	adds	r2, r4, #1
 800df3a:	9219      	str	r2, [sp, #100]	@ 0x64
 800df3c:	7862      	ldrb	r2, [r4, #1]
 800df3e:	2a2b      	cmp	r2, #43	@ 0x2b
 800df40:	d077      	beq.n	800e032 <_strtod_l+0x27a>
 800df42:	2a2d      	cmp	r2, #45	@ 0x2d
 800df44:	d07b      	beq.n	800e03e <_strtod_l+0x286>
 800df46:	f04f 0c00 	mov.w	ip, #0
 800df4a:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800df4e:	2909      	cmp	r1, #9
 800df50:	f240 8082 	bls.w	800e058 <_strtod_l+0x2a0>
 800df54:	9419      	str	r4, [sp, #100]	@ 0x64
 800df56:	f04f 0800 	mov.w	r8, #0
 800df5a:	e0a2      	b.n	800e0a2 <_strtod_l+0x2ea>
 800df5c:	2300      	movs	r3, #0
 800df5e:	e7c7      	b.n	800def0 <_strtod_l+0x138>
 800df60:	2f08      	cmp	r7, #8
 800df62:	bfd5      	itete	le
 800df64:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 800df66:	9908      	ldrgt	r1, [sp, #32]
 800df68:	fb02 3301 	mlale	r3, r2, r1, r3
 800df6c:	fb02 3301 	mlagt	r3, r2, r1, r3
 800df70:	f100 0001 	add.w	r0, r0, #1
 800df74:	bfd4      	ite	le
 800df76:	930a      	strle	r3, [sp, #40]	@ 0x28
 800df78:	9308      	strgt	r3, [sp, #32]
 800df7a:	3701      	adds	r7, #1
 800df7c:	9019      	str	r0, [sp, #100]	@ 0x64
 800df7e:	e7bf      	b.n	800df00 <_strtod_l+0x148>
 800df80:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800df82:	1c5a      	adds	r2, r3, #1
 800df84:	9219      	str	r2, [sp, #100]	@ 0x64
 800df86:	785a      	ldrb	r2, [r3, #1]
 800df88:	b37f      	cbz	r7, 800dfea <_strtod_l+0x232>
 800df8a:	4681      	mov	r9, r0
 800df8c:	463d      	mov	r5, r7
 800df8e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800df92:	2b09      	cmp	r3, #9
 800df94:	d912      	bls.n	800dfbc <_strtod_l+0x204>
 800df96:	2301      	movs	r3, #1
 800df98:	e7c4      	b.n	800df24 <_strtod_l+0x16c>
 800df9a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800df9c:	1c5a      	adds	r2, r3, #1
 800df9e:	9219      	str	r2, [sp, #100]	@ 0x64
 800dfa0:	785a      	ldrb	r2, [r3, #1]
 800dfa2:	3001      	adds	r0, #1
 800dfa4:	2a30      	cmp	r2, #48	@ 0x30
 800dfa6:	d0f8      	beq.n	800df9a <_strtod_l+0x1e2>
 800dfa8:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800dfac:	2b08      	cmp	r3, #8
 800dfae:	f200 84d3 	bhi.w	800e958 <_strtod_l+0xba0>
 800dfb2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800dfb4:	930c      	str	r3, [sp, #48]	@ 0x30
 800dfb6:	4681      	mov	r9, r0
 800dfb8:	2000      	movs	r0, #0
 800dfba:	4605      	mov	r5, r0
 800dfbc:	3a30      	subs	r2, #48	@ 0x30
 800dfbe:	f100 0301 	add.w	r3, r0, #1
 800dfc2:	d02a      	beq.n	800e01a <_strtod_l+0x262>
 800dfc4:	4499      	add	r9, r3
 800dfc6:	eb00 0c05 	add.w	ip, r0, r5
 800dfca:	462b      	mov	r3, r5
 800dfcc:	210a      	movs	r1, #10
 800dfce:	4563      	cmp	r3, ip
 800dfd0:	d10d      	bne.n	800dfee <_strtod_l+0x236>
 800dfd2:	1c69      	adds	r1, r5, #1
 800dfd4:	4401      	add	r1, r0
 800dfd6:	4428      	add	r0, r5
 800dfd8:	2808      	cmp	r0, #8
 800dfda:	dc16      	bgt.n	800e00a <_strtod_l+0x252>
 800dfdc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800dfde:	230a      	movs	r3, #10
 800dfe0:	fb03 2300 	mla	r3, r3, r0, r2
 800dfe4:	930a      	str	r3, [sp, #40]	@ 0x28
 800dfe6:	2300      	movs	r3, #0
 800dfe8:	e018      	b.n	800e01c <_strtod_l+0x264>
 800dfea:	4638      	mov	r0, r7
 800dfec:	e7da      	b.n	800dfa4 <_strtod_l+0x1ec>
 800dfee:	2b08      	cmp	r3, #8
 800dff0:	f103 0301 	add.w	r3, r3, #1
 800dff4:	dc03      	bgt.n	800dffe <_strtod_l+0x246>
 800dff6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800dff8:	434e      	muls	r6, r1
 800dffa:	960a      	str	r6, [sp, #40]	@ 0x28
 800dffc:	e7e7      	b.n	800dfce <_strtod_l+0x216>
 800dffe:	2b10      	cmp	r3, #16
 800e000:	bfde      	ittt	le
 800e002:	9e08      	ldrle	r6, [sp, #32]
 800e004:	434e      	mulle	r6, r1
 800e006:	9608      	strle	r6, [sp, #32]
 800e008:	e7e1      	b.n	800dfce <_strtod_l+0x216>
 800e00a:	280f      	cmp	r0, #15
 800e00c:	dceb      	bgt.n	800dfe6 <_strtod_l+0x22e>
 800e00e:	9808      	ldr	r0, [sp, #32]
 800e010:	230a      	movs	r3, #10
 800e012:	fb03 2300 	mla	r3, r3, r0, r2
 800e016:	9308      	str	r3, [sp, #32]
 800e018:	e7e5      	b.n	800dfe6 <_strtod_l+0x22e>
 800e01a:	4629      	mov	r1, r5
 800e01c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800e01e:	1c50      	adds	r0, r2, #1
 800e020:	9019      	str	r0, [sp, #100]	@ 0x64
 800e022:	7852      	ldrb	r2, [r2, #1]
 800e024:	4618      	mov	r0, r3
 800e026:	460d      	mov	r5, r1
 800e028:	e7b1      	b.n	800df8e <_strtod_l+0x1d6>
 800e02a:	f04f 0900 	mov.w	r9, #0
 800e02e:	2301      	movs	r3, #1
 800e030:	e77d      	b.n	800df2e <_strtod_l+0x176>
 800e032:	f04f 0c00 	mov.w	ip, #0
 800e036:	1ca2      	adds	r2, r4, #2
 800e038:	9219      	str	r2, [sp, #100]	@ 0x64
 800e03a:	78a2      	ldrb	r2, [r4, #2]
 800e03c:	e785      	b.n	800df4a <_strtod_l+0x192>
 800e03e:	f04f 0c01 	mov.w	ip, #1
 800e042:	e7f8      	b.n	800e036 <_strtod_l+0x27e>
 800e044:	080128d4 	.word	0x080128d4
 800e048:	080128bc 	.word	0x080128bc
 800e04c:	7ff00000 	.word	0x7ff00000
 800e050:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800e052:	1c51      	adds	r1, r2, #1
 800e054:	9119      	str	r1, [sp, #100]	@ 0x64
 800e056:	7852      	ldrb	r2, [r2, #1]
 800e058:	2a30      	cmp	r2, #48	@ 0x30
 800e05a:	d0f9      	beq.n	800e050 <_strtod_l+0x298>
 800e05c:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800e060:	2908      	cmp	r1, #8
 800e062:	f63f af78 	bhi.w	800df56 <_strtod_l+0x19e>
 800e066:	3a30      	subs	r2, #48	@ 0x30
 800e068:	920e      	str	r2, [sp, #56]	@ 0x38
 800e06a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800e06c:	920f      	str	r2, [sp, #60]	@ 0x3c
 800e06e:	f04f 080a 	mov.w	r8, #10
 800e072:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800e074:	1c56      	adds	r6, r2, #1
 800e076:	9619      	str	r6, [sp, #100]	@ 0x64
 800e078:	7852      	ldrb	r2, [r2, #1]
 800e07a:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800e07e:	f1be 0f09 	cmp.w	lr, #9
 800e082:	d939      	bls.n	800e0f8 <_strtod_l+0x340>
 800e084:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800e086:	1a76      	subs	r6, r6, r1
 800e088:	2e08      	cmp	r6, #8
 800e08a:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 800e08e:	dc03      	bgt.n	800e098 <_strtod_l+0x2e0>
 800e090:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800e092:	4588      	cmp	r8, r1
 800e094:	bfa8      	it	ge
 800e096:	4688      	movge	r8, r1
 800e098:	f1bc 0f00 	cmp.w	ip, #0
 800e09c:	d001      	beq.n	800e0a2 <_strtod_l+0x2ea>
 800e09e:	f1c8 0800 	rsb	r8, r8, #0
 800e0a2:	2d00      	cmp	r5, #0
 800e0a4:	d14e      	bne.n	800e144 <_strtod_l+0x38c>
 800e0a6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800e0a8:	4308      	orrs	r0, r1
 800e0aa:	f47f aebe 	bne.w	800de2a <_strtod_l+0x72>
 800e0ae:	2b00      	cmp	r3, #0
 800e0b0:	f47f aed6 	bne.w	800de60 <_strtod_l+0xa8>
 800e0b4:	2a69      	cmp	r2, #105	@ 0x69
 800e0b6:	d028      	beq.n	800e10a <_strtod_l+0x352>
 800e0b8:	dc25      	bgt.n	800e106 <_strtod_l+0x34e>
 800e0ba:	2a49      	cmp	r2, #73	@ 0x49
 800e0bc:	d025      	beq.n	800e10a <_strtod_l+0x352>
 800e0be:	2a4e      	cmp	r2, #78	@ 0x4e
 800e0c0:	f47f aece 	bne.w	800de60 <_strtod_l+0xa8>
 800e0c4:	499b      	ldr	r1, [pc, #620]	@ (800e334 <_strtod_l+0x57c>)
 800e0c6:	a819      	add	r0, sp, #100	@ 0x64
 800e0c8:	f002 fdee 	bl	8010ca8 <__match>
 800e0cc:	2800      	cmp	r0, #0
 800e0ce:	f43f aec7 	beq.w	800de60 <_strtod_l+0xa8>
 800e0d2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800e0d4:	781b      	ldrb	r3, [r3, #0]
 800e0d6:	2b28      	cmp	r3, #40	@ 0x28
 800e0d8:	d12e      	bne.n	800e138 <_strtod_l+0x380>
 800e0da:	4997      	ldr	r1, [pc, #604]	@ (800e338 <_strtod_l+0x580>)
 800e0dc:	aa1c      	add	r2, sp, #112	@ 0x70
 800e0de:	a819      	add	r0, sp, #100	@ 0x64
 800e0e0:	f002 fdf6 	bl	8010cd0 <__hexnan>
 800e0e4:	2805      	cmp	r0, #5
 800e0e6:	d127      	bne.n	800e138 <_strtod_l+0x380>
 800e0e8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800e0ea:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800e0ee:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 800e0f2:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800e0f6:	e698      	b.n	800de2a <_strtod_l+0x72>
 800e0f8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800e0fa:	fb08 2101 	mla	r1, r8, r1, r2
 800e0fe:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 800e102:	920e      	str	r2, [sp, #56]	@ 0x38
 800e104:	e7b5      	b.n	800e072 <_strtod_l+0x2ba>
 800e106:	2a6e      	cmp	r2, #110	@ 0x6e
 800e108:	e7da      	b.n	800e0c0 <_strtod_l+0x308>
 800e10a:	498c      	ldr	r1, [pc, #560]	@ (800e33c <_strtod_l+0x584>)
 800e10c:	a819      	add	r0, sp, #100	@ 0x64
 800e10e:	f002 fdcb 	bl	8010ca8 <__match>
 800e112:	2800      	cmp	r0, #0
 800e114:	f43f aea4 	beq.w	800de60 <_strtod_l+0xa8>
 800e118:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800e11a:	4989      	ldr	r1, [pc, #548]	@ (800e340 <_strtod_l+0x588>)
 800e11c:	3b01      	subs	r3, #1
 800e11e:	a819      	add	r0, sp, #100	@ 0x64
 800e120:	9319      	str	r3, [sp, #100]	@ 0x64
 800e122:	f002 fdc1 	bl	8010ca8 <__match>
 800e126:	b910      	cbnz	r0, 800e12e <_strtod_l+0x376>
 800e128:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800e12a:	3301      	adds	r3, #1
 800e12c:	9319      	str	r3, [sp, #100]	@ 0x64
 800e12e:	f8df b220 	ldr.w	fp, [pc, #544]	@ 800e350 <_strtod_l+0x598>
 800e132:	f04f 0a00 	mov.w	sl, #0
 800e136:	e678      	b.n	800de2a <_strtod_l+0x72>
 800e138:	4882      	ldr	r0, [pc, #520]	@ (800e344 <_strtod_l+0x58c>)
 800e13a:	f001 fc85 	bl	800fa48 <nan>
 800e13e:	ec5b ab10 	vmov	sl, fp, d0
 800e142:	e672      	b.n	800de2a <_strtod_l+0x72>
 800e144:	eba8 0309 	sub.w	r3, r8, r9
 800e148:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800e14a:	9309      	str	r3, [sp, #36]	@ 0x24
 800e14c:	2f00      	cmp	r7, #0
 800e14e:	bf08      	it	eq
 800e150:	462f      	moveq	r7, r5
 800e152:	2d10      	cmp	r5, #16
 800e154:	462c      	mov	r4, r5
 800e156:	bfa8      	it	ge
 800e158:	2410      	movge	r4, #16
 800e15a:	f7f2 f9fb 	bl	8000554 <__aeabi_ui2d>
 800e15e:	2d09      	cmp	r5, #9
 800e160:	4682      	mov	sl, r0
 800e162:	468b      	mov	fp, r1
 800e164:	dc13      	bgt.n	800e18e <_strtod_l+0x3d6>
 800e166:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e168:	2b00      	cmp	r3, #0
 800e16a:	f43f ae5e 	beq.w	800de2a <_strtod_l+0x72>
 800e16e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e170:	dd78      	ble.n	800e264 <_strtod_l+0x4ac>
 800e172:	2b16      	cmp	r3, #22
 800e174:	dc5f      	bgt.n	800e236 <_strtod_l+0x47e>
 800e176:	4974      	ldr	r1, [pc, #464]	@ (800e348 <_strtod_l+0x590>)
 800e178:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800e17c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e180:	4652      	mov	r2, sl
 800e182:	465b      	mov	r3, fp
 800e184:	f7f2 fa60 	bl	8000648 <__aeabi_dmul>
 800e188:	4682      	mov	sl, r0
 800e18a:	468b      	mov	fp, r1
 800e18c:	e64d      	b.n	800de2a <_strtod_l+0x72>
 800e18e:	4b6e      	ldr	r3, [pc, #440]	@ (800e348 <_strtod_l+0x590>)
 800e190:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e194:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 800e198:	f7f2 fa56 	bl	8000648 <__aeabi_dmul>
 800e19c:	4682      	mov	sl, r0
 800e19e:	9808      	ldr	r0, [sp, #32]
 800e1a0:	468b      	mov	fp, r1
 800e1a2:	f7f2 f9d7 	bl	8000554 <__aeabi_ui2d>
 800e1a6:	4602      	mov	r2, r0
 800e1a8:	460b      	mov	r3, r1
 800e1aa:	4650      	mov	r0, sl
 800e1ac:	4659      	mov	r1, fp
 800e1ae:	f7f2 f895 	bl	80002dc <__adddf3>
 800e1b2:	2d0f      	cmp	r5, #15
 800e1b4:	4682      	mov	sl, r0
 800e1b6:	468b      	mov	fp, r1
 800e1b8:	ddd5      	ble.n	800e166 <_strtod_l+0x3ae>
 800e1ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e1bc:	1b2c      	subs	r4, r5, r4
 800e1be:	441c      	add	r4, r3
 800e1c0:	2c00      	cmp	r4, #0
 800e1c2:	f340 8096 	ble.w	800e2f2 <_strtod_l+0x53a>
 800e1c6:	f014 030f 	ands.w	r3, r4, #15
 800e1ca:	d00a      	beq.n	800e1e2 <_strtod_l+0x42a>
 800e1cc:	495e      	ldr	r1, [pc, #376]	@ (800e348 <_strtod_l+0x590>)
 800e1ce:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800e1d2:	4652      	mov	r2, sl
 800e1d4:	465b      	mov	r3, fp
 800e1d6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e1da:	f7f2 fa35 	bl	8000648 <__aeabi_dmul>
 800e1de:	4682      	mov	sl, r0
 800e1e0:	468b      	mov	fp, r1
 800e1e2:	f034 040f 	bics.w	r4, r4, #15
 800e1e6:	d073      	beq.n	800e2d0 <_strtod_l+0x518>
 800e1e8:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800e1ec:	dd48      	ble.n	800e280 <_strtod_l+0x4c8>
 800e1ee:	2400      	movs	r4, #0
 800e1f0:	46a0      	mov	r8, r4
 800e1f2:	940a      	str	r4, [sp, #40]	@ 0x28
 800e1f4:	46a1      	mov	r9, r4
 800e1f6:	9a05      	ldr	r2, [sp, #20]
 800e1f8:	f8df b154 	ldr.w	fp, [pc, #340]	@ 800e350 <_strtod_l+0x598>
 800e1fc:	2322      	movs	r3, #34	@ 0x22
 800e1fe:	6013      	str	r3, [r2, #0]
 800e200:	f04f 0a00 	mov.w	sl, #0
 800e204:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e206:	2b00      	cmp	r3, #0
 800e208:	f43f ae0f 	beq.w	800de2a <_strtod_l+0x72>
 800e20c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800e20e:	9805      	ldr	r0, [sp, #20]
 800e210:	f002 ff02 	bl	8011018 <_Bfree>
 800e214:	9805      	ldr	r0, [sp, #20]
 800e216:	4649      	mov	r1, r9
 800e218:	f002 fefe 	bl	8011018 <_Bfree>
 800e21c:	9805      	ldr	r0, [sp, #20]
 800e21e:	4641      	mov	r1, r8
 800e220:	f002 fefa 	bl	8011018 <_Bfree>
 800e224:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800e226:	9805      	ldr	r0, [sp, #20]
 800e228:	f002 fef6 	bl	8011018 <_Bfree>
 800e22c:	9805      	ldr	r0, [sp, #20]
 800e22e:	4621      	mov	r1, r4
 800e230:	f002 fef2 	bl	8011018 <_Bfree>
 800e234:	e5f9      	b.n	800de2a <_strtod_l+0x72>
 800e236:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e238:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800e23c:	4293      	cmp	r3, r2
 800e23e:	dbbc      	blt.n	800e1ba <_strtod_l+0x402>
 800e240:	4c41      	ldr	r4, [pc, #260]	@ (800e348 <_strtod_l+0x590>)
 800e242:	f1c5 050f 	rsb	r5, r5, #15
 800e246:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800e24a:	4652      	mov	r2, sl
 800e24c:	465b      	mov	r3, fp
 800e24e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e252:	f7f2 f9f9 	bl	8000648 <__aeabi_dmul>
 800e256:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e258:	1b5d      	subs	r5, r3, r5
 800e25a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800e25e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e262:	e78f      	b.n	800e184 <_strtod_l+0x3cc>
 800e264:	3316      	adds	r3, #22
 800e266:	dba8      	blt.n	800e1ba <_strtod_l+0x402>
 800e268:	4b37      	ldr	r3, [pc, #220]	@ (800e348 <_strtod_l+0x590>)
 800e26a:	eba9 0808 	sub.w	r8, r9, r8
 800e26e:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800e272:	e9d8 2300 	ldrd	r2, r3, [r8]
 800e276:	4650      	mov	r0, sl
 800e278:	4659      	mov	r1, fp
 800e27a:	f7f2 fb0f 	bl	800089c <__aeabi_ddiv>
 800e27e:	e783      	b.n	800e188 <_strtod_l+0x3d0>
 800e280:	4b32      	ldr	r3, [pc, #200]	@ (800e34c <_strtod_l+0x594>)
 800e282:	9308      	str	r3, [sp, #32]
 800e284:	2300      	movs	r3, #0
 800e286:	1124      	asrs	r4, r4, #4
 800e288:	4650      	mov	r0, sl
 800e28a:	4659      	mov	r1, fp
 800e28c:	461e      	mov	r6, r3
 800e28e:	2c01      	cmp	r4, #1
 800e290:	dc21      	bgt.n	800e2d6 <_strtod_l+0x51e>
 800e292:	b10b      	cbz	r3, 800e298 <_strtod_l+0x4e0>
 800e294:	4682      	mov	sl, r0
 800e296:	468b      	mov	fp, r1
 800e298:	492c      	ldr	r1, [pc, #176]	@ (800e34c <_strtod_l+0x594>)
 800e29a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800e29e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800e2a2:	4652      	mov	r2, sl
 800e2a4:	465b      	mov	r3, fp
 800e2a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e2aa:	f7f2 f9cd 	bl	8000648 <__aeabi_dmul>
 800e2ae:	4b28      	ldr	r3, [pc, #160]	@ (800e350 <_strtod_l+0x598>)
 800e2b0:	460a      	mov	r2, r1
 800e2b2:	400b      	ands	r3, r1
 800e2b4:	4927      	ldr	r1, [pc, #156]	@ (800e354 <_strtod_l+0x59c>)
 800e2b6:	428b      	cmp	r3, r1
 800e2b8:	4682      	mov	sl, r0
 800e2ba:	d898      	bhi.n	800e1ee <_strtod_l+0x436>
 800e2bc:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 800e2c0:	428b      	cmp	r3, r1
 800e2c2:	bf86      	itte	hi
 800e2c4:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 800e358 <_strtod_l+0x5a0>
 800e2c8:	f04f 3aff 	movhi.w	sl, #4294967295
 800e2cc:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 800e2d0:	2300      	movs	r3, #0
 800e2d2:	9308      	str	r3, [sp, #32]
 800e2d4:	e07a      	b.n	800e3cc <_strtod_l+0x614>
 800e2d6:	07e2      	lsls	r2, r4, #31
 800e2d8:	d505      	bpl.n	800e2e6 <_strtod_l+0x52e>
 800e2da:	9b08      	ldr	r3, [sp, #32]
 800e2dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e2e0:	f7f2 f9b2 	bl	8000648 <__aeabi_dmul>
 800e2e4:	2301      	movs	r3, #1
 800e2e6:	9a08      	ldr	r2, [sp, #32]
 800e2e8:	3208      	adds	r2, #8
 800e2ea:	3601      	adds	r6, #1
 800e2ec:	1064      	asrs	r4, r4, #1
 800e2ee:	9208      	str	r2, [sp, #32]
 800e2f0:	e7cd      	b.n	800e28e <_strtod_l+0x4d6>
 800e2f2:	d0ed      	beq.n	800e2d0 <_strtod_l+0x518>
 800e2f4:	4264      	negs	r4, r4
 800e2f6:	f014 020f 	ands.w	r2, r4, #15
 800e2fa:	d00a      	beq.n	800e312 <_strtod_l+0x55a>
 800e2fc:	4b12      	ldr	r3, [pc, #72]	@ (800e348 <_strtod_l+0x590>)
 800e2fe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e302:	4650      	mov	r0, sl
 800e304:	4659      	mov	r1, fp
 800e306:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e30a:	f7f2 fac7 	bl	800089c <__aeabi_ddiv>
 800e30e:	4682      	mov	sl, r0
 800e310:	468b      	mov	fp, r1
 800e312:	1124      	asrs	r4, r4, #4
 800e314:	d0dc      	beq.n	800e2d0 <_strtod_l+0x518>
 800e316:	2c1f      	cmp	r4, #31
 800e318:	dd20      	ble.n	800e35c <_strtod_l+0x5a4>
 800e31a:	2400      	movs	r4, #0
 800e31c:	46a0      	mov	r8, r4
 800e31e:	940a      	str	r4, [sp, #40]	@ 0x28
 800e320:	46a1      	mov	r9, r4
 800e322:	9a05      	ldr	r2, [sp, #20]
 800e324:	2322      	movs	r3, #34	@ 0x22
 800e326:	f04f 0a00 	mov.w	sl, #0
 800e32a:	f04f 0b00 	mov.w	fp, #0
 800e32e:	6013      	str	r3, [r2, #0]
 800e330:	e768      	b.n	800e204 <_strtod_l+0x44c>
 800e332:	bf00      	nop
 800e334:	0801291d 	.word	0x0801291d
 800e338:	080128c0 	.word	0x080128c0
 800e33c:	08012915 	.word	0x08012915
 800e340:	08012954 	.word	0x08012954
 800e344:	08012ce5 	.word	0x08012ce5
 800e348:	08012ad0 	.word	0x08012ad0
 800e34c:	08012aa8 	.word	0x08012aa8
 800e350:	7ff00000 	.word	0x7ff00000
 800e354:	7ca00000 	.word	0x7ca00000
 800e358:	7fefffff 	.word	0x7fefffff
 800e35c:	f014 0310 	ands.w	r3, r4, #16
 800e360:	bf18      	it	ne
 800e362:	236a      	movne	r3, #106	@ 0x6a
 800e364:	4ea9      	ldr	r6, [pc, #676]	@ (800e60c <_strtod_l+0x854>)
 800e366:	9308      	str	r3, [sp, #32]
 800e368:	4650      	mov	r0, sl
 800e36a:	4659      	mov	r1, fp
 800e36c:	2300      	movs	r3, #0
 800e36e:	07e2      	lsls	r2, r4, #31
 800e370:	d504      	bpl.n	800e37c <_strtod_l+0x5c4>
 800e372:	e9d6 2300 	ldrd	r2, r3, [r6]
 800e376:	f7f2 f967 	bl	8000648 <__aeabi_dmul>
 800e37a:	2301      	movs	r3, #1
 800e37c:	1064      	asrs	r4, r4, #1
 800e37e:	f106 0608 	add.w	r6, r6, #8
 800e382:	d1f4      	bne.n	800e36e <_strtod_l+0x5b6>
 800e384:	b10b      	cbz	r3, 800e38a <_strtod_l+0x5d2>
 800e386:	4682      	mov	sl, r0
 800e388:	468b      	mov	fp, r1
 800e38a:	9b08      	ldr	r3, [sp, #32]
 800e38c:	b1b3      	cbz	r3, 800e3bc <_strtod_l+0x604>
 800e38e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800e392:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800e396:	2b00      	cmp	r3, #0
 800e398:	4659      	mov	r1, fp
 800e39a:	dd0f      	ble.n	800e3bc <_strtod_l+0x604>
 800e39c:	2b1f      	cmp	r3, #31
 800e39e:	dd55      	ble.n	800e44c <_strtod_l+0x694>
 800e3a0:	2b34      	cmp	r3, #52	@ 0x34
 800e3a2:	bfde      	ittt	le
 800e3a4:	f04f 33ff 	movle.w	r3, #4294967295
 800e3a8:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800e3ac:	4093      	lslle	r3, r2
 800e3ae:	f04f 0a00 	mov.w	sl, #0
 800e3b2:	bfcc      	ite	gt
 800e3b4:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800e3b8:	ea03 0b01 	andle.w	fp, r3, r1
 800e3bc:	2200      	movs	r2, #0
 800e3be:	2300      	movs	r3, #0
 800e3c0:	4650      	mov	r0, sl
 800e3c2:	4659      	mov	r1, fp
 800e3c4:	f7f2 fba8 	bl	8000b18 <__aeabi_dcmpeq>
 800e3c8:	2800      	cmp	r0, #0
 800e3ca:	d1a6      	bne.n	800e31a <_strtod_l+0x562>
 800e3cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e3ce:	9300      	str	r3, [sp, #0]
 800e3d0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e3d2:	9805      	ldr	r0, [sp, #20]
 800e3d4:	462b      	mov	r3, r5
 800e3d6:	463a      	mov	r2, r7
 800e3d8:	f002 fe86 	bl	80110e8 <__s2b>
 800e3dc:	900a      	str	r0, [sp, #40]	@ 0x28
 800e3de:	2800      	cmp	r0, #0
 800e3e0:	f43f af05 	beq.w	800e1ee <_strtod_l+0x436>
 800e3e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e3e6:	2a00      	cmp	r2, #0
 800e3e8:	eba9 0308 	sub.w	r3, r9, r8
 800e3ec:	bfa8      	it	ge
 800e3ee:	2300      	movge	r3, #0
 800e3f0:	9312      	str	r3, [sp, #72]	@ 0x48
 800e3f2:	2400      	movs	r4, #0
 800e3f4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800e3f8:	9316      	str	r3, [sp, #88]	@ 0x58
 800e3fa:	46a0      	mov	r8, r4
 800e3fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e3fe:	9805      	ldr	r0, [sp, #20]
 800e400:	6859      	ldr	r1, [r3, #4]
 800e402:	f002 fdc9 	bl	8010f98 <_Balloc>
 800e406:	4681      	mov	r9, r0
 800e408:	2800      	cmp	r0, #0
 800e40a:	f43f aef4 	beq.w	800e1f6 <_strtod_l+0x43e>
 800e40e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800e410:	691a      	ldr	r2, [r3, #16]
 800e412:	3202      	adds	r2, #2
 800e414:	f103 010c 	add.w	r1, r3, #12
 800e418:	0092      	lsls	r2, r2, #2
 800e41a:	300c      	adds	r0, #12
 800e41c:	f001 fb05 	bl	800fa2a <memcpy>
 800e420:	ec4b ab10 	vmov	d0, sl, fp
 800e424:	9805      	ldr	r0, [sp, #20]
 800e426:	aa1c      	add	r2, sp, #112	@ 0x70
 800e428:	a91b      	add	r1, sp, #108	@ 0x6c
 800e42a:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800e42e:	f003 f997 	bl	8011760 <__d2b>
 800e432:	901a      	str	r0, [sp, #104]	@ 0x68
 800e434:	2800      	cmp	r0, #0
 800e436:	f43f aede 	beq.w	800e1f6 <_strtod_l+0x43e>
 800e43a:	9805      	ldr	r0, [sp, #20]
 800e43c:	2101      	movs	r1, #1
 800e43e:	f002 fee9 	bl	8011214 <__i2b>
 800e442:	4680      	mov	r8, r0
 800e444:	b948      	cbnz	r0, 800e45a <_strtod_l+0x6a2>
 800e446:	f04f 0800 	mov.w	r8, #0
 800e44a:	e6d4      	b.n	800e1f6 <_strtod_l+0x43e>
 800e44c:	f04f 32ff 	mov.w	r2, #4294967295
 800e450:	fa02 f303 	lsl.w	r3, r2, r3
 800e454:	ea03 0a0a 	and.w	sl, r3, sl
 800e458:	e7b0      	b.n	800e3bc <_strtod_l+0x604>
 800e45a:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 800e45c:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e45e:	2d00      	cmp	r5, #0
 800e460:	bfab      	itete	ge
 800e462:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800e464:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800e466:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800e468:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800e46a:	bfac      	ite	ge
 800e46c:	18ef      	addge	r7, r5, r3
 800e46e:	1b5e      	sublt	r6, r3, r5
 800e470:	9b08      	ldr	r3, [sp, #32]
 800e472:	1aed      	subs	r5, r5, r3
 800e474:	4415      	add	r5, r2
 800e476:	4b66      	ldr	r3, [pc, #408]	@ (800e610 <_strtod_l+0x858>)
 800e478:	3d01      	subs	r5, #1
 800e47a:	429d      	cmp	r5, r3
 800e47c:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800e480:	da50      	bge.n	800e524 <_strtod_l+0x76c>
 800e482:	1b5b      	subs	r3, r3, r5
 800e484:	2b1f      	cmp	r3, #31
 800e486:	eba2 0203 	sub.w	r2, r2, r3
 800e48a:	f04f 0101 	mov.w	r1, #1
 800e48e:	dc3d      	bgt.n	800e50c <_strtod_l+0x754>
 800e490:	fa01 f303 	lsl.w	r3, r1, r3
 800e494:	9313      	str	r3, [sp, #76]	@ 0x4c
 800e496:	2300      	movs	r3, #0
 800e498:	9310      	str	r3, [sp, #64]	@ 0x40
 800e49a:	18bd      	adds	r5, r7, r2
 800e49c:	9b08      	ldr	r3, [sp, #32]
 800e49e:	42af      	cmp	r7, r5
 800e4a0:	4416      	add	r6, r2
 800e4a2:	441e      	add	r6, r3
 800e4a4:	463b      	mov	r3, r7
 800e4a6:	bfa8      	it	ge
 800e4a8:	462b      	movge	r3, r5
 800e4aa:	42b3      	cmp	r3, r6
 800e4ac:	bfa8      	it	ge
 800e4ae:	4633      	movge	r3, r6
 800e4b0:	2b00      	cmp	r3, #0
 800e4b2:	bfc2      	ittt	gt
 800e4b4:	1aed      	subgt	r5, r5, r3
 800e4b6:	1af6      	subgt	r6, r6, r3
 800e4b8:	1aff      	subgt	r7, r7, r3
 800e4ba:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800e4bc:	2b00      	cmp	r3, #0
 800e4be:	dd16      	ble.n	800e4ee <_strtod_l+0x736>
 800e4c0:	4641      	mov	r1, r8
 800e4c2:	9805      	ldr	r0, [sp, #20]
 800e4c4:	461a      	mov	r2, r3
 800e4c6:	f002 ff65 	bl	8011394 <__pow5mult>
 800e4ca:	4680      	mov	r8, r0
 800e4cc:	2800      	cmp	r0, #0
 800e4ce:	d0ba      	beq.n	800e446 <_strtod_l+0x68e>
 800e4d0:	4601      	mov	r1, r0
 800e4d2:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800e4d4:	9805      	ldr	r0, [sp, #20]
 800e4d6:	f002 feb3 	bl	8011240 <__multiply>
 800e4da:	900e      	str	r0, [sp, #56]	@ 0x38
 800e4dc:	2800      	cmp	r0, #0
 800e4de:	f43f ae8a 	beq.w	800e1f6 <_strtod_l+0x43e>
 800e4e2:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800e4e4:	9805      	ldr	r0, [sp, #20]
 800e4e6:	f002 fd97 	bl	8011018 <_Bfree>
 800e4ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e4ec:	931a      	str	r3, [sp, #104]	@ 0x68
 800e4ee:	2d00      	cmp	r5, #0
 800e4f0:	dc1d      	bgt.n	800e52e <_strtod_l+0x776>
 800e4f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e4f4:	2b00      	cmp	r3, #0
 800e4f6:	dd23      	ble.n	800e540 <_strtod_l+0x788>
 800e4f8:	4649      	mov	r1, r9
 800e4fa:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800e4fc:	9805      	ldr	r0, [sp, #20]
 800e4fe:	f002 ff49 	bl	8011394 <__pow5mult>
 800e502:	4681      	mov	r9, r0
 800e504:	b9e0      	cbnz	r0, 800e540 <_strtod_l+0x788>
 800e506:	f04f 0900 	mov.w	r9, #0
 800e50a:	e674      	b.n	800e1f6 <_strtod_l+0x43e>
 800e50c:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800e510:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800e514:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 800e518:	35e2      	adds	r5, #226	@ 0xe2
 800e51a:	fa01 f305 	lsl.w	r3, r1, r5
 800e51e:	9310      	str	r3, [sp, #64]	@ 0x40
 800e520:	9113      	str	r1, [sp, #76]	@ 0x4c
 800e522:	e7ba      	b.n	800e49a <_strtod_l+0x6e2>
 800e524:	2300      	movs	r3, #0
 800e526:	9310      	str	r3, [sp, #64]	@ 0x40
 800e528:	2301      	movs	r3, #1
 800e52a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800e52c:	e7b5      	b.n	800e49a <_strtod_l+0x6e2>
 800e52e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800e530:	9805      	ldr	r0, [sp, #20]
 800e532:	462a      	mov	r2, r5
 800e534:	f002 ff88 	bl	8011448 <__lshift>
 800e538:	901a      	str	r0, [sp, #104]	@ 0x68
 800e53a:	2800      	cmp	r0, #0
 800e53c:	d1d9      	bne.n	800e4f2 <_strtod_l+0x73a>
 800e53e:	e65a      	b.n	800e1f6 <_strtod_l+0x43e>
 800e540:	2e00      	cmp	r6, #0
 800e542:	dd07      	ble.n	800e554 <_strtod_l+0x79c>
 800e544:	4649      	mov	r1, r9
 800e546:	9805      	ldr	r0, [sp, #20]
 800e548:	4632      	mov	r2, r6
 800e54a:	f002 ff7d 	bl	8011448 <__lshift>
 800e54e:	4681      	mov	r9, r0
 800e550:	2800      	cmp	r0, #0
 800e552:	d0d8      	beq.n	800e506 <_strtod_l+0x74e>
 800e554:	2f00      	cmp	r7, #0
 800e556:	dd08      	ble.n	800e56a <_strtod_l+0x7b2>
 800e558:	4641      	mov	r1, r8
 800e55a:	9805      	ldr	r0, [sp, #20]
 800e55c:	463a      	mov	r2, r7
 800e55e:	f002 ff73 	bl	8011448 <__lshift>
 800e562:	4680      	mov	r8, r0
 800e564:	2800      	cmp	r0, #0
 800e566:	f43f ae46 	beq.w	800e1f6 <_strtod_l+0x43e>
 800e56a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800e56c:	9805      	ldr	r0, [sp, #20]
 800e56e:	464a      	mov	r2, r9
 800e570:	f002 fff2 	bl	8011558 <__mdiff>
 800e574:	4604      	mov	r4, r0
 800e576:	2800      	cmp	r0, #0
 800e578:	f43f ae3d 	beq.w	800e1f6 <_strtod_l+0x43e>
 800e57c:	68c3      	ldr	r3, [r0, #12]
 800e57e:	930f      	str	r3, [sp, #60]	@ 0x3c
 800e580:	2300      	movs	r3, #0
 800e582:	60c3      	str	r3, [r0, #12]
 800e584:	4641      	mov	r1, r8
 800e586:	f002 ffcb 	bl	8011520 <__mcmp>
 800e58a:	2800      	cmp	r0, #0
 800e58c:	da46      	bge.n	800e61c <_strtod_l+0x864>
 800e58e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e590:	ea53 030a 	orrs.w	r3, r3, sl
 800e594:	d16c      	bne.n	800e670 <_strtod_l+0x8b8>
 800e596:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800e59a:	2b00      	cmp	r3, #0
 800e59c:	d168      	bne.n	800e670 <_strtod_l+0x8b8>
 800e59e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800e5a2:	0d1b      	lsrs	r3, r3, #20
 800e5a4:	051b      	lsls	r3, r3, #20
 800e5a6:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800e5aa:	d961      	bls.n	800e670 <_strtod_l+0x8b8>
 800e5ac:	6963      	ldr	r3, [r4, #20]
 800e5ae:	b913      	cbnz	r3, 800e5b6 <_strtod_l+0x7fe>
 800e5b0:	6923      	ldr	r3, [r4, #16]
 800e5b2:	2b01      	cmp	r3, #1
 800e5b4:	dd5c      	ble.n	800e670 <_strtod_l+0x8b8>
 800e5b6:	4621      	mov	r1, r4
 800e5b8:	2201      	movs	r2, #1
 800e5ba:	9805      	ldr	r0, [sp, #20]
 800e5bc:	f002 ff44 	bl	8011448 <__lshift>
 800e5c0:	4641      	mov	r1, r8
 800e5c2:	4604      	mov	r4, r0
 800e5c4:	f002 ffac 	bl	8011520 <__mcmp>
 800e5c8:	2800      	cmp	r0, #0
 800e5ca:	dd51      	ble.n	800e670 <_strtod_l+0x8b8>
 800e5cc:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800e5d0:	9a08      	ldr	r2, [sp, #32]
 800e5d2:	0d1b      	lsrs	r3, r3, #20
 800e5d4:	051b      	lsls	r3, r3, #20
 800e5d6:	2a00      	cmp	r2, #0
 800e5d8:	d06b      	beq.n	800e6b2 <_strtod_l+0x8fa>
 800e5da:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800e5de:	d868      	bhi.n	800e6b2 <_strtod_l+0x8fa>
 800e5e0:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800e5e4:	f67f ae9d 	bls.w	800e322 <_strtod_l+0x56a>
 800e5e8:	4b0a      	ldr	r3, [pc, #40]	@ (800e614 <_strtod_l+0x85c>)
 800e5ea:	4650      	mov	r0, sl
 800e5ec:	4659      	mov	r1, fp
 800e5ee:	2200      	movs	r2, #0
 800e5f0:	f7f2 f82a 	bl	8000648 <__aeabi_dmul>
 800e5f4:	4b08      	ldr	r3, [pc, #32]	@ (800e618 <_strtod_l+0x860>)
 800e5f6:	400b      	ands	r3, r1
 800e5f8:	4682      	mov	sl, r0
 800e5fa:	468b      	mov	fp, r1
 800e5fc:	2b00      	cmp	r3, #0
 800e5fe:	f47f ae05 	bne.w	800e20c <_strtod_l+0x454>
 800e602:	9a05      	ldr	r2, [sp, #20]
 800e604:	2322      	movs	r3, #34	@ 0x22
 800e606:	6013      	str	r3, [r2, #0]
 800e608:	e600      	b.n	800e20c <_strtod_l+0x454>
 800e60a:	bf00      	nop
 800e60c:	080128e8 	.word	0x080128e8
 800e610:	fffffc02 	.word	0xfffffc02
 800e614:	39500000 	.word	0x39500000
 800e618:	7ff00000 	.word	0x7ff00000
 800e61c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800e620:	d165      	bne.n	800e6ee <_strtod_l+0x936>
 800e622:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800e624:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800e628:	b35a      	cbz	r2, 800e682 <_strtod_l+0x8ca>
 800e62a:	4a9f      	ldr	r2, [pc, #636]	@ (800e8a8 <_strtod_l+0xaf0>)
 800e62c:	4293      	cmp	r3, r2
 800e62e:	d12b      	bne.n	800e688 <_strtod_l+0x8d0>
 800e630:	9b08      	ldr	r3, [sp, #32]
 800e632:	4651      	mov	r1, sl
 800e634:	b303      	cbz	r3, 800e678 <_strtod_l+0x8c0>
 800e636:	4b9d      	ldr	r3, [pc, #628]	@ (800e8ac <_strtod_l+0xaf4>)
 800e638:	465a      	mov	r2, fp
 800e63a:	4013      	ands	r3, r2
 800e63c:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800e640:	f04f 32ff 	mov.w	r2, #4294967295
 800e644:	d81b      	bhi.n	800e67e <_strtod_l+0x8c6>
 800e646:	0d1b      	lsrs	r3, r3, #20
 800e648:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800e64c:	fa02 f303 	lsl.w	r3, r2, r3
 800e650:	4299      	cmp	r1, r3
 800e652:	d119      	bne.n	800e688 <_strtod_l+0x8d0>
 800e654:	4b96      	ldr	r3, [pc, #600]	@ (800e8b0 <_strtod_l+0xaf8>)
 800e656:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800e658:	429a      	cmp	r2, r3
 800e65a:	d102      	bne.n	800e662 <_strtod_l+0x8aa>
 800e65c:	3101      	adds	r1, #1
 800e65e:	f43f adca 	beq.w	800e1f6 <_strtod_l+0x43e>
 800e662:	4b92      	ldr	r3, [pc, #584]	@ (800e8ac <_strtod_l+0xaf4>)
 800e664:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800e666:	401a      	ands	r2, r3
 800e668:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800e66c:	f04f 0a00 	mov.w	sl, #0
 800e670:	9b08      	ldr	r3, [sp, #32]
 800e672:	2b00      	cmp	r3, #0
 800e674:	d1b8      	bne.n	800e5e8 <_strtod_l+0x830>
 800e676:	e5c9      	b.n	800e20c <_strtod_l+0x454>
 800e678:	f04f 33ff 	mov.w	r3, #4294967295
 800e67c:	e7e8      	b.n	800e650 <_strtod_l+0x898>
 800e67e:	4613      	mov	r3, r2
 800e680:	e7e6      	b.n	800e650 <_strtod_l+0x898>
 800e682:	ea53 030a 	orrs.w	r3, r3, sl
 800e686:	d0a1      	beq.n	800e5cc <_strtod_l+0x814>
 800e688:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800e68a:	b1db      	cbz	r3, 800e6c4 <_strtod_l+0x90c>
 800e68c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800e68e:	4213      	tst	r3, r2
 800e690:	d0ee      	beq.n	800e670 <_strtod_l+0x8b8>
 800e692:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e694:	9a08      	ldr	r2, [sp, #32]
 800e696:	4650      	mov	r0, sl
 800e698:	4659      	mov	r1, fp
 800e69a:	b1bb      	cbz	r3, 800e6cc <_strtod_l+0x914>
 800e69c:	f7ff fb6b 	bl	800dd76 <sulp>
 800e6a0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800e6a4:	ec53 2b10 	vmov	r2, r3, d0
 800e6a8:	f7f1 fe18 	bl	80002dc <__adddf3>
 800e6ac:	4682      	mov	sl, r0
 800e6ae:	468b      	mov	fp, r1
 800e6b0:	e7de      	b.n	800e670 <_strtod_l+0x8b8>
 800e6b2:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800e6b6:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800e6ba:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800e6be:	f04f 3aff 	mov.w	sl, #4294967295
 800e6c2:	e7d5      	b.n	800e670 <_strtod_l+0x8b8>
 800e6c4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800e6c6:	ea13 0f0a 	tst.w	r3, sl
 800e6ca:	e7e1      	b.n	800e690 <_strtod_l+0x8d8>
 800e6cc:	f7ff fb53 	bl	800dd76 <sulp>
 800e6d0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800e6d4:	ec53 2b10 	vmov	r2, r3, d0
 800e6d8:	f7f1 fdfe 	bl	80002d8 <__aeabi_dsub>
 800e6dc:	2200      	movs	r2, #0
 800e6de:	2300      	movs	r3, #0
 800e6e0:	4682      	mov	sl, r0
 800e6e2:	468b      	mov	fp, r1
 800e6e4:	f7f2 fa18 	bl	8000b18 <__aeabi_dcmpeq>
 800e6e8:	2800      	cmp	r0, #0
 800e6ea:	d0c1      	beq.n	800e670 <_strtod_l+0x8b8>
 800e6ec:	e619      	b.n	800e322 <_strtod_l+0x56a>
 800e6ee:	4641      	mov	r1, r8
 800e6f0:	4620      	mov	r0, r4
 800e6f2:	f003 f88d 	bl	8011810 <__ratio>
 800e6f6:	ec57 6b10 	vmov	r6, r7, d0
 800e6fa:	2200      	movs	r2, #0
 800e6fc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800e700:	4630      	mov	r0, r6
 800e702:	4639      	mov	r1, r7
 800e704:	f7f2 fa1c 	bl	8000b40 <__aeabi_dcmple>
 800e708:	2800      	cmp	r0, #0
 800e70a:	d06f      	beq.n	800e7ec <_strtod_l+0xa34>
 800e70c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e70e:	2b00      	cmp	r3, #0
 800e710:	d17a      	bne.n	800e808 <_strtod_l+0xa50>
 800e712:	f1ba 0f00 	cmp.w	sl, #0
 800e716:	d158      	bne.n	800e7ca <_strtod_l+0xa12>
 800e718:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e71a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800e71e:	2b00      	cmp	r3, #0
 800e720:	d15a      	bne.n	800e7d8 <_strtod_l+0xa20>
 800e722:	4b64      	ldr	r3, [pc, #400]	@ (800e8b4 <_strtod_l+0xafc>)
 800e724:	2200      	movs	r2, #0
 800e726:	4630      	mov	r0, r6
 800e728:	4639      	mov	r1, r7
 800e72a:	f7f2 f9ff 	bl	8000b2c <__aeabi_dcmplt>
 800e72e:	2800      	cmp	r0, #0
 800e730:	d159      	bne.n	800e7e6 <_strtod_l+0xa2e>
 800e732:	4630      	mov	r0, r6
 800e734:	4639      	mov	r1, r7
 800e736:	4b60      	ldr	r3, [pc, #384]	@ (800e8b8 <_strtod_l+0xb00>)
 800e738:	2200      	movs	r2, #0
 800e73a:	f7f1 ff85 	bl	8000648 <__aeabi_dmul>
 800e73e:	4606      	mov	r6, r0
 800e740:	460f      	mov	r7, r1
 800e742:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800e746:	9606      	str	r6, [sp, #24]
 800e748:	9307      	str	r3, [sp, #28]
 800e74a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e74e:	4d57      	ldr	r5, [pc, #348]	@ (800e8ac <_strtod_l+0xaf4>)
 800e750:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800e754:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e756:	401d      	ands	r5, r3
 800e758:	4b58      	ldr	r3, [pc, #352]	@ (800e8bc <_strtod_l+0xb04>)
 800e75a:	429d      	cmp	r5, r3
 800e75c:	f040 80b2 	bne.w	800e8c4 <_strtod_l+0xb0c>
 800e760:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e762:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800e766:	ec4b ab10 	vmov	d0, sl, fp
 800e76a:	f002 ff89 	bl	8011680 <__ulp>
 800e76e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e772:	ec51 0b10 	vmov	r0, r1, d0
 800e776:	f7f1 ff67 	bl	8000648 <__aeabi_dmul>
 800e77a:	4652      	mov	r2, sl
 800e77c:	465b      	mov	r3, fp
 800e77e:	f7f1 fdad 	bl	80002dc <__adddf3>
 800e782:	460b      	mov	r3, r1
 800e784:	4949      	ldr	r1, [pc, #292]	@ (800e8ac <_strtod_l+0xaf4>)
 800e786:	4a4e      	ldr	r2, [pc, #312]	@ (800e8c0 <_strtod_l+0xb08>)
 800e788:	4019      	ands	r1, r3
 800e78a:	4291      	cmp	r1, r2
 800e78c:	4682      	mov	sl, r0
 800e78e:	d942      	bls.n	800e816 <_strtod_l+0xa5e>
 800e790:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800e792:	4b47      	ldr	r3, [pc, #284]	@ (800e8b0 <_strtod_l+0xaf8>)
 800e794:	429a      	cmp	r2, r3
 800e796:	d103      	bne.n	800e7a0 <_strtod_l+0x9e8>
 800e798:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e79a:	3301      	adds	r3, #1
 800e79c:	f43f ad2b 	beq.w	800e1f6 <_strtod_l+0x43e>
 800e7a0:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 800e8b0 <_strtod_l+0xaf8>
 800e7a4:	f04f 3aff 	mov.w	sl, #4294967295
 800e7a8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800e7aa:	9805      	ldr	r0, [sp, #20]
 800e7ac:	f002 fc34 	bl	8011018 <_Bfree>
 800e7b0:	9805      	ldr	r0, [sp, #20]
 800e7b2:	4649      	mov	r1, r9
 800e7b4:	f002 fc30 	bl	8011018 <_Bfree>
 800e7b8:	9805      	ldr	r0, [sp, #20]
 800e7ba:	4641      	mov	r1, r8
 800e7bc:	f002 fc2c 	bl	8011018 <_Bfree>
 800e7c0:	9805      	ldr	r0, [sp, #20]
 800e7c2:	4621      	mov	r1, r4
 800e7c4:	f002 fc28 	bl	8011018 <_Bfree>
 800e7c8:	e618      	b.n	800e3fc <_strtod_l+0x644>
 800e7ca:	f1ba 0f01 	cmp.w	sl, #1
 800e7ce:	d103      	bne.n	800e7d8 <_strtod_l+0xa20>
 800e7d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e7d2:	2b00      	cmp	r3, #0
 800e7d4:	f43f ada5 	beq.w	800e322 <_strtod_l+0x56a>
 800e7d8:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 800e888 <_strtod_l+0xad0>
 800e7dc:	4f35      	ldr	r7, [pc, #212]	@ (800e8b4 <_strtod_l+0xafc>)
 800e7de:	ed8d 7b06 	vstr	d7, [sp, #24]
 800e7e2:	2600      	movs	r6, #0
 800e7e4:	e7b1      	b.n	800e74a <_strtod_l+0x992>
 800e7e6:	4f34      	ldr	r7, [pc, #208]	@ (800e8b8 <_strtod_l+0xb00>)
 800e7e8:	2600      	movs	r6, #0
 800e7ea:	e7aa      	b.n	800e742 <_strtod_l+0x98a>
 800e7ec:	4b32      	ldr	r3, [pc, #200]	@ (800e8b8 <_strtod_l+0xb00>)
 800e7ee:	4630      	mov	r0, r6
 800e7f0:	4639      	mov	r1, r7
 800e7f2:	2200      	movs	r2, #0
 800e7f4:	f7f1 ff28 	bl	8000648 <__aeabi_dmul>
 800e7f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e7fa:	4606      	mov	r6, r0
 800e7fc:	460f      	mov	r7, r1
 800e7fe:	2b00      	cmp	r3, #0
 800e800:	d09f      	beq.n	800e742 <_strtod_l+0x98a>
 800e802:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800e806:	e7a0      	b.n	800e74a <_strtod_l+0x992>
 800e808:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 800e890 <_strtod_l+0xad8>
 800e80c:	ed8d 7b06 	vstr	d7, [sp, #24]
 800e810:	ec57 6b17 	vmov	r6, r7, d7
 800e814:	e799      	b.n	800e74a <_strtod_l+0x992>
 800e816:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800e81a:	9b08      	ldr	r3, [sp, #32]
 800e81c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800e820:	2b00      	cmp	r3, #0
 800e822:	d1c1      	bne.n	800e7a8 <_strtod_l+0x9f0>
 800e824:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800e828:	0d1b      	lsrs	r3, r3, #20
 800e82a:	051b      	lsls	r3, r3, #20
 800e82c:	429d      	cmp	r5, r3
 800e82e:	d1bb      	bne.n	800e7a8 <_strtod_l+0x9f0>
 800e830:	4630      	mov	r0, r6
 800e832:	4639      	mov	r1, r7
 800e834:	f7f2 fa68 	bl	8000d08 <__aeabi_d2lz>
 800e838:	f7f1 fed8 	bl	80005ec <__aeabi_l2d>
 800e83c:	4602      	mov	r2, r0
 800e83e:	460b      	mov	r3, r1
 800e840:	4630      	mov	r0, r6
 800e842:	4639      	mov	r1, r7
 800e844:	f7f1 fd48 	bl	80002d8 <__aeabi_dsub>
 800e848:	460b      	mov	r3, r1
 800e84a:	4602      	mov	r2, r0
 800e84c:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800e850:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800e854:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e856:	ea46 060a 	orr.w	r6, r6, sl
 800e85a:	431e      	orrs	r6, r3
 800e85c:	d06f      	beq.n	800e93e <_strtod_l+0xb86>
 800e85e:	a30e      	add	r3, pc, #56	@ (adr r3, 800e898 <_strtod_l+0xae0>)
 800e860:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e864:	f7f2 f962 	bl	8000b2c <__aeabi_dcmplt>
 800e868:	2800      	cmp	r0, #0
 800e86a:	f47f accf 	bne.w	800e20c <_strtod_l+0x454>
 800e86e:	a30c      	add	r3, pc, #48	@ (adr r3, 800e8a0 <_strtod_l+0xae8>)
 800e870:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e874:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800e878:	f7f2 f976 	bl	8000b68 <__aeabi_dcmpgt>
 800e87c:	2800      	cmp	r0, #0
 800e87e:	d093      	beq.n	800e7a8 <_strtod_l+0x9f0>
 800e880:	e4c4      	b.n	800e20c <_strtod_l+0x454>
 800e882:	bf00      	nop
 800e884:	f3af 8000 	nop.w
 800e888:	00000000 	.word	0x00000000
 800e88c:	bff00000 	.word	0xbff00000
 800e890:	00000000 	.word	0x00000000
 800e894:	3ff00000 	.word	0x3ff00000
 800e898:	94a03595 	.word	0x94a03595
 800e89c:	3fdfffff 	.word	0x3fdfffff
 800e8a0:	35afe535 	.word	0x35afe535
 800e8a4:	3fe00000 	.word	0x3fe00000
 800e8a8:	000fffff 	.word	0x000fffff
 800e8ac:	7ff00000 	.word	0x7ff00000
 800e8b0:	7fefffff 	.word	0x7fefffff
 800e8b4:	3ff00000 	.word	0x3ff00000
 800e8b8:	3fe00000 	.word	0x3fe00000
 800e8bc:	7fe00000 	.word	0x7fe00000
 800e8c0:	7c9fffff 	.word	0x7c9fffff
 800e8c4:	9b08      	ldr	r3, [sp, #32]
 800e8c6:	b323      	cbz	r3, 800e912 <_strtod_l+0xb5a>
 800e8c8:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800e8cc:	d821      	bhi.n	800e912 <_strtod_l+0xb5a>
 800e8ce:	a328      	add	r3, pc, #160	@ (adr r3, 800e970 <_strtod_l+0xbb8>)
 800e8d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e8d4:	4630      	mov	r0, r6
 800e8d6:	4639      	mov	r1, r7
 800e8d8:	f7f2 f932 	bl	8000b40 <__aeabi_dcmple>
 800e8dc:	b1a0      	cbz	r0, 800e908 <_strtod_l+0xb50>
 800e8de:	4639      	mov	r1, r7
 800e8e0:	4630      	mov	r0, r6
 800e8e2:	f7f2 f989 	bl	8000bf8 <__aeabi_d2uiz>
 800e8e6:	2801      	cmp	r0, #1
 800e8e8:	bf38      	it	cc
 800e8ea:	2001      	movcc	r0, #1
 800e8ec:	f7f1 fe32 	bl	8000554 <__aeabi_ui2d>
 800e8f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e8f2:	4606      	mov	r6, r0
 800e8f4:	460f      	mov	r7, r1
 800e8f6:	b9fb      	cbnz	r3, 800e938 <_strtod_l+0xb80>
 800e8f8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800e8fc:	9014      	str	r0, [sp, #80]	@ 0x50
 800e8fe:	9315      	str	r3, [sp, #84]	@ 0x54
 800e900:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800e904:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800e908:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800e90a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800e90e:	1b5b      	subs	r3, r3, r5
 800e910:	9311      	str	r3, [sp, #68]	@ 0x44
 800e912:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800e916:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800e91a:	f002 feb1 	bl	8011680 <__ulp>
 800e91e:	4650      	mov	r0, sl
 800e920:	ec53 2b10 	vmov	r2, r3, d0
 800e924:	4659      	mov	r1, fp
 800e926:	f7f1 fe8f 	bl	8000648 <__aeabi_dmul>
 800e92a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800e92e:	f7f1 fcd5 	bl	80002dc <__adddf3>
 800e932:	4682      	mov	sl, r0
 800e934:	468b      	mov	fp, r1
 800e936:	e770      	b.n	800e81a <_strtod_l+0xa62>
 800e938:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800e93c:	e7e0      	b.n	800e900 <_strtod_l+0xb48>
 800e93e:	a30e      	add	r3, pc, #56	@ (adr r3, 800e978 <_strtod_l+0xbc0>)
 800e940:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e944:	f7f2 f8f2 	bl	8000b2c <__aeabi_dcmplt>
 800e948:	e798      	b.n	800e87c <_strtod_l+0xac4>
 800e94a:	2300      	movs	r3, #0
 800e94c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e94e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800e950:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800e952:	6013      	str	r3, [r2, #0]
 800e954:	f7ff ba6d 	b.w	800de32 <_strtod_l+0x7a>
 800e958:	2a65      	cmp	r2, #101	@ 0x65
 800e95a:	f43f ab66 	beq.w	800e02a <_strtod_l+0x272>
 800e95e:	2a45      	cmp	r2, #69	@ 0x45
 800e960:	f43f ab63 	beq.w	800e02a <_strtod_l+0x272>
 800e964:	2301      	movs	r3, #1
 800e966:	f7ff bb9e 	b.w	800e0a6 <_strtod_l+0x2ee>
 800e96a:	bf00      	nop
 800e96c:	f3af 8000 	nop.w
 800e970:	ffc00000 	.word	0xffc00000
 800e974:	41dfffff 	.word	0x41dfffff
 800e978:	94a03595 	.word	0x94a03595
 800e97c:	3fcfffff 	.word	0x3fcfffff

0800e980 <_strtod_r>:
 800e980:	4b01      	ldr	r3, [pc, #4]	@ (800e988 <_strtod_r+0x8>)
 800e982:	f7ff ba19 	b.w	800ddb8 <_strtod_l>
 800e986:	bf00      	nop
 800e988:	2000009c 	.word	0x2000009c

0800e98c <strtod>:
 800e98c:	460a      	mov	r2, r1
 800e98e:	4601      	mov	r1, r0
 800e990:	4802      	ldr	r0, [pc, #8]	@ (800e99c <strtod+0x10>)
 800e992:	4b03      	ldr	r3, [pc, #12]	@ (800e9a0 <strtod+0x14>)
 800e994:	6800      	ldr	r0, [r0, #0]
 800e996:	f7ff ba0f 	b.w	800ddb8 <_strtod_l>
 800e99a:	bf00      	nop
 800e99c:	20000208 	.word	0x20000208
 800e9a0:	2000009c 	.word	0x2000009c

0800e9a4 <__cvt>:
 800e9a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e9a8:	ec57 6b10 	vmov	r6, r7, d0
 800e9ac:	2f00      	cmp	r7, #0
 800e9ae:	460c      	mov	r4, r1
 800e9b0:	4619      	mov	r1, r3
 800e9b2:	463b      	mov	r3, r7
 800e9b4:	bfbb      	ittet	lt
 800e9b6:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800e9ba:	461f      	movlt	r7, r3
 800e9bc:	2300      	movge	r3, #0
 800e9be:	232d      	movlt	r3, #45	@ 0x2d
 800e9c0:	700b      	strb	r3, [r1, #0]
 800e9c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e9c4:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800e9c8:	4691      	mov	r9, r2
 800e9ca:	f023 0820 	bic.w	r8, r3, #32
 800e9ce:	bfbc      	itt	lt
 800e9d0:	4632      	movlt	r2, r6
 800e9d2:	4616      	movlt	r6, r2
 800e9d4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800e9d8:	d005      	beq.n	800e9e6 <__cvt+0x42>
 800e9da:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800e9de:	d100      	bne.n	800e9e2 <__cvt+0x3e>
 800e9e0:	3401      	adds	r4, #1
 800e9e2:	2102      	movs	r1, #2
 800e9e4:	e000      	b.n	800e9e8 <__cvt+0x44>
 800e9e6:	2103      	movs	r1, #3
 800e9e8:	ab03      	add	r3, sp, #12
 800e9ea:	9301      	str	r3, [sp, #4]
 800e9ec:	ab02      	add	r3, sp, #8
 800e9ee:	9300      	str	r3, [sp, #0]
 800e9f0:	ec47 6b10 	vmov	d0, r6, r7
 800e9f4:	4653      	mov	r3, sl
 800e9f6:	4622      	mov	r2, r4
 800e9f8:	f001 f8be 	bl	800fb78 <_dtoa_r>
 800e9fc:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800ea00:	4605      	mov	r5, r0
 800ea02:	d119      	bne.n	800ea38 <__cvt+0x94>
 800ea04:	f019 0f01 	tst.w	r9, #1
 800ea08:	d00e      	beq.n	800ea28 <__cvt+0x84>
 800ea0a:	eb00 0904 	add.w	r9, r0, r4
 800ea0e:	2200      	movs	r2, #0
 800ea10:	2300      	movs	r3, #0
 800ea12:	4630      	mov	r0, r6
 800ea14:	4639      	mov	r1, r7
 800ea16:	f7f2 f87f 	bl	8000b18 <__aeabi_dcmpeq>
 800ea1a:	b108      	cbz	r0, 800ea20 <__cvt+0x7c>
 800ea1c:	f8cd 900c 	str.w	r9, [sp, #12]
 800ea20:	2230      	movs	r2, #48	@ 0x30
 800ea22:	9b03      	ldr	r3, [sp, #12]
 800ea24:	454b      	cmp	r3, r9
 800ea26:	d31e      	bcc.n	800ea66 <__cvt+0xc2>
 800ea28:	9b03      	ldr	r3, [sp, #12]
 800ea2a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800ea2c:	1b5b      	subs	r3, r3, r5
 800ea2e:	4628      	mov	r0, r5
 800ea30:	6013      	str	r3, [r2, #0]
 800ea32:	b004      	add	sp, #16
 800ea34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea38:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800ea3c:	eb00 0904 	add.w	r9, r0, r4
 800ea40:	d1e5      	bne.n	800ea0e <__cvt+0x6a>
 800ea42:	7803      	ldrb	r3, [r0, #0]
 800ea44:	2b30      	cmp	r3, #48	@ 0x30
 800ea46:	d10a      	bne.n	800ea5e <__cvt+0xba>
 800ea48:	2200      	movs	r2, #0
 800ea4a:	2300      	movs	r3, #0
 800ea4c:	4630      	mov	r0, r6
 800ea4e:	4639      	mov	r1, r7
 800ea50:	f7f2 f862 	bl	8000b18 <__aeabi_dcmpeq>
 800ea54:	b918      	cbnz	r0, 800ea5e <__cvt+0xba>
 800ea56:	f1c4 0401 	rsb	r4, r4, #1
 800ea5a:	f8ca 4000 	str.w	r4, [sl]
 800ea5e:	f8da 3000 	ldr.w	r3, [sl]
 800ea62:	4499      	add	r9, r3
 800ea64:	e7d3      	b.n	800ea0e <__cvt+0x6a>
 800ea66:	1c59      	adds	r1, r3, #1
 800ea68:	9103      	str	r1, [sp, #12]
 800ea6a:	701a      	strb	r2, [r3, #0]
 800ea6c:	e7d9      	b.n	800ea22 <__cvt+0x7e>

0800ea6e <__exponent>:
 800ea6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ea70:	2900      	cmp	r1, #0
 800ea72:	bfba      	itte	lt
 800ea74:	4249      	neglt	r1, r1
 800ea76:	232d      	movlt	r3, #45	@ 0x2d
 800ea78:	232b      	movge	r3, #43	@ 0x2b
 800ea7a:	2909      	cmp	r1, #9
 800ea7c:	7002      	strb	r2, [r0, #0]
 800ea7e:	7043      	strb	r3, [r0, #1]
 800ea80:	dd29      	ble.n	800ead6 <__exponent+0x68>
 800ea82:	f10d 0307 	add.w	r3, sp, #7
 800ea86:	461d      	mov	r5, r3
 800ea88:	270a      	movs	r7, #10
 800ea8a:	461a      	mov	r2, r3
 800ea8c:	fbb1 f6f7 	udiv	r6, r1, r7
 800ea90:	fb07 1416 	mls	r4, r7, r6, r1
 800ea94:	3430      	adds	r4, #48	@ 0x30
 800ea96:	f802 4c01 	strb.w	r4, [r2, #-1]
 800ea9a:	460c      	mov	r4, r1
 800ea9c:	2c63      	cmp	r4, #99	@ 0x63
 800ea9e:	f103 33ff 	add.w	r3, r3, #4294967295
 800eaa2:	4631      	mov	r1, r6
 800eaa4:	dcf1      	bgt.n	800ea8a <__exponent+0x1c>
 800eaa6:	3130      	adds	r1, #48	@ 0x30
 800eaa8:	1e94      	subs	r4, r2, #2
 800eaaa:	f803 1c01 	strb.w	r1, [r3, #-1]
 800eaae:	1c41      	adds	r1, r0, #1
 800eab0:	4623      	mov	r3, r4
 800eab2:	42ab      	cmp	r3, r5
 800eab4:	d30a      	bcc.n	800eacc <__exponent+0x5e>
 800eab6:	f10d 0309 	add.w	r3, sp, #9
 800eaba:	1a9b      	subs	r3, r3, r2
 800eabc:	42ac      	cmp	r4, r5
 800eabe:	bf88      	it	hi
 800eac0:	2300      	movhi	r3, #0
 800eac2:	3302      	adds	r3, #2
 800eac4:	4403      	add	r3, r0
 800eac6:	1a18      	subs	r0, r3, r0
 800eac8:	b003      	add	sp, #12
 800eaca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eacc:	f813 6b01 	ldrb.w	r6, [r3], #1
 800ead0:	f801 6f01 	strb.w	r6, [r1, #1]!
 800ead4:	e7ed      	b.n	800eab2 <__exponent+0x44>
 800ead6:	2330      	movs	r3, #48	@ 0x30
 800ead8:	3130      	adds	r1, #48	@ 0x30
 800eada:	7083      	strb	r3, [r0, #2]
 800eadc:	70c1      	strb	r1, [r0, #3]
 800eade:	1d03      	adds	r3, r0, #4
 800eae0:	e7f1      	b.n	800eac6 <__exponent+0x58>
	...

0800eae4 <_printf_float>:
 800eae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eae8:	b08d      	sub	sp, #52	@ 0x34
 800eaea:	460c      	mov	r4, r1
 800eaec:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800eaf0:	4616      	mov	r6, r2
 800eaf2:	461f      	mov	r7, r3
 800eaf4:	4605      	mov	r5, r0
 800eaf6:	f000 ff21 	bl	800f93c <_localeconv_r>
 800eafa:	6803      	ldr	r3, [r0, #0]
 800eafc:	9304      	str	r3, [sp, #16]
 800eafe:	4618      	mov	r0, r3
 800eb00:	f7f1 fbde 	bl	80002c0 <strlen>
 800eb04:	2300      	movs	r3, #0
 800eb06:	930a      	str	r3, [sp, #40]	@ 0x28
 800eb08:	f8d8 3000 	ldr.w	r3, [r8]
 800eb0c:	9005      	str	r0, [sp, #20]
 800eb0e:	3307      	adds	r3, #7
 800eb10:	f023 0307 	bic.w	r3, r3, #7
 800eb14:	f103 0208 	add.w	r2, r3, #8
 800eb18:	f894 a018 	ldrb.w	sl, [r4, #24]
 800eb1c:	f8d4 b000 	ldr.w	fp, [r4]
 800eb20:	f8c8 2000 	str.w	r2, [r8]
 800eb24:	e9d3 8900 	ldrd	r8, r9, [r3]
 800eb28:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800eb2c:	9307      	str	r3, [sp, #28]
 800eb2e:	f8cd 8018 	str.w	r8, [sp, #24]
 800eb32:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800eb36:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800eb3a:	4b9c      	ldr	r3, [pc, #624]	@ (800edac <_printf_float+0x2c8>)
 800eb3c:	f04f 32ff 	mov.w	r2, #4294967295
 800eb40:	f7f2 f81c 	bl	8000b7c <__aeabi_dcmpun>
 800eb44:	bb70      	cbnz	r0, 800eba4 <_printf_float+0xc0>
 800eb46:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800eb4a:	4b98      	ldr	r3, [pc, #608]	@ (800edac <_printf_float+0x2c8>)
 800eb4c:	f04f 32ff 	mov.w	r2, #4294967295
 800eb50:	f7f1 fff6 	bl	8000b40 <__aeabi_dcmple>
 800eb54:	bb30      	cbnz	r0, 800eba4 <_printf_float+0xc0>
 800eb56:	2200      	movs	r2, #0
 800eb58:	2300      	movs	r3, #0
 800eb5a:	4640      	mov	r0, r8
 800eb5c:	4649      	mov	r1, r9
 800eb5e:	f7f1 ffe5 	bl	8000b2c <__aeabi_dcmplt>
 800eb62:	b110      	cbz	r0, 800eb6a <_printf_float+0x86>
 800eb64:	232d      	movs	r3, #45	@ 0x2d
 800eb66:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800eb6a:	4a91      	ldr	r2, [pc, #580]	@ (800edb0 <_printf_float+0x2cc>)
 800eb6c:	4b91      	ldr	r3, [pc, #580]	@ (800edb4 <_printf_float+0x2d0>)
 800eb6e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800eb72:	bf94      	ite	ls
 800eb74:	4690      	movls	r8, r2
 800eb76:	4698      	movhi	r8, r3
 800eb78:	2303      	movs	r3, #3
 800eb7a:	6123      	str	r3, [r4, #16]
 800eb7c:	f02b 0304 	bic.w	r3, fp, #4
 800eb80:	6023      	str	r3, [r4, #0]
 800eb82:	f04f 0900 	mov.w	r9, #0
 800eb86:	9700      	str	r7, [sp, #0]
 800eb88:	4633      	mov	r3, r6
 800eb8a:	aa0b      	add	r2, sp, #44	@ 0x2c
 800eb8c:	4621      	mov	r1, r4
 800eb8e:	4628      	mov	r0, r5
 800eb90:	f000 f9d2 	bl	800ef38 <_printf_common>
 800eb94:	3001      	adds	r0, #1
 800eb96:	f040 808d 	bne.w	800ecb4 <_printf_float+0x1d0>
 800eb9a:	f04f 30ff 	mov.w	r0, #4294967295
 800eb9e:	b00d      	add	sp, #52	@ 0x34
 800eba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eba4:	4642      	mov	r2, r8
 800eba6:	464b      	mov	r3, r9
 800eba8:	4640      	mov	r0, r8
 800ebaa:	4649      	mov	r1, r9
 800ebac:	f7f1 ffe6 	bl	8000b7c <__aeabi_dcmpun>
 800ebb0:	b140      	cbz	r0, 800ebc4 <_printf_float+0xe0>
 800ebb2:	464b      	mov	r3, r9
 800ebb4:	2b00      	cmp	r3, #0
 800ebb6:	bfbc      	itt	lt
 800ebb8:	232d      	movlt	r3, #45	@ 0x2d
 800ebba:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800ebbe:	4a7e      	ldr	r2, [pc, #504]	@ (800edb8 <_printf_float+0x2d4>)
 800ebc0:	4b7e      	ldr	r3, [pc, #504]	@ (800edbc <_printf_float+0x2d8>)
 800ebc2:	e7d4      	b.n	800eb6e <_printf_float+0x8a>
 800ebc4:	6863      	ldr	r3, [r4, #4]
 800ebc6:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800ebca:	9206      	str	r2, [sp, #24]
 800ebcc:	1c5a      	adds	r2, r3, #1
 800ebce:	d13b      	bne.n	800ec48 <_printf_float+0x164>
 800ebd0:	2306      	movs	r3, #6
 800ebd2:	6063      	str	r3, [r4, #4]
 800ebd4:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800ebd8:	2300      	movs	r3, #0
 800ebda:	6022      	str	r2, [r4, #0]
 800ebdc:	9303      	str	r3, [sp, #12]
 800ebde:	ab0a      	add	r3, sp, #40	@ 0x28
 800ebe0:	e9cd a301 	strd	sl, r3, [sp, #4]
 800ebe4:	ab09      	add	r3, sp, #36	@ 0x24
 800ebe6:	9300      	str	r3, [sp, #0]
 800ebe8:	6861      	ldr	r1, [r4, #4]
 800ebea:	ec49 8b10 	vmov	d0, r8, r9
 800ebee:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800ebf2:	4628      	mov	r0, r5
 800ebf4:	f7ff fed6 	bl	800e9a4 <__cvt>
 800ebf8:	9b06      	ldr	r3, [sp, #24]
 800ebfa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800ebfc:	2b47      	cmp	r3, #71	@ 0x47
 800ebfe:	4680      	mov	r8, r0
 800ec00:	d129      	bne.n	800ec56 <_printf_float+0x172>
 800ec02:	1cc8      	adds	r0, r1, #3
 800ec04:	db02      	blt.n	800ec0c <_printf_float+0x128>
 800ec06:	6863      	ldr	r3, [r4, #4]
 800ec08:	4299      	cmp	r1, r3
 800ec0a:	dd41      	ble.n	800ec90 <_printf_float+0x1ac>
 800ec0c:	f1aa 0a02 	sub.w	sl, sl, #2
 800ec10:	fa5f fa8a 	uxtb.w	sl, sl
 800ec14:	3901      	subs	r1, #1
 800ec16:	4652      	mov	r2, sl
 800ec18:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800ec1c:	9109      	str	r1, [sp, #36]	@ 0x24
 800ec1e:	f7ff ff26 	bl	800ea6e <__exponent>
 800ec22:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ec24:	1813      	adds	r3, r2, r0
 800ec26:	2a01      	cmp	r2, #1
 800ec28:	4681      	mov	r9, r0
 800ec2a:	6123      	str	r3, [r4, #16]
 800ec2c:	dc02      	bgt.n	800ec34 <_printf_float+0x150>
 800ec2e:	6822      	ldr	r2, [r4, #0]
 800ec30:	07d2      	lsls	r2, r2, #31
 800ec32:	d501      	bpl.n	800ec38 <_printf_float+0x154>
 800ec34:	3301      	adds	r3, #1
 800ec36:	6123      	str	r3, [r4, #16]
 800ec38:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800ec3c:	2b00      	cmp	r3, #0
 800ec3e:	d0a2      	beq.n	800eb86 <_printf_float+0xa2>
 800ec40:	232d      	movs	r3, #45	@ 0x2d
 800ec42:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800ec46:	e79e      	b.n	800eb86 <_printf_float+0xa2>
 800ec48:	9a06      	ldr	r2, [sp, #24]
 800ec4a:	2a47      	cmp	r2, #71	@ 0x47
 800ec4c:	d1c2      	bne.n	800ebd4 <_printf_float+0xf0>
 800ec4e:	2b00      	cmp	r3, #0
 800ec50:	d1c0      	bne.n	800ebd4 <_printf_float+0xf0>
 800ec52:	2301      	movs	r3, #1
 800ec54:	e7bd      	b.n	800ebd2 <_printf_float+0xee>
 800ec56:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800ec5a:	d9db      	bls.n	800ec14 <_printf_float+0x130>
 800ec5c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800ec60:	d118      	bne.n	800ec94 <_printf_float+0x1b0>
 800ec62:	2900      	cmp	r1, #0
 800ec64:	6863      	ldr	r3, [r4, #4]
 800ec66:	dd0b      	ble.n	800ec80 <_printf_float+0x19c>
 800ec68:	6121      	str	r1, [r4, #16]
 800ec6a:	b913      	cbnz	r3, 800ec72 <_printf_float+0x18e>
 800ec6c:	6822      	ldr	r2, [r4, #0]
 800ec6e:	07d0      	lsls	r0, r2, #31
 800ec70:	d502      	bpl.n	800ec78 <_printf_float+0x194>
 800ec72:	3301      	adds	r3, #1
 800ec74:	440b      	add	r3, r1
 800ec76:	6123      	str	r3, [r4, #16]
 800ec78:	65a1      	str	r1, [r4, #88]	@ 0x58
 800ec7a:	f04f 0900 	mov.w	r9, #0
 800ec7e:	e7db      	b.n	800ec38 <_printf_float+0x154>
 800ec80:	b913      	cbnz	r3, 800ec88 <_printf_float+0x1a4>
 800ec82:	6822      	ldr	r2, [r4, #0]
 800ec84:	07d2      	lsls	r2, r2, #31
 800ec86:	d501      	bpl.n	800ec8c <_printf_float+0x1a8>
 800ec88:	3302      	adds	r3, #2
 800ec8a:	e7f4      	b.n	800ec76 <_printf_float+0x192>
 800ec8c:	2301      	movs	r3, #1
 800ec8e:	e7f2      	b.n	800ec76 <_printf_float+0x192>
 800ec90:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800ec94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ec96:	4299      	cmp	r1, r3
 800ec98:	db05      	blt.n	800eca6 <_printf_float+0x1c2>
 800ec9a:	6823      	ldr	r3, [r4, #0]
 800ec9c:	6121      	str	r1, [r4, #16]
 800ec9e:	07d8      	lsls	r0, r3, #31
 800eca0:	d5ea      	bpl.n	800ec78 <_printf_float+0x194>
 800eca2:	1c4b      	adds	r3, r1, #1
 800eca4:	e7e7      	b.n	800ec76 <_printf_float+0x192>
 800eca6:	2900      	cmp	r1, #0
 800eca8:	bfd4      	ite	le
 800ecaa:	f1c1 0202 	rsble	r2, r1, #2
 800ecae:	2201      	movgt	r2, #1
 800ecb0:	4413      	add	r3, r2
 800ecb2:	e7e0      	b.n	800ec76 <_printf_float+0x192>
 800ecb4:	6823      	ldr	r3, [r4, #0]
 800ecb6:	055a      	lsls	r2, r3, #21
 800ecb8:	d407      	bmi.n	800ecca <_printf_float+0x1e6>
 800ecba:	6923      	ldr	r3, [r4, #16]
 800ecbc:	4642      	mov	r2, r8
 800ecbe:	4631      	mov	r1, r6
 800ecc0:	4628      	mov	r0, r5
 800ecc2:	47b8      	blx	r7
 800ecc4:	3001      	adds	r0, #1
 800ecc6:	d12b      	bne.n	800ed20 <_printf_float+0x23c>
 800ecc8:	e767      	b.n	800eb9a <_printf_float+0xb6>
 800ecca:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800ecce:	f240 80dd 	bls.w	800ee8c <_printf_float+0x3a8>
 800ecd2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800ecd6:	2200      	movs	r2, #0
 800ecd8:	2300      	movs	r3, #0
 800ecda:	f7f1 ff1d 	bl	8000b18 <__aeabi_dcmpeq>
 800ecde:	2800      	cmp	r0, #0
 800ece0:	d033      	beq.n	800ed4a <_printf_float+0x266>
 800ece2:	4a37      	ldr	r2, [pc, #220]	@ (800edc0 <_printf_float+0x2dc>)
 800ece4:	2301      	movs	r3, #1
 800ece6:	4631      	mov	r1, r6
 800ece8:	4628      	mov	r0, r5
 800ecea:	47b8      	blx	r7
 800ecec:	3001      	adds	r0, #1
 800ecee:	f43f af54 	beq.w	800eb9a <_printf_float+0xb6>
 800ecf2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800ecf6:	4543      	cmp	r3, r8
 800ecf8:	db02      	blt.n	800ed00 <_printf_float+0x21c>
 800ecfa:	6823      	ldr	r3, [r4, #0]
 800ecfc:	07d8      	lsls	r0, r3, #31
 800ecfe:	d50f      	bpl.n	800ed20 <_printf_float+0x23c>
 800ed00:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ed04:	4631      	mov	r1, r6
 800ed06:	4628      	mov	r0, r5
 800ed08:	47b8      	blx	r7
 800ed0a:	3001      	adds	r0, #1
 800ed0c:	f43f af45 	beq.w	800eb9a <_printf_float+0xb6>
 800ed10:	f04f 0900 	mov.w	r9, #0
 800ed14:	f108 38ff 	add.w	r8, r8, #4294967295
 800ed18:	f104 0a1a 	add.w	sl, r4, #26
 800ed1c:	45c8      	cmp	r8, r9
 800ed1e:	dc09      	bgt.n	800ed34 <_printf_float+0x250>
 800ed20:	6823      	ldr	r3, [r4, #0]
 800ed22:	079b      	lsls	r3, r3, #30
 800ed24:	f100 8103 	bmi.w	800ef2e <_printf_float+0x44a>
 800ed28:	68e0      	ldr	r0, [r4, #12]
 800ed2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800ed2c:	4298      	cmp	r0, r3
 800ed2e:	bfb8      	it	lt
 800ed30:	4618      	movlt	r0, r3
 800ed32:	e734      	b.n	800eb9e <_printf_float+0xba>
 800ed34:	2301      	movs	r3, #1
 800ed36:	4652      	mov	r2, sl
 800ed38:	4631      	mov	r1, r6
 800ed3a:	4628      	mov	r0, r5
 800ed3c:	47b8      	blx	r7
 800ed3e:	3001      	adds	r0, #1
 800ed40:	f43f af2b 	beq.w	800eb9a <_printf_float+0xb6>
 800ed44:	f109 0901 	add.w	r9, r9, #1
 800ed48:	e7e8      	b.n	800ed1c <_printf_float+0x238>
 800ed4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ed4c:	2b00      	cmp	r3, #0
 800ed4e:	dc39      	bgt.n	800edc4 <_printf_float+0x2e0>
 800ed50:	4a1b      	ldr	r2, [pc, #108]	@ (800edc0 <_printf_float+0x2dc>)
 800ed52:	2301      	movs	r3, #1
 800ed54:	4631      	mov	r1, r6
 800ed56:	4628      	mov	r0, r5
 800ed58:	47b8      	blx	r7
 800ed5a:	3001      	adds	r0, #1
 800ed5c:	f43f af1d 	beq.w	800eb9a <_printf_float+0xb6>
 800ed60:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800ed64:	ea59 0303 	orrs.w	r3, r9, r3
 800ed68:	d102      	bne.n	800ed70 <_printf_float+0x28c>
 800ed6a:	6823      	ldr	r3, [r4, #0]
 800ed6c:	07d9      	lsls	r1, r3, #31
 800ed6e:	d5d7      	bpl.n	800ed20 <_printf_float+0x23c>
 800ed70:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ed74:	4631      	mov	r1, r6
 800ed76:	4628      	mov	r0, r5
 800ed78:	47b8      	blx	r7
 800ed7a:	3001      	adds	r0, #1
 800ed7c:	f43f af0d 	beq.w	800eb9a <_printf_float+0xb6>
 800ed80:	f04f 0a00 	mov.w	sl, #0
 800ed84:	f104 0b1a 	add.w	fp, r4, #26
 800ed88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ed8a:	425b      	negs	r3, r3
 800ed8c:	4553      	cmp	r3, sl
 800ed8e:	dc01      	bgt.n	800ed94 <_printf_float+0x2b0>
 800ed90:	464b      	mov	r3, r9
 800ed92:	e793      	b.n	800ecbc <_printf_float+0x1d8>
 800ed94:	2301      	movs	r3, #1
 800ed96:	465a      	mov	r2, fp
 800ed98:	4631      	mov	r1, r6
 800ed9a:	4628      	mov	r0, r5
 800ed9c:	47b8      	blx	r7
 800ed9e:	3001      	adds	r0, #1
 800eda0:	f43f aefb 	beq.w	800eb9a <_printf_float+0xb6>
 800eda4:	f10a 0a01 	add.w	sl, sl, #1
 800eda8:	e7ee      	b.n	800ed88 <_printf_float+0x2a4>
 800edaa:	bf00      	nop
 800edac:	7fefffff 	.word	0x7fefffff
 800edb0:	08012910 	.word	0x08012910
 800edb4:	08012914 	.word	0x08012914
 800edb8:	08012918 	.word	0x08012918
 800edbc:	0801291c 	.word	0x0801291c
 800edc0:	08012920 	.word	0x08012920
 800edc4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800edc6:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800edca:	4553      	cmp	r3, sl
 800edcc:	bfa8      	it	ge
 800edce:	4653      	movge	r3, sl
 800edd0:	2b00      	cmp	r3, #0
 800edd2:	4699      	mov	r9, r3
 800edd4:	dc36      	bgt.n	800ee44 <_printf_float+0x360>
 800edd6:	f04f 0b00 	mov.w	fp, #0
 800edda:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800edde:	f104 021a 	add.w	r2, r4, #26
 800ede2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800ede4:	9306      	str	r3, [sp, #24]
 800ede6:	eba3 0309 	sub.w	r3, r3, r9
 800edea:	455b      	cmp	r3, fp
 800edec:	dc31      	bgt.n	800ee52 <_printf_float+0x36e>
 800edee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800edf0:	459a      	cmp	sl, r3
 800edf2:	dc3a      	bgt.n	800ee6a <_printf_float+0x386>
 800edf4:	6823      	ldr	r3, [r4, #0]
 800edf6:	07da      	lsls	r2, r3, #31
 800edf8:	d437      	bmi.n	800ee6a <_printf_float+0x386>
 800edfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800edfc:	ebaa 0903 	sub.w	r9, sl, r3
 800ee00:	9b06      	ldr	r3, [sp, #24]
 800ee02:	ebaa 0303 	sub.w	r3, sl, r3
 800ee06:	4599      	cmp	r9, r3
 800ee08:	bfa8      	it	ge
 800ee0a:	4699      	movge	r9, r3
 800ee0c:	f1b9 0f00 	cmp.w	r9, #0
 800ee10:	dc33      	bgt.n	800ee7a <_printf_float+0x396>
 800ee12:	f04f 0800 	mov.w	r8, #0
 800ee16:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800ee1a:	f104 0b1a 	add.w	fp, r4, #26
 800ee1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ee20:	ebaa 0303 	sub.w	r3, sl, r3
 800ee24:	eba3 0309 	sub.w	r3, r3, r9
 800ee28:	4543      	cmp	r3, r8
 800ee2a:	f77f af79 	ble.w	800ed20 <_printf_float+0x23c>
 800ee2e:	2301      	movs	r3, #1
 800ee30:	465a      	mov	r2, fp
 800ee32:	4631      	mov	r1, r6
 800ee34:	4628      	mov	r0, r5
 800ee36:	47b8      	blx	r7
 800ee38:	3001      	adds	r0, #1
 800ee3a:	f43f aeae 	beq.w	800eb9a <_printf_float+0xb6>
 800ee3e:	f108 0801 	add.w	r8, r8, #1
 800ee42:	e7ec      	b.n	800ee1e <_printf_float+0x33a>
 800ee44:	4642      	mov	r2, r8
 800ee46:	4631      	mov	r1, r6
 800ee48:	4628      	mov	r0, r5
 800ee4a:	47b8      	blx	r7
 800ee4c:	3001      	adds	r0, #1
 800ee4e:	d1c2      	bne.n	800edd6 <_printf_float+0x2f2>
 800ee50:	e6a3      	b.n	800eb9a <_printf_float+0xb6>
 800ee52:	2301      	movs	r3, #1
 800ee54:	4631      	mov	r1, r6
 800ee56:	4628      	mov	r0, r5
 800ee58:	9206      	str	r2, [sp, #24]
 800ee5a:	47b8      	blx	r7
 800ee5c:	3001      	adds	r0, #1
 800ee5e:	f43f ae9c 	beq.w	800eb9a <_printf_float+0xb6>
 800ee62:	9a06      	ldr	r2, [sp, #24]
 800ee64:	f10b 0b01 	add.w	fp, fp, #1
 800ee68:	e7bb      	b.n	800ede2 <_printf_float+0x2fe>
 800ee6a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ee6e:	4631      	mov	r1, r6
 800ee70:	4628      	mov	r0, r5
 800ee72:	47b8      	blx	r7
 800ee74:	3001      	adds	r0, #1
 800ee76:	d1c0      	bne.n	800edfa <_printf_float+0x316>
 800ee78:	e68f      	b.n	800eb9a <_printf_float+0xb6>
 800ee7a:	9a06      	ldr	r2, [sp, #24]
 800ee7c:	464b      	mov	r3, r9
 800ee7e:	4442      	add	r2, r8
 800ee80:	4631      	mov	r1, r6
 800ee82:	4628      	mov	r0, r5
 800ee84:	47b8      	blx	r7
 800ee86:	3001      	adds	r0, #1
 800ee88:	d1c3      	bne.n	800ee12 <_printf_float+0x32e>
 800ee8a:	e686      	b.n	800eb9a <_printf_float+0xb6>
 800ee8c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800ee90:	f1ba 0f01 	cmp.w	sl, #1
 800ee94:	dc01      	bgt.n	800ee9a <_printf_float+0x3b6>
 800ee96:	07db      	lsls	r3, r3, #31
 800ee98:	d536      	bpl.n	800ef08 <_printf_float+0x424>
 800ee9a:	2301      	movs	r3, #1
 800ee9c:	4642      	mov	r2, r8
 800ee9e:	4631      	mov	r1, r6
 800eea0:	4628      	mov	r0, r5
 800eea2:	47b8      	blx	r7
 800eea4:	3001      	adds	r0, #1
 800eea6:	f43f ae78 	beq.w	800eb9a <_printf_float+0xb6>
 800eeaa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800eeae:	4631      	mov	r1, r6
 800eeb0:	4628      	mov	r0, r5
 800eeb2:	47b8      	blx	r7
 800eeb4:	3001      	adds	r0, #1
 800eeb6:	f43f ae70 	beq.w	800eb9a <_printf_float+0xb6>
 800eeba:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800eebe:	2200      	movs	r2, #0
 800eec0:	2300      	movs	r3, #0
 800eec2:	f10a 3aff 	add.w	sl, sl, #4294967295
 800eec6:	f7f1 fe27 	bl	8000b18 <__aeabi_dcmpeq>
 800eeca:	b9c0      	cbnz	r0, 800eefe <_printf_float+0x41a>
 800eecc:	4653      	mov	r3, sl
 800eece:	f108 0201 	add.w	r2, r8, #1
 800eed2:	4631      	mov	r1, r6
 800eed4:	4628      	mov	r0, r5
 800eed6:	47b8      	blx	r7
 800eed8:	3001      	adds	r0, #1
 800eeda:	d10c      	bne.n	800eef6 <_printf_float+0x412>
 800eedc:	e65d      	b.n	800eb9a <_printf_float+0xb6>
 800eede:	2301      	movs	r3, #1
 800eee0:	465a      	mov	r2, fp
 800eee2:	4631      	mov	r1, r6
 800eee4:	4628      	mov	r0, r5
 800eee6:	47b8      	blx	r7
 800eee8:	3001      	adds	r0, #1
 800eeea:	f43f ae56 	beq.w	800eb9a <_printf_float+0xb6>
 800eeee:	f108 0801 	add.w	r8, r8, #1
 800eef2:	45d0      	cmp	r8, sl
 800eef4:	dbf3      	blt.n	800eede <_printf_float+0x3fa>
 800eef6:	464b      	mov	r3, r9
 800eef8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800eefc:	e6df      	b.n	800ecbe <_printf_float+0x1da>
 800eefe:	f04f 0800 	mov.w	r8, #0
 800ef02:	f104 0b1a 	add.w	fp, r4, #26
 800ef06:	e7f4      	b.n	800eef2 <_printf_float+0x40e>
 800ef08:	2301      	movs	r3, #1
 800ef0a:	4642      	mov	r2, r8
 800ef0c:	e7e1      	b.n	800eed2 <_printf_float+0x3ee>
 800ef0e:	2301      	movs	r3, #1
 800ef10:	464a      	mov	r2, r9
 800ef12:	4631      	mov	r1, r6
 800ef14:	4628      	mov	r0, r5
 800ef16:	47b8      	blx	r7
 800ef18:	3001      	adds	r0, #1
 800ef1a:	f43f ae3e 	beq.w	800eb9a <_printf_float+0xb6>
 800ef1e:	f108 0801 	add.w	r8, r8, #1
 800ef22:	68e3      	ldr	r3, [r4, #12]
 800ef24:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800ef26:	1a5b      	subs	r3, r3, r1
 800ef28:	4543      	cmp	r3, r8
 800ef2a:	dcf0      	bgt.n	800ef0e <_printf_float+0x42a>
 800ef2c:	e6fc      	b.n	800ed28 <_printf_float+0x244>
 800ef2e:	f04f 0800 	mov.w	r8, #0
 800ef32:	f104 0919 	add.w	r9, r4, #25
 800ef36:	e7f4      	b.n	800ef22 <_printf_float+0x43e>

0800ef38 <_printf_common>:
 800ef38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ef3c:	4616      	mov	r6, r2
 800ef3e:	4698      	mov	r8, r3
 800ef40:	688a      	ldr	r2, [r1, #8]
 800ef42:	690b      	ldr	r3, [r1, #16]
 800ef44:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800ef48:	4293      	cmp	r3, r2
 800ef4a:	bfb8      	it	lt
 800ef4c:	4613      	movlt	r3, r2
 800ef4e:	6033      	str	r3, [r6, #0]
 800ef50:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800ef54:	4607      	mov	r7, r0
 800ef56:	460c      	mov	r4, r1
 800ef58:	b10a      	cbz	r2, 800ef5e <_printf_common+0x26>
 800ef5a:	3301      	adds	r3, #1
 800ef5c:	6033      	str	r3, [r6, #0]
 800ef5e:	6823      	ldr	r3, [r4, #0]
 800ef60:	0699      	lsls	r1, r3, #26
 800ef62:	bf42      	ittt	mi
 800ef64:	6833      	ldrmi	r3, [r6, #0]
 800ef66:	3302      	addmi	r3, #2
 800ef68:	6033      	strmi	r3, [r6, #0]
 800ef6a:	6825      	ldr	r5, [r4, #0]
 800ef6c:	f015 0506 	ands.w	r5, r5, #6
 800ef70:	d106      	bne.n	800ef80 <_printf_common+0x48>
 800ef72:	f104 0a19 	add.w	sl, r4, #25
 800ef76:	68e3      	ldr	r3, [r4, #12]
 800ef78:	6832      	ldr	r2, [r6, #0]
 800ef7a:	1a9b      	subs	r3, r3, r2
 800ef7c:	42ab      	cmp	r3, r5
 800ef7e:	dc26      	bgt.n	800efce <_printf_common+0x96>
 800ef80:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800ef84:	6822      	ldr	r2, [r4, #0]
 800ef86:	3b00      	subs	r3, #0
 800ef88:	bf18      	it	ne
 800ef8a:	2301      	movne	r3, #1
 800ef8c:	0692      	lsls	r2, r2, #26
 800ef8e:	d42b      	bmi.n	800efe8 <_printf_common+0xb0>
 800ef90:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800ef94:	4641      	mov	r1, r8
 800ef96:	4638      	mov	r0, r7
 800ef98:	47c8      	blx	r9
 800ef9a:	3001      	adds	r0, #1
 800ef9c:	d01e      	beq.n	800efdc <_printf_common+0xa4>
 800ef9e:	6823      	ldr	r3, [r4, #0]
 800efa0:	6922      	ldr	r2, [r4, #16]
 800efa2:	f003 0306 	and.w	r3, r3, #6
 800efa6:	2b04      	cmp	r3, #4
 800efa8:	bf02      	ittt	eq
 800efaa:	68e5      	ldreq	r5, [r4, #12]
 800efac:	6833      	ldreq	r3, [r6, #0]
 800efae:	1aed      	subeq	r5, r5, r3
 800efb0:	68a3      	ldr	r3, [r4, #8]
 800efb2:	bf0c      	ite	eq
 800efb4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800efb8:	2500      	movne	r5, #0
 800efba:	4293      	cmp	r3, r2
 800efbc:	bfc4      	itt	gt
 800efbe:	1a9b      	subgt	r3, r3, r2
 800efc0:	18ed      	addgt	r5, r5, r3
 800efc2:	2600      	movs	r6, #0
 800efc4:	341a      	adds	r4, #26
 800efc6:	42b5      	cmp	r5, r6
 800efc8:	d11a      	bne.n	800f000 <_printf_common+0xc8>
 800efca:	2000      	movs	r0, #0
 800efcc:	e008      	b.n	800efe0 <_printf_common+0xa8>
 800efce:	2301      	movs	r3, #1
 800efd0:	4652      	mov	r2, sl
 800efd2:	4641      	mov	r1, r8
 800efd4:	4638      	mov	r0, r7
 800efd6:	47c8      	blx	r9
 800efd8:	3001      	adds	r0, #1
 800efda:	d103      	bne.n	800efe4 <_printf_common+0xac>
 800efdc:	f04f 30ff 	mov.w	r0, #4294967295
 800efe0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800efe4:	3501      	adds	r5, #1
 800efe6:	e7c6      	b.n	800ef76 <_printf_common+0x3e>
 800efe8:	18e1      	adds	r1, r4, r3
 800efea:	1c5a      	adds	r2, r3, #1
 800efec:	2030      	movs	r0, #48	@ 0x30
 800efee:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800eff2:	4422      	add	r2, r4
 800eff4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800eff8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800effc:	3302      	adds	r3, #2
 800effe:	e7c7      	b.n	800ef90 <_printf_common+0x58>
 800f000:	2301      	movs	r3, #1
 800f002:	4622      	mov	r2, r4
 800f004:	4641      	mov	r1, r8
 800f006:	4638      	mov	r0, r7
 800f008:	47c8      	blx	r9
 800f00a:	3001      	adds	r0, #1
 800f00c:	d0e6      	beq.n	800efdc <_printf_common+0xa4>
 800f00e:	3601      	adds	r6, #1
 800f010:	e7d9      	b.n	800efc6 <_printf_common+0x8e>
	...

0800f014 <_printf_i>:
 800f014:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f018:	7e0f      	ldrb	r7, [r1, #24]
 800f01a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800f01c:	2f78      	cmp	r7, #120	@ 0x78
 800f01e:	4691      	mov	r9, r2
 800f020:	4680      	mov	r8, r0
 800f022:	460c      	mov	r4, r1
 800f024:	469a      	mov	sl, r3
 800f026:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800f02a:	d807      	bhi.n	800f03c <_printf_i+0x28>
 800f02c:	2f62      	cmp	r7, #98	@ 0x62
 800f02e:	d80a      	bhi.n	800f046 <_printf_i+0x32>
 800f030:	2f00      	cmp	r7, #0
 800f032:	f000 80d2 	beq.w	800f1da <_printf_i+0x1c6>
 800f036:	2f58      	cmp	r7, #88	@ 0x58
 800f038:	f000 80b9 	beq.w	800f1ae <_printf_i+0x19a>
 800f03c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800f040:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800f044:	e03a      	b.n	800f0bc <_printf_i+0xa8>
 800f046:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800f04a:	2b15      	cmp	r3, #21
 800f04c:	d8f6      	bhi.n	800f03c <_printf_i+0x28>
 800f04e:	a101      	add	r1, pc, #4	@ (adr r1, 800f054 <_printf_i+0x40>)
 800f050:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800f054:	0800f0ad 	.word	0x0800f0ad
 800f058:	0800f0c1 	.word	0x0800f0c1
 800f05c:	0800f03d 	.word	0x0800f03d
 800f060:	0800f03d 	.word	0x0800f03d
 800f064:	0800f03d 	.word	0x0800f03d
 800f068:	0800f03d 	.word	0x0800f03d
 800f06c:	0800f0c1 	.word	0x0800f0c1
 800f070:	0800f03d 	.word	0x0800f03d
 800f074:	0800f03d 	.word	0x0800f03d
 800f078:	0800f03d 	.word	0x0800f03d
 800f07c:	0800f03d 	.word	0x0800f03d
 800f080:	0800f1c1 	.word	0x0800f1c1
 800f084:	0800f0eb 	.word	0x0800f0eb
 800f088:	0800f17b 	.word	0x0800f17b
 800f08c:	0800f03d 	.word	0x0800f03d
 800f090:	0800f03d 	.word	0x0800f03d
 800f094:	0800f1e3 	.word	0x0800f1e3
 800f098:	0800f03d 	.word	0x0800f03d
 800f09c:	0800f0eb 	.word	0x0800f0eb
 800f0a0:	0800f03d 	.word	0x0800f03d
 800f0a4:	0800f03d 	.word	0x0800f03d
 800f0a8:	0800f183 	.word	0x0800f183
 800f0ac:	6833      	ldr	r3, [r6, #0]
 800f0ae:	1d1a      	adds	r2, r3, #4
 800f0b0:	681b      	ldr	r3, [r3, #0]
 800f0b2:	6032      	str	r2, [r6, #0]
 800f0b4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800f0b8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800f0bc:	2301      	movs	r3, #1
 800f0be:	e09d      	b.n	800f1fc <_printf_i+0x1e8>
 800f0c0:	6833      	ldr	r3, [r6, #0]
 800f0c2:	6820      	ldr	r0, [r4, #0]
 800f0c4:	1d19      	adds	r1, r3, #4
 800f0c6:	6031      	str	r1, [r6, #0]
 800f0c8:	0606      	lsls	r6, r0, #24
 800f0ca:	d501      	bpl.n	800f0d0 <_printf_i+0xbc>
 800f0cc:	681d      	ldr	r5, [r3, #0]
 800f0ce:	e003      	b.n	800f0d8 <_printf_i+0xc4>
 800f0d0:	0645      	lsls	r5, r0, #25
 800f0d2:	d5fb      	bpl.n	800f0cc <_printf_i+0xb8>
 800f0d4:	f9b3 5000 	ldrsh.w	r5, [r3]
 800f0d8:	2d00      	cmp	r5, #0
 800f0da:	da03      	bge.n	800f0e4 <_printf_i+0xd0>
 800f0dc:	232d      	movs	r3, #45	@ 0x2d
 800f0de:	426d      	negs	r5, r5
 800f0e0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f0e4:	4859      	ldr	r0, [pc, #356]	@ (800f24c <_printf_i+0x238>)
 800f0e6:	230a      	movs	r3, #10
 800f0e8:	e011      	b.n	800f10e <_printf_i+0xfa>
 800f0ea:	6821      	ldr	r1, [r4, #0]
 800f0ec:	6833      	ldr	r3, [r6, #0]
 800f0ee:	0608      	lsls	r0, r1, #24
 800f0f0:	f853 5b04 	ldr.w	r5, [r3], #4
 800f0f4:	d402      	bmi.n	800f0fc <_printf_i+0xe8>
 800f0f6:	0649      	lsls	r1, r1, #25
 800f0f8:	bf48      	it	mi
 800f0fa:	b2ad      	uxthmi	r5, r5
 800f0fc:	2f6f      	cmp	r7, #111	@ 0x6f
 800f0fe:	4853      	ldr	r0, [pc, #332]	@ (800f24c <_printf_i+0x238>)
 800f100:	6033      	str	r3, [r6, #0]
 800f102:	bf14      	ite	ne
 800f104:	230a      	movne	r3, #10
 800f106:	2308      	moveq	r3, #8
 800f108:	2100      	movs	r1, #0
 800f10a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800f10e:	6866      	ldr	r6, [r4, #4]
 800f110:	60a6      	str	r6, [r4, #8]
 800f112:	2e00      	cmp	r6, #0
 800f114:	bfa2      	ittt	ge
 800f116:	6821      	ldrge	r1, [r4, #0]
 800f118:	f021 0104 	bicge.w	r1, r1, #4
 800f11c:	6021      	strge	r1, [r4, #0]
 800f11e:	b90d      	cbnz	r5, 800f124 <_printf_i+0x110>
 800f120:	2e00      	cmp	r6, #0
 800f122:	d04b      	beq.n	800f1bc <_printf_i+0x1a8>
 800f124:	4616      	mov	r6, r2
 800f126:	fbb5 f1f3 	udiv	r1, r5, r3
 800f12a:	fb03 5711 	mls	r7, r3, r1, r5
 800f12e:	5dc7      	ldrb	r7, [r0, r7]
 800f130:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800f134:	462f      	mov	r7, r5
 800f136:	42bb      	cmp	r3, r7
 800f138:	460d      	mov	r5, r1
 800f13a:	d9f4      	bls.n	800f126 <_printf_i+0x112>
 800f13c:	2b08      	cmp	r3, #8
 800f13e:	d10b      	bne.n	800f158 <_printf_i+0x144>
 800f140:	6823      	ldr	r3, [r4, #0]
 800f142:	07df      	lsls	r7, r3, #31
 800f144:	d508      	bpl.n	800f158 <_printf_i+0x144>
 800f146:	6923      	ldr	r3, [r4, #16]
 800f148:	6861      	ldr	r1, [r4, #4]
 800f14a:	4299      	cmp	r1, r3
 800f14c:	bfde      	ittt	le
 800f14e:	2330      	movle	r3, #48	@ 0x30
 800f150:	f806 3c01 	strble.w	r3, [r6, #-1]
 800f154:	f106 36ff 	addle.w	r6, r6, #4294967295
 800f158:	1b92      	subs	r2, r2, r6
 800f15a:	6122      	str	r2, [r4, #16]
 800f15c:	f8cd a000 	str.w	sl, [sp]
 800f160:	464b      	mov	r3, r9
 800f162:	aa03      	add	r2, sp, #12
 800f164:	4621      	mov	r1, r4
 800f166:	4640      	mov	r0, r8
 800f168:	f7ff fee6 	bl	800ef38 <_printf_common>
 800f16c:	3001      	adds	r0, #1
 800f16e:	d14a      	bne.n	800f206 <_printf_i+0x1f2>
 800f170:	f04f 30ff 	mov.w	r0, #4294967295
 800f174:	b004      	add	sp, #16
 800f176:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f17a:	6823      	ldr	r3, [r4, #0]
 800f17c:	f043 0320 	orr.w	r3, r3, #32
 800f180:	6023      	str	r3, [r4, #0]
 800f182:	4833      	ldr	r0, [pc, #204]	@ (800f250 <_printf_i+0x23c>)
 800f184:	2778      	movs	r7, #120	@ 0x78
 800f186:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800f18a:	6823      	ldr	r3, [r4, #0]
 800f18c:	6831      	ldr	r1, [r6, #0]
 800f18e:	061f      	lsls	r7, r3, #24
 800f190:	f851 5b04 	ldr.w	r5, [r1], #4
 800f194:	d402      	bmi.n	800f19c <_printf_i+0x188>
 800f196:	065f      	lsls	r7, r3, #25
 800f198:	bf48      	it	mi
 800f19a:	b2ad      	uxthmi	r5, r5
 800f19c:	6031      	str	r1, [r6, #0]
 800f19e:	07d9      	lsls	r1, r3, #31
 800f1a0:	bf44      	itt	mi
 800f1a2:	f043 0320 	orrmi.w	r3, r3, #32
 800f1a6:	6023      	strmi	r3, [r4, #0]
 800f1a8:	b11d      	cbz	r5, 800f1b2 <_printf_i+0x19e>
 800f1aa:	2310      	movs	r3, #16
 800f1ac:	e7ac      	b.n	800f108 <_printf_i+0xf4>
 800f1ae:	4827      	ldr	r0, [pc, #156]	@ (800f24c <_printf_i+0x238>)
 800f1b0:	e7e9      	b.n	800f186 <_printf_i+0x172>
 800f1b2:	6823      	ldr	r3, [r4, #0]
 800f1b4:	f023 0320 	bic.w	r3, r3, #32
 800f1b8:	6023      	str	r3, [r4, #0]
 800f1ba:	e7f6      	b.n	800f1aa <_printf_i+0x196>
 800f1bc:	4616      	mov	r6, r2
 800f1be:	e7bd      	b.n	800f13c <_printf_i+0x128>
 800f1c0:	6833      	ldr	r3, [r6, #0]
 800f1c2:	6825      	ldr	r5, [r4, #0]
 800f1c4:	6961      	ldr	r1, [r4, #20]
 800f1c6:	1d18      	adds	r0, r3, #4
 800f1c8:	6030      	str	r0, [r6, #0]
 800f1ca:	062e      	lsls	r6, r5, #24
 800f1cc:	681b      	ldr	r3, [r3, #0]
 800f1ce:	d501      	bpl.n	800f1d4 <_printf_i+0x1c0>
 800f1d0:	6019      	str	r1, [r3, #0]
 800f1d2:	e002      	b.n	800f1da <_printf_i+0x1c6>
 800f1d4:	0668      	lsls	r0, r5, #25
 800f1d6:	d5fb      	bpl.n	800f1d0 <_printf_i+0x1bc>
 800f1d8:	8019      	strh	r1, [r3, #0]
 800f1da:	2300      	movs	r3, #0
 800f1dc:	6123      	str	r3, [r4, #16]
 800f1de:	4616      	mov	r6, r2
 800f1e0:	e7bc      	b.n	800f15c <_printf_i+0x148>
 800f1e2:	6833      	ldr	r3, [r6, #0]
 800f1e4:	1d1a      	adds	r2, r3, #4
 800f1e6:	6032      	str	r2, [r6, #0]
 800f1e8:	681e      	ldr	r6, [r3, #0]
 800f1ea:	6862      	ldr	r2, [r4, #4]
 800f1ec:	2100      	movs	r1, #0
 800f1ee:	4630      	mov	r0, r6
 800f1f0:	f7f1 f816 	bl	8000220 <memchr>
 800f1f4:	b108      	cbz	r0, 800f1fa <_printf_i+0x1e6>
 800f1f6:	1b80      	subs	r0, r0, r6
 800f1f8:	6060      	str	r0, [r4, #4]
 800f1fa:	6863      	ldr	r3, [r4, #4]
 800f1fc:	6123      	str	r3, [r4, #16]
 800f1fe:	2300      	movs	r3, #0
 800f200:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800f204:	e7aa      	b.n	800f15c <_printf_i+0x148>
 800f206:	6923      	ldr	r3, [r4, #16]
 800f208:	4632      	mov	r2, r6
 800f20a:	4649      	mov	r1, r9
 800f20c:	4640      	mov	r0, r8
 800f20e:	47d0      	blx	sl
 800f210:	3001      	adds	r0, #1
 800f212:	d0ad      	beq.n	800f170 <_printf_i+0x15c>
 800f214:	6823      	ldr	r3, [r4, #0]
 800f216:	079b      	lsls	r3, r3, #30
 800f218:	d413      	bmi.n	800f242 <_printf_i+0x22e>
 800f21a:	68e0      	ldr	r0, [r4, #12]
 800f21c:	9b03      	ldr	r3, [sp, #12]
 800f21e:	4298      	cmp	r0, r3
 800f220:	bfb8      	it	lt
 800f222:	4618      	movlt	r0, r3
 800f224:	e7a6      	b.n	800f174 <_printf_i+0x160>
 800f226:	2301      	movs	r3, #1
 800f228:	4632      	mov	r2, r6
 800f22a:	4649      	mov	r1, r9
 800f22c:	4640      	mov	r0, r8
 800f22e:	47d0      	blx	sl
 800f230:	3001      	adds	r0, #1
 800f232:	d09d      	beq.n	800f170 <_printf_i+0x15c>
 800f234:	3501      	adds	r5, #1
 800f236:	68e3      	ldr	r3, [r4, #12]
 800f238:	9903      	ldr	r1, [sp, #12]
 800f23a:	1a5b      	subs	r3, r3, r1
 800f23c:	42ab      	cmp	r3, r5
 800f23e:	dcf2      	bgt.n	800f226 <_printf_i+0x212>
 800f240:	e7eb      	b.n	800f21a <_printf_i+0x206>
 800f242:	2500      	movs	r5, #0
 800f244:	f104 0619 	add.w	r6, r4, #25
 800f248:	e7f5      	b.n	800f236 <_printf_i+0x222>
 800f24a:	bf00      	nop
 800f24c:	08012922 	.word	0x08012922
 800f250:	08012933 	.word	0x08012933

0800f254 <_scanf_float>:
 800f254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f258:	b087      	sub	sp, #28
 800f25a:	4617      	mov	r7, r2
 800f25c:	9303      	str	r3, [sp, #12]
 800f25e:	688b      	ldr	r3, [r1, #8]
 800f260:	1e5a      	subs	r2, r3, #1
 800f262:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 800f266:	bf81      	itttt	hi
 800f268:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 800f26c:	eb03 0b05 	addhi.w	fp, r3, r5
 800f270:	f240 135d 	movwhi	r3, #349	@ 0x15d
 800f274:	608b      	strhi	r3, [r1, #8]
 800f276:	680b      	ldr	r3, [r1, #0]
 800f278:	460a      	mov	r2, r1
 800f27a:	f04f 0500 	mov.w	r5, #0
 800f27e:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 800f282:	f842 3b1c 	str.w	r3, [r2], #28
 800f286:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800f28a:	4680      	mov	r8, r0
 800f28c:	460c      	mov	r4, r1
 800f28e:	bf98      	it	ls
 800f290:	f04f 0b00 	movls.w	fp, #0
 800f294:	9201      	str	r2, [sp, #4]
 800f296:	4616      	mov	r6, r2
 800f298:	46aa      	mov	sl, r5
 800f29a:	46a9      	mov	r9, r5
 800f29c:	9502      	str	r5, [sp, #8]
 800f29e:	68a2      	ldr	r2, [r4, #8]
 800f2a0:	b152      	cbz	r2, 800f2b8 <_scanf_float+0x64>
 800f2a2:	683b      	ldr	r3, [r7, #0]
 800f2a4:	781b      	ldrb	r3, [r3, #0]
 800f2a6:	2b4e      	cmp	r3, #78	@ 0x4e
 800f2a8:	d864      	bhi.n	800f374 <_scanf_float+0x120>
 800f2aa:	2b40      	cmp	r3, #64	@ 0x40
 800f2ac:	d83c      	bhi.n	800f328 <_scanf_float+0xd4>
 800f2ae:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 800f2b2:	b2c8      	uxtb	r0, r1
 800f2b4:	280e      	cmp	r0, #14
 800f2b6:	d93a      	bls.n	800f32e <_scanf_float+0xda>
 800f2b8:	f1b9 0f00 	cmp.w	r9, #0
 800f2bc:	d003      	beq.n	800f2c6 <_scanf_float+0x72>
 800f2be:	6823      	ldr	r3, [r4, #0]
 800f2c0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800f2c4:	6023      	str	r3, [r4, #0]
 800f2c6:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f2ca:	f1ba 0f01 	cmp.w	sl, #1
 800f2ce:	f200 8117 	bhi.w	800f500 <_scanf_float+0x2ac>
 800f2d2:	9b01      	ldr	r3, [sp, #4]
 800f2d4:	429e      	cmp	r6, r3
 800f2d6:	f200 8108 	bhi.w	800f4ea <_scanf_float+0x296>
 800f2da:	2001      	movs	r0, #1
 800f2dc:	b007      	add	sp, #28
 800f2de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2e2:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 800f2e6:	2a0d      	cmp	r2, #13
 800f2e8:	d8e6      	bhi.n	800f2b8 <_scanf_float+0x64>
 800f2ea:	a101      	add	r1, pc, #4	@ (adr r1, 800f2f0 <_scanf_float+0x9c>)
 800f2ec:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800f2f0:	0800f437 	.word	0x0800f437
 800f2f4:	0800f2b9 	.word	0x0800f2b9
 800f2f8:	0800f2b9 	.word	0x0800f2b9
 800f2fc:	0800f2b9 	.word	0x0800f2b9
 800f300:	0800f497 	.word	0x0800f497
 800f304:	0800f46f 	.word	0x0800f46f
 800f308:	0800f2b9 	.word	0x0800f2b9
 800f30c:	0800f2b9 	.word	0x0800f2b9
 800f310:	0800f445 	.word	0x0800f445
 800f314:	0800f2b9 	.word	0x0800f2b9
 800f318:	0800f2b9 	.word	0x0800f2b9
 800f31c:	0800f2b9 	.word	0x0800f2b9
 800f320:	0800f2b9 	.word	0x0800f2b9
 800f324:	0800f3fd 	.word	0x0800f3fd
 800f328:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 800f32c:	e7db      	b.n	800f2e6 <_scanf_float+0x92>
 800f32e:	290e      	cmp	r1, #14
 800f330:	d8c2      	bhi.n	800f2b8 <_scanf_float+0x64>
 800f332:	a001      	add	r0, pc, #4	@ (adr r0, 800f338 <_scanf_float+0xe4>)
 800f334:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800f338:	0800f3ed 	.word	0x0800f3ed
 800f33c:	0800f2b9 	.word	0x0800f2b9
 800f340:	0800f3ed 	.word	0x0800f3ed
 800f344:	0800f483 	.word	0x0800f483
 800f348:	0800f2b9 	.word	0x0800f2b9
 800f34c:	0800f395 	.word	0x0800f395
 800f350:	0800f3d3 	.word	0x0800f3d3
 800f354:	0800f3d3 	.word	0x0800f3d3
 800f358:	0800f3d3 	.word	0x0800f3d3
 800f35c:	0800f3d3 	.word	0x0800f3d3
 800f360:	0800f3d3 	.word	0x0800f3d3
 800f364:	0800f3d3 	.word	0x0800f3d3
 800f368:	0800f3d3 	.word	0x0800f3d3
 800f36c:	0800f3d3 	.word	0x0800f3d3
 800f370:	0800f3d3 	.word	0x0800f3d3
 800f374:	2b6e      	cmp	r3, #110	@ 0x6e
 800f376:	d809      	bhi.n	800f38c <_scanf_float+0x138>
 800f378:	2b60      	cmp	r3, #96	@ 0x60
 800f37a:	d8b2      	bhi.n	800f2e2 <_scanf_float+0x8e>
 800f37c:	2b54      	cmp	r3, #84	@ 0x54
 800f37e:	d07b      	beq.n	800f478 <_scanf_float+0x224>
 800f380:	2b59      	cmp	r3, #89	@ 0x59
 800f382:	d199      	bne.n	800f2b8 <_scanf_float+0x64>
 800f384:	2d07      	cmp	r5, #7
 800f386:	d197      	bne.n	800f2b8 <_scanf_float+0x64>
 800f388:	2508      	movs	r5, #8
 800f38a:	e02c      	b.n	800f3e6 <_scanf_float+0x192>
 800f38c:	2b74      	cmp	r3, #116	@ 0x74
 800f38e:	d073      	beq.n	800f478 <_scanf_float+0x224>
 800f390:	2b79      	cmp	r3, #121	@ 0x79
 800f392:	e7f6      	b.n	800f382 <_scanf_float+0x12e>
 800f394:	6821      	ldr	r1, [r4, #0]
 800f396:	05c8      	lsls	r0, r1, #23
 800f398:	d51b      	bpl.n	800f3d2 <_scanf_float+0x17e>
 800f39a:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 800f39e:	6021      	str	r1, [r4, #0]
 800f3a0:	f109 0901 	add.w	r9, r9, #1
 800f3a4:	f1bb 0f00 	cmp.w	fp, #0
 800f3a8:	d003      	beq.n	800f3b2 <_scanf_float+0x15e>
 800f3aa:	3201      	adds	r2, #1
 800f3ac:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f3b0:	60a2      	str	r2, [r4, #8]
 800f3b2:	68a3      	ldr	r3, [r4, #8]
 800f3b4:	3b01      	subs	r3, #1
 800f3b6:	60a3      	str	r3, [r4, #8]
 800f3b8:	6923      	ldr	r3, [r4, #16]
 800f3ba:	3301      	adds	r3, #1
 800f3bc:	6123      	str	r3, [r4, #16]
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	3b01      	subs	r3, #1
 800f3c2:	2b00      	cmp	r3, #0
 800f3c4:	607b      	str	r3, [r7, #4]
 800f3c6:	f340 8087 	ble.w	800f4d8 <_scanf_float+0x284>
 800f3ca:	683b      	ldr	r3, [r7, #0]
 800f3cc:	3301      	adds	r3, #1
 800f3ce:	603b      	str	r3, [r7, #0]
 800f3d0:	e765      	b.n	800f29e <_scanf_float+0x4a>
 800f3d2:	eb1a 0105 	adds.w	r1, sl, r5
 800f3d6:	f47f af6f 	bne.w	800f2b8 <_scanf_float+0x64>
 800f3da:	6822      	ldr	r2, [r4, #0]
 800f3dc:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800f3e0:	6022      	str	r2, [r4, #0]
 800f3e2:	460d      	mov	r5, r1
 800f3e4:	468a      	mov	sl, r1
 800f3e6:	f806 3b01 	strb.w	r3, [r6], #1
 800f3ea:	e7e2      	b.n	800f3b2 <_scanf_float+0x15e>
 800f3ec:	6822      	ldr	r2, [r4, #0]
 800f3ee:	0610      	lsls	r0, r2, #24
 800f3f0:	f57f af62 	bpl.w	800f2b8 <_scanf_float+0x64>
 800f3f4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800f3f8:	6022      	str	r2, [r4, #0]
 800f3fa:	e7f4      	b.n	800f3e6 <_scanf_float+0x192>
 800f3fc:	f1ba 0f00 	cmp.w	sl, #0
 800f400:	d10e      	bne.n	800f420 <_scanf_float+0x1cc>
 800f402:	f1b9 0f00 	cmp.w	r9, #0
 800f406:	d10e      	bne.n	800f426 <_scanf_float+0x1d2>
 800f408:	6822      	ldr	r2, [r4, #0]
 800f40a:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800f40e:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800f412:	d108      	bne.n	800f426 <_scanf_float+0x1d2>
 800f414:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800f418:	6022      	str	r2, [r4, #0]
 800f41a:	f04f 0a01 	mov.w	sl, #1
 800f41e:	e7e2      	b.n	800f3e6 <_scanf_float+0x192>
 800f420:	f1ba 0f02 	cmp.w	sl, #2
 800f424:	d055      	beq.n	800f4d2 <_scanf_float+0x27e>
 800f426:	2d01      	cmp	r5, #1
 800f428:	d002      	beq.n	800f430 <_scanf_float+0x1dc>
 800f42a:	2d04      	cmp	r5, #4
 800f42c:	f47f af44 	bne.w	800f2b8 <_scanf_float+0x64>
 800f430:	3501      	adds	r5, #1
 800f432:	b2ed      	uxtb	r5, r5
 800f434:	e7d7      	b.n	800f3e6 <_scanf_float+0x192>
 800f436:	f1ba 0f01 	cmp.w	sl, #1
 800f43a:	f47f af3d 	bne.w	800f2b8 <_scanf_float+0x64>
 800f43e:	f04f 0a02 	mov.w	sl, #2
 800f442:	e7d0      	b.n	800f3e6 <_scanf_float+0x192>
 800f444:	b97d      	cbnz	r5, 800f466 <_scanf_float+0x212>
 800f446:	f1b9 0f00 	cmp.w	r9, #0
 800f44a:	f47f af38 	bne.w	800f2be <_scanf_float+0x6a>
 800f44e:	6822      	ldr	r2, [r4, #0]
 800f450:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 800f454:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800f458:	f040 8108 	bne.w	800f66c <_scanf_float+0x418>
 800f45c:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800f460:	6022      	str	r2, [r4, #0]
 800f462:	2501      	movs	r5, #1
 800f464:	e7bf      	b.n	800f3e6 <_scanf_float+0x192>
 800f466:	2d03      	cmp	r5, #3
 800f468:	d0e2      	beq.n	800f430 <_scanf_float+0x1dc>
 800f46a:	2d05      	cmp	r5, #5
 800f46c:	e7de      	b.n	800f42c <_scanf_float+0x1d8>
 800f46e:	2d02      	cmp	r5, #2
 800f470:	f47f af22 	bne.w	800f2b8 <_scanf_float+0x64>
 800f474:	2503      	movs	r5, #3
 800f476:	e7b6      	b.n	800f3e6 <_scanf_float+0x192>
 800f478:	2d06      	cmp	r5, #6
 800f47a:	f47f af1d 	bne.w	800f2b8 <_scanf_float+0x64>
 800f47e:	2507      	movs	r5, #7
 800f480:	e7b1      	b.n	800f3e6 <_scanf_float+0x192>
 800f482:	6822      	ldr	r2, [r4, #0]
 800f484:	0591      	lsls	r1, r2, #22
 800f486:	f57f af17 	bpl.w	800f2b8 <_scanf_float+0x64>
 800f48a:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 800f48e:	6022      	str	r2, [r4, #0]
 800f490:	f8cd 9008 	str.w	r9, [sp, #8]
 800f494:	e7a7      	b.n	800f3e6 <_scanf_float+0x192>
 800f496:	6822      	ldr	r2, [r4, #0]
 800f498:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 800f49c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800f4a0:	d006      	beq.n	800f4b0 <_scanf_float+0x25c>
 800f4a2:	0550      	lsls	r0, r2, #21
 800f4a4:	f57f af08 	bpl.w	800f2b8 <_scanf_float+0x64>
 800f4a8:	f1b9 0f00 	cmp.w	r9, #0
 800f4ac:	f000 80de 	beq.w	800f66c <_scanf_float+0x418>
 800f4b0:	0591      	lsls	r1, r2, #22
 800f4b2:	bf58      	it	pl
 800f4b4:	9902      	ldrpl	r1, [sp, #8]
 800f4b6:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800f4ba:	bf58      	it	pl
 800f4bc:	eba9 0101 	subpl.w	r1, r9, r1
 800f4c0:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 800f4c4:	bf58      	it	pl
 800f4c6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800f4ca:	6022      	str	r2, [r4, #0]
 800f4cc:	f04f 0900 	mov.w	r9, #0
 800f4d0:	e789      	b.n	800f3e6 <_scanf_float+0x192>
 800f4d2:	f04f 0a03 	mov.w	sl, #3
 800f4d6:	e786      	b.n	800f3e6 <_scanf_float+0x192>
 800f4d8:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 800f4dc:	4639      	mov	r1, r7
 800f4de:	4640      	mov	r0, r8
 800f4e0:	4798      	blx	r3
 800f4e2:	2800      	cmp	r0, #0
 800f4e4:	f43f aedb 	beq.w	800f29e <_scanf_float+0x4a>
 800f4e8:	e6e6      	b.n	800f2b8 <_scanf_float+0x64>
 800f4ea:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800f4ee:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800f4f2:	463a      	mov	r2, r7
 800f4f4:	4640      	mov	r0, r8
 800f4f6:	4798      	blx	r3
 800f4f8:	6923      	ldr	r3, [r4, #16]
 800f4fa:	3b01      	subs	r3, #1
 800f4fc:	6123      	str	r3, [r4, #16]
 800f4fe:	e6e8      	b.n	800f2d2 <_scanf_float+0x7e>
 800f500:	1e6b      	subs	r3, r5, #1
 800f502:	2b06      	cmp	r3, #6
 800f504:	d824      	bhi.n	800f550 <_scanf_float+0x2fc>
 800f506:	2d02      	cmp	r5, #2
 800f508:	d836      	bhi.n	800f578 <_scanf_float+0x324>
 800f50a:	9b01      	ldr	r3, [sp, #4]
 800f50c:	429e      	cmp	r6, r3
 800f50e:	f67f aee4 	bls.w	800f2da <_scanf_float+0x86>
 800f512:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800f516:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800f51a:	463a      	mov	r2, r7
 800f51c:	4640      	mov	r0, r8
 800f51e:	4798      	blx	r3
 800f520:	6923      	ldr	r3, [r4, #16]
 800f522:	3b01      	subs	r3, #1
 800f524:	6123      	str	r3, [r4, #16]
 800f526:	e7f0      	b.n	800f50a <_scanf_float+0x2b6>
 800f528:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800f52c:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 800f530:	463a      	mov	r2, r7
 800f532:	4640      	mov	r0, r8
 800f534:	4798      	blx	r3
 800f536:	6923      	ldr	r3, [r4, #16]
 800f538:	3b01      	subs	r3, #1
 800f53a:	6123      	str	r3, [r4, #16]
 800f53c:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f540:	fa5f fa8a 	uxtb.w	sl, sl
 800f544:	f1ba 0f02 	cmp.w	sl, #2
 800f548:	d1ee      	bne.n	800f528 <_scanf_float+0x2d4>
 800f54a:	3d03      	subs	r5, #3
 800f54c:	b2ed      	uxtb	r5, r5
 800f54e:	1b76      	subs	r6, r6, r5
 800f550:	6823      	ldr	r3, [r4, #0]
 800f552:	05da      	lsls	r2, r3, #23
 800f554:	d530      	bpl.n	800f5b8 <_scanf_float+0x364>
 800f556:	055b      	lsls	r3, r3, #21
 800f558:	d511      	bpl.n	800f57e <_scanf_float+0x32a>
 800f55a:	9b01      	ldr	r3, [sp, #4]
 800f55c:	429e      	cmp	r6, r3
 800f55e:	f67f aebc 	bls.w	800f2da <_scanf_float+0x86>
 800f562:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800f566:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800f56a:	463a      	mov	r2, r7
 800f56c:	4640      	mov	r0, r8
 800f56e:	4798      	blx	r3
 800f570:	6923      	ldr	r3, [r4, #16]
 800f572:	3b01      	subs	r3, #1
 800f574:	6123      	str	r3, [r4, #16]
 800f576:	e7f0      	b.n	800f55a <_scanf_float+0x306>
 800f578:	46aa      	mov	sl, r5
 800f57a:	46b3      	mov	fp, r6
 800f57c:	e7de      	b.n	800f53c <_scanf_float+0x2e8>
 800f57e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800f582:	6923      	ldr	r3, [r4, #16]
 800f584:	2965      	cmp	r1, #101	@ 0x65
 800f586:	f103 33ff 	add.w	r3, r3, #4294967295
 800f58a:	f106 35ff 	add.w	r5, r6, #4294967295
 800f58e:	6123      	str	r3, [r4, #16]
 800f590:	d00c      	beq.n	800f5ac <_scanf_float+0x358>
 800f592:	2945      	cmp	r1, #69	@ 0x45
 800f594:	d00a      	beq.n	800f5ac <_scanf_float+0x358>
 800f596:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800f59a:	463a      	mov	r2, r7
 800f59c:	4640      	mov	r0, r8
 800f59e:	4798      	blx	r3
 800f5a0:	6923      	ldr	r3, [r4, #16]
 800f5a2:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800f5a6:	3b01      	subs	r3, #1
 800f5a8:	1eb5      	subs	r5, r6, #2
 800f5aa:	6123      	str	r3, [r4, #16]
 800f5ac:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800f5b0:	463a      	mov	r2, r7
 800f5b2:	4640      	mov	r0, r8
 800f5b4:	4798      	blx	r3
 800f5b6:	462e      	mov	r6, r5
 800f5b8:	6822      	ldr	r2, [r4, #0]
 800f5ba:	f012 0210 	ands.w	r2, r2, #16
 800f5be:	d001      	beq.n	800f5c4 <_scanf_float+0x370>
 800f5c0:	2000      	movs	r0, #0
 800f5c2:	e68b      	b.n	800f2dc <_scanf_float+0x88>
 800f5c4:	7032      	strb	r2, [r6, #0]
 800f5c6:	6823      	ldr	r3, [r4, #0]
 800f5c8:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800f5cc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800f5d0:	d11c      	bne.n	800f60c <_scanf_float+0x3b8>
 800f5d2:	9b02      	ldr	r3, [sp, #8]
 800f5d4:	454b      	cmp	r3, r9
 800f5d6:	eba3 0209 	sub.w	r2, r3, r9
 800f5da:	d123      	bne.n	800f624 <_scanf_float+0x3d0>
 800f5dc:	9901      	ldr	r1, [sp, #4]
 800f5de:	2200      	movs	r2, #0
 800f5e0:	4640      	mov	r0, r8
 800f5e2:	f7ff f9cd 	bl	800e980 <_strtod_r>
 800f5e6:	9b03      	ldr	r3, [sp, #12]
 800f5e8:	6821      	ldr	r1, [r4, #0]
 800f5ea:	681b      	ldr	r3, [r3, #0]
 800f5ec:	f011 0f02 	tst.w	r1, #2
 800f5f0:	ec57 6b10 	vmov	r6, r7, d0
 800f5f4:	f103 0204 	add.w	r2, r3, #4
 800f5f8:	d01f      	beq.n	800f63a <_scanf_float+0x3e6>
 800f5fa:	9903      	ldr	r1, [sp, #12]
 800f5fc:	600a      	str	r2, [r1, #0]
 800f5fe:	681b      	ldr	r3, [r3, #0]
 800f600:	e9c3 6700 	strd	r6, r7, [r3]
 800f604:	68e3      	ldr	r3, [r4, #12]
 800f606:	3301      	adds	r3, #1
 800f608:	60e3      	str	r3, [r4, #12]
 800f60a:	e7d9      	b.n	800f5c0 <_scanf_float+0x36c>
 800f60c:	9b04      	ldr	r3, [sp, #16]
 800f60e:	2b00      	cmp	r3, #0
 800f610:	d0e4      	beq.n	800f5dc <_scanf_float+0x388>
 800f612:	9905      	ldr	r1, [sp, #20]
 800f614:	230a      	movs	r3, #10
 800f616:	3101      	adds	r1, #1
 800f618:	4640      	mov	r0, r8
 800f61a:	f002 f9e9 	bl	80119f0 <_strtol_r>
 800f61e:	9b04      	ldr	r3, [sp, #16]
 800f620:	9e05      	ldr	r6, [sp, #20]
 800f622:	1ac2      	subs	r2, r0, r3
 800f624:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 800f628:	429e      	cmp	r6, r3
 800f62a:	bf28      	it	cs
 800f62c:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 800f630:	4910      	ldr	r1, [pc, #64]	@ (800f674 <_scanf_float+0x420>)
 800f632:	4630      	mov	r0, r6
 800f634:	f000 f8e4 	bl	800f800 <siprintf>
 800f638:	e7d0      	b.n	800f5dc <_scanf_float+0x388>
 800f63a:	f011 0f04 	tst.w	r1, #4
 800f63e:	9903      	ldr	r1, [sp, #12]
 800f640:	600a      	str	r2, [r1, #0]
 800f642:	d1dc      	bne.n	800f5fe <_scanf_float+0x3aa>
 800f644:	681d      	ldr	r5, [r3, #0]
 800f646:	4632      	mov	r2, r6
 800f648:	463b      	mov	r3, r7
 800f64a:	4630      	mov	r0, r6
 800f64c:	4639      	mov	r1, r7
 800f64e:	f7f1 fa95 	bl	8000b7c <__aeabi_dcmpun>
 800f652:	b128      	cbz	r0, 800f660 <_scanf_float+0x40c>
 800f654:	4808      	ldr	r0, [pc, #32]	@ (800f678 <_scanf_float+0x424>)
 800f656:	f000 f9ff 	bl	800fa58 <nanf>
 800f65a:	ed85 0a00 	vstr	s0, [r5]
 800f65e:	e7d1      	b.n	800f604 <_scanf_float+0x3b0>
 800f660:	4630      	mov	r0, r6
 800f662:	4639      	mov	r1, r7
 800f664:	f7f1 fae8 	bl	8000c38 <__aeabi_d2f>
 800f668:	6028      	str	r0, [r5, #0]
 800f66a:	e7cb      	b.n	800f604 <_scanf_float+0x3b0>
 800f66c:	f04f 0900 	mov.w	r9, #0
 800f670:	e629      	b.n	800f2c6 <_scanf_float+0x72>
 800f672:	bf00      	nop
 800f674:	08012944 	.word	0x08012944
 800f678:	08012ce5 	.word	0x08012ce5

0800f67c <std>:
 800f67c:	2300      	movs	r3, #0
 800f67e:	b510      	push	{r4, lr}
 800f680:	4604      	mov	r4, r0
 800f682:	e9c0 3300 	strd	r3, r3, [r0]
 800f686:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f68a:	6083      	str	r3, [r0, #8]
 800f68c:	8181      	strh	r1, [r0, #12]
 800f68e:	6643      	str	r3, [r0, #100]	@ 0x64
 800f690:	81c2      	strh	r2, [r0, #14]
 800f692:	6183      	str	r3, [r0, #24]
 800f694:	4619      	mov	r1, r3
 800f696:	2208      	movs	r2, #8
 800f698:	305c      	adds	r0, #92	@ 0x5c
 800f69a:	f000 f935 	bl	800f908 <memset>
 800f69e:	4b0d      	ldr	r3, [pc, #52]	@ (800f6d4 <std+0x58>)
 800f6a0:	6263      	str	r3, [r4, #36]	@ 0x24
 800f6a2:	4b0d      	ldr	r3, [pc, #52]	@ (800f6d8 <std+0x5c>)
 800f6a4:	62a3      	str	r3, [r4, #40]	@ 0x28
 800f6a6:	4b0d      	ldr	r3, [pc, #52]	@ (800f6dc <std+0x60>)
 800f6a8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800f6aa:	4b0d      	ldr	r3, [pc, #52]	@ (800f6e0 <std+0x64>)
 800f6ac:	6323      	str	r3, [r4, #48]	@ 0x30
 800f6ae:	4b0d      	ldr	r3, [pc, #52]	@ (800f6e4 <std+0x68>)
 800f6b0:	6224      	str	r4, [r4, #32]
 800f6b2:	429c      	cmp	r4, r3
 800f6b4:	d006      	beq.n	800f6c4 <std+0x48>
 800f6b6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800f6ba:	4294      	cmp	r4, r2
 800f6bc:	d002      	beq.n	800f6c4 <std+0x48>
 800f6be:	33d0      	adds	r3, #208	@ 0xd0
 800f6c0:	429c      	cmp	r4, r3
 800f6c2:	d105      	bne.n	800f6d0 <std+0x54>
 800f6c4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800f6c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6cc:	f000 b9aa 	b.w	800fa24 <__retarget_lock_init_recursive>
 800f6d0:	bd10      	pop	{r4, pc}
 800f6d2:	bf00      	nop
 800f6d4:	0800f841 	.word	0x0800f841
 800f6d8:	0800f863 	.word	0x0800f863
 800f6dc:	0800f89b 	.word	0x0800f89b
 800f6e0:	0800f8bf 	.word	0x0800f8bf
 800f6e4:	2000097c 	.word	0x2000097c

0800f6e8 <stdio_exit_handler>:
 800f6e8:	4a02      	ldr	r2, [pc, #8]	@ (800f6f4 <stdio_exit_handler+0xc>)
 800f6ea:	4903      	ldr	r1, [pc, #12]	@ (800f6f8 <stdio_exit_handler+0x10>)
 800f6ec:	4803      	ldr	r0, [pc, #12]	@ (800f6fc <stdio_exit_handler+0x14>)
 800f6ee:	f000 b869 	b.w	800f7c4 <_fwalk_sglue>
 800f6f2:	bf00      	nop
 800f6f4:	20000090 	.word	0x20000090
 800f6f8:	08011dc5 	.word	0x08011dc5
 800f6fc:	2000020c 	.word	0x2000020c

0800f700 <cleanup_stdio>:
 800f700:	6841      	ldr	r1, [r0, #4]
 800f702:	4b0c      	ldr	r3, [pc, #48]	@ (800f734 <cleanup_stdio+0x34>)
 800f704:	4299      	cmp	r1, r3
 800f706:	b510      	push	{r4, lr}
 800f708:	4604      	mov	r4, r0
 800f70a:	d001      	beq.n	800f710 <cleanup_stdio+0x10>
 800f70c:	f002 fb5a 	bl	8011dc4 <_fflush_r>
 800f710:	68a1      	ldr	r1, [r4, #8]
 800f712:	4b09      	ldr	r3, [pc, #36]	@ (800f738 <cleanup_stdio+0x38>)
 800f714:	4299      	cmp	r1, r3
 800f716:	d002      	beq.n	800f71e <cleanup_stdio+0x1e>
 800f718:	4620      	mov	r0, r4
 800f71a:	f002 fb53 	bl	8011dc4 <_fflush_r>
 800f71e:	68e1      	ldr	r1, [r4, #12]
 800f720:	4b06      	ldr	r3, [pc, #24]	@ (800f73c <cleanup_stdio+0x3c>)
 800f722:	4299      	cmp	r1, r3
 800f724:	d004      	beq.n	800f730 <cleanup_stdio+0x30>
 800f726:	4620      	mov	r0, r4
 800f728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f72c:	f002 bb4a 	b.w	8011dc4 <_fflush_r>
 800f730:	bd10      	pop	{r4, pc}
 800f732:	bf00      	nop
 800f734:	2000097c 	.word	0x2000097c
 800f738:	200009e4 	.word	0x200009e4
 800f73c:	20000a4c 	.word	0x20000a4c

0800f740 <global_stdio_init.part.0>:
 800f740:	b510      	push	{r4, lr}
 800f742:	4b0b      	ldr	r3, [pc, #44]	@ (800f770 <global_stdio_init.part.0+0x30>)
 800f744:	4c0b      	ldr	r4, [pc, #44]	@ (800f774 <global_stdio_init.part.0+0x34>)
 800f746:	4a0c      	ldr	r2, [pc, #48]	@ (800f778 <global_stdio_init.part.0+0x38>)
 800f748:	601a      	str	r2, [r3, #0]
 800f74a:	4620      	mov	r0, r4
 800f74c:	2200      	movs	r2, #0
 800f74e:	2104      	movs	r1, #4
 800f750:	f7ff ff94 	bl	800f67c <std>
 800f754:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800f758:	2201      	movs	r2, #1
 800f75a:	2109      	movs	r1, #9
 800f75c:	f7ff ff8e 	bl	800f67c <std>
 800f760:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800f764:	2202      	movs	r2, #2
 800f766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f76a:	2112      	movs	r1, #18
 800f76c:	f7ff bf86 	b.w	800f67c <std>
 800f770:	20000ab4 	.word	0x20000ab4
 800f774:	2000097c 	.word	0x2000097c
 800f778:	0800f6e9 	.word	0x0800f6e9

0800f77c <__sfp_lock_acquire>:
 800f77c:	4801      	ldr	r0, [pc, #4]	@ (800f784 <__sfp_lock_acquire+0x8>)
 800f77e:	f000 b952 	b.w	800fa26 <__retarget_lock_acquire_recursive>
 800f782:	bf00      	nop
 800f784:	20000abd 	.word	0x20000abd

0800f788 <__sfp_lock_release>:
 800f788:	4801      	ldr	r0, [pc, #4]	@ (800f790 <__sfp_lock_release+0x8>)
 800f78a:	f000 b94d 	b.w	800fa28 <__retarget_lock_release_recursive>
 800f78e:	bf00      	nop
 800f790:	20000abd 	.word	0x20000abd

0800f794 <__sinit>:
 800f794:	b510      	push	{r4, lr}
 800f796:	4604      	mov	r4, r0
 800f798:	f7ff fff0 	bl	800f77c <__sfp_lock_acquire>
 800f79c:	6a23      	ldr	r3, [r4, #32]
 800f79e:	b11b      	cbz	r3, 800f7a8 <__sinit+0x14>
 800f7a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7a4:	f7ff bff0 	b.w	800f788 <__sfp_lock_release>
 800f7a8:	4b04      	ldr	r3, [pc, #16]	@ (800f7bc <__sinit+0x28>)
 800f7aa:	6223      	str	r3, [r4, #32]
 800f7ac:	4b04      	ldr	r3, [pc, #16]	@ (800f7c0 <__sinit+0x2c>)
 800f7ae:	681b      	ldr	r3, [r3, #0]
 800f7b0:	2b00      	cmp	r3, #0
 800f7b2:	d1f5      	bne.n	800f7a0 <__sinit+0xc>
 800f7b4:	f7ff ffc4 	bl	800f740 <global_stdio_init.part.0>
 800f7b8:	e7f2      	b.n	800f7a0 <__sinit+0xc>
 800f7ba:	bf00      	nop
 800f7bc:	0800f701 	.word	0x0800f701
 800f7c0:	20000ab4 	.word	0x20000ab4

0800f7c4 <_fwalk_sglue>:
 800f7c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f7c8:	4607      	mov	r7, r0
 800f7ca:	4688      	mov	r8, r1
 800f7cc:	4614      	mov	r4, r2
 800f7ce:	2600      	movs	r6, #0
 800f7d0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f7d4:	f1b9 0901 	subs.w	r9, r9, #1
 800f7d8:	d505      	bpl.n	800f7e6 <_fwalk_sglue+0x22>
 800f7da:	6824      	ldr	r4, [r4, #0]
 800f7dc:	2c00      	cmp	r4, #0
 800f7de:	d1f7      	bne.n	800f7d0 <_fwalk_sglue+0xc>
 800f7e0:	4630      	mov	r0, r6
 800f7e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f7e6:	89ab      	ldrh	r3, [r5, #12]
 800f7e8:	2b01      	cmp	r3, #1
 800f7ea:	d907      	bls.n	800f7fc <_fwalk_sglue+0x38>
 800f7ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f7f0:	3301      	adds	r3, #1
 800f7f2:	d003      	beq.n	800f7fc <_fwalk_sglue+0x38>
 800f7f4:	4629      	mov	r1, r5
 800f7f6:	4638      	mov	r0, r7
 800f7f8:	47c0      	blx	r8
 800f7fa:	4306      	orrs	r6, r0
 800f7fc:	3568      	adds	r5, #104	@ 0x68
 800f7fe:	e7e9      	b.n	800f7d4 <_fwalk_sglue+0x10>

0800f800 <siprintf>:
 800f800:	b40e      	push	{r1, r2, r3}
 800f802:	b500      	push	{lr}
 800f804:	b09c      	sub	sp, #112	@ 0x70
 800f806:	ab1d      	add	r3, sp, #116	@ 0x74
 800f808:	9002      	str	r0, [sp, #8]
 800f80a:	9006      	str	r0, [sp, #24]
 800f80c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800f810:	4809      	ldr	r0, [pc, #36]	@ (800f838 <siprintf+0x38>)
 800f812:	9107      	str	r1, [sp, #28]
 800f814:	9104      	str	r1, [sp, #16]
 800f816:	4909      	ldr	r1, [pc, #36]	@ (800f83c <siprintf+0x3c>)
 800f818:	f853 2b04 	ldr.w	r2, [r3], #4
 800f81c:	9105      	str	r1, [sp, #20]
 800f81e:	6800      	ldr	r0, [r0, #0]
 800f820:	9301      	str	r3, [sp, #4]
 800f822:	a902      	add	r1, sp, #8
 800f824:	f002 f94e 	bl	8011ac4 <_svfiprintf_r>
 800f828:	9b02      	ldr	r3, [sp, #8]
 800f82a:	2200      	movs	r2, #0
 800f82c:	701a      	strb	r2, [r3, #0]
 800f82e:	b01c      	add	sp, #112	@ 0x70
 800f830:	f85d eb04 	ldr.w	lr, [sp], #4
 800f834:	b003      	add	sp, #12
 800f836:	4770      	bx	lr
 800f838:	20000208 	.word	0x20000208
 800f83c:	ffff0208 	.word	0xffff0208

0800f840 <__sread>:
 800f840:	b510      	push	{r4, lr}
 800f842:	460c      	mov	r4, r1
 800f844:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f848:	f000 f89e 	bl	800f988 <_read_r>
 800f84c:	2800      	cmp	r0, #0
 800f84e:	bfab      	itete	ge
 800f850:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800f852:	89a3      	ldrhlt	r3, [r4, #12]
 800f854:	181b      	addge	r3, r3, r0
 800f856:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800f85a:	bfac      	ite	ge
 800f85c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800f85e:	81a3      	strhlt	r3, [r4, #12]
 800f860:	bd10      	pop	{r4, pc}

0800f862 <__swrite>:
 800f862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f866:	461f      	mov	r7, r3
 800f868:	898b      	ldrh	r3, [r1, #12]
 800f86a:	05db      	lsls	r3, r3, #23
 800f86c:	4605      	mov	r5, r0
 800f86e:	460c      	mov	r4, r1
 800f870:	4616      	mov	r6, r2
 800f872:	d505      	bpl.n	800f880 <__swrite+0x1e>
 800f874:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f878:	2302      	movs	r3, #2
 800f87a:	2200      	movs	r2, #0
 800f87c:	f000 f872 	bl	800f964 <_lseek_r>
 800f880:	89a3      	ldrh	r3, [r4, #12]
 800f882:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800f886:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800f88a:	81a3      	strh	r3, [r4, #12]
 800f88c:	4632      	mov	r2, r6
 800f88e:	463b      	mov	r3, r7
 800f890:	4628      	mov	r0, r5
 800f892:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f896:	f000 b889 	b.w	800f9ac <_write_r>

0800f89a <__sseek>:
 800f89a:	b510      	push	{r4, lr}
 800f89c:	460c      	mov	r4, r1
 800f89e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f8a2:	f000 f85f 	bl	800f964 <_lseek_r>
 800f8a6:	1c43      	adds	r3, r0, #1
 800f8a8:	89a3      	ldrh	r3, [r4, #12]
 800f8aa:	bf15      	itete	ne
 800f8ac:	6560      	strne	r0, [r4, #84]	@ 0x54
 800f8ae:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800f8b2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800f8b6:	81a3      	strheq	r3, [r4, #12]
 800f8b8:	bf18      	it	ne
 800f8ba:	81a3      	strhne	r3, [r4, #12]
 800f8bc:	bd10      	pop	{r4, pc}

0800f8be <__sclose>:
 800f8be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f8c2:	f000 b83f 	b.w	800f944 <_close_r>
	...

0800f8c8 <_vsiprintf_r>:
 800f8c8:	b500      	push	{lr}
 800f8ca:	b09b      	sub	sp, #108	@ 0x6c
 800f8cc:	9100      	str	r1, [sp, #0]
 800f8ce:	9104      	str	r1, [sp, #16]
 800f8d0:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800f8d4:	9105      	str	r1, [sp, #20]
 800f8d6:	9102      	str	r1, [sp, #8]
 800f8d8:	4905      	ldr	r1, [pc, #20]	@ (800f8f0 <_vsiprintf_r+0x28>)
 800f8da:	9103      	str	r1, [sp, #12]
 800f8dc:	4669      	mov	r1, sp
 800f8de:	f002 f8f1 	bl	8011ac4 <_svfiprintf_r>
 800f8e2:	9b00      	ldr	r3, [sp, #0]
 800f8e4:	2200      	movs	r2, #0
 800f8e6:	701a      	strb	r2, [r3, #0]
 800f8e8:	b01b      	add	sp, #108	@ 0x6c
 800f8ea:	f85d fb04 	ldr.w	pc, [sp], #4
 800f8ee:	bf00      	nop
 800f8f0:	ffff0208 	.word	0xffff0208

0800f8f4 <vsiprintf>:
 800f8f4:	4613      	mov	r3, r2
 800f8f6:	460a      	mov	r2, r1
 800f8f8:	4601      	mov	r1, r0
 800f8fa:	4802      	ldr	r0, [pc, #8]	@ (800f904 <vsiprintf+0x10>)
 800f8fc:	6800      	ldr	r0, [r0, #0]
 800f8fe:	f7ff bfe3 	b.w	800f8c8 <_vsiprintf_r>
 800f902:	bf00      	nop
 800f904:	20000208 	.word	0x20000208

0800f908 <memset>:
 800f908:	4402      	add	r2, r0
 800f90a:	4603      	mov	r3, r0
 800f90c:	4293      	cmp	r3, r2
 800f90e:	d100      	bne.n	800f912 <memset+0xa>
 800f910:	4770      	bx	lr
 800f912:	f803 1b01 	strb.w	r1, [r3], #1
 800f916:	e7f9      	b.n	800f90c <memset+0x4>

0800f918 <strncmp>:
 800f918:	b510      	push	{r4, lr}
 800f91a:	b16a      	cbz	r2, 800f938 <strncmp+0x20>
 800f91c:	3901      	subs	r1, #1
 800f91e:	1884      	adds	r4, r0, r2
 800f920:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f924:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800f928:	429a      	cmp	r2, r3
 800f92a:	d103      	bne.n	800f934 <strncmp+0x1c>
 800f92c:	42a0      	cmp	r0, r4
 800f92e:	d001      	beq.n	800f934 <strncmp+0x1c>
 800f930:	2a00      	cmp	r2, #0
 800f932:	d1f5      	bne.n	800f920 <strncmp+0x8>
 800f934:	1ad0      	subs	r0, r2, r3
 800f936:	bd10      	pop	{r4, pc}
 800f938:	4610      	mov	r0, r2
 800f93a:	e7fc      	b.n	800f936 <strncmp+0x1e>

0800f93c <_localeconv_r>:
 800f93c:	4800      	ldr	r0, [pc, #0]	@ (800f940 <_localeconv_r+0x4>)
 800f93e:	4770      	bx	lr
 800f940:	2000018c 	.word	0x2000018c

0800f944 <_close_r>:
 800f944:	b538      	push	{r3, r4, r5, lr}
 800f946:	4d06      	ldr	r5, [pc, #24]	@ (800f960 <_close_r+0x1c>)
 800f948:	2300      	movs	r3, #0
 800f94a:	4604      	mov	r4, r0
 800f94c:	4608      	mov	r0, r1
 800f94e:	602b      	str	r3, [r5, #0]
 800f950:	f7f2 fac4 	bl	8001edc <_close>
 800f954:	1c43      	adds	r3, r0, #1
 800f956:	d102      	bne.n	800f95e <_close_r+0x1a>
 800f958:	682b      	ldr	r3, [r5, #0]
 800f95a:	b103      	cbz	r3, 800f95e <_close_r+0x1a>
 800f95c:	6023      	str	r3, [r4, #0]
 800f95e:	bd38      	pop	{r3, r4, r5, pc}
 800f960:	20000ab8 	.word	0x20000ab8

0800f964 <_lseek_r>:
 800f964:	b538      	push	{r3, r4, r5, lr}
 800f966:	4d07      	ldr	r5, [pc, #28]	@ (800f984 <_lseek_r+0x20>)
 800f968:	4604      	mov	r4, r0
 800f96a:	4608      	mov	r0, r1
 800f96c:	4611      	mov	r1, r2
 800f96e:	2200      	movs	r2, #0
 800f970:	602a      	str	r2, [r5, #0]
 800f972:	461a      	mov	r2, r3
 800f974:	f7f2 fad9 	bl	8001f2a <_lseek>
 800f978:	1c43      	adds	r3, r0, #1
 800f97a:	d102      	bne.n	800f982 <_lseek_r+0x1e>
 800f97c:	682b      	ldr	r3, [r5, #0]
 800f97e:	b103      	cbz	r3, 800f982 <_lseek_r+0x1e>
 800f980:	6023      	str	r3, [r4, #0]
 800f982:	bd38      	pop	{r3, r4, r5, pc}
 800f984:	20000ab8 	.word	0x20000ab8

0800f988 <_read_r>:
 800f988:	b538      	push	{r3, r4, r5, lr}
 800f98a:	4d07      	ldr	r5, [pc, #28]	@ (800f9a8 <_read_r+0x20>)
 800f98c:	4604      	mov	r4, r0
 800f98e:	4608      	mov	r0, r1
 800f990:	4611      	mov	r1, r2
 800f992:	2200      	movs	r2, #0
 800f994:	602a      	str	r2, [r5, #0]
 800f996:	461a      	mov	r2, r3
 800f998:	f7f2 fa67 	bl	8001e6a <_read>
 800f99c:	1c43      	adds	r3, r0, #1
 800f99e:	d102      	bne.n	800f9a6 <_read_r+0x1e>
 800f9a0:	682b      	ldr	r3, [r5, #0]
 800f9a2:	b103      	cbz	r3, 800f9a6 <_read_r+0x1e>
 800f9a4:	6023      	str	r3, [r4, #0]
 800f9a6:	bd38      	pop	{r3, r4, r5, pc}
 800f9a8:	20000ab8 	.word	0x20000ab8

0800f9ac <_write_r>:
 800f9ac:	b538      	push	{r3, r4, r5, lr}
 800f9ae:	4d07      	ldr	r5, [pc, #28]	@ (800f9cc <_write_r+0x20>)
 800f9b0:	4604      	mov	r4, r0
 800f9b2:	4608      	mov	r0, r1
 800f9b4:	4611      	mov	r1, r2
 800f9b6:	2200      	movs	r2, #0
 800f9b8:	602a      	str	r2, [r5, #0]
 800f9ba:	461a      	mov	r2, r3
 800f9bc:	f7f2 fa72 	bl	8001ea4 <_write>
 800f9c0:	1c43      	adds	r3, r0, #1
 800f9c2:	d102      	bne.n	800f9ca <_write_r+0x1e>
 800f9c4:	682b      	ldr	r3, [r5, #0]
 800f9c6:	b103      	cbz	r3, 800f9ca <_write_r+0x1e>
 800f9c8:	6023      	str	r3, [r4, #0]
 800f9ca:	bd38      	pop	{r3, r4, r5, pc}
 800f9cc:	20000ab8 	.word	0x20000ab8

0800f9d0 <__errno>:
 800f9d0:	4b01      	ldr	r3, [pc, #4]	@ (800f9d8 <__errno+0x8>)
 800f9d2:	6818      	ldr	r0, [r3, #0]
 800f9d4:	4770      	bx	lr
 800f9d6:	bf00      	nop
 800f9d8:	20000208 	.word	0x20000208

0800f9dc <__libc_init_array>:
 800f9dc:	b570      	push	{r4, r5, r6, lr}
 800f9de:	4d0d      	ldr	r5, [pc, #52]	@ (800fa14 <__libc_init_array+0x38>)
 800f9e0:	4c0d      	ldr	r4, [pc, #52]	@ (800fa18 <__libc_init_array+0x3c>)
 800f9e2:	1b64      	subs	r4, r4, r5
 800f9e4:	10a4      	asrs	r4, r4, #2
 800f9e6:	2600      	movs	r6, #0
 800f9e8:	42a6      	cmp	r6, r4
 800f9ea:	d109      	bne.n	800fa00 <__libc_init_array+0x24>
 800f9ec:	4d0b      	ldr	r5, [pc, #44]	@ (800fa1c <__libc_init_array+0x40>)
 800f9ee:	4c0c      	ldr	r4, [pc, #48]	@ (800fa20 <__libc_init_array+0x44>)
 800f9f0:	f002 fe90 	bl	8012714 <_init>
 800f9f4:	1b64      	subs	r4, r4, r5
 800f9f6:	10a4      	asrs	r4, r4, #2
 800f9f8:	2600      	movs	r6, #0
 800f9fa:	42a6      	cmp	r6, r4
 800f9fc:	d105      	bne.n	800fa0a <__libc_init_array+0x2e>
 800f9fe:	bd70      	pop	{r4, r5, r6, pc}
 800fa00:	f855 3b04 	ldr.w	r3, [r5], #4
 800fa04:	4798      	blx	r3
 800fa06:	3601      	adds	r6, #1
 800fa08:	e7ee      	b.n	800f9e8 <__libc_init_array+0xc>
 800fa0a:	f855 3b04 	ldr.w	r3, [r5], #4
 800fa0e:	4798      	blx	r3
 800fa10:	3601      	adds	r6, #1
 800fa12:	e7f2      	b.n	800f9fa <__libc_init_array+0x1e>
 800fa14:	08012d00 	.word	0x08012d00
 800fa18:	08012d00 	.word	0x08012d00
 800fa1c:	08012d00 	.word	0x08012d00
 800fa20:	08012d04 	.word	0x08012d04

0800fa24 <__retarget_lock_init_recursive>:
 800fa24:	4770      	bx	lr

0800fa26 <__retarget_lock_acquire_recursive>:
 800fa26:	4770      	bx	lr

0800fa28 <__retarget_lock_release_recursive>:
 800fa28:	4770      	bx	lr

0800fa2a <memcpy>:
 800fa2a:	440a      	add	r2, r1
 800fa2c:	4291      	cmp	r1, r2
 800fa2e:	f100 33ff 	add.w	r3, r0, #4294967295
 800fa32:	d100      	bne.n	800fa36 <memcpy+0xc>
 800fa34:	4770      	bx	lr
 800fa36:	b510      	push	{r4, lr}
 800fa38:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fa3c:	f803 4f01 	strb.w	r4, [r3, #1]!
 800fa40:	4291      	cmp	r1, r2
 800fa42:	d1f9      	bne.n	800fa38 <memcpy+0xe>
 800fa44:	bd10      	pop	{r4, pc}
	...

0800fa48 <nan>:
 800fa48:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 800fa50 <nan+0x8>
 800fa4c:	4770      	bx	lr
 800fa4e:	bf00      	nop
 800fa50:	00000000 	.word	0x00000000
 800fa54:	7ff80000 	.word	0x7ff80000

0800fa58 <nanf>:
 800fa58:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 800fa60 <nanf+0x8>
 800fa5c:	4770      	bx	lr
 800fa5e:	bf00      	nop
 800fa60:	7fc00000 	.word	0x7fc00000

0800fa64 <quorem>:
 800fa64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa68:	6903      	ldr	r3, [r0, #16]
 800fa6a:	690c      	ldr	r4, [r1, #16]
 800fa6c:	42a3      	cmp	r3, r4
 800fa6e:	4607      	mov	r7, r0
 800fa70:	db7e      	blt.n	800fb70 <quorem+0x10c>
 800fa72:	3c01      	subs	r4, #1
 800fa74:	f101 0814 	add.w	r8, r1, #20
 800fa78:	00a3      	lsls	r3, r4, #2
 800fa7a:	f100 0514 	add.w	r5, r0, #20
 800fa7e:	9300      	str	r3, [sp, #0]
 800fa80:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800fa84:	9301      	str	r3, [sp, #4]
 800fa86:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800fa8a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800fa8e:	3301      	adds	r3, #1
 800fa90:	429a      	cmp	r2, r3
 800fa92:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800fa96:	fbb2 f6f3 	udiv	r6, r2, r3
 800fa9a:	d32e      	bcc.n	800fafa <quorem+0x96>
 800fa9c:	f04f 0a00 	mov.w	sl, #0
 800faa0:	46c4      	mov	ip, r8
 800faa2:	46ae      	mov	lr, r5
 800faa4:	46d3      	mov	fp, sl
 800faa6:	f85c 3b04 	ldr.w	r3, [ip], #4
 800faaa:	b298      	uxth	r0, r3
 800faac:	fb06 a000 	mla	r0, r6, r0, sl
 800fab0:	0c02      	lsrs	r2, r0, #16
 800fab2:	0c1b      	lsrs	r3, r3, #16
 800fab4:	fb06 2303 	mla	r3, r6, r3, r2
 800fab8:	f8de 2000 	ldr.w	r2, [lr]
 800fabc:	b280      	uxth	r0, r0
 800fabe:	b292      	uxth	r2, r2
 800fac0:	1a12      	subs	r2, r2, r0
 800fac2:	445a      	add	r2, fp
 800fac4:	f8de 0000 	ldr.w	r0, [lr]
 800fac8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800facc:	b29b      	uxth	r3, r3
 800face:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800fad2:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800fad6:	b292      	uxth	r2, r2
 800fad8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800fadc:	45e1      	cmp	r9, ip
 800fade:	f84e 2b04 	str.w	r2, [lr], #4
 800fae2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800fae6:	d2de      	bcs.n	800faa6 <quorem+0x42>
 800fae8:	9b00      	ldr	r3, [sp, #0]
 800faea:	58eb      	ldr	r3, [r5, r3]
 800faec:	b92b      	cbnz	r3, 800fafa <quorem+0x96>
 800faee:	9b01      	ldr	r3, [sp, #4]
 800faf0:	3b04      	subs	r3, #4
 800faf2:	429d      	cmp	r5, r3
 800faf4:	461a      	mov	r2, r3
 800faf6:	d32f      	bcc.n	800fb58 <quorem+0xf4>
 800faf8:	613c      	str	r4, [r7, #16]
 800fafa:	4638      	mov	r0, r7
 800fafc:	f001 fd10 	bl	8011520 <__mcmp>
 800fb00:	2800      	cmp	r0, #0
 800fb02:	db25      	blt.n	800fb50 <quorem+0xec>
 800fb04:	4629      	mov	r1, r5
 800fb06:	2000      	movs	r0, #0
 800fb08:	f858 2b04 	ldr.w	r2, [r8], #4
 800fb0c:	f8d1 c000 	ldr.w	ip, [r1]
 800fb10:	fa1f fe82 	uxth.w	lr, r2
 800fb14:	fa1f f38c 	uxth.w	r3, ip
 800fb18:	eba3 030e 	sub.w	r3, r3, lr
 800fb1c:	4403      	add	r3, r0
 800fb1e:	0c12      	lsrs	r2, r2, #16
 800fb20:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800fb24:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800fb28:	b29b      	uxth	r3, r3
 800fb2a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fb2e:	45c1      	cmp	r9, r8
 800fb30:	f841 3b04 	str.w	r3, [r1], #4
 800fb34:	ea4f 4022 	mov.w	r0, r2, asr #16
 800fb38:	d2e6      	bcs.n	800fb08 <quorem+0xa4>
 800fb3a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800fb3e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800fb42:	b922      	cbnz	r2, 800fb4e <quorem+0xea>
 800fb44:	3b04      	subs	r3, #4
 800fb46:	429d      	cmp	r5, r3
 800fb48:	461a      	mov	r2, r3
 800fb4a:	d30b      	bcc.n	800fb64 <quorem+0x100>
 800fb4c:	613c      	str	r4, [r7, #16]
 800fb4e:	3601      	adds	r6, #1
 800fb50:	4630      	mov	r0, r6
 800fb52:	b003      	add	sp, #12
 800fb54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb58:	6812      	ldr	r2, [r2, #0]
 800fb5a:	3b04      	subs	r3, #4
 800fb5c:	2a00      	cmp	r2, #0
 800fb5e:	d1cb      	bne.n	800faf8 <quorem+0x94>
 800fb60:	3c01      	subs	r4, #1
 800fb62:	e7c6      	b.n	800faf2 <quorem+0x8e>
 800fb64:	6812      	ldr	r2, [r2, #0]
 800fb66:	3b04      	subs	r3, #4
 800fb68:	2a00      	cmp	r2, #0
 800fb6a:	d1ef      	bne.n	800fb4c <quorem+0xe8>
 800fb6c:	3c01      	subs	r4, #1
 800fb6e:	e7ea      	b.n	800fb46 <quorem+0xe2>
 800fb70:	2000      	movs	r0, #0
 800fb72:	e7ee      	b.n	800fb52 <quorem+0xee>
 800fb74:	0000      	movs	r0, r0
	...

0800fb78 <_dtoa_r>:
 800fb78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb7c:	69c7      	ldr	r7, [r0, #28]
 800fb7e:	b099      	sub	sp, #100	@ 0x64
 800fb80:	ed8d 0b02 	vstr	d0, [sp, #8]
 800fb84:	ec55 4b10 	vmov	r4, r5, d0
 800fb88:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800fb8a:	9109      	str	r1, [sp, #36]	@ 0x24
 800fb8c:	4683      	mov	fp, r0
 800fb8e:	920e      	str	r2, [sp, #56]	@ 0x38
 800fb90:	9313      	str	r3, [sp, #76]	@ 0x4c
 800fb92:	b97f      	cbnz	r7, 800fbb4 <_dtoa_r+0x3c>
 800fb94:	2010      	movs	r0, #16
 800fb96:	f001 f937 	bl	8010e08 <malloc>
 800fb9a:	4602      	mov	r2, r0
 800fb9c:	f8cb 001c 	str.w	r0, [fp, #28]
 800fba0:	b920      	cbnz	r0, 800fbac <_dtoa_r+0x34>
 800fba2:	4ba7      	ldr	r3, [pc, #668]	@ (800fe40 <_dtoa_r+0x2c8>)
 800fba4:	21ef      	movs	r1, #239	@ 0xef
 800fba6:	48a7      	ldr	r0, [pc, #668]	@ (800fe44 <_dtoa_r+0x2cc>)
 800fba8:	f002 f95e 	bl	8011e68 <__assert_func>
 800fbac:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800fbb0:	6007      	str	r7, [r0, #0]
 800fbb2:	60c7      	str	r7, [r0, #12]
 800fbb4:	f8db 301c 	ldr.w	r3, [fp, #28]
 800fbb8:	6819      	ldr	r1, [r3, #0]
 800fbba:	b159      	cbz	r1, 800fbd4 <_dtoa_r+0x5c>
 800fbbc:	685a      	ldr	r2, [r3, #4]
 800fbbe:	604a      	str	r2, [r1, #4]
 800fbc0:	2301      	movs	r3, #1
 800fbc2:	4093      	lsls	r3, r2
 800fbc4:	608b      	str	r3, [r1, #8]
 800fbc6:	4658      	mov	r0, fp
 800fbc8:	f001 fa26 	bl	8011018 <_Bfree>
 800fbcc:	f8db 301c 	ldr.w	r3, [fp, #28]
 800fbd0:	2200      	movs	r2, #0
 800fbd2:	601a      	str	r2, [r3, #0]
 800fbd4:	1e2b      	subs	r3, r5, #0
 800fbd6:	bfb9      	ittee	lt
 800fbd8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800fbdc:	9303      	strlt	r3, [sp, #12]
 800fbde:	2300      	movge	r3, #0
 800fbe0:	6033      	strge	r3, [r6, #0]
 800fbe2:	9f03      	ldr	r7, [sp, #12]
 800fbe4:	4b98      	ldr	r3, [pc, #608]	@ (800fe48 <_dtoa_r+0x2d0>)
 800fbe6:	bfbc      	itt	lt
 800fbe8:	2201      	movlt	r2, #1
 800fbea:	6032      	strlt	r2, [r6, #0]
 800fbec:	43bb      	bics	r3, r7
 800fbee:	d112      	bne.n	800fc16 <_dtoa_r+0x9e>
 800fbf0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fbf2:	f242 730f 	movw	r3, #9999	@ 0x270f
 800fbf6:	6013      	str	r3, [r2, #0]
 800fbf8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800fbfc:	4323      	orrs	r3, r4
 800fbfe:	f000 854d 	beq.w	801069c <_dtoa_r+0xb24>
 800fc02:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800fc04:	f8df a254 	ldr.w	sl, [pc, #596]	@ 800fe5c <_dtoa_r+0x2e4>
 800fc08:	2b00      	cmp	r3, #0
 800fc0a:	f000 854f 	beq.w	80106ac <_dtoa_r+0xb34>
 800fc0e:	f10a 0303 	add.w	r3, sl, #3
 800fc12:	f000 bd49 	b.w	80106a8 <_dtoa_r+0xb30>
 800fc16:	ed9d 7b02 	vldr	d7, [sp, #8]
 800fc1a:	2200      	movs	r2, #0
 800fc1c:	ec51 0b17 	vmov	r0, r1, d7
 800fc20:	2300      	movs	r3, #0
 800fc22:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 800fc26:	f7f0 ff77 	bl	8000b18 <__aeabi_dcmpeq>
 800fc2a:	4680      	mov	r8, r0
 800fc2c:	b158      	cbz	r0, 800fc46 <_dtoa_r+0xce>
 800fc2e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fc30:	2301      	movs	r3, #1
 800fc32:	6013      	str	r3, [r2, #0]
 800fc34:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800fc36:	b113      	cbz	r3, 800fc3e <_dtoa_r+0xc6>
 800fc38:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800fc3a:	4b84      	ldr	r3, [pc, #528]	@ (800fe4c <_dtoa_r+0x2d4>)
 800fc3c:	6013      	str	r3, [r2, #0]
 800fc3e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 800fe60 <_dtoa_r+0x2e8>
 800fc42:	f000 bd33 	b.w	80106ac <_dtoa_r+0xb34>
 800fc46:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800fc4a:	aa16      	add	r2, sp, #88	@ 0x58
 800fc4c:	a917      	add	r1, sp, #92	@ 0x5c
 800fc4e:	4658      	mov	r0, fp
 800fc50:	f001 fd86 	bl	8011760 <__d2b>
 800fc54:	f3c7 560a 	ubfx	r6, r7, #20, #11
 800fc58:	4681      	mov	r9, r0
 800fc5a:	2e00      	cmp	r6, #0
 800fc5c:	d077      	beq.n	800fd4e <_dtoa_r+0x1d6>
 800fc5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fc60:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 800fc64:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800fc68:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800fc6c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800fc70:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800fc74:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800fc78:	4619      	mov	r1, r3
 800fc7a:	2200      	movs	r2, #0
 800fc7c:	4b74      	ldr	r3, [pc, #464]	@ (800fe50 <_dtoa_r+0x2d8>)
 800fc7e:	f7f0 fb2b 	bl	80002d8 <__aeabi_dsub>
 800fc82:	a369      	add	r3, pc, #420	@ (adr r3, 800fe28 <_dtoa_r+0x2b0>)
 800fc84:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fc88:	f7f0 fcde 	bl	8000648 <__aeabi_dmul>
 800fc8c:	a368      	add	r3, pc, #416	@ (adr r3, 800fe30 <_dtoa_r+0x2b8>)
 800fc8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fc92:	f7f0 fb23 	bl	80002dc <__adddf3>
 800fc96:	4604      	mov	r4, r0
 800fc98:	4630      	mov	r0, r6
 800fc9a:	460d      	mov	r5, r1
 800fc9c:	f7f0 fc6a 	bl	8000574 <__aeabi_i2d>
 800fca0:	a365      	add	r3, pc, #404	@ (adr r3, 800fe38 <_dtoa_r+0x2c0>)
 800fca2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fca6:	f7f0 fccf 	bl	8000648 <__aeabi_dmul>
 800fcaa:	4602      	mov	r2, r0
 800fcac:	460b      	mov	r3, r1
 800fcae:	4620      	mov	r0, r4
 800fcb0:	4629      	mov	r1, r5
 800fcb2:	f7f0 fb13 	bl	80002dc <__adddf3>
 800fcb6:	4604      	mov	r4, r0
 800fcb8:	460d      	mov	r5, r1
 800fcba:	f7f0 ff75 	bl	8000ba8 <__aeabi_d2iz>
 800fcbe:	2200      	movs	r2, #0
 800fcc0:	4607      	mov	r7, r0
 800fcc2:	2300      	movs	r3, #0
 800fcc4:	4620      	mov	r0, r4
 800fcc6:	4629      	mov	r1, r5
 800fcc8:	f7f0 ff30 	bl	8000b2c <__aeabi_dcmplt>
 800fccc:	b140      	cbz	r0, 800fce0 <_dtoa_r+0x168>
 800fcce:	4638      	mov	r0, r7
 800fcd0:	f7f0 fc50 	bl	8000574 <__aeabi_i2d>
 800fcd4:	4622      	mov	r2, r4
 800fcd6:	462b      	mov	r3, r5
 800fcd8:	f7f0 ff1e 	bl	8000b18 <__aeabi_dcmpeq>
 800fcdc:	b900      	cbnz	r0, 800fce0 <_dtoa_r+0x168>
 800fcde:	3f01      	subs	r7, #1
 800fce0:	2f16      	cmp	r7, #22
 800fce2:	d851      	bhi.n	800fd88 <_dtoa_r+0x210>
 800fce4:	4b5b      	ldr	r3, [pc, #364]	@ (800fe54 <_dtoa_r+0x2dc>)
 800fce6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800fcea:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fcee:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800fcf2:	f7f0 ff1b 	bl	8000b2c <__aeabi_dcmplt>
 800fcf6:	2800      	cmp	r0, #0
 800fcf8:	d048      	beq.n	800fd8c <_dtoa_r+0x214>
 800fcfa:	3f01      	subs	r7, #1
 800fcfc:	2300      	movs	r3, #0
 800fcfe:	9312      	str	r3, [sp, #72]	@ 0x48
 800fd00:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800fd02:	1b9b      	subs	r3, r3, r6
 800fd04:	1e5a      	subs	r2, r3, #1
 800fd06:	bf44      	itt	mi
 800fd08:	f1c3 0801 	rsbmi	r8, r3, #1
 800fd0c:	2300      	movmi	r3, #0
 800fd0e:	9208      	str	r2, [sp, #32]
 800fd10:	bf54      	ite	pl
 800fd12:	f04f 0800 	movpl.w	r8, #0
 800fd16:	9308      	strmi	r3, [sp, #32]
 800fd18:	2f00      	cmp	r7, #0
 800fd1a:	db39      	blt.n	800fd90 <_dtoa_r+0x218>
 800fd1c:	9b08      	ldr	r3, [sp, #32]
 800fd1e:	970f      	str	r7, [sp, #60]	@ 0x3c
 800fd20:	443b      	add	r3, r7
 800fd22:	9308      	str	r3, [sp, #32]
 800fd24:	2300      	movs	r3, #0
 800fd26:	930a      	str	r3, [sp, #40]	@ 0x28
 800fd28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fd2a:	2b09      	cmp	r3, #9
 800fd2c:	d864      	bhi.n	800fdf8 <_dtoa_r+0x280>
 800fd2e:	2b05      	cmp	r3, #5
 800fd30:	bfc4      	itt	gt
 800fd32:	3b04      	subgt	r3, #4
 800fd34:	9309      	strgt	r3, [sp, #36]	@ 0x24
 800fd36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fd38:	f1a3 0302 	sub.w	r3, r3, #2
 800fd3c:	bfcc      	ite	gt
 800fd3e:	2400      	movgt	r4, #0
 800fd40:	2401      	movle	r4, #1
 800fd42:	2b03      	cmp	r3, #3
 800fd44:	d863      	bhi.n	800fe0e <_dtoa_r+0x296>
 800fd46:	e8df f003 	tbb	[pc, r3]
 800fd4a:	372a      	.short	0x372a
 800fd4c:	5535      	.short	0x5535
 800fd4e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 800fd52:	441e      	add	r6, r3
 800fd54:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800fd58:	2b20      	cmp	r3, #32
 800fd5a:	bfc1      	itttt	gt
 800fd5c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800fd60:	409f      	lslgt	r7, r3
 800fd62:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800fd66:	fa24 f303 	lsrgt.w	r3, r4, r3
 800fd6a:	bfd6      	itet	le
 800fd6c:	f1c3 0320 	rsble	r3, r3, #32
 800fd70:	ea47 0003 	orrgt.w	r0, r7, r3
 800fd74:	fa04 f003 	lslle.w	r0, r4, r3
 800fd78:	f7f0 fbec 	bl	8000554 <__aeabi_ui2d>
 800fd7c:	2201      	movs	r2, #1
 800fd7e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800fd82:	3e01      	subs	r6, #1
 800fd84:	9214      	str	r2, [sp, #80]	@ 0x50
 800fd86:	e777      	b.n	800fc78 <_dtoa_r+0x100>
 800fd88:	2301      	movs	r3, #1
 800fd8a:	e7b8      	b.n	800fcfe <_dtoa_r+0x186>
 800fd8c:	9012      	str	r0, [sp, #72]	@ 0x48
 800fd8e:	e7b7      	b.n	800fd00 <_dtoa_r+0x188>
 800fd90:	427b      	negs	r3, r7
 800fd92:	930a      	str	r3, [sp, #40]	@ 0x28
 800fd94:	2300      	movs	r3, #0
 800fd96:	eba8 0807 	sub.w	r8, r8, r7
 800fd9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800fd9c:	e7c4      	b.n	800fd28 <_dtoa_r+0x1b0>
 800fd9e:	2300      	movs	r3, #0
 800fda0:	930b      	str	r3, [sp, #44]	@ 0x2c
 800fda2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fda4:	2b00      	cmp	r3, #0
 800fda6:	dc35      	bgt.n	800fe14 <_dtoa_r+0x29c>
 800fda8:	2301      	movs	r3, #1
 800fdaa:	9300      	str	r3, [sp, #0]
 800fdac:	9307      	str	r3, [sp, #28]
 800fdae:	461a      	mov	r2, r3
 800fdb0:	920e      	str	r2, [sp, #56]	@ 0x38
 800fdb2:	e00b      	b.n	800fdcc <_dtoa_r+0x254>
 800fdb4:	2301      	movs	r3, #1
 800fdb6:	e7f3      	b.n	800fda0 <_dtoa_r+0x228>
 800fdb8:	2300      	movs	r3, #0
 800fdba:	930b      	str	r3, [sp, #44]	@ 0x2c
 800fdbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fdbe:	18fb      	adds	r3, r7, r3
 800fdc0:	9300      	str	r3, [sp, #0]
 800fdc2:	3301      	adds	r3, #1
 800fdc4:	2b01      	cmp	r3, #1
 800fdc6:	9307      	str	r3, [sp, #28]
 800fdc8:	bfb8      	it	lt
 800fdca:	2301      	movlt	r3, #1
 800fdcc:	f8db 001c 	ldr.w	r0, [fp, #28]
 800fdd0:	2100      	movs	r1, #0
 800fdd2:	2204      	movs	r2, #4
 800fdd4:	f102 0514 	add.w	r5, r2, #20
 800fdd8:	429d      	cmp	r5, r3
 800fdda:	d91f      	bls.n	800fe1c <_dtoa_r+0x2a4>
 800fddc:	6041      	str	r1, [r0, #4]
 800fdde:	4658      	mov	r0, fp
 800fde0:	f001 f8da 	bl	8010f98 <_Balloc>
 800fde4:	4682      	mov	sl, r0
 800fde6:	2800      	cmp	r0, #0
 800fde8:	d13c      	bne.n	800fe64 <_dtoa_r+0x2ec>
 800fdea:	4b1b      	ldr	r3, [pc, #108]	@ (800fe58 <_dtoa_r+0x2e0>)
 800fdec:	4602      	mov	r2, r0
 800fdee:	f240 11af 	movw	r1, #431	@ 0x1af
 800fdf2:	e6d8      	b.n	800fba6 <_dtoa_r+0x2e>
 800fdf4:	2301      	movs	r3, #1
 800fdf6:	e7e0      	b.n	800fdba <_dtoa_r+0x242>
 800fdf8:	2401      	movs	r4, #1
 800fdfa:	2300      	movs	r3, #0
 800fdfc:	9309      	str	r3, [sp, #36]	@ 0x24
 800fdfe:	940b      	str	r4, [sp, #44]	@ 0x2c
 800fe00:	f04f 33ff 	mov.w	r3, #4294967295
 800fe04:	9300      	str	r3, [sp, #0]
 800fe06:	9307      	str	r3, [sp, #28]
 800fe08:	2200      	movs	r2, #0
 800fe0a:	2312      	movs	r3, #18
 800fe0c:	e7d0      	b.n	800fdb0 <_dtoa_r+0x238>
 800fe0e:	2301      	movs	r3, #1
 800fe10:	930b      	str	r3, [sp, #44]	@ 0x2c
 800fe12:	e7f5      	b.n	800fe00 <_dtoa_r+0x288>
 800fe14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fe16:	9300      	str	r3, [sp, #0]
 800fe18:	9307      	str	r3, [sp, #28]
 800fe1a:	e7d7      	b.n	800fdcc <_dtoa_r+0x254>
 800fe1c:	3101      	adds	r1, #1
 800fe1e:	0052      	lsls	r2, r2, #1
 800fe20:	e7d8      	b.n	800fdd4 <_dtoa_r+0x25c>
 800fe22:	bf00      	nop
 800fe24:	f3af 8000 	nop.w
 800fe28:	636f4361 	.word	0x636f4361
 800fe2c:	3fd287a7 	.word	0x3fd287a7
 800fe30:	8b60c8b3 	.word	0x8b60c8b3
 800fe34:	3fc68a28 	.word	0x3fc68a28
 800fe38:	509f79fb 	.word	0x509f79fb
 800fe3c:	3fd34413 	.word	0x3fd34413
 800fe40:	0801295e 	.word	0x0801295e
 800fe44:	08012975 	.word	0x08012975
 800fe48:	7ff00000 	.word	0x7ff00000
 800fe4c:	08012921 	.word	0x08012921
 800fe50:	3ff80000 	.word	0x3ff80000
 800fe54:	08012ad0 	.word	0x08012ad0
 800fe58:	080129cd 	.word	0x080129cd
 800fe5c:	0801295a 	.word	0x0801295a
 800fe60:	08012920 	.word	0x08012920
 800fe64:	f8db 301c 	ldr.w	r3, [fp, #28]
 800fe68:	6018      	str	r0, [r3, #0]
 800fe6a:	9b07      	ldr	r3, [sp, #28]
 800fe6c:	2b0e      	cmp	r3, #14
 800fe6e:	f200 80a4 	bhi.w	800ffba <_dtoa_r+0x442>
 800fe72:	2c00      	cmp	r4, #0
 800fe74:	f000 80a1 	beq.w	800ffba <_dtoa_r+0x442>
 800fe78:	2f00      	cmp	r7, #0
 800fe7a:	dd33      	ble.n	800fee4 <_dtoa_r+0x36c>
 800fe7c:	4bad      	ldr	r3, [pc, #692]	@ (8010134 <_dtoa_r+0x5bc>)
 800fe7e:	f007 020f 	and.w	r2, r7, #15
 800fe82:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800fe86:	ed93 7b00 	vldr	d7, [r3]
 800fe8a:	05f8      	lsls	r0, r7, #23
 800fe8c:	ed8d 7b04 	vstr	d7, [sp, #16]
 800fe90:	ea4f 1427 	mov.w	r4, r7, asr #4
 800fe94:	d516      	bpl.n	800fec4 <_dtoa_r+0x34c>
 800fe96:	4ba8      	ldr	r3, [pc, #672]	@ (8010138 <_dtoa_r+0x5c0>)
 800fe98:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800fe9c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800fea0:	f7f0 fcfc 	bl	800089c <__aeabi_ddiv>
 800fea4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fea8:	f004 040f 	and.w	r4, r4, #15
 800feac:	2603      	movs	r6, #3
 800feae:	4da2      	ldr	r5, [pc, #648]	@ (8010138 <_dtoa_r+0x5c0>)
 800feb0:	b954      	cbnz	r4, 800fec8 <_dtoa_r+0x350>
 800feb2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800feb6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800feba:	f7f0 fcef 	bl	800089c <__aeabi_ddiv>
 800febe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fec2:	e028      	b.n	800ff16 <_dtoa_r+0x39e>
 800fec4:	2602      	movs	r6, #2
 800fec6:	e7f2      	b.n	800feae <_dtoa_r+0x336>
 800fec8:	07e1      	lsls	r1, r4, #31
 800feca:	d508      	bpl.n	800fede <_dtoa_r+0x366>
 800fecc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800fed0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fed4:	f7f0 fbb8 	bl	8000648 <__aeabi_dmul>
 800fed8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800fedc:	3601      	adds	r6, #1
 800fede:	1064      	asrs	r4, r4, #1
 800fee0:	3508      	adds	r5, #8
 800fee2:	e7e5      	b.n	800feb0 <_dtoa_r+0x338>
 800fee4:	f000 80d2 	beq.w	801008c <_dtoa_r+0x514>
 800fee8:	427c      	negs	r4, r7
 800feea:	4b92      	ldr	r3, [pc, #584]	@ (8010134 <_dtoa_r+0x5bc>)
 800feec:	4d92      	ldr	r5, [pc, #584]	@ (8010138 <_dtoa_r+0x5c0>)
 800feee:	f004 020f 	and.w	r2, r4, #15
 800fef2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800fef6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fefa:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800fefe:	f7f0 fba3 	bl	8000648 <__aeabi_dmul>
 800ff02:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ff06:	1124      	asrs	r4, r4, #4
 800ff08:	2300      	movs	r3, #0
 800ff0a:	2602      	movs	r6, #2
 800ff0c:	2c00      	cmp	r4, #0
 800ff0e:	f040 80b2 	bne.w	8010076 <_dtoa_r+0x4fe>
 800ff12:	2b00      	cmp	r3, #0
 800ff14:	d1d3      	bne.n	800febe <_dtoa_r+0x346>
 800ff16:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800ff18:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800ff1c:	2b00      	cmp	r3, #0
 800ff1e:	f000 80b7 	beq.w	8010090 <_dtoa_r+0x518>
 800ff22:	4b86      	ldr	r3, [pc, #536]	@ (801013c <_dtoa_r+0x5c4>)
 800ff24:	2200      	movs	r2, #0
 800ff26:	4620      	mov	r0, r4
 800ff28:	4629      	mov	r1, r5
 800ff2a:	f7f0 fdff 	bl	8000b2c <__aeabi_dcmplt>
 800ff2e:	2800      	cmp	r0, #0
 800ff30:	f000 80ae 	beq.w	8010090 <_dtoa_r+0x518>
 800ff34:	9b07      	ldr	r3, [sp, #28]
 800ff36:	2b00      	cmp	r3, #0
 800ff38:	f000 80aa 	beq.w	8010090 <_dtoa_r+0x518>
 800ff3c:	9b00      	ldr	r3, [sp, #0]
 800ff3e:	2b00      	cmp	r3, #0
 800ff40:	dd37      	ble.n	800ffb2 <_dtoa_r+0x43a>
 800ff42:	1e7b      	subs	r3, r7, #1
 800ff44:	9304      	str	r3, [sp, #16]
 800ff46:	4620      	mov	r0, r4
 800ff48:	4b7d      	ldr	r3, [pc, #500]	@ (8010140 <_dtoa_r+0x5c8>)
 800ff4a:	2200      	movs	r2, #0
 800ff4c:	4629      	mov	r1, r5
 800ff4e:	f7f0 fb7b 	bl	8000648 <__aeabi_dmul>
 800ff52:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ff56:	9c00      	ldr	r4, [sp, #0]
 800ff58:	3601      	adds	r6, #1
 800ff5a:	4630      	mov	r0, r6
 800ff5c:	f7f0 fb0a 	bl	8000574 <__aeabi_i2d>
 800ff60:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800ff64:	f7f0 fb70 	bl	8000648 <__aeabi_dmul>
 800ff68:	4b76      	ldr	r3, [pc, #472]	@ (8010144 <_dtoa_r+0x5cc>)
 800ff6a:	2200      	movs	r2, #0
 800ff6c:	f7f0 f9b6 	bl	80002dc <__adddf3>
 800ff70:	4605      	mov	r5, r0
 800ff72:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800ff76:	2c00      	cmp	r4, #0
 800ff78:	f040 808d 	bne.w	8010096 <_dtoa_r+0x51e>
 800ff7c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ff80:	4b71      	ldr	r3, [pc, #452]	@ (8010148 <_dtoa_r+0x5d0>)
 800ff82:	2200      	movs	r2, #0
 800ff84:	f7f0 f9a8 	bl	80002d8 <__aeabi_dsub>
 800ff88:	4602      	mov	r2, r0
 800ff8a:	460b      	mov	r3, r1
 800ff8c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800ff90:	462a      	mov	r2, r5
 800ff92:	4633      	mov	r3, r6
 800ff94:	f7f0 fde8 	bl	8000b68 <__aeabi_dcmpgt>
 800ff98:	2800      	cmp	r0, #0
 800ff9a:	f040 828b 	bne.w	80104b4 <_dtoa_r+0x93c>
 800ff9e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ffa2:	462a      	mov	r2, r5
 800ffa4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800ffa8:	f7f0 fdc0 	bl	8000b2c <__aeabi_dcmplt>
 800ffac:	2800      	cmp	r0, #0
 800ffae:	f040 8128 	bne.w	8010202 <_dtoa_r+0x68a>
 800ffb2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800ffb6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800ffba:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800ffbc:	2b00      	cmp	r3, #0
 800ffbe:	f2c0 815a 	blt.w	8010276 <_dtoa_r+0x6fe>
 800ffc2:	2f0e      	cmp	r7, #14
 800ffc4:	f300 8157 	bgt.w	8010276 <_dtoa_r+0x6fe>
 800ffc8:	4b5a      	ldr	r3, [pc, #360]	@ (8010134 <_dtoa_r+0x5bc>)
 800ffca:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800ffce:	ed93 7b00 	vldr	d7, [r3]
 800ffd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ffd4:	2b00      	cmp	r3, #0
 800ffd6:	ed8d 7b00 	vstr	d7, [sp]
 800ffda:	da03      	bge.n	800ffe4 <_dtoa_r+0x46c>
 800ffdc:	9b07      	ldr	r3, [sp, #28]
 800ffde:	2b00      	cmp	r3, #0
 800ffe0:	f340 8101 	ble.w	80101e6 <_dtoa_r+0x66e>
 800ffe4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800ffe8:	4656      	mov	r6, sl
 800ffea:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ffee:	4620      	mov	r0, r4
 800fff0:	4629      	mov	r1, r5
 800fff2:	f7f0 fc53 	bl	800089c <__aeabi_ddiv>
 800fff6:	f7f0 fdd7 	bl	8000ba8 <__aeabi_d2iz>
 800fffa:	4680      	mov	r8, r0
 800fffc:	f7f0 faba 	bl	8000574 <__aeabi_i2d>
 8010000:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010004:	f7f0 fb20 	bl	8000648 <__aeabi_dmul>
 8010008:	4602      	mov	r2, r0
 801000a:	460b      	mov	r3, r1
 801000c:	4620      	mov	r0, r4
 801000e:	4629      	mov	r1, r5
 8010010:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8010014:	f7f0 f960 	bl	80002d8 <__aeabi_dsub>
 8010018:	f806 4b01 	strb.w	r4, [r6], #1
 801001c:	9d07      	ldr	r5, [sp, #28]
 801001e:	eba6 040a 	sub.w	r4, r6, sl
 8010022:	42a5      	cmp	r5, r4
 8010024:	4602      	mov	r2, r0
 8010026:	460b      	mov	r3, r1
 8010028:	f040 8117 	bne.w	801025a <_dtoa_r+0x6e2>
 801002c:	f7f0 f956 	bl	80002dc <__adddf3>
 8010030:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010034:	4604      	mov	r4, r0
 8010036:	460d      	mov	r5, r1
 8010038:	f7f0 fd96 	bl	8000b68 <__aeabi_dcmpgt>
 801003c:	2800      	cmp	r0, #0
 801003e:	f040 80f9 	bne.w	8010234 <_dtoa_r+0x6bc>
 8010042:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010046:	4620      	mov	r0, r4
 8010048:	4629      	mov	r1, r5
 801004a:	f7f0 fd65 	bl	8000b18 <__aeabi_dcmpeq>
 801004e:	b118      	cbz	r0, 8010058 <_dtoa_r+0x4e0>
 8010050:	f018 0f01 	tst.w	r8, #1
 8010054:	f040 80ee 	bne.w	8010234 <_dtoa_r+0x6bc>
 8010058:	4649      	mov	r1, r9
 801005a:	4658      	mov	r0, fp
 801005c:	f000 ffdc 	bl	8011018 <_Bfree>
 8010060:	2300      	movs	r3, #0
 8010062:	7033      	strb	r3, [r6, #0]
 8010064:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8010066:	3701      	adds	r7, #1
 8010068:	601f      	str	r7, [r3, #0]
 801006a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801006c:	2b00      	cmp	r3, #0
 801006e:	f000 831d 	beq.w	80106ac <_dtoa_r+0xb34>
 8010072:	601e      	str	r6, [r3, #0]
 8010074:	e31a      	b.n	80106ac <_dtoa_r+0xb34>
 8010076:	07e2      	lsls	r2, r4, #31
 8010078:	d505      	bpl.n	8010086 <_dtoa_r+0x50e>
 801007a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801007e:	f7f0 fae3 	bl	8000648 <__aeabi_dmul>
 8010082:	3601      	adds	r6, #1
 8010084:	2301      	movs	r3, #1
 8010086:	1064      	asrs	r4, r4, #1
 8010088:	3508      	adds	r5, #8
 801008a:	e73f      	b.n	800ff0c <_dtoa_r+0x394>
 801008c:	2602      	movs	r6, #2
 801008e:	e742      	b.n	800ff16 <_dtoa_r+0x39e>
 8010090:	9c07      	ldr	r4, [sp, #28]
 8010092:	9704      	str	r7, [sp, #16]
 8010094:	e761      	b.n	800ff5a <_dtoa_r+0x3e2>
 8010096:	4b27      	ldr	r3, [pc, #156]	@ (8010134 <_dtoa_r+0x5bc>)
 8010098:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801009a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801009e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80100a2:	4454      	add	r4, sl
 80100a4:	2900      	cmp	r1, #0
 80100a6:	d053      	beq.n	8010150 <_dtoa_r+0x5d8>
 80100a8:	4928      	ldr	r1, [pc, #160]	@ (801014c <_dtoa_r+0x5d4>)
 80100aa:	2000      	movs	r0, #0
 80100ac:	f7f0 fbf6 	bl	800089c <__aeabi_ddiv>
 80100b0:	4633      	mov	r3, r6
 80100b2:	462a      	mov	r2, r5
 80100b4:	f7f0 f910 	bl	80002d8 <__aeabi_dsub>
 80100b8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80100bc:	4656      	mov	r6, sl
 80100be:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80100c2:	f7f0 fd71 	bl	8000ba8 <__aeabi_d2iz>
 80100c6:	4605      	mov	r5, r0
 80100c8:	f7f0 fa54 	bl	8000574 <__aeabi_i2d>
 80100cc:	4602      	mov	r2, r0
 80100ce:	460b      	mov	r3, r1
 80100d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80100d4:	f7f0 f900 	bl	80002d8 <__aeabi_dsub>
 80100d8:	3530      	adds	r5, #48	@ 0x30
 80100da:	4602      	mov	r2, r0
 80100dc:	460b      	mov	r3, r1
 80100de:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80100e2:	f806 5b01 	strb.w	r5, [r6], #1
 80100e6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80100ea:	f7f0 fd1f 	bl	8000b2c <__aeabi_dcmplt>
 80100ee:	2800      	cmp	r0, #0
 80100f0:	d171      	bne.n	80101d6 <_dtoa_r+0x65e>
 80100f2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80100f6:	4911      	ldr	r1, [pc, #68]	@ (801013c <_dtoa_r+0x5c4>)
 80100f8:	2000      	movs	r0, #0
 80100fa:	f7f0 f8ed 	bl	80002d8 <__aeabi_dsub>
 80100fe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8010102:	f7f0 fd13 	bl	8000b2c <__aeabi_dcmplt>
 8010106:	2800      	cmp	r0, #0
 8010108:	f040 8095 	bne.w	8010236 <_dtoa_r+0x6be>
 801010c:	42a6      	cmp	r6, r4
 801010e:	f43f af50 	beq.w	800ffb2 <_dtoa_r+0x43a>
 8010112:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8010116:	4b0a      	ldr	r3, [pc, #40]	@ (8010140 <_dtoa_r+0x5c8>)
 8010118:	2200      	movs	r2, #0
 801011a:	f7f0 fa95 	bl	8000648 <__aeabi_dmul>
 801011e:	4b08      	ldr	r3, [pc, #32]	@ (8010140 <_dtoa_r+0x5c8>)
 8010120:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8010124:	2200      	movs	r2, #0
 8010126:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801012a:	f7f0 fa8d 	bl	8000648 <__aeabi_dmul>
 801012e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010132:	e7c4      	b.n	80100be <_dtoa_r+0x546>
 8010134:	08012ad0 	.word	0x08012ad0
 8010138:	08012aa8 	.word	0x08012aa8
 801013c:	3ff00000 	.word	0x3ff00000
 8010140:	40240000 	.word	0x40240000
 8010144:	401c0000 	.word	0x401c0000
 8010148:	40140000 	.word	0x40140000
 801014c:	3fe00000 	.word	0x3fe00000
 8010150:	4631      	mov	r1, r6
 8010152:	4628      	mov	r0, r5
 8010154:	f7f0 fa78 	bl	8000648 <__aeabi_dmul>
 8010158:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801015c:	9415      	str	r4, [sp, #84]	@ 0x54
 801015e:	4656      	mov	r6, sl
 8010160:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010164:	f7f0 fd20 	bl	8000ba8 <__aeabi_d2iz>
 8010168:	4605      	mov	r5, r0
 801016a:	f7f0 fa03 	bl	8000574 <__aeabi_i2d>
 801016e:	4602      	mov	r2, r0
 8010170:	460b      	mov	r3, r1
 8010172:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010176:	f7f0 f8af 	bl	80002d8 <__aeabi_dsub>
 801017a:	3530      	adds	r5, #48	@ 0x30
 801017c:	f806 5b01 	strb.w	r5, [r6], #1
 8010180:	4602      	mov	r2, r0
 8010182:	460b      	mov	r3, r1
 8010184:	42a6      	cmp	r6, r4
 8010186:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801018a:	f04f 0200 	mov.w	r2, #0
 801018e:	d124      	bne.n	80101da <_dtoa_r+0x662>
 8010190:	4bac      	ldr	r3, [pc, #688]	@ (8010444 <_dtoa_r+0x8cc>)
 8010192:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8010196:	f7f0 f8a1 	bl	80002dc <__adddf3>
 801019a:	4602      	mov	r2, r0
 801019c:	460b      	mov	r3, r1
 801019e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80101a2:	f7f0 fce1 	bl	8000b68 <__aeabi_dcmpgt>
 80101a6:	2800      	cmp	r0, #0
 80101a8:	d145      	bne.n	8010236 <_dtoa_r+0x6be>
 80101aa:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80101ae:	49a5      	ldr	r1, [pc, #660]	@ (8010444 <_dtoa_r+0x8cc>)
 80101b0:	2000      	movs	r0, #0
 80101b2:	f7f0 f891 	bl	80002d8 <__aeabi_dsub>
 80101b6:	4602      	mov	r2, r0
 80101b8:	460b      	mov	r3, r1
 80101ba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80101be:	f7f0 fcb5 	bl	8000b2c <__aeabi_dcmplt>
 80101c2:	2800      	cmp	r0, #0
 80101c4:	f43f aef5 	beq.w	800ffb2 <_dtoa_r+0x43a>
 80101c8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80101ca:	1e73      	subs	r3, r6, #1
 80101cc:	9315      	str	r3, [sp, #84]	@ 0x54
 80101ce:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80101d2:	2b30      	cmp	r3, #48	@ 0x30
 80101d4:	d0f8      	beq.n	80101c8 <_dtoa_r+0x650>
 80101d6:	9f04      	ldr	r7, [sp, #16]
 80101d8:	e73e      	b.n	8010058 <_dtoa_r+0x4e0>
 80101da:	4b9b      	ldr	r3, [pc, #620]	@ (8010448 <_dtoa_r+0x8d0>)
 80101dc:	f7f0 fa34 	bl	8000648 <__aeabi_dmul>
 80101e0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80101e4:	e7bc      	b.n	8010160 <_dtoa_r+0x5e8>
 80101e6:	d10c      	bne.n	8010202 <_dtoa_r+0x68a>
 80101e8:	4b98      	ldr	r3, [pc, #608]	@ (801044c <_dtoa_r+0x8d4>)
 80101ea:	2200      	movs	r2, #0
 80101ec:	e9dd 0100 	ldrd	r0, r1, [sp]
 80101f0:	f7f0 fa2a 	bl	8000648 <__aeabi_dmul>
 80101f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80101f8:	f7f0 fcac 	bl	8000b54 <__aeabi_dcmpge>
 80101fc:	2800      	cmp	r0, #0
 80101fe:	f000 8157 	beq.w	80104b0 <_dtoa_r+0x938>
 8010202:	2400      	movs	r4, #0
 8010204:	4625      	mov	r5, r4
 8010206:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010208:	43db      	mvns	r3, r3
 801020a:	9304      	str	r3, [sp, #16]
 801020c:	4656      	mov	r6, sl
 801020e:	2700      	movs	r7, #0
 8010210:	4621      	mov	r1, r4
 8010212:	4658      	mov	r0, fp
 8010214:	f000 ff00 	bl	8011018 <_Bfree>
 8010218:	2d00      	cmp	r5, #0
 801021a:	d0dc      	beq.n	80101d6 <_dtoa_r+0x65e>
 801021c:	b12f      	cbz	r7, 801022a <_dtoa_r+0x6b2>
 801021e:	42af      	cmp	r7, r5
 8010220:	d003      	beq.n	801022a <_dtoa_r+0x6b2>
 8010222:	4639      	mov	r1, r7
 8010224:	4658      	mov	r0, fp
 8010226:	f000 fef7 	bl	8011018 <_Bfree>
 801022a:	4629      	mov	r1, r5
 801022c:	4658      	mov	r0, fp
 801022e:	f000 fef3 	bl	8011018 <_Bfree>
 8010232:	e7d0      	b.n	80101d6 <_dtoa_r+0x65e>
 8010234:	9704      	str	r7, [sp, #16]
 8010236:	4633      	mov	r3, r6
 8010238:	461e      	mov	r6, r3
 801023a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801023e:	2a39      	cmp	r2, #57	@ 0x39
 8010240:	d107      	bne.n	8010252 <_dtoa_r+0x6da>
 8010242:	459a      	cmp	sl, r3
 8010244:	d1f8      	bne.n	8010238 <_dtoa_r+0x6c0>
 8010246:	9a04      	ldr	r2, [sp, #16]
 8010248:	3201      	adds	r2, #1
 801024a:	9204      	str	r2, [sp, #16]
 801024c:	2230      	movs	r2, #48	@ 0x30
 801024e:	f88a 2000 	strb.w	r2, [sl]
 8010252:	781a      	ldrb	r2, [r3, #0]
 8010254:	3201      	adds	r2, #1
 8010256:	701a      	strb	r2, [r3, #0]
 8010258:	e7bd      	b.n	80101d6 <_dtoa_r+0x65e>
 801025a:	4b7b      	ldr	r3, [pc, #492]	@ (8010448 <_dtoa_r+0x8d0>)
 801025c:	2200      	movs	r2, #0
 801025e:	f7f0 f9f3 	bl	8000648 <__aeabi_dmul>
 8010262:	2200      	movs	r2, #0
 8010264:	2300      	movs	r3, #0
 8010266:	4604      	mov	r4, r0
 8010268:	460d      	mov	r5, r1
 801026a:	f7f0 fc55 	bl	8000b18 <__aeabi_dcmpeq>
 801026e:	2800      	cmp	r0, #0
 8010270:	f43f aebb 	beq.w	800ffea <_dtoa_r+0x472>
 8010274:	e6f0      	b.n	8010058 <_dtoa_r+0x4e0>
 8010276:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010278:	2a00      	cmp	r2, #0
 801027a:	f000 80db 	beq.w	8010434 <_dtoa_r+0x8bc>
 801027e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010280:	2a01      	cmp	r2, #1
 8010282:	f300 80bf 	bgt.w	8010404 <_dtoa_r+0x88c>
 8010286:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8010288:	2a00      	cmp	r2, #0
 801028a:	f000 80b7 	beq.w	80103fc <_dtoa_r+0x884>
 801028e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8010292:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8010294:	4646      	mov	r6, r8
 8010296:	9a08      	ldr	r2, [sp, #32]
 8010298:	2101      	movs	r1, #1
 801029a:	441a      	add	r2, r3
 801029c:	4658      	mov	r0, fp
 801029e:	4498      	add	r8, r3
 80102a0:	9208      	str	r2, [sp, #32]
 80102a2:	f000 ffb7 	bl	8011214 <__i2b>
 80102a6:	4605      	mov	r5, r0
 80102a8:	b15e      	cbz	r6, 80102c2 <_dtoa_r+0x74a>
 80102aa:	9b08      	ldr	r3, [sp, #32]
 80102ac:	2b00      	cmp	r3, #0
 80102ae:	dd08      	ble.n	80102c2 <_dtoa_r+0x74a>
 80102b0:	42b3      	cmp	r3, r6
 80102b2:	9a08      	ldr	r2, [sp, #32]
 80102b4:	bfa8      	it	ge
 80102b6:	4633      	movge	r3, r6
 80102b8:	eba8 0803 	sub.w	r8, r8, r3
 80102bc:	1af6      	subs	r6, r6, r3
 80102be:	1ad3      	subs	r3, r2, r3
 80102c0:	9308      	str	r3, [sp, #32]
 80102c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80102c4:	b1f3      	cbz	r3, 8010304 <_dtoa_r+0x78c>
 80102c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80102c8:	2b00      	cmp	r3, #0
 80102ca:	f000 80b7 	beq.w	801043c <_dtoa_r+0x8c4>
 80102ce:	b18c      	cbz	r4, 80102f4 <_dtoa_r+0x77c>
 80102d0:	4629      	mov	r1, r5
 80102d2:	4622      	mov	r2, r4
 80102d4:	4658      	mov	r0, fp
 80102d6:	f001 f85d 	bl	8011394 <__pow5mult>
 80102da:	464a      	mov	r2, r9
 80102dc:	4601      	mov	r1, r0
 80102de:	4605      	mov	r5, r0
 80102e0:	4658      	mov	r0, fp
 80102e2:	f000 ffad 	bl	8011240 <__multiply>
 80102e6:	4649      	mov	r1, r9
 80102e8:	9004      	str	r0, [sp, #16]
 80102ea:	4658      	mov	r0, fp
 80102ec:	f000 fe94 	bl	8011018 <_Bfree>
 80102f0:	9b04      	ldr	r3, [sp, #16]
 80102f2:	4699      	mov	r9, r3
 80102f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80102f6:	1b1a      	subs	r2, r3, r4
 80102f8:	d004      	beq.n	8010304 <_dtoa_r+0x78c>
 80102fa:	4649      	mov	r1, r9
 80102fc:	4658      	mov	r0, fp
 80102fe:	f001 f849 	bl	8011394 <__pow5mult>
 8010302:	4681      	mov	r9, r0
 8010304:	2101      	movs	r1, #1
 8010306:	4658      	mov	r0, fp
 8010308:	f000 ff84 	bl	8011214 <__i2b>
 801030c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801030e:	4604      	mov	r4, r0
 8010310:	2b00      	cmp	r3, #0
 8010312:	f000 81cf 	beq.w	80106b4 <_dtoa_r+0xb3c>
 8010316:	461a      	mov	r2, r3
 8010318:	4601      	mov	r1, r0
 801031a:	4658      	mov	r0, fp
 801031c:	f001 f83a 	bl	8011394 <__pow5mult>
 8010320:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010322:	2b01      	cmp	r3, #1
 8010324:	4604      	mov	r4, r0
 8010326:	f300 8095 	bgt.w	8010454 <_dtoa_r+0x8dc>
 801032a:	9b02      	ldr	r3, [sp, #8]
 801032c:	2b00      	cmp	r3, #0
 801032e:	f040 8087 	bne.w	8010440 <_dtoa_r+0x8c8>
 8010332:	9b03      	ldr	r3, [sp, #12]
 8010334:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8010338:	2b00      	cmp	r3, #0
 801033a:	f040 8089 	bne.w	8010450 <_dtoa_r+0x8d8>
 801033e:	9b03      	ldr	r3, [sp, #12]
 8010340:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8010344:	0d1b      	lsrs	r3, r3, #20
 8010346:	051b      	lsls	r3, r3, #20
 8010348:	b12b      	cbz	r3, 8010356 <_dtoa_r+0x7de>
 801034a:	9b08      	ldr	r3, [sp, #32]
 801034c:	3301      	adds	r3, #1
 801034e:	9308      	str	r3, [sp, #32]
 8010350:	f108 0801 	add.w	r8, r8, #1
 8010354:	2301      	movs	r3, #1
 8010356:	930a      	str	r3, [sp, #40]	@ 0x28
 8010358:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801035a:	2b00      	cmp	r3, #0
 801035c:	f000 81b0 	beq.w	80106c0 <_dtoa_r+0xb48>
 8010360:	6923      	ldr	r3, [r4, #16]
 8010362:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010366:	6918      	ldr	r0, [r3, #16]
 8010368:	f000 ff08 	bl	801117c <__hi0bits>
 801036c:	f1c0 0020 	rsb	r0, r0, #32
 8010370:	9b08      	ldr	r3, [sp, #32]
 8010372:	4418      	add	r0, r3
 8010374:	f010 001f 	ands.w	r0, r0, #31
 8010378:	d077      	beq.n	801046a <_dtoa_r+0x8f2>
 801037a:	f1c0 0320 	rsb	r3, r0, #32
 801037e:	2b04      	cmp	r3, #4
 8010380:	dd6b      	ble.n	801045a <_dtoa_r+0x8e2>
 8010382:	9b08      	ldr	r3, [sp, #32]
 8010384:	f1c0 001c 	rsb	r0, r0, #28
 8010388:	4403      	add	r3, r0
 801038a:	4480      	add	r8, r0
 801038c:	4406      	add	r6, r0
 801038e:	9308      	str	r3, [sp, #32]
 8010390:	f1b8 0f00 	cmp.w	r8, #0
 8010394:	dd05      	ble.n	80103a2 <_dtoa_r+0x82a>
 8010396:	4649      	mov	r1, r9
 8010398:	4642      	mov	r2, r8
 801039a:	4658      	mov	r0, fp
 801039c:	f001 f854 	bl	8011448 <__lshift>
 80103a0:	4681      	mov	r9, r0
 80103a2:	9b08      	ldr	r3, [sp, #32]
 80103a4:	2b00      	cmp	r3, #0
 80103a6:	dd05      	ble.n	80103b4 <_dtoa_r+0x83c>
 80103a8:	4621      	mov	r1, r4
 80103aa:	461a      	mov	r2, r3
 80103ac:	4658      	mov	r0, fp
 80103ae:	f001 f84b 	bl	8011448 <__lshift>
 80103b2:	4604      	mov	r4, r0
 80103b4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80103b6:	2b00      	cmp	r3, #0
 80103b8:	d059      	beq.n	801046e <_dtoa_r+0x8f6>
 80103ba:	4621      	mov	r1, r4
 80103bc:	4648      	mov	r0, r9
 80103be:	f001 f8af 	bl	8011520 <__mcmp>
 80103c2:	2800      	cmp	r0, #0
 80103c4:	da53      	bge.n	801046e <_dtoa_r+0x8f6>
 80103c6:	1e7b      	subs	r3, r7, #1
 80103c8:	9304      	str	r3, [sp, #16]
 80103ca:	4649      	mov	r1, r9
 80103cc:	2300      	movs	r3, #0
 80103ce:	220a      	movs	r2, #10
 80103d0:	4658      	mov	r0, fp
 80103d2:	f000 fe43 	bl	801105c <__multadd>
 80103d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80103d8:	4681      	mov	r9, r0
 80103da:	2b00      	cmp	r3, #0
 80103dc:	f000 8172 	beq.w	80106c4 <_dtoa_r+0xb4c>
 80103e0:	2300      	movs	r3, #0
 80103e2:	4629      	mov	r1, r5
 80103e4:	220a      	movs	r2, #10
 80103e6:	4658      	mov	r0, fp
 80103e8:	f000 fe38 	bl	801105c <__multadd>
 80103ec:	9b00      	ldr	r3, [sp, #0]
 80103ee:	2b00      	cmp	r3, #0
 80103f0:	4605      	mov	r5, r0
 80103f2:	dc67      	bgt.n	80104c4 <_dtoa_r+0x94c>
 80103f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80103f6:	2b02      	cmp	r3, #2
 80103f8:	dc41      	bgt.n	801047e <_dtoa_r+0x906>
 80103fa:	e063      	b.n	80104c4 <_dtoa_r+0x94c>
 80103fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80103fe:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8010402:	e746      	b.n	8010292 <_dtoa_r+0x71a>
 8010404:	9b07      	ldr	r3, [sp, #28]
 8010406:	1e5c      	subs	r4, r3, #1
 8010408:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801040a:	42a3      	cmp	r3, r4
 801040c:	bfbf      	itttt	lt
 801040e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8010410:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8010412:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8010414:	1ae3      	sublt	r3, r4, r3
 8010416:	bfb4      	ite	lt
 8010418:	18d2      	addlt	r2, r2, r3
 801041a:	1b1c      	subge	r4, r3, r4
 801041c:	9b07      	ldr	r3, [sp, #28]
 801041e:	bfbc      	itt	lt
 8010420:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8010422:	2400      	movlt	r4, #0
 8010424:	2b00      	cmp	r3, #0
 8010426:	bfb5      	itete	lt
 8010428:	eba8 0603 	sublt.w	r6, r8, r3
 801042c:	9b07      	ldrge	r3, [sp, #28]
 801042e:	2300      	movlt	r3, #0
 8010430:	4646      	movge	r6, r8
 8010432:	e730      	b.n	8010296 <_dtoa_r+0x71e>
 8010434:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8010436:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8010438:	4646      	mov	r6, r8
 801043a:	e735      	b.n	80102a8 <_dtoa_r+0x730>
 801043c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801043e:	e75c      	b.n	80102fa <_dtoa_r+0x782>
 8010440:	2300      	movs	r3, #0
 8010442:	e788      	b.n	8010356 <_dtoa_r+0x7de>
 8010444:	3fe00000 	.word	0x3fe00000
 8010448:	40240000 	.word	0x40240000
 801044c:	40140000 	.word	0x40140000
 8010450:	9b02      	ldr	r3, [sp, #8]
 8010452:	e780      	b.n	8010356 <_dtoa_r+0x7de>
 8010454:	2300      	movs	r3, #0
 8010456:	930a      	str	r3, [sp, #40]	@ 0x28
 8010458:	e782      	b.n	8010360 <_dtoa_r+0x7e8>
 801045a:	d099      	beq.n	8010390 <_dtoa_r+0x818>
 801045c:	9a08      	ldr	r2, [sp, #32]
 801045e:	331c      	adds	r3, #28
 8010460:	441a      	add	r2, r3
 8010462:	4498      	add	r8, r3
 8010464:	441e      	add	r6, r3
 8010466:	9208      	str	r2, [sp, #32]
 8010468:	e792      	b.n	8010390 <_dtoa_r+0x818>
 801046a:	4603      	mov	r3, r0
 801046c:	e7f6      	b.n	801045c <_dtoa_r+0x8e4>
 801046e:	9b07      	ldr	r3, [sp, #28]
 8010470:	9704      	str	r7, [sp, #16]
 8010472:	2b00      	cmp	r3, #0
 8010474:	dc20      	bgt.n	80104b8 <_dtoa_r+0x940>
 8010476:	9300      	str	r3, [sp, #0]
 8010478:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801047a:	2b02      	cmp	r3, #2
 801047c:	dd1e      	ble.n	80104bc <_dtoa_r+0x944>
 801047e:	9b00      	ldr	r3, [sp, #0]
 8010480:	2b00      	cmp	r3, #0
 8010482:	f47f aec0 	bne.w	8010206 <_dtoa_r+0x68e>
 8010486:	4621      	mov	r1, r4
 8010488:	2205      	movs	r2, #5
 801048a:	4658      	mov	r0, fp
 801048c:	f000 fde6 	bl	801105c <__multadd>
 8010490:	4601      	mov	r1, r0
 8010492:	4604      	mov	r4, r0
 8010494:	4648      	mov	r0, r9
 8010496:	f001 f843 	bl	8011520 <__mcmp>
 801049a:	2800      	cmp	r0, #0
 801049c:	f77f aeb3 	ble.w	8010206 <_dtoa_r+0x68e>
 80104a0:	4656      	mov	r6, sl
 80104a2:	2331      	movs	r3, #49	@ 0x31
 80104a4:	f806 3b01 	strb.w	r3, [r6], #1
 80104a8:	9b04      	ldr	r3, [sp, #16]
 80104aa:	3301      	adds	r3, #1
 80104ac:	9304      	str	r3, [sp, #16]
 80104ae:	e6ae      	b.n	801020e <_dtoa_r+0x696>
 80104b0:	9c07      	ldr	r4, [sp, #28]
 80104b2:	9704      	str	r7, [sp, #16]
 80104b4:	4625      	mov	r5, r4
 80104b6:	e7f3      	b.n	80104a0 <_dtoa_r+0x928>
 80104b8:	9b07      	ldr	r3, [sp, #28]
 80104ba:	9300      	str	r3, [sp, #0]
 80104bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80104be:	2b00      	cmp	r3, #0
 80104c0:	f000 8104 	beq.w	80106cc <_dtoa_r+0xb54>
 80104c4:	2e00      	cmp	r6, #0
 80104c6:	dd05      	ble.n	80104d4 <_dtoa_r+0x95c>
 80104c8:	4629      	mov	r1, r5
 80104ca:	4632      	mov	r2, r6
 80104cc:	4658      	mov	r0, fp
 80104ce:	f000 ffbb 	bl	8011448 <__lshift>
 80104d2:	4605      	mov	r5, r0
 80104d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80104d6:	2b00      	cmp	r3, #0
 80104d8:	d05a      	beq.n	8010590 <_dtoa_r+0xa18>
 80104da:	6869      	ldr	r1, [r5, #4]
 80104dc:	4658      	mov	r0, fp
 80104de:	f000 fd5b 	bl	8010f98 <_Balloc>
 80104e2:	4606      	mov	r6, r0
 80104e4:	b928      	cbnz	r0, 80104f2 <_dtoa_r+0x97a>
 80104e6:	4b84      	ldr	r3, [pc, #528]	@ (80106f8 <_dtoa_r+0xb80>)
 80104e8:	4602      	mov	r2, r0
 80104ea:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80104ee:	f7ff bb5a 	b.w	800fba6 <_dtoa_r+0x2e>
 80104f2:	692a      	ldr	r2, [r5, #16]
 80104f4:	3202      	adds	r2, #2
 80104f6:	0092      	lsls	r2, r2, #2
 80104f8:	f105 010c 	add.w	r1, r5, #12
 80104fc:	300c      	adds	r0, #12
 80104fe:	f7ff fa94 	bl	800fa2a <memcpy>
 8010502:	2201      	movs	r2, #1
 8010504:	4631      	mov	r1, r6
 8010506:	4658      	mov	r0, fp
 8010508:	f000 ff9e 	bl	8011448 <__lshift>
 801050c:	f10a 0301 	add.w	r3, sl, #1
 8010510:	9307      	str	r3, [sp, #28]
 8010512:	9b00      	ldr	r3, [sp, #0]
 8010514:	4453      	add	r3, sl
 8010516:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010518:	9b02      	ldr	r3, [sp, #8]
 801051a:	f003 0301 	and.w	r3, r3, #1
 801051e:	462f      	mov	r7, r5
 8010520:	930a      	str	r3, [sp, #40]	@ 0x28
 8010522:	4605      	mov	r5, r0
 8010524:	9b07      	ldr	r3, [sp, #28]
 8010526:	4621      	mov	r1, r4
 8010528:	3b01      	subs	r3, #1
 801052a:	4648      	mov	r0, r9
 801052c:	9300      	str	r3, [sp, #0]
 801052e:	f7ff fa99 	bl	800fa64 <quorem>
 8010532:	4639      	mov	r1, r7
 8010534:	9002      	str	r0, [sp, #8]
 8010536:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 801053a:	4648      	mov	r0, r9
 801053c:	f000 fff0 	bl	8011520 <__mcmp>
 8010540:	462a      	mov	r2, r5
 8010542:	9008      	str	r0, [sp, #32]
 8010544:	4621      	mov	r1, r4
 8010546:	4658      	mov	r0, fp
 8010548:	f001 f806 	bl	8011558 <__mdiff>
 801054c:	68c2      	ldr	r2, [r0, #12]
 801054e:	4606      	mov	r6, r0
 8010550:	bb02      	cbnz	r2, 8010594 <_dtoa_r+0xa1c>
 8010552:	4601      	mov	r1, r0
 8010554:	4648      	mov	r0, r9
 8010556:	f000 ffe3 	bl	8011520 <__mcmp>
 801055a:	4602      	mov	r2, r0
 801055c:	4631      	mov	r1, r6
 801055e:	4658      	mov	r0, fp
 8010560:	920e      	str	r2, [sp, #56]	@ 0x38
 8010562:	f000 fd59 	bl	8011018 <_Bfree>
 8010566:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010568:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801056a:	9e07      	ldr	r6, [sp, #28]
 801056c:	ea43 0102 	orr.w	r1, r3, r2
 8010570:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8010572:	4319      	orrs	r1, r3
 8010574:	d110      	bne.n	8010598 <_dtoa_r+0xa20>
 8010576:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801057a:	d029      	beq.n	80105d0 <_dtoa_r+0xa58>
 801057c:	9b08      	ldr	r3, [sp, #32]
 801057e:	2b00      	cmp	r3, #0
 8010580:	dd02      	ble.n	8010588 <_dtoa_r+0xa10>
 8010582:	9b02      	ldr	r3, [sp, #8]
 8010584:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8010588:	9b00      	ldr	r3, [sp, #0]
 801058a:	f883 8000 	strb.w	r8, [r3]
 801058e:	e63f      	b.n	8010210 <_dtoa_r+0x698>
 8010590:	4628      	mov	r0, r5
 8010592:	e7bb      	b.n	801050c <_dtoa_r+0x994>
 8010594:	2201      	movs	r2, #1
 8010596:	e7e1      	b.n	801055c <_dtoa_r+0x9e4>
 8010598:	9b08      	ldr	r3, [sp, #32]
 801059a:	2b00      	cmp	r3, #0
 801059c:	db04      	blt.n	80105a8 <_dtoa_r+0xa30>
 801059e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80105a0:	430b      	orrs	r3, r1
 80105a2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80105a4:	430b      	orrs	r3, r1
 80105a6:	d120      	bne.n	80105ea <_dtoa_r+0xa72>
 80105a8:	2a00      	cmp	r2, #0
 80105aa:	dded      	ble.n	8010588 <_dtoa_r+0xa10>
 80105ac:	4649      	mov	r1, r9
 80105ae:	2201      	movs	r2, #1
 80105b0:	4658      	mov	r0, fp
 80105b2:	f000 ff49 	bl	8011448 <__lshift>
 80105b6:	4621      	mov	r1, r4
 80105b8:	4681      	mov	r9, r0
 80105ba:	f000 ffb1 	bl	8011520 <__mcmp>
 80105be:	2800      	cmp	r0, #0
 80105c0:	dc03      	bgt.n	80105ca <_dtoa_r+0xa52>
 80105c2:	d1e1      	bne.n	8010588 <_dtoa_r+0xa10>
 80105c4:	f018 0f01 	tst.w	r8, #1
 80105c8:	d0de      	beq.n	8010588 <_dtoa_r+0xa10>
 80105ca:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80105ce:	d1d8      	bne.n	8010582 <_dtoa_r+0xa0a>
 80105d0:	9a00      	ldr	r2, [sp, #0]
 80105d2:	2339      	movs	r3, #57	@ 0x39
 80105d4:	7013      	strb	r3, [r2, #0]
 80105d6:	4633      	mov	r3, r6
 80105d8:	461e      	mov	r6, r3
 80105da:	3b01      	subs	r3, #1
 80105dc:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80105e0:	2a39      	cmp	r2, #57	@ 0x39
 80105e2:	d052      	beq.n	801068a <_dtoa_r+0xb12>
 80105e4:	3201      	adds	r2, #1
 80105e6:	701a      	strb	r2, [r3, #0]
 80105e8:	e612      	b.n	8010210 <_dtoa_r+0x698>
 80105ea:	2a00      	cmp	r2, #0
 80105ec:	dd07      	ble.n	80105fe <_dtoa_r+0xa86>
 80105ee:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80105f2:	d0ed      	beq.n	80105d0 <_dtoa_r+0xa58>
 80105f4:	9a00      	ldr	r2, [sp, #0]
 80105f6:	f108 0301 	add.w	r3, r8, #1
 80105fa:	7013      	strb	r3, [r2, #0]
 80105fc:	e608      	b.n	8010210 <_dtoa_r+0x698>
 80105fe:	9b07      	ldr	r3, [sp, #28]
 8010600:	9a07      	ldr	r2, [sp, #28]
 8010602:	f803 8c01 	strb.w	r8, [r3, #-1]
 8010606:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8010608:	4293      	cmp	r3, r2
 801060a:	d028      	beq.n	801065e <_dtoa_r+0xae6>
 801060c:	4649      	mov	r1, r9
 801060e:	2300      	movs	r3, #0
 8010610:	220a      	movs	r2, #10
 8010612:	4658      	mov	r0, fp
 8010614:	f000 fd22 	bl	801105c <__multadd>
 8010618:	42af      	cmp	r7, r5
 801061a:	4681      	mov	r9, r0
 801061c:	f04f 0300 	mov.w	r3, #0
 8010620:	f04f 020a 	mov.w	r2, #10
 8010624:	4639      	mov	r1, r7
 8010626:	4658      	mov	r0, fp
 8010628:	d107      	bne.n	801063a <_dtoa_r+0xac2>
 801062a:	f000 fd17 	bl	801105c <__multadd>
 801062e:	4607      	mov	r7, r0
 8010630:	4605      	mov	r5, r0
 8010632:	9b07      	ldr	r3, [sp, #28]
 8010634:	3301      	adds	r3, #1
 8010636:	9307      	str	r3, [sp, #28]
 8010638:	e774      	b.n	8010524 <_dtoa_r+0x9ac>
 801063a:	f000 fd0f 	bl	801105c <__multadd>
 801063e:	4629      	mov	r1, r5
 8010640:	4607      	mov	r7, r0
 8010642:	2300      	movs	r3, #0
 8010644:	220a      	movs	r2, #10
 8010646:	4658      	mov	r0, fp
 8010648:	f000 fd08 	bl	801105c <__multadd>
 801064c:	4605      	mov	r5, r0
 801064e:	e7f0      	b.n	8010632 <_dtoa_r+0xaba>
 8010650:	9b00      	ldr	r3, [sp, #0]
 8010652:	2b00      	cmp	r3, #0
 8010654:	bfcc      	ite	gt
 8010656:	461e      	movgt	r6, r3
 8010658:	2601      	movle	r6, #1
 801065a:	4456      	add	r6, sl
 801065c:	2700      	movs	r7, #0
 801065e:	4649      	mov	r1, r9
 8010660:	2201      	movs	r2, #1
 8010662:	4658      	mov	r0, fp
 8010664:	f000 fef0 	bl	8011448 <__lshift>
 8010668:	4621      	mov	r1, r4
 801066a:	4681      	mov	r9, r0
 801066c:	f000 ff58 	bl	8011520 <__mcmp>
 8010670:	2800      	cmp	r0, #0
 8010672:	dcb0      	bgt.n	80105d6 <_dtoa_r+0xa5e>
 8010674:	d102      	bne.n	801067c <_dtoa_r+0xb04>
 8010676:	f018 0f01 	tst.w	r8, #1
 801067a:	d1ac      	bne.n	80105d6 <_dtoa_r+0xa5e>
 801067c:	4633      	mov	r3, r6
 801067e:	461e      	mov	r6, r3
 8010680:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8010684:	2a30      	cmp	r2, #48	@ 0x30
 8010686:	d0fa      	beq.n	801067e <_dtoa_r+0xb06>
 8010688:	e5c2      	b.n	8010210 <_dtoa_r+0x698>
 801068a:	459a      	cmp	sl, r3
 801068c:	d1a4      	bne.n	80105d8 <_dtoa_r+0xa60>
 801068e:	9b04      	ldr	r3, [sp, #16]
 8010690:	3301      	adds	r3, #1
 8010692:	9304      	str	r3, [sp, #16]
 8010694:	2331      	movs	r3, #49	@ 0x31
 8010696:	f88a 3000 	strb.w	r3, [sl]
 801069a:	e5b9      	b.n	8010210 <_dtoa_r+0x698>
 801069c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801069e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80106fc <_dtoa_r+0xb84>
 80106a2:	b11b      	cbz	r3, 80106ac <_dtoa_r+0xb34>
 80106a4:	f10a 0308 	add.w	r3, sl, #8
 80106a8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80106aa:	6013      	str	r3, [r2, #0]
 80106ac:	4650      	mov	r0, sl
 80106ae:	b019      	add	sp, #100	@ 0x64
 80106b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80106b6:	2b01      	cmp	r3, #1
 80106b8:	f77f ae37 	ble.w	801032a <_dtoa_r+0x7b2>
 80106bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80106be:	930a      	str	r3, [sp, #40]	@ 0x28
 80106c0:	2001      	movs	r0, #1
 80106c2:	e655      	b.n	8010370 <_dtoa_r+0x7f8>
 80106c4:	9b00      	ldr	r3, [sp, #0]
 80106c6:	2b00      	cmp	r3, #0
 80106c8:	f77f aed6 	ble.w	8010478 <_dtoa_r+0x900>
 80106cc:	4656      	mov	r6, sl
 80106ce:	4621      	mov	r1, r4
 80106d0:	4648      	mov	r0, r9
 80106d2:	f7ff f9c7 	bl	800fa64 <quorem>
 80106d6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80106da:	f806 8b01 	strb.w	r8, [r6], #1
 80106de:	9b00      	ldr	r3, [sp, #0]
 80106e0:	eba6 020a 	sub.w	r2, r6, sl
 80106e4:	4293      	cmp	r3, r2
 80106e6:	ddb3      	ble.n	8010650 <_dtoa_r+0xad8>
 80106e8:	4649      	mov	r1, r9
 80106ea:	2300      	movs	r3, #0
 80106ec:	220a      	movs	r2, #10
 80106ee:	4658      	mov	r0, fp
 80106f0:	f000 fcb4 	bl	801105c <__multadd>
 80106f4:	4681      	mov	r9, r0
 80106f6:	e7ea      	b.n	80106ce <_dtoa_r+0xb56>
 80106f8:	080129cd 	.word	0x080129cd
 80106fc:	08012951 	.word	0x08012951

08010700 <_free_r>:
 8010700:	b538      	push	{r3, r4, r5, lr}
 8010702:	4605      	mov	r5, r0
 8010704:	2900      	cmp	r1, #0
 8010706:	d041      	beq.n	801078c <_free_r+0x8c>
 8010708:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801070c:	1f0c      	subs	r4, r1, #4
 801070e:	2b00      	cmp	r3, #0
 8010710:	bfb8      	it	lt
 8010712:	18e4      	addlt	r4, r4, r3
 8010714:	f000 fc34 	bl	8010f80 <__malloc_lock>
 8010718:	4a1d      	ldr	r2, [pc, #116]	@ (8010790 <_free_r+0x90>)
 801071a:	6813      	ldr	r3, [r2, #0]
 801071c:	b933      	cbnz	r3, 801072c <_free_r+0x2c>
 801071e:	6063      	str	r3, [r4, #4]
 8010720:	6014      	str	r4, [r2, #0]
 8010722:	4628      	mov	r0, r5
 8010724:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010728:	f000 bc30 	b.w	8010f8c <__malloc_unlock>
 801072c:	42a3      	cmp	r3, r4
 801072e:	d908      	bls.n	8010742 <_free_r+0x42>
 8010730:	6820      	ldr	r0, [r4, #0]
 8010732:	1821      	adds	r1, r4, r0
 8010734:	428b      	cmp	r3, r1
 8010736:	bf01      	itttt	eq
 8010738:	6819      	ldreq	r1, [r3, #0]
 801073a:	685b      	ldreq	r3, [r3, #4]
 801073c:	1809      	addeq	r1, r1, r0
 801073e:	6021      	streq	r1, [r4, #0]
 8010740:	e7ed      	b.n	801071e <_free_r+0x1e>
 8010742:	461a      	mov	r2, r3
 8010744:	685b      	ldr	r3, [r3, #4]
 8010746:	b10b      	cbz	r3, 801074c <_free_r+0x4c>
 8010748:	42a3      	cmp	r3, r4
 801074a:	d9fa      	bls.n	8010742 <_free_r+0x42>
 801074c:	6811      	ldr	r1, [r2, #0]
 801074e:	1850      	adds	r0, r2, r1
 8010750:	42a0      	cmp	r0, r4
 8010752:	d10b      	bne.n	801076c <_free_r+0x6c>
 8010754:	6820      	ldr	r0, [r4, #0]
 8010756:	4401      	add	r1, r0
 8010758:	1850      	adds	r0, r2, r1
 801075a:	4283      	cmp	r3, r0
 801075c:	6011      	str	r1, [r2, #0]
 801075e:	d1e0      	bne.n	8010722 <_free_r+0x22>
 8010760:	6818      	ldr	r0, [r3, #0]
 8010762:	685b      	ldr	r3, [r3, #4]
 8010764:	6053      	str	r3, [r2, #4]
 8010766:	4408      	add	r0, r1
 8010768:	6010      	str	r0, [r2, #0]
 801076a:	e7da      	b.n	8010722 <_free_r+0x22>
 801076c:	d902      	bls.n	8010774 <_free_r+0x74>
 801076e:	230c      	movs	r3, #12
 8010770:	602b      	str	r3, [r5, #0]
 8010772:	e7d6      	b.n	8010722 <_free_r+0x22>
 8010774:	6820      	ldr	r0, [r4, #0]
 8010776:	1821      	adds	r1, r4, r0
 8010778:	428b      	cmp	r3, r1
 801077a:	bf04      	itt	eq
 801077c:	6819      	ldreq	r1, [r3, #0]
 801077e:	685b      	ldreq	r3, [r3, #4]
 8010780:	6063      	str	r3, [r4, #4]
 8010782:	bf04      	itt	eq
 8010784:	1809      	addeq	r1, r1, r0
 8010786:	6021      	streq	r1, [r4, #0]
 8010788:	6054      	str	r4, [r2, #4]
 801078a:	e7ca      	b.n	8010722 <_free_r+0x22>
 801078c:	bd38      	pop	{r3, r4, r5, pc}
 801078e:	bf00      	nop
 8010790:	20000ac4 	.word	0x20000ac4

08010794 <rshift>:
 8010794:	6903      	ldr	r3, [r0, #16]
 8010796:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 801079a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801079e:	ea4f 1261 	mov.w	r2, r1, asr #5
 80107a2:	f100 0414 	add.w	r4, r0, #20
 80107a6:	dd45      	ble.n	8010834 <rshift+0xa0>
 80107a8:	f011 011f 	ands.w	r1, r1, #31
 80107ac:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80107b0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80107b4:	d10c      	bne.n	80107d0 <rshift+0x3c>
 80107b6:	f100 0710 	add.w	r7, r0, #16
 80107ba:	4629      	mov	r1, r5
 80107bc:	42b1      	cmp	r1, r6
 80107be:	d334      	bcc.n	801082a <rshift+0x96>
 80107c0:	1a9b      	subs	r3, r3, r2
 80107c2:	009b      	lsls	r3, r3, #2
 80107c4:	1eea      	subs	r2, r5, #3
 80107c6:	4296      	cmp	r6, r2
 80107c8:	bf38      	it	cc
 80107ca:	2300      	movcc	r3, #0
 80107cc:	4423      	add	r3, r4
 80107ce:	e015      	b.n	80107fc <rshift+0x68>
 80107d0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80107d4:	f1c1 0820 	rsb	r8, r1, #32
 80107d8:	40cf      	lsrs	r7, r1
 80107da:	f105 0e04 	add.w	lr, r5, #4
 80107de:	46a1      	mov	r9, r4
 80107e0:	4576      	cmp	r6, lr
 80107e2:	46f4      	mov	ip, lr
 80107e4:	d815      	bhi.n	8010812 <rshift+0x7e>
 80107e6:	1a9a      	subs	r2, r3, r2
 80107e8:	0092      	lsls	r2, r2, #2
 80107ea:	3a04      	subs	r2, #4
 80107ec:	3501      	adds	r5, #1
 80107ee:	42ae      	cmp	r6, r5
 80107f0:	bf38      	it	cc
 80107f2:	2200      	movcc	r2, #0
 80107f4:	18a3      	adds	r3, r4, r2
 80107f6:	50a7      	str	r7, [r4, r2]
 80107f8:	b107      	cbz	r7, 80107fc <rshift+0x68>
 80107fa:	3304      	adds	r3, #4
 80107fc:	1b1a      	subs	r2, r3, r4
 80107fe:	42a3      	cmp	r3, r4
 8010800:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8010804:	bf08      	it	eq
 8010806:	2300      	moveq	r3, #0
 8010808:	6102      	str	r2, [r0, #16]
 801080a:	bf08      	it	eq
 801080c:	6143      	streq	r3, [r0, #20]
 801080e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010812:	f8dc c000 	ldr.w	ip, [ip]
 8010816:	fa0c fc08 	lsl.w	ip, ip, r8
 801081a:	ea4c 0707 	orr.w	r7, ip, r7
 801081e:	f849 7b04 	str.w	r7, [r9], #4
 8010822:	f85e 7b04 	ldr.w	r7, [lr], #4
 8010826:	40cf      	lsrs	r7, r1
 8010828:	e7da      	b.n	80107e0 <rshift+0x4c>
 801082a:	f851 cb04 	ldr.w	ip, [r1], #4
 801082e:	f847 cf04 	str.w	ip, [r7, #4]!
 8010832:	e7c3      	b.n	80107bc <rshift+0x28>
 8010834:	4623      	mov	r3, r4
 8010836:	e7e1      	b.n	80107fc <rshift+0x68>

08010838 <__hexdig_fun>:
 8010838:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 801083c:	2b09      	cmp	r3, #9
 801083e:	d802      	bhi.n	8010846 <__hexdig_fun+0xe>
 8010840:	3820      	subs	r0, #32
 8010842:	b2c0      	uxtb	r0, r0
 8010844:	4770      	bx	lr
 8010846:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 801084a:	2b05      	cmp	r3, #5
 801084c:	d801      	bhi.n	8010852 <__hexdig_fun+0x1a>
 801084e:	3847      	subs	r0, #71	@ 0x47
 8010850:	e7f7      	b.n	8010842 <__hexdig_fun+0xa>
 8010852:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8010856:	2b05      	cmp	r3, #5
 8010858:	d801      	bhi.n	801085e <__hexdig_fun+0x26>
 801085a:	3827      	subs	r0, #39	@ 0x27
 801085c:	e7f1      	b.n	8010842 <__hexdig_fun+0xa>
 801085e:	2000      	movs	r0, #0
 8010860:	4770      	bx	lr
	...

08010864 <__gethex>:
 8010864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010868:	b085      	sub	sp, #20
 801086a:	468a      	mov	sl, r1
 801086c:	9302      	str	r3, [sp, #8]
 801086e:	680b      	ldr	r3, [r1, #0]
 8010870:	9001      	str	r0, [sp, #4]
 8010872:	4690      	mov	r8, r2
 8010874:	1c9c      	adds	r4, r3, #2
 8010876:	46a1      	mov	r9, r4
 8010878:	f814 0b01 	ldrb.w	r0, [r4], #1
 801087c:	2830      	cmp	r0, #48	@ 0x30
 801087e:	d0fa      	beq.n	8010876 <__gethex+0x12>
 8010880:	eba9 0303 	sub.w	r3, r9, r3
 8010884:	f1a3 0b02 	sub.w	fp, r3, #2
 8010888:	f7ff ffd6 	bl	8010838 <__hexdig_fun>
 801088c:	4605      	mov	r5, r0
 801088e:	2800      	cmp	r0, #0
 8010890:	d168      	bne.n	8010964 <__gethex+0x100>
 8010892:	49a0      	ldr	r1, [pc, #640]	@ (8010b14 <__gethex+0x2b0>)
 8010894:	2201      	movs	r2, #1
 8010896:	4648      	mov	r0, r9
 8010898:	f7ff f83e 	bl	800f918 <strncmp>
 801089c:	4607      	mov	r7, r0
 801089e:	2800      	cmp	r0, #0
 80108a0:	d167      	bne.n	8010972 <__gethex+0x10e>
 80108a2:	f899 0001 	ldrb.w	r0, [r9, #1]
 80108a6:	4626      	mov	r6, r4
 80108a8:	f7ff ffc6 	bl	8010838 <__hexdig_fun>
 80108ac:	2800      	cmp	r0, #0
 80108ae:	d062      	beq.n	8010976 <__gethex+0x112>
 80108b0:	4623      	mov	r3, r4
 80108b2:	7818      	ldrb	r0, [r3, #0]
 80108b4:	2830      	cmp	r0, #48	@ 0x30
 80108b6:	4699      	mov	r9, r3
 80108b8:	f103 0301 	add.w	r3, r3, #1
 80108bc:	d0f9      	beq.n	80108b2 <__gethex+0x4e>
 80108be:	f7ff ffbb 	bl	8010838 <__hexdig_fun>
 80108c2:	fab0 f580 	clz	r5, r0
 80108c6:	096d      	lsrs	r5, r5, #5
 80108c8:	f04f 0b01 	mov.w	fp, #1
 80108cc:	464a      	mov	r2, r9
 80108ce:	4616      	mov	r6, r2
 80108d0:	3201      	adds	r2, #1
 80108d2:	7830      	ldrb	r0, [r6, #0]
 80108d4:	f7ff ffb0 	bl	8010838 <__hexdig_fun>
 80108d8:	2800      	cmp	r0, #0
 80108da:	d1f8      	bne.n	80108ce <__gethex+0x6a>
 80108dc:	498d      	ldr	r1, [pc, #564]	@ (8010b14 <__gethex+0x2b0>)
 80108de:	2201      	movs	r2, #1
 80108e0:	4630      	mov	r0, r6
 80108e2:	f7ff f819 	bl	800f918 <strncmp>
 80108e6:	2800      	cmp	r0, #0
 80108e8:	d13f      	bne.n	801096a <__gethex+0x106>
 80108ea:	b944      	cbnz	r4, 80108fe <__gethex+0x9a>
 80108ec:	1c74      	adds	r4, r6, #1
 80108ee:	4622      	mov	r2, r4
 80108f0:	4616      	mov	r6, r2
 80108f2:	3201      	adds	r2, #1
 80108f4:	7830      	ldrb	r0, [r6, #0]
 80108f6:	f7ff ff9f 	bl	8010838 <__hexdig_fun>
 80108fa:	2800      	cmp	r0, #0
 80108fc:	d1f8      	bne.n	80108f0 <__gethex+0x8c>
 80108fe:	1ba4      	subs	r4, r4, r6
 8010900:	00a7      	lsls	r7, r4, #2
 8010902:	7833      	ldrb	r3, [r6, #0]
 8010904:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8010908:	2b50      	cmp	r3, #80	@ 0x50
 801090a:	d13e      	bne.n	801098a <__gethex+0x126>
 801090c:	7873      	ldrb	r3, [r6, #1]
 801090e:	2b2b      	cmp	r3, #43	@ 0x2b
 8010910:	d033      	beq.n	801097a <__gethex+0x116>
 8010912:	2b2d      	cmp	r3, #45	@ 0x2d
 8010914:	d034      	beq.n	8010980 <__gethex+0x11c>
 8010916:	1c71      	adds	r1, r6, #1
 8010918:	2400      	movs	r4, #0
 801091a:	7808      	ldrb	r0, [r1, #0]
 801091c:	f7ff ff8c 	bl	8010838 <__hexdig_fun>
 8010920:	1e43      	subs	r3, r0, #1
 8010922:	b2db      	uxtb	r3, r3
 8010924:	2b18      	cmp	r3, #24
 8010926:	d830      	bhi.n	801098a <__gethex+0x126>
 8010928:	f1a0 0210 	sub.w	r2, r0, #16
 801092c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8010930:	f7ff ff82 	bl	8010838 <__hexdig_fun>
 8010934:	f100 3cff 	add.w	ip, r0, #4294967295
 8010938:	fa5f fc8c 	uxtb.w	ip, ip
 801093c:	f1bc 0f18 	cmp.w	ip, #24
 8010940:	f04f 030a 	mov.w	r3, #10
 8010944:	d91e      	bls.n	8010984 <__gethex+0x120>
 8010946:	b104      	cbz	r4, 801094a <__gethex+0xe6>
 8010948:	4252      	negs	r2, r2
 801094a:	4417      	add	r7, r2
 801094c:	f8ca 1000 	str.w	r1, [sl]
 8010950:	b1ed      	cbz	r5, 801098e <__gethex+0x12a>
 8010952:	f1bb 0f00 	cmp.w	fp, #0
 8010956:	bf0c      	ite	eq
 8010958:	2506      	moveq	r5, #6
 801095a:	2500      	movne	r5, #0
 801095c:	4628      	mov	r0, r5
 801095e:	b005      	add	sp, #20
 8010960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010964:	2500      	movs	r5, #0
 8010966:	462c      	mov	r4, r5
 8010968:	e7b0      	b.n	80108cc <__gethex+0x68>
 801096a:	2c00      	cmp	r4, #0
 801096c:	d1c7      	bne.n	80108fe <__gethex+0x9a>
 801096e:	4627      	mov	r7, r4
 8010970:	e7c7      	b.n	8010902 <__gethex+0x9e>
 8010972:	464e      	mov	r6, r9
 8010974:	462f      	mov	r7, r5
 8010976:	2501      	movs	r5, #1
 8010978:	e7c3      	b.n	8010902 <__gethex+0x9e>
 801097a:	2400      	movs	r4, #0
 801097c:	1cb1      	adds	r1, r6, #2
 801097e:	e7cc      	b.n	801091a <__gethex+0xb6>
 8010980:	2401      	movs	r4, #1
 8010982:	e7fb      	b.n	801097c <__gethex+0x118>
 8010984:	fb03 0002 	mla	r0, r3, r2, r0
 8010988:	e7ce      	b.n	8010928 <__gethex+0xc4>
 801098a:	4631      	mov	r1, r6
 801098c:	e7de      	b.n	801094c <__gethex+0xe8>
 801098e:	eba6 0309 	sub.w	r3, r6, r9
 8010992:	3b01      	subs	r3, #1
 8010994:	4629      	mov	r1, r5
 8010996:	2b07      	cmp	r3, #7
 8010998:	dc0a      	bgt.n	80109b0 <__gethex+0x14c>
 801099a:	9801      	ldr	r0, [sp, #4]
 801099c:	f000 fafc 	bl	8010f98 <_Balloc>
 80109a0:	4604      	mov	r4, r0
 80109a2:	b940      	cbnz	r0, 80109b6 <__gethex+0x152>
 80109a4:	4b5c      	ldr	r3, [pc, #368]	@ (8010b18 <__gethex+0x2b4>)
 80109a6:	4602      	mov	r2, r0
 80109a8:	21e4      	movs	r1, #228	@ 0xe4
 80109aa:	485c      	ldr	r0, [pc, #368]	@ (8010b1c <__gethex+0x2b8>)
 80109ac:	f001 fa5c 	bl	8011e68 <__assert_func>
 80109b0:	3101      	adds	r1, #1
 80109b2:	105b      	asrs	r3, r3, #1
 80109b4:	e7ef      	b.n	8010996 <__gethex+0x132>
 80109b6:	f100 0a14 	add.w	sl, r0, #20
 80109ba:	2300      	movs	r3, #0
 80109bc:	4655      	mov	r5, sl
 80109be:	469b      	mov	fp, r3
 80109c0:	45b1      	cmp	r9, r6
 80109c2:	d337      	bcc.n	8010a34 <__gethex+0x1d0>
 80109c4:	f845 bb04 	str.w	fp, [r5], #4
 80109c8:	eba5 050a 	sub.w	r5, r5, sl
 80109cc:	10ad      	asrs	r5, r5, #2
 80109ce:	6125      	str	r5, [r4, #16]
 80109d0:	4658      	mov	r0, fp
 80109d2:	f000 fbd3 	bl	801117c <__hi0bits>
 80109d6:	016d      	lsls	r5, r5, #5
 80109d8:	f8d8 6000 	ldr.w	r6, [r8]
 80109dc:	1a2d      	subs	r5, r5, r0
 80109de:	42b5      	cmp	r5, r6
 80109e0:	dd54      	ble.n	8010a8c <__gethex+0x228>
 80109e2:	1bad      	subs	r5, r5, r6
 80109e4:	4629      	mov	r1, r5
 80109e6:	4620      	mov	r0, r4
 80109e8:	f000 ff67 	bl	80118ba <__any_on>
 80109ec:	4681      	mov	r9, r0
 80109ee:	b178      	cbz	r0, 8010a10 <__gethex+0x1ac>
 80109f0:	1e6b      	subs	r3, r5, #1
 80109f2:	1159      	asrs	r1, r3, #5
 80109f4:	f003 021f 	and.w	r2, r3, #31
 80109f8:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 80109fc:	f04f 0901 	mov.w	r9, #1
 8010a00:	fa09 f202 	lsl.w	r2, r9, r2
 8010a04:	420a      	tst	r2, r1
 8010a06:	d003      	beq.n	8010a10 <__gethex+0x1ac>
 8010a08:	454b      	cmp	r3, r9
 8010a0a:	dc36      	bgt.n	8010a7a <__gethex+0x216>
 8010a0c:	f04f 0902 	mov.w	r9, #2
 8010a10:	4629      	mov	r1, r5
 8010a12:	4620      	mov	r0, r4
 8010a14:	f7ff febe 	bl	8010794 <rshift>
 8010a18:	442f      	add	r7, r5
 8010a1a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010a1e:	42bb      	cmp	r3, r7
 8010a20:	da42      	bge.n	8010aa8 <__gethex+0x244>
 8010a22:	9801      	ldr	r0, [sp, #4]
 8010a24:	4621      	mov	r1, r4
 8010a26:	f000 faf7 	bl	8011018 <_Bfree>
 8010a2a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8010a2c:	2300      	movs	r3, #0
 8010a2e:	6013      	str	r3, [r2, #0]
 8010a30:	25a3      	movs	r5, #163	@ 0xa3
 8010a32:	e793      	b.n	801095c <__gethex+0xf8>
 8010a34:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8010a38:	2a2e      	cmp	r2, #46	@ 0x2e
 8010a3a:	d012      	beq.n	8010a62 <__gethex+0x1fe>
 8010a3c:	2b20      	cmp	r3, #32
 8010a3e:	d104      	bne.n	8010a4a <__gethex+0x1e6>
 8010a40:	f845 bb04 	str.w	fp, [r5], #4
 8010a44:	f04f 0b00 	mov.w	fp, #0
 8010a48:	465b      	mov	r3, fp
 8010a4a:	7830      	ldrb	r0, [r6, #0]
 8010a4c:	9303      	str	r3, [sp, #12]
 8010a4e:	f7ff fef3 	bl	8010838 <__hexdig_fun>
 8010a52:	9b03      	ldr	r3, [sp, #12]
 8010a54:	f000 000f 	and.w	r0, r0, #15
 8010a58:	4098      	lsls	r0, r3
 8010a5a:	ea4b 0b00 	orr.w	fp, fp, r0
 8010a5e:	3304      	adds	r3, #4
 8010a60:	e7ae      	b.n	80109c0 <__gethex+0x15c>
 8010a62:	45b1      	cmp	r9, r6
 8010a64:	d8ea      	bhi.n	8010a3c <__gethex+0x1d8>
 8010a66:	492b      	ldr	r1, [pc, #172]	@ (8010b14 <__gethex+0x2b0>)
 8010a68:	9303      	str	r3, [sp, #12]
 8010a6a:	2201      	movs	r2, #1
 8010a6c:	4630      	mov	r0, r6
 8010a6e:	f7fe ff53 	bl	800f918 <strncmp>
 8010a72:	9b03      	ldr	r3, [sp, #12]
 8010a74:	2800      	cmp	r0, #0
 8010a76:	d1e1      	bne.n	8010a3c <__gethex+0x1d8>
 8010a78:	e7a2      	b.n	80109c0 <__gethex+0x15c>
 8010a7a:	1ea9      	subs	r1, r5, #2
 8010a7c:	4620      	mov	r0, r4
 8010a7e:	f000 ff1c 	bl	80118ba <__any_on>
 8010a82:	2800      	cmp	r0, #0
 8010a84:	d0c2      	beq.n	8010a0c <__gethex+0x1a8>
 8010a86:	f04f 0903 	mov.w	r9, #3
 8010a8a:	e7c1      	b.n	8010a10 <__gethex+0x1ac>
 8010a8c:	da09      	bge.n	8010aa2 <__gethex+0x23e>
 8010a8e:	1b75      	subs	r5, r6, r5
 8010a90:	4621      	mov	r1, r4
 8010a92:	9801      	ldr	r0, [sp, #4]
 8010a94:	462a      	mov	r2, r5
 8010a96:	f000 fcd7 	bl	8011448 <__lshift>
 8010a9a:	1b7f      	subs	r7, r7, r5
 8010a9c:	4604      	mov	r4, r0
 8010a9e:	f100 0a14 	add.w	sl, r0, #20
 8010aa2:	f04f 0900 	mov.w	r9, #0
 8010aa6:	e7b8      	b.n	8010a1a <__gethex+0x1b6>
 8010aa8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8010aac:	42bd      	cmp	r5, r7
 8010aae:	dd6f      	ble.n	8010b90 <__gethex+0x32c>
 8010ab0:	1bed      	subs	r5, r5, r7
 8010ab2:	42ae      	cmp	r6, r5
 8010ab4:	dc34      	bgt.n	8010b20 <__gethex+0x2bc>
 8010ab6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8010aba:	2b02      	cmp	r3, #2
 8010abc:	d022      	beq.n	8010b04 <__gethex+0x2a0>
 8010abe:	2b03      	cmp	r3, #3
 8010ac0:	d024      	beq.n	8010b0c <__gethex+0x2a8>
 8010ac2:	2b01      	cmp	r3, #1
 8010ac4:	d115      	bne.n	8010af2 <__gethex+0x28e>
 8010ac6:	42ae      	cmp	r6, r5
 8010ac8:	d113      	bne.n	8010af2 <__gethex+0x28e>
 8010aca:	2e01      	cmp	r6, #1
 8010acc:	d10b      	bne.n	8010ae6 <__gethex+0x282>
 8010ace:	9a02      	ldr	r2, [sp, #8]
 8010ad0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8010ad4:	6013      	str	r3, [r2, #0]
 8010ad6:	2301      	movs	r3, #1
 8010ad8:	6123      	str	r3, [r4, #16]
 8010ada:	f8ca 3000 	str.w	r3, [sl]
 8010ade:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010ae0:	2562      	movs	r5, #98	@ 0x62
 8010ae2:	601c      	str	r4, [r3, #0]
 8010ae4:	e73a      	b.n	801095c <__gethex+0xf8>
 8010ae6:	1e71      	subs	r1, r6, #1
 8010ae8:	4620      	mov	r0, r4
 8010aea:	f000 fee6 	bl	80118ba <__any_on>
 8010aee:	2800      	cmp	r0, #0
 8010af0:	d1ed      	bne.n	8010ace <__gethex+0x26a>
 8010af2:	9801      	ldr	r0, [sp, #4]
 8010af4:	4621      	mov	r1, r4
 8010af6:	f000 fa8f 	bl	8011018 <_Bfree>
 8010afa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8010afc:	2300      	movs	r3, #0
 8010afe:	6013      	str	r3, [r2, #0]
 8010b00:	2550      	movs	r5, #80	@ 0x50
 8010b02:	e72b      	b.n	801095c <__gethex+0xf8>
 8010b04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010b06:	2b00      	cmp	r3, #0
 8010b08:	d1f3      	bne.n	8010af2 <__gethex+0x28e>
 8010b0a:	e7e0      	b.n	8010ace <__gethex+0x26a>
 8010b0c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010b0e:	2b00      	cmp	r3, #0
 8010b10:	d1dd      	bne.n	8010ace <__gethex+0x26a>
 8010b12:	e7ee      	b.n	8010af2 <__gethex+0x28e>
 8010b14:	080128bc 	.word	0x080128bc
 8010b18:	080129cd 	.word	0x080129cd
 8010b1c:	080129de 	.word	0x080129de
 8010b20:	1e6f      	subs	r7, r5, #1
 8010b22:	f1b9 0f00 	cmp.w	r9, #0
 8010b26:	d130      	bne.n	8010b8a <__gethex+0x326>
 8010b28:	b127      	cbz	r7, 8010b34 <__gethex+0x2d0>
 8010b2a:	4639      	mov	r1, r7
 8010b2c:	4620      	mov	r0, r4
 8010b2e:	f000 fec4 	bl	80118ba <__any_on>
 8010b32:	4681      	mov	r9, r0
 8010b34:	117a      	asrs	r2, r7, #5
 8010b36:	2301      	movs	r3, #1
 8010b38:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8010b3c:	f007 071f 	and.w	r7, r7, #31
 8010b40:	40bb      	lsls	r3, r7
 8010b42:	4213      	tst	r3, r2
 8010b44:	4629      	mov	r1, r5
 8010b46:	4620      	mov	r0, r4
 8010b48:	bf18      	it	ne
 8010b4a:	f049 0902 	orrne.w	r9, r9, #2
 8010b4e:	f7ff fe21 	bl	8010794 <rshift>
 8010b52:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8010b56:	1b76      	subs	r6, r6, r5
 8010b58:	2502      	movs	r5, #2
 8010b5a:	f1b9 0f00 	cmp.w	r9, #0
 8010b5e:	d047      	beq.n	8010bf0 <__gethex+0x38c>
 8010b60:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8010b64:	2b02      	cmp	r3, #2
 8010b66:	d015      	beq.n	8010b94 <__gethex+0x330>
 8010b68:	2b03      	cmp	r3, #3
 8010b6a:	d017      	beq.n	8010b9c <__gethex+0x338>
 8010b6c:	2b01      	cmp	r3, #1
 8010b6e:	d109      	bne.n	8010b84 <__gethex+0x320>
 8010b70:	f019 0f02 	tst.w	r9, #2
 8010b74:	d006      	beq.n	8010b84 <__gethex+0x320>
 8010b76:	f8da 3000 	ldr.w	r3, [sl]
 8010b7a:	ea49 0903 	orr.w	r9, r9, r3
 8010b7e:	f019 0f01 	tst.w	r9, #1
 8010b82:	d10e      	bne.n	8010ba2 <__gethex+0x33e>
 8010b84:	f045 0510 	orr.w	r5, r5, #16
 8010b88:	e032      	b.n	8010bf0 <__gethex+0x38c>
 8010b8a:	f04f 0901 	mov.w	r9, #1
 8010b8e:	e7d1      	b.n	8010b34 <__gethex+0x2d0>
 8010b90:	2501      	movs	r5, #1
 8010b92:	e7e2      	b.n	8010b5a <__gethex+0x2f6>
 8010b94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010b96:	f1c3 0301 	rsb	r3, r3, #1
 8010b9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8010b9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010b9e:	2b00      	cmp	r3, #0
 8010ba0:	d0f0      	beq.n	8010b84 <__gethex+0x320>
 8010ba2:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8010ba6:	f104 0314 	add.w	r3, r4, #20
 8010baa:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8010bae:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8010bb2:	f04f 0c00 	mov.w	ip, #0
 8010bb6:	4618      	mov	r0, r3
 8010bb8:	f853 2b04 	ldr.w	r2, [r3], #4
 8010bbc:	f1b2 3fff 	cmp.w	r2, #4294967295
 8010bc0:	d01b      	beq.n	8010bfa <__gethex+0x396>
 8010bc2:	3201      	adds	r2, #1
 8010bc4:	6002      	str	r2, [r0, #0]
 8010bc6:	2d02      	cmp	r5, #2
 8010bc8:	f104 0314 	add.w	r3, r4, #20
 8010bcc:	d13c      	bne.n	8010c48 <__gethex+0x3e4>
 8010bce:	f8d8 2000 	ldr.w	r2, [r8]
 8010bd2:	3a01      	subs	r2, #1
 8010bd4:	42b2      	cmp	r2, r6
 8010bd6:	d109      	bne.n	8010bec <__gethex+0x388>
 8010bd8:	1171      	asrs	r1, r6, #5
 8010bda:	2201      	movs	r2, #1
 8010bdc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8010be0:	f006 061f 	and.w	r6, r6, #31
 8010be4:	fa02 f606 	lsl.w	r6, r2, r6
 8010be8:	421e      	tst	r6, r3
 8010bea:	d13a      	bne.n	8010c62 <__gethex+0x3fe>
 8010bec:	f045 0520 	orr.w	r5, r5, #32
 8010bf0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010bf2:	601c      	str	r4, [r3, #0]
 8010bf4:	9b02      	ldr	r3, [sp, #8]
 8010bf6:	601f      	str	r7, [r3, #0]
 8010bf8:	e6b0      	b.n	801095c <__gethex+0xf8>
 8010bfa:	4299      	cmp	r1, r3
 8010bfc:	f843 cc04 	str.w	ip, [r3, #-4]
 8010c00:	d8d9      	bhi.n	8010bb6 <__gethex+0x352>
 8010c02:	68a3      	ldr	r3, [r4, #8]
 8010c04:	459b      	cmp	fp, r3
 8010c06:	db17      	blt.n	8010c38 <__gethex+0x3d4>
 8010c08:	6861      	ldr	r1, [r4, #4]
 8010c0a:	9801      	ldr	r0, [sp, #4]
 8010c0c:	3101      	adds	r1, #1
 8010c0e:	f000 f9c3 	bl	8010f98 <_Balloc>
 8010c12:	4681      	mov	r9, r0
 8010c14:	b918      	cbnz	r0, 8010c1e <__gethex+0x3ba>
 8010c16:	4b1a      	ldr	r3, [pc, #104]	@ (8010c80 <__gethex+0x41c>)
 8010c18:	4602      	mov	r2, r0
 8010c1a:	2184      	movs	r1, #132	@ 0x84
 8010c1c:	e6c5      	b.n	80109aa <__gethex+0x146>
 8010c1e:	6922      	ldr	r2, [r4, #16]
 8010c20:	3202      	adds	r2, #2
 8010c22:	f104 010c 	add.w	r1, r4, #12
 8010c26:	0092      	lsls	r2, r2, #2
 8010c28:	300c      	adds	r0, #12
 8010c2a:	f7fe fefe 	bl	800fa2a <memcpy>
 8010c2e:	4621      	mov	r1, r4
 8010c30:	9801      	ldr	r0, [sp, #4]
 8010c32:	f000 f9f1 	bl	8011018 <_Bfree>
 8010c36:	464c      	mov	r4, r9
 8010c38:	6923      	ldr	r3, [r4, #16]
 8010c3a:	1c5a      	adds	r2, r3, #1
 8010c3c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8010c40:	6122      	str	r2, [r4, #16]
 8010c42:	2201      	movs	r2, #1
 8010c44:	615a      	str	r2, [r3, #20]
 8010c46:	e7be      	b.n	8010bc6 <__gethex+0x362>
 8010c48:	6922      	ldr	r2, [r4, #16]
 8010c4a:	455a      	cmp	r2, fp
 8010c4c:	dd0b      	ble.n	8010c66 <__gethex+0x402>
 8010c4e:	2101      	movs	r1, #1
 8010c50:	4620      	mov	r0, r4
 8010c52:	f7ff fd9f 	bl	8010794 <rshift>
 8010c56:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010c5a:	3701      	adds	r7, #1
 8010c5c:	42bb      	cmp	r3, r7
 8010c5e:	f6ff aee0 	blt.w	8010a22 <__gethex+0x1be>
 8010c62:	2501      	movs	r5, #1
 8010c64:	e7c2      	b.n	8010bec <__gethex+0x388>
 8010c66:	f016 061f 	ands.w	r6, r6, #31
 8010c6a:	d0fa      	beq.n	8010c62 <__gethex+0x3fe>
 8010c6c:	4453      	add	r3, sl
 8010c6e:	f1c6 0620 	rsb	r6, r6, #32
 8010c72:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8010c76:	f000 fa81 	bl	801117c <__hi0bits>
 8010c7a:	42b0      	cmp	r0, r6
 8010c7c:	dbe7      	blt.n	8010c4e <__gethex+0x3ea>
 8010c7e:	e7f0      	b.n	8010c62 <__gethex+0x3fe>
 8010c80:	080129cd 	.word	0x080129cd

08010c84 <L_shift>:
 8010c84:	f1c2 0208 	rsb	r2, r2, #8
 8010c88:	0092      	lsls	r2, r2, #2
 8010c8a:	b570      	push	{r4, r5, r6, lr}
 8010c8c:	f1c2 0620 	rsb	r6, r2, #32
 8010c90:	6843      	ldr	r3, [r0, #4]
 8010c92:	6804      	ldr	r4, [r0, #0]
 8010c94:	fa03 f506 	lsl.w	r5, r3, r6
 8010c98:	432c      	orrs	r4, r5
 8010c9a:	40d3      	lsrs	r3, r2
 8010c9c:	6004      	str	r4, [r0, #0]
 8010c9e:	f840 3f04 	str.w	r3, [r0, #4]!
 8010ca2:	4288      	cmp	r0, r1
 8010ca4:	d3f4      	bcc.n	8010c90 <L_shift+0xc>
 8010ca6:	bd70      	pop	{r4, r5, r6, pc}

08010ca8 <__match>:
 8010ca8:	b530      	push	{r4, r5, lr}
 8010caa:	6803      	ldr	r3, [r0, #0]
 8010cac:	3301      	adds	r3, #1
 8010cae:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010cb2:	b914      	cbnz	r4, 8010cba <__match+0x12>
 8010cb4:	6003      	str	r3, [r0, #0]
 8010cb6:	2001      	movs	r0, #1
 8010cb8:	bd30      	pop	{r4, r5, pc}
 8010cba:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010cbe:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8010cc2:	2d19      	cmp	r5, #25
 8010cc4:	bf98      	it	ls
 8010cc6:	3220      	addls	r2, #32
 8010cc8:	42a2      	cmp	r2, r4
 8010cca:	d0f0      	beq.n	8010cae <__match+0x6>
 8010ccc:	2000      	movs	r0, #0
 8010cce:	e7f3      	b.n	8010cb8 <__match+0x10>

08010cd0 <__hexnan>:
 8010cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cd4:	680b      	ldr	r3, [r1, #0]
 8010cd6:	6801      	ldr	r1, [r0, #0]
 8010cd8:	115e      	asrs	r6, r3, #5
 8010cda:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8010cde:	f013 031f 	ands.w	r3, r3, #31
 8010ce2:	b087      	sub	sp, #28
 8010ce4:	bf18      	it	ne
 8010ce6:	3604      	addne	r6, #4
 8010ce8:	2500      	movs	r5, #0
 8010cea:	1f37      	subs	r7, r6, #4
 8010cec:	4682      	mov	sl, r0
 8010cee:	4690      	mov	r8, r2
 8010cf0:	9301      	str	r3, [sp, #4]
 8010cf2:	f846 5c04 	str.w	r5, [r6, #-4]
 8010cf6:	46b9      	mov	r9, r7
 8010cf8:	463c      	mov	r4, r7
 8010cfa:	9502      	str	r5, [sp, #8]
 8010cfc:	46ab      	mov	fp, r5
 8010cfe:	784a      	ldrb	r2, [r1, #1]
 8010d00:	1c4b      	adds	r3, r1, #1
 8010d02:	9303      	str	r3, [sp, #12]
 8010d04:	b342      	cbz	r2, 8010d58 <__hexnan+0x88>
 8010d06:	4610      	mov	r0, r2
 8010d08:	9105      	str	r1, [sp, #20]
 8010d0a:	9204      	str	r2, [sp, #16]
 8010d0c:	f7ff fd94 	bl	8010838 <__hexdig_fun>
 8010d10:	2800      	cmp	r0, #0
 8010d12:	d151      	bne.n	8010db8 <__hexnan+0xe8>
 8010d14:	9a04      	ldr	r2, [sp, #16]
 8010d16:	9905      	ldr	r1, [sp, #20]
 8010d18:	2a20      	cmp	r2, #32
 8010d1a:	d818      	bhi.n	8010d4e <__hexnan+0x7e>
 8010d1c:	9b02      	ldr	r3, [sp, #8]
 8010d1e:	459b      	cmp	fp, r3
 8010d20:	dd13      	ble.n	8010d4a <__hexnan+0x7a>
 8010d22:	454c      	cmp	r4, r9
 8010d24:	d206      	bcs.n	8010d34 <__hexnan+0x64>
 8010d26:	2d07      	cmp	r5, #7
 8010d28:	dc04      	bgt.n	8010d34 <__hexnan+0x64>
 8010d2a:	462a      	mov	r2, r5
 8010d2c:	4649      	mov	r1, r9
 8010d2e:	4620      	mov	r0, r4
 8010d30:	f7ff ffa8 	bl	8010c84 <L_shift>
 8010d34:	4544      	cmp	r4, r8
 8010d36:	d952      	bls.n	8010dde <__hexnan+0x10e>
 8010d38:	2300      	movs	r3, #0
 8010d3a:	f1a4 0904 	sub.w	r9, r4, #4
 8010d3e:	f844 3c04 	str.w	r3, [r4, #-4]
 8010d42:	f8cd b008 	str.w	fp, [sp, #8]
 8010d46:	464c      	mov	r4, r9
 8010d48:	461d      	mov	r5, r3
 8010d4a:	9903      	ldr	r1, [sp, #12]
 8010d4c:	e7d7      	b.n	8010cfe <__hexnan+0x2e>
 8010d4e:	2a29      	cmp	r2, #41	@ 0x29
 8010d50:	d157      	bne.n	8010e02 <__hexnan+0x132>
 8010d52:	3102      	adds	r1, #2
 8010d54:	f8ca 1000 	str.w	r1, [sl]
 8010d58:	f1bb 0f00 	cmp.w	fp, #0
 8010d5c:	d051      	beq.n	8010e02 <__hexnan+0x132>
 8010d5e:	454c      	cmp	r4, r9
 8010d60:	d206      	bcs.n	8010d70 <__hexnan+0xa0>
 8010d62:	2d07      	cmp	r5, #7
 8010d64:	dc04      	bgt.n	8010d70 <__hexnan+0xa0>
 8010d66:	462a      	mov	r2, r5
 8010d68:	4649      	mov	r1, r9
 8010d6a:	4620      	mov	r0, r4
 8010d6c:	f7ff ff8a 	bl	8010c84 <L_shift>
 8010d70:	4544      	cmp	r4, r8
 8010d72:	d936      	bls.n	8010de2 <__hexnan+0x112>
 8010d74:	f1a8 0204 	sub.w	r2, r8, #4
 8010d78:	4623      	mov	r3, r4
 8010d7a:	f853 1b04 	ldr.w	r1, [r3], #4
 8010d7e:	f842 1f04 	str.w	r1, [r2, #4]!
 8010d82:	429f      	cmp	r7, r3
 8010d84:	d2f9      	bcs.n	8010d7a <__hexnan+0xaa>
 8010d86:	1b3b      	subs	r3, r7, r4
 8010d88:	f023 0303 	bic.w	r3, r3, #3
 8010d8c:	3304      	adds	r3, #4
 8010d8e:	3401      	adds	r4, #1
 8010d90:	3e03      	subs	r6, #3
 8010d92:	42b4      	cmp	r4, r6
 8010d94:	bf88      	it	hi
 8010d96:	2304      	movhi	r3, #4
 8010d98:	4443      	add	r3, r8
 8010d9a:	2200      	movs	r2, #0
 8010d9c:	f843 2b04 	str.w	r2, [r3], #4
 8010da0:	429f      	cmp	r7, r3
 8010da2:	d2fb      	bcs.n	8010d9c <__hexnan+0xcc>
 8010da4:	683b      	ldr	r3, [r7, #0]
 8010da6:	b91b      	cbnz	r3, 8010db0 <__hexnan+0xe0>
 8010da8:	4547      	cmp	r7, r8
 8010daa:	d128      	bne.n	8010dfe <__hexnan+0x12e>
 8010dac:	2301      	movs	r3, #1
 8010dae:	603b      	str	r3, [r7, #0]
 8010db0:	2005      	movs	r0, #5
 8010db2:	b007      	add	sp, #28
 8010db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010db8:	3501      	adds	r5, #1
 8010dba:	2d08      	cmp	r5, #8
 8010dbc:	f10b 0b01 	add.w	fp, fp, #1
 8010dc0:	dd06      	ble.n	8010dd0 <__hexnan+0x100>
 8010dc2:	4544      	cmp	r4, r8
 8010dc4:	d9c1      	bls.n	8010d4a <__hexnan+0x7a>
 8010dc6:	2300      	movs	r3, #0
 8010dc8:	f844 3c04 	str.w	r3, [r4, #-4]
 8010dcc:	2501      	movs	r5, #1
 8010dce:	3c04      	subs	r4, #4
 8010dd0:	6822      	ldr	r2, [r4, #0]
 8010dd2:	f000 000f 	and.w	r0, r0, #15
 8010dd6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8010dda:	6020      	str	r0, [r4, #0]
 8010ddc:	e7b5      	b.n	8010d4a <__hexnan+0x7a>
 8010dde:	2508      	movs	r5, #8
 8010de0:	e7b3      	b.n	8010d4a <__hexnan+0x7a>
 8010de2:	9b01      	ldr	r3, [sp, #4]
 8010de4:	2b00      	cmp	r3, #0
 8010de6:	d0dd      	beq.n	8010da4 <__hexnan+0xd4>
 8010de8:	f1c3 0320 	rsb	r3, r3, #32
 8010dec:	f04f 32ff 	mov.w	r2, #4294967295
 8010df0:	40da      	lsrs	r2, r3
 8010df2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8010df6:	4013      	ands	r3, r2
 8010df8:	f846 3c04 	str.w	r3, [r6, #-4]
 8010dfc:	e7d2      	b.n	8010da4 <__hexnan+0xd4>
 8010dfe:	3f04      	subs	r7, #4
 8010e00:	e7d0      	b.n	8010da4 <__hexnan+0xd4>
 8010e02:	2004      	movs	r0, #4
 8010e04:	e7d5      	b.n	8010db2 <__hexnan+0xe2>
	...

08010e08 <malloc>:
 8010e08:	4b02      	ldr	r3, [pc, #8]	@ (8010e14 <malloc+0xc>)
 8010e0a:	4601      	mov	r1, r0
 8010e0c:	6818      	ldr	r0, [r3, #0]
 8010e0e:	f000 b825 	b.w	8010e5c <_malloc_r>
 8010e12:	bf00      	nop
 8010e14:	20000208 	.word	0x20000208

08010e18 <sbrk_aligned>:
 8010e18:	b570      	push	{r4, r5, r6, lr}
 8010e1a:	4e0f      	ldr	r6, [pc, #60]	@ (8010e58 <sbrk_aligned+0x40>)
 8010e1c:	460c      	mov	r4, r1
 8010e1e:	6831      	ldr	r1, [r6, #0]
 8010e20:	4605      	mov	r5, r0
 8010e22:	b911      	cbnz	r1, 8010e2a <sbrk_aligned+0x12>
 8010e24:	f001 f810 	bl	8011e48 <_sbrk_r>
 8010e28:	6030      	str	r0, [r6, #0]
 8010e2a:	4621      	mov	r1, r4
 8010e2c:	4628      	mov	r0, r5
 8010e2e:	f001 f80b 	bl	8011e48 <_sbrk_r>
 8010e32:	1c43      	adds	r3, r0, #1
 8010e34:	d103      	bne.n	8010e3e <sbrk_aligned+0x26>
 8010e36:	f04f 34ff 	mov.w	r4, #4294967295
 8010e3a:	4620      	mov	r0, r4
 8010e3c:	bd70      	pop	{r4, r5, r6, pc}
 8010e3e:	1cc4      	adds	r4, r0, #3
 8010e40:	f024 0403 	bic.w	r4, r4, #3
 8010e44:	42a0      	cmp	r0, r4
 8010e46:	d0f8      	beq.n	8010e3a <sbrk_aligned+0x22>
 8010e48:	1a21      	subs	r1, r4, r0
 8010e4a:	4628      	mov	r0, r5
 8010e4c:	f000 fffc 	bl	8011e48 <_sbrk_r>
 8010e50:	3001      	adds	r0, #1
 8010e52:	d1f2      	bne.n	8010e3a <sbrk_aligned+0x22>
 8010e54:	e7ef      	b.n	8010e36 <sbrk_aligned+0x1e>
 8010e56:	bf00      	nop
 8010e58:	20000ac0 	.word	0x20000ac0

08010e5c <_malloc_r>:
 8010e5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010e60:	1ccd      	adds	r5, r1, #3
 8010e62:	f025 0503 	bic.w	r5, r5, #3
 8010e66:	3508      	adds	r5, #8
 8010e68:	2d0c      	cmp	r5, #12
 8010e6a:	bf38      	it	cc
 8010e6c:	250c      	movcc	r5, #12
 8010e6e:	2d00      	cmp	r5, #0
 8010e70:	4606      	mov	r6, r0
 8010e72:	db01      	blt.n	8010e78 <_malloc_r+0x1c>
 8010e74:	42a9      	cmp	r1, r5
 8010e76:	d904      	bls.n	8010e82 <_malloc_r+0x26>
 8010e78:	230c      	movs	r3, #12
 8010e7a:	6033      	str	r3, [r6, #0]
 8010e7c:	2000      	movs	r0, #0
 8010e7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010e82:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8010f58 <_malloc_r+0xfc>
 8010e86:	f000 f87b 	bl	8010f80 <__malloc_lock>
 8010e8a:	f8d8 3000 	ldr.w	r3, [r8]
 8010e8e:	461c      	mov	r4, r3
 8010e90:	bb44      	cbnz	r4, 8010ee4 <_malloc_r+0x88>
 8010e92:	4629      	mov	r1, r5
 8010e94:	4630      	mov	r0, r6
 8010e96:	f7ff ffbf 	bl	8010e18 <sbrk_aligned>
 8010e9a:	1c43      	adds	r3, r0, #1
 8010e9c:	4604      	mov	r4, r0
 8010e9e:	d158      	bne.n	8010f52 <_malloc_r+0xf6>
 8010ea0:	f8d8 4000 	ldr.w	r4, [r8]
 8010ea4:	4627      	mov	r7, r4
 8010ea6:	2f00      	cmp	r7, #0
 8010ea8:	d143      	bne.n	8010f32 <_malloc_r+0xd6>
 8010eaa:	2c00      	cmp	r4, #0
 8010eac:	d04b      	beq.n	8010f46 <_malloc_r+0xea>
 8010eae:	6823      	ldr	r3, [r4, #0]
 8010eb0:	4639      	mov	r1, r7
 8010eb2:	4630      	mov	r0, r6
 8010eb4:	eb04 0903 	add.w	r9, r4, r3
 8010eb8:	f000 ffc6 	bl	8011e48 <_sbrk_r>
 8010ebc:	4581      	cmp	r9, r0
 8010ebe:	d142      	bne.n	8010f46 <_malloc_r+0xea>
 8010ec0:	6821      	ldr	r1, [r4, #0]
 8010ec2:	1a6d      	subs	r5, r5, r1
 8010ec4:	4629      	mov	r1, r5
 8010ec6:	4630      	mov	r0, r6
 8010ec8:	f7ff ffa6 	bl	8010e18 <sbrk_aligned>
 8010ecc:	3001      	adds	r0, #1
 8010ece:	d03a      	beq.n	8010f46 <_malloc_r+0xea>
 8010ed0:	6823      	ldr	r3, [r4, #0]
 8010ed2:	442b      	add	r3, r5
 8010ed4:	6023      	str	r3, [r4, #0]
 8010ed6:	f8d8 3000 	ldr.w	r3, [r8]
 8010eda:	685a      	ldr	r2, [r3, #4]
 8010edc:	bb62      	cbnz	r2, 8010f38 <_malloc_r+0xdc>
 8010ede:	f8c8 7000 	str.w	r7, [r8]
 8010ee2:	e00f      	b.n	8010f04 <_malloc_r+0xa8>
 8010ee4:	6822      	ldr	r2, [r4, #0]
 8010ee6:	1b52      	subs	r2, r2, r5
 8010ee8:	d420      	bmi.n	8010f2c <_malloc_r+0xd0>
 8010eea:	2a0b      	cmp	r2, #11
 8010eec:	d917      	bls.n	8010f1e <_malloc_r+0xc2>
 8010eee:	1961      	adds	r1, r4, r5
 8010ef0:	42a3      	cmp	r3, r4
 8010ef2:	6025      	str	r5, [r4, #0]
 8010ef4:	bf18      	it	ne
 8010ef6:	6059      	strne	r1, [r3, #4]
 8010ef8:	6863      	ldr	r3, [r4, #4]
 8010efa:	bf08      	it	eq
 8010efc:	f8c8 1000 	streq.w	r1, [r8]
 8010f00:	5162      	str	r2, [r4, r5]
 8010f02:	604b      	str	r3, [r1, #4]
 8010f04:	4630      	mov	r0, r6
 8010f06:	f000 f841 	bl	8010f8c <__malloc_unlock>
 8010f0a:	f104 000b 	add.w	r0, r4, #11
 8010f0e:	1d23      	adds	r3, r4, #4
 8010f10:	f020 0007 	bic.w	r0, r0, #7
 8010f14:	1ac2      	subs	r2, r0, r3
 8010f16:	bf1c      	itt	ne
 8010f18:	1a1b      	subne	r3, r3, r0
 8010f1a:	50a3      	strne	r3, [r4, r2]
 8010f1c:	e7af      	b.n	8010e7e <_malloc_r+0x22>
 8010f1e:	6862      	ldr	r2, [r4, #4]
 8010f20:	42a3      	cmp	r3, r4
 8010f22:	bf0c      	ite	eq
 8010f24:	f8c8 2000 	streq.w	r2, [r8]
 8010f28:	605a      	strne	r2, [r3, #4]
 8010f2a:	e7eb      	b.n	8010f04 <_malloc_r+0xa8>
 8010f2c:	4623      	mov	r3, r4
 8010f2e:	6864      	ldr	r4, [r4, #4]
 8010f30:	e7ae      	b.n	8010e90 <_malloc_r+0x34>
 8010f32:	463c      	mov	r4, r7
 8010f34:	687f      	ldr	r7, [r7, #4]
 8010f36:	e7b6      	b.n	8010ea6 <_malloc_r+0x4a>
 8010f38:	461a      	mov	r2, r3
 8010f3a:	685b      	ldr	r3, [r3, #4]
 8010f3c:	42a3      	cmp	r3, r4
 8010f3e:	d1fb      	bne.n	8010f38 <_malloc_r+0xdc>
 8010f40:	2300      	movs	r3, #0
 8010f42:	6053      	str	r3, [r2, #4]
 8010f44:	e7de      	b.n	8010f04 <_malloc_r+0xa8>
 8010f46:	230c      	movs	r3, #12
 8010f48:	6033      	str	r3, [r6, #0]
 8010f4a:	4630      	mov	r0, r6
 8010f4c:	f000 f81e 	bl	8010f8c <__malloc_unlock>
 8010f50:	e794      	b.n	8010e7c <_malloc_r+0x20>
 8010f52:	6005      	str	r5, [r0, #0]
 8010f54:	e7d6      	b.n	8010f04 <_malloc_r+0xa8>
 8010f56:	bf00      	nop
 8010f58:	20000ac4 	.word	0x20000ac4

08010f5c <__ascii_mbtowc>:
 8010f5c:	b082      	sub	sp, #8
 8010f5e:	b901      	cbnz	r1, 8010f62 <__ascii_mbtowc+0x6>
 8010f60:	a901      	add	r1, sp, #4
 8010f62:	b142      	cbz	r2, 8010f76 <__ascii_mbtowc+0x1a>
 8010f64:	b14b      	cbz	r3, 8010f7a <__ascii_mbtowc+0x1e>
 8010f66:	7813      	ldrb	r3, [r2, #0]
 8010f68:	600b      	str	r3, [r1, #0]
 8010f6a:	7812      	ldrb	r2, [r2, #0]
 8010f6c:	1e10      	subs	r0, r2, #0
 8010f6e:	bf18      	it	ne
 8010f70:	2001      	movne	r0, #1
 8010f72:	b002      	add	sp, #8
 8010f74:	4770      	bx	lr
 8010f76:	4610      	mov	r0, r2
 8010f78:	e7fb      	b.n	8010f72 <__ascii_mbtowc+0x16>
 8010f7a:	f06f 0001 	mvn.w	r0, #1
 8010f7e:	e7f8      	b.n	8010f72 <__ascii_mbtowc+0x16>

08010f80 <__malloc_lock>:
 8010f80:	4801      	ldr	r0, [pc, #4]	@ (8010f88 <__malloc_lock+0x8>)
 8010f82:	f7fe bd50 	b.w	800fa26 <__retarget_lock_acquire_recursive>
 8010f86:	bf00      	nop
 8010f88:	20000abc 	.word	0x20000abc

08010f8c <__malloc_unlock>:
 8010f8c:	4801      	ldr	r0, [pc, #4]	@ (8010f94 <__malloc_unlock+0x8>)
 8010f8e:	f7fe bd4b 	b.w	800fa28 <__retarget_lock_release_recursive>
 8010f92:	bf00      	nop
 8010f94:	20000abc 	.word	0x20000abc

08010f98 <_Balloc>:
 8010f98:	b570      	push	{r4, r5, r6, lr}
 8010f9a:	69c6      	ldr	r6, [r0, #28]
 8010f9c:	4604      	mov	r4, r0
 8010f9e:	460d      	mov	r5, r1
 8010fa0:	b976      	cbnz	r6, 8010fc0 <_Balloc+0x28>
 8010fa2:	2010      	movs	r0, #16
 8010fa4:	f7ff ff30 	bl	8010e08 <malloc>
 8010fa8:	4602      	mov	r2, r0
 8010faa:	61e0      	str	r0, [r4, #28]
 8010fac:	b920      	cbnz	r0, 8010fb8 <_Balloc+0x20>
 8010fae:	4b18      	ldr	r3, [pc, #96]	@ (8011010 <_Balloc+0x78>)
 8010fb0:	4818      	ldr	r0, [pc, #96]	@ (8011014 <_Balloc+0x7c>)
 8010fb2:	216b      	movs	r1, #107	@ 0x6b
 8010fb4:	f000 ff58 	bl	8011e68 <__assert_func>
 8010fb8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8010fbc:	6006      	str	r6, [r0, #0]
 8010fbe:	60c6      	str	r6, [r0, #12]
 8010fc0:	69e6      	ldr	r6, [r4, #28]
 8010fc2:	68f3      	ldr	r3, [r6, #12]
 8010fc4:	b183      	cbz	r3, 8010fe8 <_Balloc+0x50>
 8010fc6:	69e3      	ldr	r3, [r4, #28]
 8010fc8:	68db      	ldr	r3, [r3, #12]
 8010fca:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8010fce:	b9b8      	cbnz	r0, 8011000 <_Balloc+0x68>
 8010fd0:	2101      	movs	r1, #1
 8010fd2:	fa01 f605 	lsl.w	r6, r1, r5
 8010fd6:	1d72      	adds	r2, r6, #5
 8010fd8:	0092      	lsls	r2, r2, #2
 8010fda:	4620      	mov	r0, r4
 8010fdc:	f000 ff62 	bl	8011ea4 <_calloc_r>
 8010fe0:	b160      	cbz	r0, 8010ffc <_Balloc+0x64>
 8010fe2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8010fe6:	e00e      	b.n	8011006 <_Balloc+0x6e>
 8010fe8:	2221      	movs	r2, #33	@ 0x21
 8010fea:	2104      	movs	r1, #4
 8010fec:	4620      	mov	r0, r4
 8010fee:	f000 ff59 	bl	8011ea4 <_calloc_r>
 8010ff2:	69e3      	ldr	r3, [r4, #28]
 8010ff4:	60f0      	str	r0, [r6, #12]
 8010ff6:	68db      	ldr	r3, [r3, #12]
 8010ff8:	2b00      	cmp	r3, #0
 8010ffa:	d1e4      	bne.n	8010fc6 <_Balloc+0x2e>
 8010ffc:	2000      	movs	r0, #0
 8010ffe:	bd70      	pop	{r4, r5, r6, pc}
 8011000:	6802      	ldr	r2, [r0, #0]
 8011002:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8011006:	2300      	movs	r3, #0
 8011008:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801100c:	e7f7      	b.n	8010ffe <_Balloc+0x66>
 801100e:	bf00      	nop
 8011010:	0801295e 	.word	0x0801295e
 8011014:	08012a3e 	.word	0x08012a3e

08011018 <_Bfree>:
 8011018:	b570      	push	{r4, r5, r6, lr}
 801101a:	69c6      	ldr	r6, [r0, #28]
 801101c:	4605      	mov	r5, r0
 801101e:	460c      	mov	r4, r1
 8011020:	b976      	cbnz	r6, 8011040 <_Bfree+0x28>
 8011022:	2010      	movs	r0, #16
 8011024:	f7ff fef0 	bl	8010e08 <malloc>
 8011028:	4602      	mov	r2, r0
 801102a:	61e8      	str	r0, [r5, #28]
 801102c:	b920      	cbnz	r0, 8011038 <_Bfree+0x20>
 801102e:	4b09      	ldr	r3, [pc, #36]	@ (8011054 <_Bfree+0x3c>)
 8011030:	4809      	ldr	r0, [pc, #36]	@ (8011058 <_Bfree+0x40>)
 8011032:	218f      	movs	r1, #143	@ 0x8f
 8011034:	f000 ff18 	bl	8011e68 <__assert_func>
 8011038:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801103c:	6006      	str	r6, [r0, #0]
 801103e:	60c6      	str	r6, [r0, #12]
 8011040:	b13c      	cbz	r4, 8011052 <_Bfree+0x3a>
 8011042:	69eb      	ldr	r3, [r5, #28]
 8011044:	6862      	ldr	r2, [r4, #4]
 8011046:	68db      	ldr	r3, [r3, #12]
 8011048:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801104c:	6021      	str	r1, [r4, #0]
 801104e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8011052:	bd70      	pop	{r4, r5, r6, pc}
 8011054:	0801295e 	.word	0x0801295e
 8011058:	08012a3e 	.word	0x08012a3e

0801105c <__multadd>:
 801105c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011060:	690d      	ldr	r5, [r1, #16]
 8011062:	4607      	mov	r7, r0
 8011064:	460c      	mov	r4, r1
 8011066:	461e      	mov	r6, r3
 8011068:	f101 0c14 	add.w	ip, r1, #20
 801106c:	2000      	movs	r0, #0
 801106e:	f8dc 3000 	ldr.w	r3, [ip]
 8011072:	b299      	uxth	r1, r3
 8011074:	fb02 6101 	mla	r1, r2, r1, r6
 8011078:	0c1e      	lsrs	r6, r3, #16
 801107a:	0c0b      	lsrs	r3, r1, #16
 801107c:	fb02 3306 	mla	r3, r2, r6, r3
 8011080:	b289      	uxth	r1, r1
 8011082:	3001      	adds	r0, #1
 8011084:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8011088:	4285      	cmp	r5, r0
 801108a:	f84c 1b04 	str.w	r1, [ip], #4
 801108e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8011092:	dcec      	bgt.n	801106e <__multadd+0x12>
 8011094:	b30e      	cbz	r6, 80110da <__multadd+0x7e>
 8011096:	68a3      	ldr	r3, [r4, #8]
 8011098:	42ab      	cmp	r3, r5
 801109a:	dc19      	bgt.n	80110d0 <__multadd+0x74>
 801109c:	6861      	ldr	r1, [r4, #4]
 801109e:	4638      	mov	r0, r7
 80110a0:	3101      	adds	r1, #1
 80110a2:	f7ff ff79 	bl	8010f98 <_Balloc>
 80110a6:	4680      	mov	r8, r0
 80110a8:	b928      	cbnz	r0, 80110b6 <__multadd+0x5a>
 80110aa:	4602      	mov	r2, r0
 80110ac:	4b0c      	ldr	r3, [pc, #48]	@ (80110e0 <__multadd+0x84>)
 80110ae:	480d      	ldr	r0, [pc, #52]	@ (80110e4 <__multadd+0x88>)
 80110b0:	21ba      	movs	r1, #186	@ 0xba
 80110b2:	f000 fed9 	bl	8011e68 <__assert_func>
 80110b6:	6922      	ldr	r2, [r4, #16]
 80110b8:	3202      	adds	r2, #2
 80110ba:	f104 010c 	add.w	r1, r4, #12
 80110be:	0092      	lsls	r2, r2, #2
 80110c0:	300c      	adds	r0, #12
 80110c2:	f7fe fcb2 	bl	800fa2a <memcpy>
 80110c6:	4621      	mov	r1, r4
 80110c8:	4638      	mov	r0, r7
 80110ca:	f7ff ffa5 	bl	8011018 <_Bfree>
 80110ce:	4644      	mov	r4, r8
 80110d0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80110d4:	3501      	adds	r5, #1
 80110d6:	615e      	str	r6, [r3, #20]
 80110d8:	6125      	str	r5, [r4, #16]
 80110da:	4620      	mov	r0, r4
 80110dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80110e0:	080129cd 	.word	0x080129cd
 80110e4:	08012a3e 	.word	0x08012a3e

080110e8 <__s2b>:
 80110e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80110ec:	460c      	mov	r4, r1
 80110ee:	4615      	mov	r5, r2
 80110f0:	461f      	mov	r7, r3
 80110f2:	2209      	movs	r2, #9
 80110f4:	3308      	adds	r3, #8
 80110f6:	4606      	mov	r6, r0
 80110f8:	fb93 f3f2 	sdiv	r3, r3, r2
 80110fc:	2100      	movs	r1, #0
 80110fe:	2201      	movs	r2, #1
 8011100:	429a      	cmp	r2, r3
 8011102:	db09      	blt.n	8011118 <__s2b+0x30>
 8011104:	4630      	mov	r0, r6
 8011106:	f7ff ff47 	bl	8010f98 <_Balloc>
 801110a:	b940      	cbnz	r0, 801111e <__s2b+0x36>
 801110c:	4602      	mov	r2, r0
 801110e:	4b19      	ldr	r3, [pc, #100]	@ (8011174 <__s2b+0x8c>)
 8011110:	4819      	ldr	r0, [pc, #100]	@ (8011178 <__s2b+0x90>)
 8011112:	21d3      	movs	r1, #211	@ 0xd3
 8011114:	f000 fea8 	bl	8011e68 <__assert_func>
 8011118:	0052      	lsls	r2, r2, #1
 801111a:	3101      	adds	r1, #1
 801111c:	e7f0      	b.n	8011100 <__s2b+0x18>
 801111e:	9b08      	ldr	r3, [sp, #32]
 8011120:	6143      	str	r3, [r0, #20]
 8011122:	2d09      	cmp	r5, #9
 8011124:	f04f 0301 	mov.w	r3, #1
 8011128:	6103      	str	r3, [r0, #16]
 801112a:	dd16      	ble.n	801115a <__s2b+0x72>
 801112c:	f104 0909 	add.w	r9, r4, #9
 8011130:	46c8      	mov	r8, r9
 8011132:	442c      	add	r4, r5
 8011134:	f818 3b01 	ldrb.w	r3, [r8], #1
 8011138:	4601      	mov	r1, r0
 801113a:	3b30      	subs	r3, #48	@ 0x30
 801113c:	220a      	movs	r2, #10
 801113e:	4630      	mov	r0, r6
 8011140:	f7ff ff8c 	bl	801105c <__multadd>
 8011144:	45a0      	cmp	r8, r4
 8011146:	d1f5      	bne.n	8011134 <__s2b+0x4c>
 8011148:	f1a5 0408 	sub.w	r4, r5, #8
 801114c:	444c      	add	r4, r9
 801114e:	1b2d      	subs	r5, r5, r4
 8011150:	1963      	adds	r3, r4, r5
 8011152:	42bb      	cmp	r3, r7
 8011154:	db04      	blt.n	8011160 <__s2b+0x78>
 8011156:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801115a:	340a      	adds	r4, #10
 801115c:	2509      	movs	r5, #9
 801115e:	e7f6      	b.n	801114e <__s2b+0x66>
 8011160:	f814 3b01 	ldrb.w	r3, [r4], #1
 8011164:	4601      	mov	r1, r0
 8011166:	3b30      	subs	r3, #48	@ 0x30
 8011168:	220a      	movs	r2, #10
 801116a:	4630      	mov	r0, r6
 801116c:	f7ff ff76 	bl	801105c <__multadd>
 8011170:	e7ee      	b.n	8011150 <__s2b+0x68>
 8011172:	bf00      	nop
 8011174:	080129cd 	.word	0x080129cd
 8011178:	08012a3e 	.word	0x08012a3e

0801117c <__hi0bits>:
 801117c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8011180:	4603      	mov	r3, r0
 8011182:	bf36      	itet	cc
 8011184:	0403      	lslcc	r3, r0, #16
 8011186:	2000      	movcs	r0, #0
 8011188:	2010      	movcc	r0, #16
 801118a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 801118e:	bf3c      	itt	cc
 8011190:	021b      	lslcc	r3, r3, #8
 8011192:	3008      	addcc	r0, #8
 8011194:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8011198:	bf3c      	itt	cc
 801119a:	011b      	lslcc	r3, r3, #4
 801119c:	3004      	addcc	r0, #4
 801119e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80111a2:	bf3c      	itt	cc
 80111a4:	009b      	lslcc	r3, r3, #2
 80111a6:	3002      	addcc	r0, #2
 80111a8:	2b00      	cmp	r3, #0
 80111aa:	db05      	blt.n	80111b8 <__hi0bits+0x3c>
 80111ac:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80111b0:	f100 0001 	add.w	r0, r0, #1
 80111b4:	bf08      	it	eq
 80111b6:	2020      	moveq	r0, #32
 80111b8:	4770      	bx	lr

080111ba <__lo0bits>:
 80111ba:	6803      	ldr	r3, [r0, #0]
 80111bc:	4602      	mov	r2, r0
 80111be:	f013 0007 	ands.w	r0, r3, #7
 80111c2:	d00b      	beq.n	80111dc <__lo0bits+0x22>
 80111c4:	07d9      	lsls	r1, r3, #31
 80111c6:	d421      	bmi.n	801120c <__lo0bits+0x52>
 80111c8:	0798      	lsls	r0, r3, #30
 80111ca:	bf49      	itett	mi
 80111cc:	085b      	lsrmi	r3, r3, #1
 80111ce:	089b      	lsrpl	r3, r3, #2
 80111d0:	2001      	movmi	r0, #1
 80111d2:	6013      	strmi	r3, [r2, #0]
 80111d4:	bf5c      	itt	pl
 80111d6:	6013      	strpl	r3, [r2, #0]
 80111d8:	2002      	movpl	r0, #2
 80111da:	4770      	bx	lr
 80111dc:	b299      	uxth	r1, r3
 80111de:	b909      	cbnz	r1, 80111e4 <__lo0bits+0x2a>
 80111e0:	0c1b      	lsrs	r3, r3, #16
 80111e2:	2010      	movs	r0, #16
 80111e4:	b2d9      	uxtb	r1, r3
 80111e6:	b909      	cbnz	r1, 80111ec <__lo0bits+0x32>
 80111e8:	3008      	adds	r0, #8
 80111ea:	0a1b      	lsrs	r3, r3, #8
 80111ec:	0719      	lsls	r1, r3, #28
 80111ee:	bf04      	itt	eq
 80111f0:	091b      	lsreq	r3, r3, #4
 80111f2:	3004      	addeq	r0, #4
 80111f4:	0799      	lsls	r1, r3, #30
 80111f6:	bf04      	itt	eq
 80111f8:	089b      	lsreq	r3, r3, #2
 80111fa:	3002      	addeq	r0, #2
 80111fc:	07d9      	lsls	r1, r3, #31
 80111fe:	d403      	bmi.n	8011208 <__lo0bits+0x4e>
 8011200:	085b      	lsrs	r3, r3, #1
 8011202:	f100 0001 	add.w	r0, r0, #1
 8011206:	d003      	beq.n	8011210 <__lo0bits+0x56>
 8011208:	6013      	str	r3, [r2, #0]
 801120a:	4770      	bx	lr
 801120c:	2000      	movs	r0, #0
 801120e:	4770      	bx	lr
 8011210:	2020      	movs	r0, #32
 8011212:	4770      	bx	lr

08011214 <__i2b>:
 8011214:	b510      	push	{r4, lr}
 8011216:	460c      	mov	r4, r1
 8011218:	2101      	movs	r1, #1
 801121a:	f7ff febd 	bl	8010f98 <_Balloc>
 801121e:	4602      	mov	r2, r0
 8011220:	b928      	cbnz	r0, 801122e <__i2b+0x1a>
 8011222:	4b05      	ldr	r3, [pc, #20]	@ (8011238 <__i2b+0x24>)
 8011224:	4805      	ldr	r0, [pc, #20]	@ (801123c <__i2b+0x28>)
 8011226:	f240 1145 	movw	r1, #325	@ 0x145
 801122a:	f000 fe1d 	bl	8011e68 <__assert_func>
 801122e:	2301      	movs	r3, #1
 8011230:	6144      	str	r4, [r0, #20]
 8011232:	6103      	str	r3, [r0, #16]
 8011234:	bd10      	pop	{r4, pc}
 8011236:	bf00      	nop
 8011238:	080129cd 	.word	0x080129cd
 801123c:	08012a3e 	.word	0x08012a3e

08011240 <__multiply>:
 8011240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011244:	4614      	mov	r4, r2
 8011246:	690a      	ldr	r2, [r1, #16]
 8011248:	6923      	ldr	r3, [r4, #16]
 801124a:	429a      	cmp	r2, r3
 801124c:	bfa8      	it	ge
 801124e:	4623      	movge	r3, r4
 8011250:	460f      	mov	r7, r1
 8011252:	bfa4      	itt	ge
 8011254:	460c      	movge	r4, r1
 8011256:	461f      	movge	r7, r3
 8011258:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801125c:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8011260:	68a3      	ldr	r3, [r4, #8]
 8011262:	6861      	ldr	r1, [r4, #4]
 8011264:	eb0a 0609 	add.w	r6, sl, r9
 8011268:	42b3      	cmp	r3, r6
 801126a:	b085      	sub	sp, #20
 801126c:	bfb8      	it	lt
 801126e:	3101      	addlt	r1, #1
 8011270:	f7ff fe92 	bl	8010f98 <_Balloc>
 8011274:	b930      	cbnz	r0, 8011284 <__multiply+0x44>
 8011276:	4602      	mov	r2, r0
 8011278:	4b44      	ldr	r3, [pc, #272]	@ (801138c <__multiply+0x14c>)
 801127a:	4845      	ldr	r0, [pc, #276]	@ (8011390 <__multiply+0x150>)
 801127c:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8011280:	f000 fdf2 	bl	8011e68 <__assert_func>
 8011284:	f100 0514 	add.w	r5, r0, #20
 8011288:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801128c:	462b      	mov	r3, r5
 801128e:	2200      	movs	r2, #0
 8011290:	4543      	cmp	r3, r8
 8011292:	d321      	bcc.n	80112d8 <__multiply+0x98>
 8011294:	f107 0114 	add.w	r1, r7, #20
 8011298:	f104 0214 	add.w	r2, r4, #20
 801129c:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80112a0:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80112a4:	9302      	str	r3, [sp, #8]
 80112a6:	1b13      	subs	r3, r2, r4
 80112a8:	3b15      	subs	r3, #21
 80112aa:	f023 0303 	bic.w	r3, r3, #3
 80112ae:	3304      	adds	r3, #4
 80112b0:	f104 0715 	add.w	r7, r4, #21
 80112b4:	42ba      	cmp	r2, r7
 80112b6:	bf38      	it	cc
 80112b8:	2304      	movcc	r3, #4
 80112ba:	9301      	str	r3, [sp, #4]
 80112bc:	9b02      	ldr	r3, [sp, #8]
 80112be:	9103      	str	r1, [sp, #12]
 80112c0:	428b      	cmp	r3, r1
 80112c2:	d80c      	bhi.n	80112de <__multiply+0x9e>
 80112c4:	2e00      	cmp	r6, #0
 80112c6:	dd03      	ble.n	80112d0 <__multiply+0x90>
 80112c8:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80112cc:	2b00      	cmp	r3, #0
 80112ce:	d05b      	beq.n	8011388 <__multiply+0x148>
 80112d0:	6106      	str	r6, [r0, #16]
 80112d2:	b005      	add	sp, #20
 80112d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112d8:	f843 2b04 	str.w	r2, [r3], #4
 80112dc:	e7d8      	b.n	8011290 <__multiply+0x50>
 80112de:	f8b1 a000 	ldrh.w	sl, [r1]
 80112e2:	f1ba 0f00 	cmp.w	sl, #0
 80112e6:	d024      	beq.n	8011332 <__multiply+0xf2>
 80112e8:	f104 0e14 	add.w	lr, r4, #20
 80112ec:	46a9      	mov	r9, r5
 80112ee:	f04f 0c00 	mov.w	ip, #0
 80112f2:	f85e 7b04 	ldr.w	r7, [lr], #4
 80112f6:	f8d9 3000 	ldr.w	r3, [r9]
 80112fa:	fa1f fb87 	uxth.w	fp, r7
 80112fe:	b29b      	uxth	r3, r3
 8011300:	fb0a 330b 	mla	r3, sl, fp, r3
 8011304:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8011308:	f8d9 7000 	ldr.w	r7, [r9]
 801130c:	4463      	add	r3, ip
 801130e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8011312:	fb0a c70b 	mla	r7, sl, fp, ip
 8011316:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 801131a:	b29b      	uxth	r3, r3
 801131c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8011320:	4572      	cmp	r2, lr
 8011322:	f849 3b04 	str.w	r3, [r9], #4
 8011326:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801132a:	d8e2      	bhi.n	80112f2 <__multiply+0xb2>
 801132c:	9b01      	ldr	r3, [sp, #4]
 801132e:	f845 c003 	str.w	ip, [r5, r3]
 8011332:	9b03      	ldr	r3, [sp, #12]
 8011334:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8011338:	3104      	adds	r1, #4
 801133a:	f1b9 0f00 	cmp.w	r9, #0
 801133e:	d021      	beq.n	8011384 <__multiply+0x144>
 8011340:	682b      	ldr	r3, [r5, #0]
 8011342:	f104 0c14 	add.w	ip, r4, #20
 8011346:	46ae      	mov	lr, r5
 8011348:	f04f 0a00 	mov.w	sl, #0
 801134c:	f8bc b000 	ldrh.w	fp, [ip]
 8011350:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8011354:	fb09 770b 	mla	r7, r9, fp, r7
 8011358:	4457      	add	r7, sl
 801135a:	b29b      	uxth	r3, r3
 801135c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8011360:	f84e 3b04 	str.w	r3, [lr], #4
 8011364:	f85c 3b04 	ldr.w	r3, [ip], #4
 8011368:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801136c:	f8be 3000 	ldrh.w	r3, [lr]
 8011370:	fb09 330a 	mla	r3, r9, sl, r3
 8011374:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8011378:	4562      	cmp	r2, ip
 801137a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801137e:	d8e5      	bhi.n	801134c <__multiply+0x10c>
 8011380:	9f01      	ldr	r7, [sp, #4]
 8011382:	51eb      	str	r3, [r5, r7]
 8011384:	3504      	adds	r5, #4
 8011386:	e799      	b.n	80112bc <__multiply+0x7c>
 8011388:	3e01      	subs	r6, #1
 801138a:	e79b      	b.n	80112c4 <__multiply+0x84>
 801138c:	080129cd 	.word	0x080129cd
 8011390:	08012a3e 	.word	0x08012a3e

08011394 <__pow5mult>:
 8011394:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011398:	4615      	mov	r5, r2
 801139a:	f012 0203 	ands.w	r2, r2, #3
 801139e:	4607      	mov	r7, r0
 80113a0:	460e      	mov	r6, r1
 80113a2:	d007      	beq.n	80113b4 <__pow5mult+0x20>
 80113a4:	4c25      	ldr	r4, [pc, #148]	@ (801143c <__pow5mult+0xa8>)
 80113a6:	3a01      	subs	r2, #1
 80113a8:	2300      	movs	r3, #0
 80113aa:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80113ae:	f7ff fe55 	bl	801105c <__multadd>
 80113b2:	4606      	mov	r6, r0
 80113b4:	10ad      	asrs	r5, r5, #2
 80113b6:	d03d      	beq.n	8011434 <__pow5mult+0xa0>
 80113b8:	69fc      	ldr	r4, [r7, #28]
 80113ba:	b97c      	cbnz	r4, 80113dc <__pow5mult+0x48>
 80113bc:	2010      	movs	r0, #16
 80113be:	f7ff fd23 	bl	8010e08 <malloc>
 80113c2:	4602      	mov	r2, r0
 80113c4:	61f8      	str	r0, [r7, #28]
 80113c6:	b928      	cbnz	r0, 80113d4 <__pow5mult+0x40>
 80113c8:	4b1d      	ldr	r3, [pc, #116]	@ (8011440 <__pow5mult+0xac>)
 80113ca:	481e      	ldr	r0, [pc, #120]	@ (8011444 <__pow5mult+0xb0>)
 80113cc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80113d0:	f000 fd4a 	bl	8011e68 <__assert_func>
 80113d4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80113d8:	6004      	str	r4, [r0, #0]
 80113da:	60c4      	str	r4, [r0, #12]
 80113dc:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80113e0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80113e4:	b94c      	cbnz	r4, 80113fa <__pow5mult+0x66>
 80113e6:	f240 2171 	movw	r1, #625	@ 0x271
 80113ea:	4638      	mov	r0, r7
 80113ec:	f7ff ff12 	bl	8011214 <__i2b>
 80113f0:	2300      	movs	r3, #0
 80113f2:	f8c8 0008 	str.w	r0, [r8, #8]
 80113f6:	4604      	mov	r4, r0
 80113f8:	6003      	str	r3, [r0, #0]
 80113fa:	f04f 0900 	mov.w	r9, #0
 80113fe:	07eb      	lsls	r3, r5, #31
 8011400:	d50a      	bpl.n	8011418 <__pow5mult+0x84>
 8011402:	4631      	mov	r1, r6
 8011404:	4622      	mov	r2, r4
 8011406:	4638      	mov	r0, r7
 8011408:	f7ff ff1a 	bl	8011240 <__multiply>
 801140c:	4631      	mov	r1, r6
 801140e:	4680      	mov	r8, r0
 8011410:	4638      	mov	r0, r7
 8011412:	f7ff fe01 	bl	8011018 <_Bfree>
 8011416:	4646      	mov	r6, r8
 8011418:	106d      	asrs	r5, r5, #1
 801141a:	d00b      	beq.n	8011434 <__pow5mult+0xa0>
 801141c:	6820      	ldr	r0, [r4, #0]
 801141e:	b938      	cbnz	r0, 8011430 <__pow5mult+0x9c>
 8011420:	4622      	mov	r2, r4
 8011422:	4621      	mov	r1, r4
 8011424:	4638      	mov	r0, r7
 8011426:	f7ff ff0b 	bl	8011240 <__multiply>
 801142a:	6020      	str	r0, [r4, #0]
 801142c:	f8c0 9000 	str.w	r9, [r0]
 8011430:	4604      	mov	r4, r0
 8011432:	e7e4      	b.n	80113fe <__pow5mult+0x6a>
 8011434:	4630      	mov	r0, r6
 8011436:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801143a:	bf00      	nop
 801143c:	08012a98 	.word	0x08012a98
 8011440:	0801295e 	.word	0x0801295e
 8011444:	08012a3e 	.word	0x08012a3e

08011448 <__lshift>:
 8011448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801144c:	460c      	mov	r4, r1
 801144e:	6849      	ldr	r1, [r1, #4]
 8011450:	6923      	ldr	r3, [r4, #16]
 8011452:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8011456:	68a3      	ldr	r3, [r4, #8]
 8011458:	4607      	mov	r7, r0
 801145a:	4691      	mov	r9, r2
 801145c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011460:	f108 0601 	add.w	r6, r8, #1
 8011464:	42b3      	cmp	r3, r6
 8011466:	db0b      	blt.n	8011480 <__lshift+0x38>
 8011468:	4638      	mov	r0, r7
 801146a:	f7ff fd95 	bl	8010f98 <_Balloc>
 801146e:	4605      	mov	r5, r0
 8011470:	b948      	cbnz	r0, 8011486 <__lshift+0x3e>
 8011472:	4602      	mov	r2, r0
 8011474:	4b28      	ldr	r3, [pc, #160]	@ (8011518 <__lshift+0xd0>)
 8011476:	4829      	ldr	r0, [pc, #164]	@ (801151c <__lshift+0xd4>)
 8011478:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 801147c:	f000 fcf4 	bl	8011e68 <__assert_func>
 8011480:	3101      	adds	r1, #1
 8011482:	005b      	lsls	r3, r3, #1
 8011484:	e7ee      	b.n	8011464 <__lshift+0x1c>
 8011486:	2300      	movs	r3, #0
 8011488:	f100 0114 	add.w	r1, r0, #20
 801148c:	f100 0210 	add.w	r2, r0, #16
 8011490:	4618      	mov	r0, r3
 8011492:	4553      	cmp	r3, sl
 8011494:	db33      	blt.n	80114fe <__lshift+0xb6>
 8011496:	6920      	ldr	r0, [r4, #16]
 8011498:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 801149c:	f104 0314 	add.w	r3, r4, #20
 80114a0:	f019 091f 	ands.w	r9, r9, #31
 80114a4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80114a8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80114ac:	d02b      	beq.n	8011506 <__lshift+0xbe>
 80114ae:	f1c9 0e20 	rsb	lr, r9, #32
 80114b2:	468a      	mov	sl, r1
 80114b4:	2200      	movs	r2, #0
 80114b6:	6818      	ldr	r0, [r3, #0]
 80114b8:	fa00 f009 	lsl.w	r0, r0, r9
 80114bc:	4310      	orrs	r0, r2
 80114be:	f84a 0b04 	str.w	r0, [sl], #4
 80114c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80114c6:	459c      	cmp	ip, r3
 80114c8:	fa22 f20e 	lsr.w	r2, r2, lr
 80114cc:	d8f3      	bhi.n	80114b6 <__lshift+0x6e>
 80114ce:	ebac 0304 	sub.w	r3, ip, r4
 80114d2:	3b15      	subs	r3, #21
 80114d4:	f023 0303 	bic.w	r3, r3, #3
 80114d8:	3304      	adds	r3, #4
 80114da:	f104 0015 	add.w	r0, r4, #21
 80114de:	4584      	cmp	ip, r0
 80114e0:	bf38      	it	cc
 80114e2:	2304      	movcc	r3, #4
 80114e4:	50ca      	str	r2, [r1, r3]
 80114e6:	b10a      	cbz	r2, 80114ec <__lshift+0xa4>
 80114e8:	f108 0602 	add.w	r6, r8, #2
 80114ec:	3e01      	subs	r6, #1
 80114ee:	4638      	mov	r0, r7
 80114f0:	612e      	str	r6, [r5, #16]
 80114f2:	4621      	mov	r1, r4
 80114f4:	f7ff fd90 	bl	8011018 <_Bfree>
 80114f8:	4628      	mov	r0, r5
 80114fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80114fe:	f842 0f04 	str.w	r0, [r2, #4]!
 8011502:	3301      	adds	r3, #1
 8011504:	e7c5      	b.n	8011492 <__lshift+0x4a>
 8011506:	3904      	subs	r1, #4
 8011508:	f853 2b04 	ldr.w	r2, [r3], #4
 801150c:	f841 2f04 	str.w	r2, [r1, #4]!
 8011510:	459c      	cmp	ip, r3
 8011512:	d8f9      	bhi.n	8011508 <__lshift+0xc0>
 8011514:	e7ea      	b.n	80114ec <__lshift+0xa4>
 8011516:	bf00      	nop
 8011518:	080129cd 	.word	0x080129cd
 801151c:	08012a3e 	.word	0x08012a3e

08011520 <__mcmp>:
 8011520:	690a      	ldr	r2, [r1, #16]
 8011522:	4603      	mov	r3, r0
 8011524:	6900      	ldr	r0, [r0, #16]
 8011526:	1a80      	subs	r0, r0, r2
 8011528:	b530      	push	{r4, r5, lr}
 801152a:	d10e      	bne.n	801154a <__mcmp+0x2a>
 801152c:	3314      	adds	r3, #20
 801152e:	3114      	adds	r1, #20
 8011530:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8011534:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8011538:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 801153c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8011540:	4295      	cmp	r5, r2
 8011542:	d003      	beq.n	801154c <__mcmp+0x2c>
 8011544:	d205      	bcs.n	8011552 <__mcmp+0x32>
 8011546:	f04f 30ff 	mov.w	r0, #4294967295
 801154a:	bd30      	pop	{r4, r5, pc}
 801154c:	42a3      	cmp	r3, r4
 801154e:	d3f3      	bcc.n	8011538 <__mcmp+0x18>
 8011550:	e7fb      	b.n	801154a <__mcmp+0x2a>
 8011552:	2001      	movs	r0, #1
 8011554:	e7f9      	b.n	801154a <__mcmp+0x2a>
	...

08011558 <__mdiff>:
 8011558:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801155c:	4689      	mov	r9, r1
 801155e:	4606      	mov	r6, r0
 8011560:	4611      	mov	r1, r2
 8011562:	4648      	mov	r0, r9
 8011564:	4614      	mov	r4, r2
 8011566:	f7ff ffdb 	bl	8011520 <__mcmp>
 801156a:	1e05      	subs	r5, r0, #0
 801156c:	d112      	bne.n	8011594 <__mdiff+0x3c>
 801156e:	4629      	mov	r1, r5
 8011570:	4630      	mov	r0, r6
 8011572:	f7ff fd11 	bl	8010f98 <_Balloc>
 8011576:	4602      	mov	r2, r0
 8011578:	b928      	cbnz	r0, 8011586 <__mdiff+0x2e>
 801157a:	4b3f      	ldr	r3, [pc, #252]	@ (8011678 <__mdiff+0x120>)
 801157c:	f240 2137 	movw	r1, #567	@ 0x237
 8011580:	483e      	ldr	r0, [pc, #248]	@ (801167c <__mdiff+0x124>)
 8011582:	f000 fc71 	bl	8011e68 <__assert_func>
 8011586:	2301      	movs	r3, #1
 8011588:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801158c:	4610      	mov	r0, r2
 801158e:	b003      	add	sp, #12
 8011590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011594:	bfbc      	itt	lt
 8011596:	464b      	movlt	r3, r9
 8011598:	46a1      	movlt	r9, r4
 801159a:	4630      	mov	r0, r6
 801159c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80115a0:	bfba      	itte	lt
 80115a2:	461c      	movlt	r4, r3
 80115a4:	2501      	movlt	r5, #1
 80115a6:	2500      	movge	r5, #0
 80115a8:	f7ff fcf6 	bl	8010f98 <_Balloc>
 80115ac:	4602      	mov	r2, r0
 80115ae:	b918      	cbnz	r0, 80115b8 <__mdiff+0x60>
 80115b0:	4b31      	ldr	r3, [pc, #196]	@ (8011678 <__mdiff+0x120>)
 80115b2:	f240 2145 	movw	r1, #581	@ 0x245
 80115b6:	e7e3      	b.n	8011580 <__mdiff+0x28>
 80115b8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80115bc:	6926      	ldr	r6, [r4, #16]
 80115be:	60c5      	str	r5, [r0, #12]
 80115c0:	f109 0310 	add.w	r3, r9, #16
 80115c4:	f109 0514 	add.w	r5, r9, #20
 80115c8:	f104 0e14 	add.w	lr, r4, #20
 80115cc:	f100 0b14 	add.w	fp, r0, #20
 80115d0:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80115d4:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80115d8:	9301      	str	r3, [sp, #4]
 80115da:	46d9      	mov	r9, fp
 80115dc:	f04f 0c00 	mov.w	ip, #0
 80115e0:	9b01      	ldr	r3, [sp, #4]
 80115e2:	f85e 0b04 	ldr.w	r0, [lr], #4
 80115e6:	f853 af04 	ldr.w	sl, [r3, #4]!
 80115ea:	9301      	str	r3, [sp, #4]
 80115ec:	fa1f f38a 	uxth.w	r3, sl
 80115f0:	4619      	mov	r1, r3
 80115f2:	b283      	uxth	r3, r0
 80115f4:	1acb      	subs	r3, r1, r3
 80115f6:	0c00      	lsrs	r0, r0, #16
 80115f8:	4463      	add	r3, ip
 80115fa:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80115fe:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8011602:	b29b      	uxth	r3, r3
 8011604:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8011608:	4576      	cmp	r6, lr
 801160a:	f849 3b04 	str.w	r3, [r9], #4
 801160e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8011612:	d8e5      	bhi.n	80115e0 <__mdiff+0x88>
 8011614:	1b33      	subs	r3, r6, r4
 8011616:	3b15      	subs	r3, #21
 8011618:	f023 0303 	bic.w	r3, r3, #3
 801161c:	3415      	adds	r4, #21
 801161e:	3304      	adds	r3, #4
 8011620:	42a6      	cmp	r6, r4
 8011622:	bf38      	it	cc
 8011624:	2304      	movcc	r3, #4
 8011626:	441d      	add	r5, r3
 8011628:	445b      	add	r3, fp
 801162a:	461e      	mov	r6, r3
 801162c:	462c      	mov	r4, r5
 801162e:	4544      	cmp	r4, r8
 8011630:	d30e      	bcc.n	8011650 <__mdiff+0xf8>
 8011632:	f108 0103 	add.w	r1, r8, #3
 8011636:	1b49      	subs	r1, r1, r5
 8011638:	f021 0103 	bic.w	r1, r1, #3
 801163c:	3d03      	subs	r5, #3
 801163e:	45a8      	cmp	r8, r5
 8011640:	bf38      	it	cc
 8011642:	2100      	movcc	r1, #0
 8011644:	440b      	add	r3, r1
 8011646:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801164a:	b191      	cbz	r1, 8011672 <__mdiff+0x11a>
 801164c:	6117      	str	r7, [r2, #16]
 801164e:	e79d      	b.n	801158c <__mdiff+0x34>
 8011650:	f854 1b04 	ldr.w	r1, [r4], #4
 8011654:	46e6      	mov	lr, ip
 8011656:	0c08      	lsrs	r0, r1, #16
 8011658:	fa1c fc81 	uxtah	ip, ip, r1
 801165c:	4471      	add	r1, lr
 801165e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8011662:	b289      	uxth	r1, r1
 8011664:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8011668:	f846 1b04 	str.w	r1, [r6], #4
 801166c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8011670:	e7dd      	b.n	801162e <__mdiff+0xd6>
 8011672:	3f01      	subs	r7, #1
 8011674:	e7e7      	b.n	8011646 <__mdiff+0xee>
 8011676:	bf00      	nop
 8011678:	080129cd 	.word	0x080129cd
 801167c:	08012a3e 	.word	0x08012a3e

08011680 <__ulp>:
 8011680:	b082      	sub	sp, #8
 8011682:	ed8d 0b00 	vstr	d0, [sp]
 8011686:	9a01      	ldr	r2, [sp, #4]
 8011688:	4b0f      	ldr	r3, [pc, #60]	@ (80116c8 <__ulp+0x48>)
 801168a:	4013      	ands	r3, r2
 801168c:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8011690:	2b00      	cmp	r3, #0
 8011692:	dc08      	bgt.n	80116a6 <__ulp+0x26>
 8011694:	425b      	negs	r3, r3
 8011696:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 801169a:	ea4f 5223 	mov.w	r2, r3, asr #20
 801169e:	da04      	bge.n	80116aa <__ulp+0x2a>
 80116a0:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 80116a4:	4113      	asrs	r3, r2
 80116a6:	2200      	movs	r2, #0
 80116a8:	e008      	b.n	80116bc <__ulp+0x3c>
 80116aa:	f1a2 0314 	sub.w	r3, r2, #20
 80116ae:	2b1e      	cmp	r3, #30
 80116b0:	bfda      	itte	le
 80116b2:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 80116b6:	40da      	lsrle	r2, r3
 80116b8:	2201      	movgt	r2, #1
 80116ba:	2300      	movs	r3, #0
 80116bc:	4619      	mov	r1, r3
 80116be:	4610      	mov	r0, r2
 80116c0:	ec41 0b10 	vmov	d0, r0, r1
 80116c4:	b002      	add	sp, #8
 80116c6:	4770      	bx	lr
 80116c8:	7ff00000 	.word	0x7ff00000

080116cc <__b2d>:
 80116cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116d0:	6906      	ldr	r6, [r0, #16]
 80116d2:	f100 0814 	add.w	r8, r0, #20
 80116d6:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 80116da:	1f37      	subs	r7, r6, #4
 80116dc:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80116e0:	4610      	mov	r0, r2
 80116e2:	f7ff fd4b 	bl	801117c <__hi0bits>
 80116e6:	f1c0 0320 	rsb	r3, r0, #32
 80116ea:	280a      	cmp	r0, #10
 80116ec:	600b      	str	r3, [r1, #0]
 80116ee:	491b      	ldr	r1, [pc, #108]	@ (801175c <__b2d+0x90>)
 80116f0:	dc15      	bgt.n	801171e <__b2d+0x52>
 80116f2:	f1c0 0c0b 	rsb	ip, r0, #11
 80116f6:	fa22 f30c 	lsr.w	r3, r2, ip
 80116fa:	45b8      	cmp	r8, r7
 80116fc:	ea43 0501 	orr.w	r5, r3, r1
 8011700:	bf34      	ite	cc
 8011702:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8011706:	2300      	movcs	r3, #0
 8011708:	3015      	adds	r0, #21
 801170a:	fa02 f000 	lsl.w	r0, r2, r0
 801170e:	fa23 f30c 	lsr.w	r3, r3, ip
 8011712:	4303      	orrs	r3, r0
 8011714:	461c      	mov	r4, r3
 8011716:	ec45 4b10 	vmov	d0, r4, r5
 801171a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801171e:	45b8      	cmp	r8, r7
 8011720:	bf3a      	itte	cc
 8011722:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8011726:	f1a6 0708 	subcc.w	r7, r6, #8
 801172a:	2300      	movcs	r3, #0
 801172c:	380b      	subs	r0, #11
 801172e:	d012      	beq.n	8011756 <__b2d+0x8a>
 8011730:	f1c0 0120 	rsb	r1, r0, #32
 8011734:	fa23 f401 	lsr.w	r4, r3, r1
 8011738:	4082      	lsls	r2, r0
 801173a:	4322      	orrs	r2, r4
 801173c:	4547      	cmp	r7, r8
 801173e:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8011742:	bf8c      	ite	hi
 8011744:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8011748:	2200      	movls	r2, #0
 801174a:	4083      	lsls	r3, r0
 801174c:	40ca      	lsrs	r2, r1
 801174e:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 8011752:	4313      	orrs	r3, r2
 8011754:	e7de      	b.n	8011714 <__b2d+0x48>
 8011756:	ea42 0501 	orr.w	r5, r2, r1
 801175a:	e7db      	b.n	8011714 <__b2d+0x48>
 801175c:	3ff00000 	.word	0x3ff00000

08011760 <__d2b>:
 8011760:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011764:	460f      	mov	r7, r1
 8011766:	2101      	movs	r1, #1
 8011768:	ec59 8b10 	vmov	r8, r9, d0
 801176c:	4616      	mov	r6, r2
 801176e:	f7ff fc13 	bl	8010f98 <_Balloc>
 8011772:	4604      	mov	r4, r0
 8011774:	b930      	cbnz	r0, 8011784 <__d2b+0x24>
 8011776:	4602      	mov	r2, r0
 8011778:	4b23      	ldr	r3, [pc, #140]	@ (8011808 <__d2b+0xa8>)
 801177a:	4824      	ldr	r0, [pc, #144]	@ (801180c <__d2b+0xac>)
 801177c:	f240 310f 	movw	r1, #783	@ 0x30f
 8011780:	f000 fb72 	bl	8011e68 <__assert_func>
 8011784:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8011788:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801178c:	b10d      	cbz	r5, 8011792 <__d2b+0x32>
 801178e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8011792:	9301      	str	r3, [sp, #4]
 8011794:	f1b8 0300 	subs.w	r3, r8, #0
 8011798:	d023      	beq.n	80117e2 <__d2b+0x82>
 801179a:	4668      	mov	r0, sp
 801179c:	9300      	str	r3, [sp, #0]
 801179e:	f7ff fd0c 	bl	80111ba <__lo0bits>
 80117a2:	e9dd 1200 	ldrd	r1, r2, [sp]
 80117a6:	b1d0      	cbz	r0, 80117de <__d2b+0x7e>
 80117a8:	f1c0 0320 	rsb	r3, r0, #32
 80117ac:	fa02 f303 	lsl.w	r3, r2, r3
 80117b0:	430b      	orrs	r3, r1
 80117b2:	40c2      	lsrs	r2, r0
 80117b4:	6163      	str	r3, [r4, #20]
 80117b6:	9201      	str	r2, [sp, #4]
 80117b8:	9b01      	ldr	r3, [sp, #4]
 80117ba:	61a3      	str	r3, [r4, #24]
 80117bc:	2b00      	cmp	r3, #0
 80117be:	bf0c      	ite	eq
 80117c0:	2201      	moveq	r2, #1
 80117c2:	2202      	movne	r2, #2
 80117c4:	6122      	str	r2, [r4, #16]
 80117c6:	b1a5      	cbz	r5, 80117f2 <__d2b+0x92>
 80117c8:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80117cc:	4405      	add	r5, r0
 80117ce:	603d      	str	r5, [r7, #0]
 80117d0:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80117d4:	6030      	str	r0, [r6, #0]
 80117d6:	4620      	mov	r0, r4
 80117d8:	b003      	add	sp, #12
 80117da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80117de:	6161      	str	r1, [r4, #20]
 80117e0:	e7ea      	b.n	80117b8 <__d2b+0x58>
 80117e2:	a801      	add	r0, sp, #4
 80117e4:	f7ff fce9 	bl	80111ba <__lo0bits>
 80117e8:	9b01      	ldr	r3, [sp, #4]
 80117ea:	6163      	str	r3, [r4, #20]
 80117ec:	3020      	adds	r0, #32
 80117ee:	2201      	movs	r2, #1
 80117f0:	e7e8      	b.n	80117c4 <__d2b+0x64>
 80117f2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80117f6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80117fa:	6038      	str	r0, [r7, #0]
 80117fc:	6918      	ldr	r0, [r3, #16]
 80117fe:	f7ff fcbd 	bl	801117c <__hi0bits>
 8011802:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8011806:	e7e5      	b.n	80117d4 <__d2b+0x74>
 8011808:	080129cd 	.word	0x080129cd
 801180c:	08012a3e 	.word	0x08012a3e

08011810 <__ratio>:
 8011810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011814:	b085      	sub	sp, #20
 8011816:	e9cd 1000 	strd	r1, r0, [sp]
 801181a:	a902      	add	r1, sp, #8
 801181c:	f7ff ff56 	bl	80116cc <__b2d>
 8011820:	9800      	ldr	r0, [sp, #0]
 8011822:	a903      	add	r1, sp, #12
 8011824:	ec55 4b10 	vmov	r4, r5, d0
 8011828:	f7ff ff50 	bl	80116cc <__b2d>
 801182c:	9b01      	ldr	r3, [sp, #4]
 801182e:	6919      	ldr	r1, [r3, #16]
 8011830:	9b00      	ldr	r3, [sp, #0]
 8011832:	691b      	ldr	r3, [r3, #16]
 8011834:	1ac9      	subs	r1, r1, r3
 8011836:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 801183a:	1a9b      	subs	r3, r3, r2
 801183c:	ec5b ab10 	vmov	sl, fp, d0
 8011840:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8011844:	2b00      	cmp	r3, #0
 8011846:	bfce      	itee	gt
 8011848:	462a      	movgt	r2, r5
 801184a:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 801184e:	465a      	movle	r2, fp
 8011850:	462f      	mov	r7, r5
 8011852:	46d9      	mov	r9, fp
 8011854:	bfcc      	ite	gt
 8011856:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 801185a:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 801185e:	464b      	mov	r3, r9
 8011860:	4652      	mov	r2, sl
 8011862:	4620      	mov	r0, r4
 8011864:	4639      	mov	r1, r7
 8011866:	f7ef f819 	bl	800089c <__aeabi_ddiv>
 801186a:	ec41 0b10 	vmov	d0, r0, r1
 801186e:	b005      	add	sp, #20
 8011870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011874 <__copybits>:
 8011874:	3901      	subs	r1, #1
 8011876:	b570      	push	{r4, r5, r6, lr}
 8011878:	1149      	asrs	r1, r1, #5
 801187a:	6914      	ldr	r4, [r2, #16]
 801187c:	3101      	adds	r1, #1
 801187e:	f102 0314 	add.w	r3, r2, #20
 8011882:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8011886:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 801188a:	1f05      	subs	r5, r0, #4
 801188c:	42a3      	cmp	r3, r4
 801188e:	d30c      	bcc.n	80118aa <__copybits+0x36>
 8011890:	1aa3      	subs	r3, r4, r2
 8011892:	3b11      	subs	r3, #17
 8011894:	f023 0303 	bic.w	r3, r3, #3
 8011898:	3211      	adds	r2, #17
 801189a:	42a2      	cmp	r2, r4
 801189c:	bf88      	it	hi
 801189e:	2300      	movhi	r3, #0
 80118a0:	4418      	add	r0, r3
 80118a2:	2300      	movs	r3, #0
 80118a4:	4288      	cmp	r0, r1
 80118a6:	d305      	bcc.n	80118b4 <__copybits+0x40>
 80118a8:	bd70      	pop	{r4, r5, r6, pc}
 80118aa:	f853 6b04 	ldr.w	r6, [r3], #4
 80118ae:	f845 6f04 	str.w	r6, [r5, #4]!
 80118b2:	e7eb      	b.n	801188c <__copybits+0x18>
 80118b4:	f840 3b04 	str.w	r3, [r0], #4
 80118b8:	e7f4      	b.n	80118a4 <__copybits+0x30>

080118ba <__any_on>:
 80118ba:	f100 0214 	add.w	r2, r0, #20
 80118be:	6900      	ldr	r0, [r0, #16]
 80118c0:	114b      	asrs	r3, r1, #5
 80118c2:	4298      	cmp	r0, r3
 80118c4:	b510      	push	{r4, lr}
 80118c6:	db11      	blt.n	80118ec <__any_on+0x32>
 80118c8:	dd0a      	ble.n	80118e0 <__any_on+0x26>
 80118ca:	f011 011f 	ands.w	r1, r1, #31
 80118ce:	d007      	beq.n	80118e0 <__any_on+0x26>
 80118d0:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80118d4:	fa24 f001 	lsr.w	r0, r4, r1
 80118d8:	fa00 f101 	lsl.w	r1, r0, r1
 80118dc:	428c      	cmp	r4, r1
 80118de:	d10b      	bne.n	80118f8 <__any_on+0x3e>
 80118e0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80118e4:	4293      	cmp	r3, r2
 80118e6:	d803      	bhi.n	80118f0 <__any_on+0x36>
 80118e8:	2000      	movs	r0, #0
 80118ea:	bd10      	pop	{r4, pc}
 80118ec:	4603      	mov	r3, r0
 80118ee:	e7f7      	b.n	80118e0 <__any_on+0x26>
 80118f0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80118f4:	2900      	cmp	r1, #0
 80118f6:	d0f5      	beq.n	80118e4 <__any_on+0x2a>
 80118f8:	2001      	movs	r0, #1
 80118fa:	e7f6      	b.n	80118ea <__any_on+0x30>

080118fc <_strtol_l.constprop.0>:
 80118fc:	2b24      	cmp	r3, #36	@ 0x24
 80118fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011902:	4686      	mov	lr, r0
 8011904:	4690      	mov	r8, r2
 8011906:	d801      	bhi.n	801190c <_strtol_l.constprop.0+0x10>
 8011908:	2b01      	cmp	r3, #1
 801190a:	d106      	bne.n	801191a <_strtol_l.constprop.0+0x1e>
 801190c:	f7fe f860 	bl	800f9d0 <__errno>
 8011910:	2316      	movs	r3, #22
 8011912:	6003      	str	r3, [r0, #0]
 8011914:	2000      	movs	r0, #0
 8011916:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801191a:	4834      	ldr	r0, [pc, #208]	@ (80119ec <_strtol_l.constprop.0+0xf0>)
 801191c:	460d      	mov	r5, r1
 801191e:	462a      	mov	r2, r5
 8011920:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011924:	5d06      	ldrb	r6, [r0, r4]
 8011926:	f016 0608 	ands.w	r6, r6, #8
 801192a:	d1f8      	bne.n	801191e <_strtol_l.constprop.0+0x22>
 801192c:	2c2d      	cmp	r4, #45	@ 0x2d
 801192e:	d12d      	bne.n	801198c <_strtol_l.constprop.0+0x90>
 8011930:	782c      	ldrb	r4, [r5, #0]
 8011932:	2601      	movs	r6, #1
 8011934:	1c95      	adds	r5, r2, #2
 8011936:	f033 0210 	bics.w	r2, r3, #16
 801193a:	d109      	bne.n	8011950 <_strtol_l.constprop.0+0x54>
 801193c:	2c30      	cmp	r4, #48	@ 0x30
 801193e:	d12a      	bne.n	8011996 <_strtol_l.constprop.0+0x9a>
 8011940:	782a      	ldrb	r2, [r5, #0]
 8011942:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8011946:	2a58      	cmp	r2, #88	@ 0x58
 8011948:	d125      	bne.n	8011996 <_strtol_l.constprop.0+0x9a>
 801194a:	786c      	ldrb	r4, [r5, #1]
 801194c:	2310      	movs	r3, #16
 801194e:	3502      	adds	r5, #2
 8011950:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8011954:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011958:	2200      	movs	r2, #0
 801195a:	fbbc f9f3 	udiv	r9, ip, r3
 801195e:	4610      	mov	r0, r2
 8011960:	fb03 ca19 	mls	sl, r3, r9, ip
 8011964:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8011968:	2f09      	cmp	r7, #9
 801196a:	d81b      	bhi.n	80119a4 <_strtol_l.constprop.0+0xa8>
 801196c:	463c      	mov	r4, r7
 801196e:	42a3      	cmp	r3, r4
 8011970:	dd27      	ble.n	80119c2 <_strtol_l.constprop.0+0xc6>
 8011972:	1c57      	adds	r7, r2, #1
 8011974:	d007      	beq.n	8011986 <_strtol_l.constprop.0+0x8a>
 8011976:	4581      	cmp	r9, r0
 8011978:	d320      	bcc.n	80119bc <_strtol_l.constprop.0+0xc0>
 801197a:	d101      	bne.n	8011980 <_strtol_l.constprop.0+0x84>
 801197c:	45a2      	cmp	sl, r4
 801197e:	db1d      	blt.n	80119bc <_strtol_l.constprop.0+0xc0>
 8011980:	fb00 4003 	mla	r0, r0, r3, r4
 8011984:	2201      	movs	r2, #1
 8011986:	f815 4b01 	ldrb.w	r4, [r5], #1
 801198a:	e7eb      	b.n	8011964 <_strtol_l.constprop.0+0x68>
 801198c:	2c2b      	cmp	r4, #43	@ 0x2b
 801198e:	bf04      	itt	eq
 8011990:	782c      	ldrbeq	r4, [r5, #0]
 8011992:	1c95      	addeq	r5, r2, #2
 8011994:	e7cf      	b.n	8011936 <_strtol_l.constprop.0+0x3a>
 8011996:	2b00      	cmp	r3, #0
 8011998:	d1da      	bne.n	8011950 <_strtol_l.constprop.0+0x54>
 801199a:	2c30      	cmp	r4, #48	@ 0x30
 801199c:	bf0c      	ite	eq
 801199e:	2308      	moveq	r3, #8
 80119a0:	230a      	movne	r3, #10
 80119a2:	e7d5      	b.n	8011950 <_strtol_l.constprop.0+0x54>
 80119a4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80119a8:	2f19      	cmp	r7, #25
 80119aa:	d801      	bhi.n	80119b0 <_strtol_l.constprop.0+0xb4>
 80119ac:	3c37      	subs	r4, #55	@ 0x37
 80119ae:	e7de      	b.n	801196e <_strtol_l.constprop.0+0x72>
 80119b0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80119b4:	2f19      	cmp	r7, #25
 80119b6:	d804      	bhi.n	80119c2 <_strtol_l.constprop.0+0xc6>
 80119b8:	3c57      	subs	r4, #87	@ 0x57
 80119ba:	e7d8      	b.n	801196e <_strtol_l.constprop.0+0x72>
 80119bc:	f04f 32ff 	mov.w	r2, #4294967295
 80119c0:	e7e1      	b.n	8011986 <_strtol_l.constprop.0+0x8a>
 80119c2:	1c53      	adds	r3, r2, #1
 80119c4:	d108      	bne.n	80119d8 <_strtol_l.constprop.0+0xdc>
 80119c6:	2322      	movs	r3, #34	@ 0x22
 80119c8:	f8ce 3000 	str.w	r3, [lr]
 80119cc:	4660      	mov	r0, ip
 80119ce:	f1b8 0f00 	cmp.w	r8, #0
 80119d2:	d0a0      	beq.n	8011916 <_strtol_l.constprop.0+0x1a>
 80119d4:	1e69      	subs	r1, r5, #1
 80119d6:	e006      	b.n	80119e6 <_strtol_l.constprop.0+0xea>
 80119d8:	b106      	cbz	r6, 80119dc <_strtol_l.constprop.0+0xe0>
 80119da:	4240      	negs	r0, r0
 80119dc:	f1b8 0f00 	cmp.w	r8, #0
 80119e0:	d099      	beq.n	8011916 <_strtol_l.constprop.0+0x1a>
 80119e2:	2a00      	cmp	r2, #0
 80119e4:	d1f6      	bne.n	80119d4 <_strtol_l.constprop.0+0xd8>
 80119e6:	f8c8 1000 	str.w	r1, [r8]
 80119ea:	e794      	b.n	8011916 <_strtol_l.constprop.0+0x1a>
 80119ec:	08012b99 	.word	0x08012b99

080119f0 <_strtol_r>:
 80119f0:	f7ff bf84 	b.w	80118fc <_strtol_l.constprop.0>

080119f4 <__ascii_wctomb>:
 80119f4:	4603      	mov	r3, r0
 80119f6:	4608      	mov	r0, r1
 80119f8:	b141      	cbz	r1, 8011a0c <__ascii_wctomb+0x18>
 80119fa:	2aff      	cmp	r2, #255	@ 0xff
 80119fc:	d904      	bls.n	8011a08 <__ascii_wctomb+0x14>
 80119fe:	228a      	movs	r2, #138	@ 0x8a
 8011a00:	601a      	str	r2, [r3, #0]
 8011a02:	f04f 30ff 	mov.w	r0, #4294967295
 8011a06:	4770      	bx	lr
 8011a08:	700a      	strb	r2, [r1, #0]
 8011a0a:	2001      	movs	r0, #1
 8011a0c:	4770      	bx	lr

08011a0e <__ssputs_r>:
 8011a0e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a12:	688e      	ldr	r6, [r1, #8]
 8011a14:	461f      	mov	r7, r3
 8011a16:	42be      	cmp	r6, r7
 8011a18:	680b      	ldr	r3, [r1, #0]
 8011a1a:	4682      	mov	sl, r0
 8011a1c:	460c      	mov	r4, r1
 8011a1e:	4690      	mov	r8, r2
 8011a20:	d82d      	bhi.n	8011a7e <__ssputs_r+0x70>
 8011a22:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8011a26:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8011a2a:	d026      	beq.n	8011a7a <__ssputs_r+0x6c>
 8011a2c:	6965      	ldr	r5, [r4, #20]
 8011a2e:	6909      	ldr	r1, [r1, #16]
 8011a30:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8011a34:	eba3 0901 	sub.w	r9, r3, r1
 8011a38:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8011a3c:	1c7b      	adds	r3, r7, #1
 8011a3e:	444b      	add	r3, r9
 8011a40:	106d      	asrs	r5, r5, #1
 8011a42:	429d      	cmp	r5, r3
 8011a44:	bf38      	it	cc
 8011a46:	461d      	movcc	r5, r3
 8011a48:	0553      	lsls	r3, r2, #21
 8011a4a:	d527      	bpl.n	8011a9c <__ssputs_r+0x8e>
 8011a4c:	4629      	mov	r1, r5
 8011a4e:	f7ff fa05 	bl	8010e5c <_malloc_r>
 8011a52:	4606      	mov	r6, r0
 8011a54:	b360      	cbz	r0, 8011ab0 <__ssputs_r+0xa2>
 8011a56:	6921      	ldr	r1, [r4, #16]
 8011a58:	464a      	mov	r2, r9
 8011a5a:	f7fd ffe6 	bl	800fa2a <memcpy>
 8011a5e:	89a3      	ldrh	r3, [r4, #12]
 8011a60:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8011a64:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8011a68:	81a3      	strh	r3, [r4, #12]
 8011a6a:	6126      	str	r6, [r4, #16]
 8011a6c:	6165      	str	r5, [r4, #20]
 8011a6e:	444e      	add	r6, r9
 8011a70:	eba5 0509 	sub.w	r5, r5, r9
 8011a74:	6026      	str	r6, [r4, #0]
 8011a76:	60a5      	str	r5, [r4, #8]
 8011a78:	463e      	mov	r6, r7
 8011a7a:	42be      	cmp	r6, r7
 8011a7c:	d900      	bls.n	8011a80 <__ssputs_r+0x72>
 8011a7e:	463e      	mov	r6, r7
 8011a80:	6820      	ldr	r0, [r4, #0]
 8011a82:	4632      	mov	r2, r6
 8011a84:	4641      	mov	r1, r8
 8011a86:	f000 f9c5 	bl	8011e14 <memmove>
 8011a8a:	68a3      	ldr	r3, [r4, #8]
 8011a8c:	1b9b      	subs	r3, r3, r6
 8011a8e:	60a3      	str	r3, [r4, #8]
 8011a90:	6823      	ldr	r3, [r4, #0]
 8011a92:	4433      	add	r3, r6
 8011a94:	6023      	str	r3, [r4, #0]
 8011a96:	2000      	movs	r0, #0
 8011a98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011a9c:	462a      	mov	r2, r5
 8011a9e:	f000 fa15 	bl	8011ecc <_realloc_r>
 8011aa2:	4606      	mov	r6, r0
 8011aa4:	2800      	cmp	r0, #0
 8011aa6:	d1e0      	bne.n	8011a6a <__ssputs_r+0x5c>
 8011aa8:	6921      	ldr	r1, [r4, #16]
 8011aaa:	4650      	mov	r0, sl
 8011aac:	f7fe fe28 	bl	8010700 <_free_r>
 8011ab0:	230c      	movs	r3, #12
 8011ab2:	f8ca 3000 	str.w	r3, [sl]
 8011ab6:	89a3      	ldrh	r3, [r4, #12]
 8011ab8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8011abc:	81a3      	strh	r3, [r4, #12]
 8011abe:	f04f 30ff 	mov.w	r0, #4294967295
 8011ac2:	e7e9      	b.n	8011a98 <__ssputs_r+0x8a>

08011ac4 <_svfiprintf_r>:
 8011ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ac8:	4698      	mov	r8, r3
 8011aca:	898b      	ldrh	r3, [r1, #12]
 8011acc:	061b      	lsls	r3, r3, #24
 8011ace:	b09d      	sub	sp, #116	@ 0x74
 8011ad0:	4607      	mov	r7, r0
 8011ad2:	460d      	mov	r5, r1
 8011ad4:	4614      	mov	r4, r2
 8011ad6:	d510      	bpl.n	8011afa <_svfiprintf_r+0x36>
 8011ad8:	690b      	ldr	r3, [r1, #16]
 8011ada:	b973      	cbnz	r3, 8011afa <_svfiprintf_r+0x36>
 8011adc:	2140      	movs	r1, #64	@ 0x40
 8011ade:	f7ff f9bd 	bl	8010e5c <_malloc_r>
 8011ae2:	6028      	str	r0, [r5, #0]
 8011ae4:	6128      	str	r0, [r5, #16]
 8011ae6:	b930      	cbnz	r0, 8011af6 <_svfiprintf_r+0x32>
 8011ae8:	230c      	movs	r3, #12
 8011aea:	603b      	str	r3, [r7, #0]
 8011aec:	f04f 30ff 	mov.w	r0, #4294967295
 8011af0:	b01d      	add	sp, #116	@ 0x74
 8011af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011af6:	2340      	movs	r3, #64	@ 0x40
 8011af8:	616b      	str	r3, [r5, #20]
 8011afa:	2300      	movs	r3, #0
 8011afc:	9309      	str	r3, [sp, #36]	@ 0x24
 8011afe:	2320      	movs	r3, #32
 8011b00:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8011b04:	f8cd 800c 	str.w	r8, [sp, #12]
 8011b08:	2330      	movs	r3, #48	@ 0x30
 8011b0a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8011ca8 <_svfiprintf_r+0x1e4>
 8011b0e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8011b12:	f04f 0901 	mov.w	r9, #1
 8011b16:	4623      	mov	r3, r4
 8011b18:	469a      	mov	sl, r3
 8011b1a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011b1e:	b10a      	cbz	r2, 8011b24 <_svfiprintf_r+0x60>
 8011b20:	2a25      	cmp	r2, #37	@ 0x25
 8011b22:	d1f9      	bne.n	8011b18 <_svfiprintf_r+0x54>
 8011b24:	ebba 0b04 	subs.w	fp, sl, r4
 8011b28:	d00b      	beq.n	8011b42 <_svfiprintf_r+0x7e>
 8011b2a:	465b      	mov	r3, fp
 8011b2c:	4622      	mov	r2, r4
 8011b2e:	4629      	mov	r1, r5
 8011b30:	4638      	mov	r0, r7
 8011b32:	f7ff ff6c 	bl	8011a0e <__ssputs_r>
 8011b36:	3001      	adds	r0, #1
 8011b38:	f000 80a7 	beq.w	8011c8a <_svfiprintf_r+0x1c6>
 8011b3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011b3e:	445a      	add	r2, fp
 8011b40:	9209      	str	r2, [sp, #36]	@ 0x24
 8011b42:	f89a 3000 	ldrb.w	r3, [sl]
 8011b46:	2b00      	cmp	r3, #0
 8011b48:	f000 809f 	beq.w	8011c8a <_svfiprintf_r+0x1c6>
 8011b4c:	2300      	movs	r3, #0
 8011b4e:	f04f 32ff 	mov.w	r2, #4294967295
 8011b52:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8011b56:	f10a 0a01 	add.w	sl, sl, #1
 8011b5a:	9304      	str	r3, [sp, #16]
 8011b5c:	9307      	str	r3, [sp, #28]
 8011b5e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8011b62:	931a      	str	r3, [sp, #104]	@ 0x68
 8011b64:	4654      	mov	r4, sl
 8011b66:	2205      	movs	r2, #5
 8011b68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011b6c:	484e      	ldr	r0, [pc, #312]	@ (8011ca8 <_svfiprintf_r+0x1e4>)
 8011b6e:	f7ee fb57 	bl	8000220 <memchr>
 8011b72:	9a04      	ldr	r2, [sp, #16]
 8011b74:	b9d8      	cbnz	r0, 8011bae <_svfiprintf_r+0xea>
 8011b76:	06d0      	lsls	r0, r2, #27
 8011b78:	bf44      	itt	mi
 8011b7a:	2320      	movmi	r3, #32
 8011b7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8011b80:	0711      	lsls	r1, r2, #28
 8011b82:	bf44      	itt	mi
 8011b84:	232b      	movmi	r3, #43	@ 0x2b
 8011b86:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8011b8a:	f89a 3000 	ldrb.w	r3, [sl]
 8011b8e:	2b2a      	cmp	r3, #42	@ 0x2a
 8011b90:	d015      	beq.n	8011bbe <_svfiprintf_r+0xfa>
 8011b92:	9a07      	ldr	r2, [sp, #28]
 8011b94:	4654      	mov	r4, sl
 8011b96:	2000      	movs	r0, #0
 8011b98:	f04f 0c0a 	mov.w	ip, #10
 8011b9c:	4621      	mov	r1, r4
 8011b9e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011ba2:	3b30      	subs	r3, #48	@ 0x30
 8011ba4:	2b09      	cmp	r3, #9
 8011ba6:	d94b      	bls.n	8011c40 <_svfiprintf_r+0x17c>
 8011ba8:	b1b0      	cbz	r0, 8011bd8 <_svfiprintf_r+0x114>
 8011baa:	9207      	str	r2, [sp, #28]
 8011bac:	e014      	b.n	8011bd8 <_svfiprintf_r+0x114>
 8011bae:	eba0 0308 	sub.w	r3, r0, r8
 8011bb2:	fa09 f303 	lsl.w	r3, r9, r3
 8011bb6:	4313      	orrs	r3, r2
 8011bb8:	9304      	str	r3, [sp, #16]
 8011bba:	46a2      	mov	sl, r4
 8011bbc:	e7d2      	b.n	8011b64 <_svfiprintf_r+0xa0>
 8011bbe:	9b03      	ldr	r3, [sp, #12]
 8011bc0:	1d19      	adds	r1, r3, #4
 8011bc2:	681b      	ldr	r3, [r3, #0]
 8011bc4:	9103      	str	r1, [sp, #12]
 8011bc6:	2b00      	cmp	r3, #0
 8011bc8:	bfbb      	ittet	lt
 8011bca:	425b      	neglt	r3, r3
 8011bcc:	f042 0202 	orrlt.w	r2, r2, #2
 8011bd0:	9307      	strge	r3, [sp, #28]
 8011bd2:	9307      	strlt	r3, [sp, #28]
 8011bd4:	bfb8      	it	lt
 8011bd6:	9204      	strlt	r2, [sp, #16]
 8011bd8:	7823      	ldrb	r3, [r4, #0]
 8011bda:	2b2e      	cmp	r3, #46	@ 0x2e
 8011bdc:	d10a      	bne.n	8011bf4 <_svfiprintf_r+0x130>
 8011bde:	7863      	ldrb	r3, [r4, #1]
 8011be0:	2b2a      	cmp	r3, #42	@ 0x2a
 8011be2:	d132      	bne.n	8011c4a <_svfiprintf_r+0x186>
 8011be4:	9b03      	ldr	r3, [sp, #12]
 8011be6:	1d1a      	adds	r2, r3, #4
 8011be8:	681b      	ldr	r3, [r3, #0]
 8011bea:	9203      	str	r2, [sp, #12]
 8011bec:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8011bf0:	3402      	adds	r4, #2
 8011bf2:	9305      	str	r3, [sp, #20]
 8011bf4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8011cb8 <_svfiprintf_r+0x1f4>
 8011bf8:	7821      	ldrb	r1, [r4, #0]
 8011bfa:	2203      	movs	r2, #3
 8011bfc:	4650      	mov	r0, sl
 8011bfe:	f7ee fb0f 	bl	8000220 <memchr>
 8011c02:	b138      	cbz	r0, 8011c14 <_svfiprintf_r+0x150>
 8011c04:	9b04      	ldr	r3, [sp, #16]
 8011c06:	eba0 000a 	sub.w	r0, r0, sl
 8011c0a:	2240      	movs	r2, #64	@ 0x40
 8011c0c:	4082      	lsls	r2, r0
 8011c0e:	4313      	orrs	r3, r2
 8011c10:	3401      	adds	r4, #1
 8011c12:	9304      	str	r3, [sp, #16]
 8011c14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011c18:	4824      	ldr	r0, [pc, #144]	@ (8011cac <_svfiprintf_r+0x1e8>)
 8011c1a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8011c1e:	2206      	movs	r2, #6
 8011c20:	f7ee fafe 	bl	8000220 <memchr>
 8011c24:	2800      	cmp	r0, #0
 8011c26:	d036      	beq.n	8011c96 <_svfiprintf_r+0x1d2>
 8011c28:	4b21      	ldr	r3, [pc, #132]	@ (8011cb0 <_svfiprintf_r+0x1ec>)
 8011c2a:	bb1b      	cbnz	r3, 8011c74 <_svfiprintf_r+0x1b0>
 8011c2c:	9b03      	ldr	r3, [sp, #12]
 8011c2e:	3307      	adds	r3, #7
 8011c30:	f023 0307 	bic.w	r3, r3, #7
 8011c34:	3308      	adds	r3, #8
 8011c36:	9303      	str	r3, [sp, #12]
 8011c38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011c3a:	4433      	add	r3, r6
 8011c3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8011c3e:	e76a      	b.n	8011b16 <_svfiprintf_r+0x52>
 8011c40:	fb0c 3202 	mla	r2, ip, r2, r3
 8011c44:	460c      	mov	r4, r1
 8011c46:	2001      	movs	r0, #1
 8011c48:	e7a8      	b.n	8011b9c <_svfiprintf_r+0xd8>
 8011c4a:	2300      	movs	r3, #0
 8011c4c:	3401      	adds	r4, #1
 8011c4e:	9305      	str	r3, [sp, #20]
 8011c50:	4619      	mov	r1, r3
 8011c52:	f04f 0c0a 	mov.w	ip, #10
 8011c56:	4620      	mov	r0, r4
 8011c58:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011c5c:	3a30      	subs	r2, #48	@ 0x30
 8011c5e:	2a09      	cmp	r2, #9
 8011c60:	d903      	bls.n	8011c6a <_svfiprintf_r+0x1a6>
 8011c62:	2b00      	cmp	r3, #0
 8011c64:	d0c6      	beq.n	8011bf4 <_svfiprintf_r+0x130>
 8011c66:	9105      	str	r1, [sp, #20]
 8011c68:	e7c4      	b.n	8011bf4 <_svfiprintf_r+0x130>
 8011c6a:	fb0c 2101 	mla	r1, ip, r1, r2
 8011c6e:	4604      	mov	r4, r0
 8011c70:	2301      	movs	r3, #1
 8011c72:	e7f0      	b.n	8011c56 <_svfiprintf_r+0x192>
 8011c74:	ab03      	add	r3, sp, #12
 8011c76:	9300      	str	r3, [sp, #0]
 8011c78:	462a      	mov	r2, r5
 8011c7a:	4b0e      	ldr	r3, [pc, #56]	@ (8011cb4 <_svfiprintf_r+0x1f0>)
 8011c7c:	a904      	add	r1, sp, #16
 8011c7e:	4638      	mov	r0, r7
 8011c80:	f7fc ff30 	bl	800eae4 <_printf_float>
 8011c84:	1c42      	adds	r2, r0, #1
 8011c86:	4606      	mov	r6, r0
 8011c88:	d1d6      	bne.n	8011c38 <_svfiprintf_r+0x174>
 8011c8a:	89ab      	ldrh	r3, [r5, #12]
 8011c8c:	065b      	lsls	r3, r3, #25
 8011c8e:	f53f af2d 	bmi.w	8011aec <_svfiprintf_r+0x28>
 8011c92:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011c94:	e72c      	b.n	8011af0 <_svfiprintf_r+0x2c>
 8011c96:	ab03      	add	r3, sp, #12
 8011c98:	9300      	str	r3, [sp, #0]
 8011c9a:	462a      	mov	r2, r5
 8011c9c:	4b05      	ldr	r3, [pc, #20]	@ (8011cb4 <_svfiprintf_r+0x1f0>)
 8011c9e:	a904      	add	r1, sp, #16
 8011ca0:	4638      	mov	r0, r7
 8011ca2:	f7fd f9b7 	bl	800f014 <_printf_i>
 8011ca6:	e7ed      	b.n	8011c84 <_svfiprintf_r+0x1c0>
 8011ca8:	08012c99 	.word	0x08012c99
 8011cac:	08012ca3 	.word	0x08012ca3
 8011cb0:	0800eae5 	.word	0x0800eae5
 8011cb4:	08011a0f 	.word	0x08011a0f
 8011cb8:	08012c9f 	.word	0x08012c9f

08011cbc <__sflush_r>:
 8011cbc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8011cc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011cc4:	0716      	lsls	r6, r2, #28
 8011cc6:	4605      	mov	r5, r0
 8011cc8:	460c      	mov	r4, r1
 8011cca:	d454      	bmi.n	8011d76 <__sflush_r+0xba>
 8011ccc:	684b      	ldr	r3, [r1, #4]
 8011cce:	2b00      	cmp	r3, #0
 8011cd0:	dc02      	bgt.n	8011cd8 <__sflush_r+0x1c>
 8011cd2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8011cd4:	2b00      	cmp	r3, #0
 8011cd6:	dd48      	ble.n	8011d6a <__sflush_r+0xae>
 8011cd8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8011cda:	2e00      	cmp	r6, #0
 8011cdc:	d045      	beq.n	8011d6a <__sflush_r+0xae>
 8011cde:	2300      	movs	r3, #0
 8011ce0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8011ce4:	682f      	ldr	r7, [r5, #0]
 8011ce6:	6a21      	ldr	r1, [r4, #32]
 8011ce8:	602b      	str	r3, [r5, #0]
 8011cea:	d030      	beq.n	8011d4e <__sflush_r+0x92>
 8011cec:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8011cee:	89a3      	ldrh	r3, [r4, #12]
 8011cf0:	0759      	lsls	r1, r3, #29
 8011cf2:	d505      	bpl.n	8011d00 <__sflush_r+0x44>
 8011cf4:	6863      	ldr	r3, [r4, #4]
 8011cf6:	1ad2      	subs	r2, r2, r3
 8011cf8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8011cfa:	b10b      	cbz	r3, 8011d00 <__sflush_r+0x44>
 8011cfc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8011cfe:	1ad2      	subs	r2, r2, r3
 8011d00:	2300      	movs	r3, #0
 8011d02:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8011d04:	6a21      	ldr	r1, [r4, #32]
 8011d06:	4628      	mov	r0, r5
 8011d08:	47b0      	blx	r6
 8011d0a:	1c43      	adds	r3, r0, #1
 8011d0c:	89a3      	ldrh	r3, [r4, #12]
 8011d0e:	d106      	bne.n	8011d1e <__sflush_r+0x62>
 8011d10:	6829      	ldr	r1, [r5, #0]
 8011d12:	291d      	cmp	r1, #29
 8011d14:	d82b      	bhi.n	8011d6e <__sflush_r+0xb2>
 8011d16:	4a2a      	ldr	r2, [pc, #168]	@ (8011dc0 <__sflush_r+0x104>)
 8011d18:	410a      	asrs	r2, r1
 8011d1a:	07d6      	lsls	r6, r2, #31
 8011d1c:	d427      	bmi.n	8011d6e <__sflush_r+0xb2>
 8011d1e:	2200      	movs	r2, #0
 8011d20:	6062      	str	r2, [r4, #4]
 8011d22:	04d9      	lsls	r1, r3, #19
 8011d24:	6922      	ldr	r2, [r4, #16]
 8011d26:	6022      	str	r2, [r4, #0]
 8011d28:	d504      	bpl.n	8011d34 <__sflush_r+0x78>
 8011d2a:	1c42      	adds	r2, r0, #1
 8011d2c:	d101      	bne.n	8011d32 <__sflush_r+0x76>
 8011d2e:	682b      	ldr	r3, [r5, #0]
 8011d30:	b903      	cbnz	r3, 8011d34 <__sflush_r+0x78>
 8011d32:	6560      	str	r0, [r4, #84]	@ 0x54
 8011d34:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8011d36:	602f      	str	r7, [r5, #0]
 8011d38:	b1b9      	cbz	r1, 8011d6a <__sflush_r+0xae>
 8011d3a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8011d3e:	4299      	cmp	r1, r3
 8011d40:	d002      	beq.n	8011d48 <__sflush_r+0x8c>
 8011d42:	4628      	mov	r0, r5
 8011d44:	f7fe fcdc 	bl	8010700 <_free_r>
 8011d48:	2300      	movs	r3, #0
 8011d4a:	6363      	str	r3, [r4, #52]	@ 0x34
 8011d4c:	e00d      	b.n	8011d6a <__sflush_r+0xae>
 8011d4e:	2301      	movs	r3, #1
 8011d50:	4628      	mov	r0, r5
 8011d52:	47b0      	blx	r6
 8011d54:	4602      	mov	r2, r0
 8011d56:	1c50      	adds	r0, r2, #1
 8011d58:	d1c9      	bne.n	8011cee <__sflush_r+0x32>
 8011d5a:	682b      	ldr	r3, [r5, #0]
 8011d5c:	2b00      	cmp	r3, #0
 8011d5e:	d0c6      	beq.n	8011cee <__sflush_r+0x32>
 8011d60:	2b1d      	cmp	r3, #29
 8011d62:	d001      	beq.n	8011d68 <__sflush_r+0xac>
 8011d64:	2b16      	cmp	r3, #22
 8011d66:	d11e      	bne.n	8011da6 <__sflush_r+0xea>
 8011d68:	602f      	str	r7, [r5, #0]
 8011d6a:	2000      	movs	r0, #0
 8011d6c:	e022      	b.n	8011db4 <__sflush_r+0xf8>
 8011d6e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8011d72:	b21b      	sxth	r3, r3
 8011d74:	e01b      	b.n	8011dae <__sflush_r+0xf2>
 8011d76:	690f      	ldr	r7, [r1, #16]
 8011d78:	2f00      	cmp	r7, #0
 8011d7a:	d0f6      	beq.n	8011d6a <__sflush_r+0xae>
 8011d7c:	0793      	lsls	r3, r2, #30
 8011d7e:	680e      	ldr	r6, [r1, #0]
 8011d80:	bf08      	it	eq
 8011d82:	694b      	ldreq	r3, [r1, #20]
 8011d84:	600f      	str	r7, [r1, #0]
 8011d86:	bf18      	it	ne
 8011d88:	2300      	movne	r3, #0
 8011d8a:	eba6 0807 	sub.w	r8, r6, r7
 8011d8e:	608b      	str	r3, [r1, #8]
 8011d90:	f1b8 0f00 	cmp.w	r8, #0
 8011d94:	dde9      	ble.n	8011d6a <__sflush_r+0xae>
 8011d96:	6a21      	ldr	r1, [r4, #32]
 8011d98:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8011d9a:	4643      	mov	r3, r8
 8011d9c:	463a      	mov	r2, r7
 8011d9e:	4628      	mov	r0, r5
 8011da0:	47b0      	blx	r6
 8011da2:	2800      	cmp	r0, #0
 8011da4:	dc08      	bgt.n	8011db8 <__sflush_r+0xfc>
 8011da6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011daa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8011dae:	81a3      	strh	r3, [r4, #12]
 8011db0:	f04f 30ff 	mov.w	r0, #4294967295
 8011db4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011db8:	4407      	add	r7, r0
 8011dba:	eba8 0800 	sub.w	r8, r8, r0
 8011dbe:	e7e7      	b.n	8011d90 <__sflush_r+0xd4>
 8011dc0:	dfbffffe 	.word	0xdfbffffe

08011dc4 <_fflush_r>:
 8011dc4:	b538      	push	{r3, r4, r5, lr}
 8011dc6:	690b      	ldr	r3, [r1, #16]
 8011dc8:	4605      	mov	r5, r0
 8011dca:	460c      	mov	r4, r1
 8011dcc:	b913      	cbnz	r3, 8011dd4 <_fflush_r+0x10>
 8011dce:	2500      	movs	r5, #0
 8011dd0:	4628      	mov	r0, r5
 8011dd2:	bd38      	pop	{r3, r4, r5, pc}
 8011dd4:	b118      	cbz	r0, 8011dde <_fflush_r+0x1a>
 8011dd6:	6a03      	ldr	r3, [r0, #32]
 8011dd8:	b90b      	cbnz	r3, 8011dde <_fflush_r+0x1a>
 8011dda:	f7fd fcdb 	bl	800f794 <__sinit>
 8011dde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011de2:	2b00      	cmp	r3, #0
 8011de4:	d0f3      	beq.n	8011dce <_fflush_r+0xa>
 8011de6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8011de8:	07d0      	lsls	r0, r2, #31
 8011dea:	d404      	bmi.n	8011df6 <_fflush_r+0x32>
 8011dec:	0599      	lsls	r1, r3, #22
 8011dee:	d402      	bmi.n	8011df6 <_fflush_r+0x32>
 8011df0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8011df2:	f7fd fe18 	bl	800fa26 <__retarget_lock_acquire_recursive>
 8011df6:	4628      	mov	r0, r5
 8011df8:	4621      	mov	r1, r4
 8011dfa:	f7ff ff5f 	bl	8011cbc <__sflush_r>
 8011dfe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8011e00:	07da      	lsls	r2, r3, #31
 8011e02:	4605      	mov	r5, r0
 8011e04:	d4e4      	bmi.n	8011dd0 <_fflush_r+0xc>
 8011e06:	89a3      	ldrh	r3, [r4, #12]
 8011e08:	059b      	lsls	r3, r3, #22
 8011e0a:	d4e1      	bmi.n	8011dd0 <_fflush_r+0xc>
 8011e0c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8011e0e:	f7fd fe0b 	bl	800fa28 <__retarget_lock_release_recursive>
 8011e12:	e7dd      	b.n	8011dd0 <_fflush_r+0xc>

08011e14 <memmove>:
 8011e14:	4288      	cmp	r0, r1
 8011e16:	b510      	push	{r4, lr}
 8011e18:	eb01 0402 	add.w	r4, r1, r2
 8011e1c:	d902      	bls.n	8011e24 <memmove+0x10>
 8011e1e:	4284      	cmp	r4, r0
 8011e20:	4623      	mov	r3, r4
 8011e22:	d807      	bhi.n	8011e34 <memmove+0x20>
 8011e24:	1e43      	subs	r3, r0, #1
 8011e26:	42a1      	cmp	r1, r4
 8011e28:	d008      	beq.n	8011e3c <memmove+0x28>
 8011e2a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8011e2e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8011e32:	e7f8      	b.n	8011e26 <memmove+0x12>
 8011e34:	4402      	add	r2, r0
 8011e36:	4601      	mov	r1, r0
 8011e38:	428a      	cmp	r2, r1
 8011e3a:	d100      	bne.n	8011e3e <memmove+0x2a>
 8011e3c:	bd10      	pop	{r4, pc}
 8011e3e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8011e42:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8011e46:	e7f7      	b.n	8011e38 <memmove+0x24>

08011e48 <_sbrk_r>:
 8011e48:	b538      	push	{r3, r4, r5, lr}
 8011e4a:	4d06      	ldr	r5, [pc, #24]	@ (8011e64 <_sbrk_r+0x1c>)
 8011e4c:	2300      	movs	r3, #0
 8011e4e:	4604      	mov	r4, r0
 8011e50:	4608      	mov	r0, r1
 8011e52:	602b      	str	r3, [r5, #0]
 8011e54:	f7f0 f876 	bl	8001f44 <_sbrk>
 8011e58:	1c43      	adds	r3, r0, #1
 8011e5a:	d102      	bne.n	8011e62 <_sbrk_r+0x1a>
 8011e5c:	682b      	ldr	r3, [r5, #0]
 8011e5e:	b103      	cbz	r3, 8011e62 <_sbrk_r+0x1a>
 8011e60:	6023      	str	r3, [r4, #0]
 8011e62:	bd38      	pop	{r3, r4, r5, pc}
 8011e64:	20000ab8 	.word	0x20000ab8

08011e68 <__assert_func>:
 8011e68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011e6a:	4614      	mov	r4, r2
 8011e6c:	461a      	mov	r2, r3
 8011e6e:	4b09      	ldr	r3, [pc, #36]	@ (8011e94 <__assert_func+0x2c>)
 8011e70:	681b      	ldr	r3, [r3, #0]
 8011e72:	4605      	mov	r5, r0
 8011e74:	68d8      	ldr	r0, [r3, #12]
 8011e76:	b954      	cbnz	r4, 8011e8e <__assert_func+0x26>
 8011e78:	4b07      	ldr	r3, [pc, #28]	@ (8011e98 <__assert_func+0x30>)
 8011e7a:	461c      	mov	r4, r3
 8011e7c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011e80:	9100      	str	r1, [sp, #0]
 8011e82:	462b      	mov	r3, r5
 8011e84:	4905      	ldr	r1, [pc, #20]	@ (8011e9c <__assert_func+0x34>)
 8011e86:	f000 f84f 	bl	8011f28 <fiprintf>
 8011e8a:	f000 f85f 	bl	8011f4c <abort>
 8011e8e:	4b04      	ldr	r3, [pc, #16]	@ (8011ea0 <__assert_func+0x38>)
 8011e90:	e7f4      	b.n	8011e7c <__assert_func+0x14>
 8011e92:	bf00      	nop
 8011e94:	20000208 	.word	0x20000208
 8011e98:	08012ce5 	.word	0x08012ce5
 8011e9c:	08012cb7 	.word	0x08012cb7
 8011ea0:	08012caa 	.word	0x08012caa

08011ea4 <_calloc_r>:
 8011ea4:	b570      	push	{r4, r5, r6, lr}
 8011ea6:	fba1 5402 	umull	r5, r4, r1, r2
 8011eaa:	b93c      	cbnz	r4, 8011ebc <_calloc_r+0x18>
 8011eac:	4629      	mov	r1, r5
 8011eae:	f7fe ffd5 	bl	8010e5c <_malloc_r>
 8011eb2:	4606      	mov	r6, r0
 8011eb4:	b928      	cbnz	r0, 8011ec2 <_calloc_r+0x1e>
 8011eb6:	2600      	movs	r6, #0
 8011eb8:	4630      	mov	r0, r6
 8011eba:	bd70      	pop	{r4, r5, r6, pc}
 8011ebc:	220c      	movs	r2, #12
 8011ebe:	6002      	str	r2, [r0, #0]
 8011ec0:	e7f9      	b.n	8011eb6 <_calloc_r+0x12>
 8011ec2:	462a      	mov	r2, r5
 8011ec4:	4621      	mov	r1, r4
 8011ec6:	f7fd fd1f 	bl	800f908 <memset>
 8011eca:	e7f5      	b.n	8011eb8 <_calloc_r+0x14>

08011ecc <_realloc_r>:
 8011ecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ed0:	4680      	mov	r8, r0
 8011ed2:	4615      	mov	r5, r2
 8011ed4:	460c      	mov	r4, r1
 8011ed6:	b921      	cbnz	r1, 8011ee2 <_realloc_r+0x16>
 8011ed8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011edc:	4611      	mov	r1, r2
 8011ede:	f7fe bfbd 	b.w	8010e5c <_malloc_r>
 8011ee2:	b92a      	cbnz	r2, 8011ef0 <_realloc_r+0x24>
 8011ee4:	f7fe fc0c 	bl	8010700 <_free_r>
 8011ee8:	2400      	movs	r4, #0
 8011eea:	4620      	mov	r0, r4
 8011eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ef0:	f000 f833 	bl	8011f5a <_malloc_usable_size_r>
 8011ef4:	4285      	cmp	r5, r0
 8011ef6:	4606      	mov	r6, r0
 8011ef8:	d802      	bhi.n	8011f00 <_realloc_r+0x34>
 8011efa:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8011efe:	d8f4      	bhi.n	8011eea <_realloc_r+0x1e>
 8011f00:	4629      	mov	r1, r5
 8011f02:	4640      	mov	r0, r8
 8011f04:	f7fe ffaa 	bl	8010e5c <_malloc_r>
 8011f08:	4607      	mov	r7, r0
 8011f0a:	2800      	cmp	r0, #0
 8011f0c:	d0ec      	beq.n	8011ee8 <_realloc_r+0x1c>
 8011f0e:	42b5      	cmp	r5, r6
 8011f10:	462a      	mov	r2, r5
 8011f12:	4621      	mov	r1, r4
 8011f14:	bf28      	it	cs
 8011f16:	4632      	movcs	r2, r6
 8011f18:	f7fd fd87 	bl	800fa2a <memcpy>
 8011f1c:	4621      	mov	r1, r4
 8011f1e:	4640      	mov	r0, r8
 8011f20:	f7fe fbee 	bl	8010700 <_free_r>
 8011f24:	463c      	mov	r4, r7
 8011f26:	e7e0      	b.n	8011eea <_realloc_r+0x1e>

08011f28 <fiprintf>:
 8011f28:	b40e      	push	{r1, r2, r3}
 8011f2a:	b503      	push	{r0, r1, lr}
 8011f2c:	4601      	mov	r1, r0
 8011f2e:	ab03      	add	r3, sp, #12
 8011f30:	4805      	ldr	r0, [pc, #20]	@ (8011f48 <fiprintf+0x20>)
 8011f32:	f853 2b04 	ldr.w	r2, [r3], #4
 8011f36:	6800      	ldr	r0, [r0, #0]
 8011f38:	9301      	str	r3, [sp, #4]
 8011f3a:	f000 f83f 	bl	8011fbc <_vfiprintf_r>
 8011f3e:	b002      	add	sp, #8
 8011f40:	f85d eb04 	ldr.w	lr, [sp], #4
 8011f44:	b003      	add	sp, #12
 8011f46:	4770      	bx	lr
 8011f48:	20000208 	.word	0x20000208

08011f4c <abort>:
 8011f4c:	b508      	push	{r3, lr}
 8011f4e:	2006      	movs	r0, #6
 8011f50:	f000 fa08 	bl	8012364 <raise>
 8011f54:	2001      	movs	r0, #1
 8011f56:	f7ef ff7d 	bl	8001e54 <_exit>

08011f5a <_malloc_usable_size_r>:
 8011f5a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8011f5e:	1f18      	subs	r0, r3, #4
 8011f60:	2b00      	cmp	r3, #0
 8011f62:	bfbc      	itt	lt
 8011f64:	580b      	ldrlt	r3, [r1, r0]
 8011f66:	18c0      	addlt	r0, r0, r3
 8011f68:	4770      	bx	lr

08011f6a <__sfputc_r>:
 8011f6a:	6893      	ldr	r3, [r2, #8]
 8011f6c:	3b01      	subs	r3, #1
 8011f6e:	2b00      	cmp	r3, #0
 8011f70:	b410      	push	{r4}
 8011f72:	6093      	str	r3, [r2, #8]
 8011f74:	da08      	bge.n	8011f88 <__sfputc_r+0x1e>
 8011f76:	6994      	ldr	r4, [r2, #24]
 8011f78:	42a3      	cmp	r3, r4
 8011f7a:	db01      	blt.n	8011f80 <__sfputc_r+0x16>
 8011f7c:	290a      	cmp	r1, #10
 8011f7e:	d103      	bne.n	8011f88 <__sfputc_r+0x1e>
 8011f80:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011f84:	f000 b932 	b.w	80121ec <__swbuf_r>
 8011f88:	6813      	ldr	r3, [r2, #0]
 8011f8a:	1c58      	adds	r0, r3, #1
 8011f8c:	6010      	str	r0, [r2, #0]
 8011f8e:	7019      	strb	r1, [r3, #0]
 8011f90:	4608      	mov	r0, r1
 8011f92:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011f96:	4770      	bx	lr

08011f98 <__sfputs_r>:
 8011f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011f9a:	4606      	mov	r6, r0
 8011f9c:	460f      	mov	r7, r1
 8011f9e:	4614      	mov	r4, r2
 8011fa0:	18d5      	adds	r5, r2, r3
 8011fa2:	42ac      	cmp	r4, r5
 8011fa4:	d101      	bne.n	8011faa <__sfputs_r+0x12>
 8011fa6:	2000      	movs	r0, #0
 8011fa8:	e007      	b.n	8011fba <__sfputs_r+0x22>
 8011faa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011fae:	463a      	mov	r2, r7
 8011fb0:	4630      	mov	r0, r6
 8011fb2:	f7ff ffda 	bl	8011f6a <__sfputc_r>
 8011fb6:	1c43      	adds	r3, r0, #1
 8011fb8:	d1f3      	bne.n	8011fa2 <__sfputs_r+0xa>
 8011fba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011fbc <_vfiprintf_r>:
 8011fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fc0:	460d      	mov	r5, r1
 8011fc2:	b09d      	sub	sp, #116	@ 0x74
 8011fc4:	4614      	mov	r4, r2
 8011fc6:	4698      	mov	r8, r3
 8011fc8:	4606      	mov	r6, r0
 8011fca:	b118      	cbz	r0, 8011fd4 <_vfiprintf_r+0x18>
 8011fcc:	6a03      	ldr	r3, [r0, #32]
 8011fce:	b90b      	cbnz	r3, 8011fd4 <_vfiprintf_r+0x18>
 8011fd0:	f7fd fbe0 	bl	800f794 <__sinit>
 8011fd4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8011fd6:	07d9      	lsls	r1, r3, #31
 8011fd8:	d405      	bmi.n	8011fe6 <_vfiprintf_r+0x2a>
 8011fda:	89ab      	ldrh	r3, [r5, #12]
 8011fdc:	059a      	lsls	r2, r3, #22
 8011fde:	d402      	bmi.n	8011fe6 <_vfiprintf_r+0x2a>
 8011fe0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8011fe2:	f7fd fd20 	bl	800fa26 <__retarget_lock_acquire_recursive>
 8011fe6:	89ab      	ldrh	r3, [r5, #12]
 8011fe8:	071b      	lsls	r3, r3, #28
 8011fea:	d501      	bpl.n	8011ff0 <_vfiprintf_r+0x34>
 8011fec:	692b      	ldr	r3, [r5, #16]
 8011fee:	b99b      	cbnz	r3, 8012018 <_vfiprintf_r+0x5c>
 8011ff0:	4629      	mov	r1, r5
 8011ff2:	4630      	mov	r0, r6
 8011ff4:	f000 f938 	bl	8012268 <__swsetup_r>
 8011ff8:	b170      	cbz	r0, 8012018 <_vfiprintf_r+0x5c>
 8011ffa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8011ffc:	07dc      	lsls	r4, r3, #31
 8011ffe:	d504      	bpl.n	801200a <_vfiprintf_r+0x4e>
 8012000:	f04f 30ff 	mov.w	r0, #4294967295
 8012004:	b01d      	add	sp, #116	@ 0x74
 8012006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801200a:	89ab      	ldrh	r3, [r5, #12]
 801200c:	0598      	lsls	r0, r3, #22
 801200e:	d4f7      	bmi.n	8012000 <_vfiprintf_r+0x44>
 8012010:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8012012:	f7fd fd09 	bl	800fa28 <__retarget_lock_release_recursive>
 8012016:	e7f3      	b.n	8012000 <_vfiprintf_r+0x44>
 8012018:	2300      	movs	r3, #0
 801201a:	9309      	str	r3, [sp, #36]	@ 0x24
 801201c:	2320      	movs	r3, #32
 801201e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8012022:	f8cd 800c 	str.w	r8, [sp, #12]
 8012026:	2330      	movs	r3, #48	@ 0x30
 8012028:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80121d8 <_vfiprintf_r+0x21c>
 801202c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8012030:	f04f 0901 	mov.w	r9, #1
 8012034:	4623      	mov	r3, r4
 8012036:	469a      	mov	sl, r3
 8012038:	f813 2b01 	ldrb.w	r2, [r3], #1
 801203c:	b10a      	cbz	r2, 8012042 <_vfiprintf_r+0x86>
 801203e:	2a25      	cmp	r2, #37	@ 0x25
 8012040:	d1f9      	bne.n	8012036 <_vfiprintf_r+0x7a>
 8012042:	ebba 0b04 	subs.w	fp, sl, r4
 8012046:	d00b      	beq.n	8012060 <_vfiprintf_r+0xa4>
 8012048:	465b      	mov	r3, fp
 801204a:	4622      	mov	r2, r4
 801204c:	4629      	mov	r1, r5
 801204e:	4630      	mov	r0, r6
 8012050:	f7ff ffa2 	bl	8011f98 <__sfputs_r>
 8012054:	3001      	adds	r0, #1
 8012056:	f000 80a7 	beq.w	80121a8 <_vfiprintf_r+0x1ec>
 801205a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801205c:	445a      	add	r2, fp
 801205e:	9209      	str	r2, [sp, #36]	@ 0x24
 8012060:	f89a 3000 	ldrb.w	r3, [sl]
 8012064:	2b00      	cmp	r3, #0
 8012066:	f000 809f 	beq.w	80121a8 <_vfiprintf_r+0x1ec>
 801206a:	2300      	movs	r3, #0
 801206c:	f04f 32ff 	mov.w	r2, #4294967295
 8012070:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8012074:	f10a 0a01 	add.w	sl, sl, #1
 8012078:	9304      	str	r3, [sp, #16]
 801207a:	9307      	str	r3, [sp, #28]
 801207c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8012080:	931a      	str	r3, [sp, #104]	@ 0x68
 8012082:	4654      	mov	r4, sl
 8012084:	2205      	movs	r2, #5
 8012086:	f814 1b01 	ldrb.w	r1, [r4], #1
 801208a:	4853      	ldr	r0, [pc, #332]	@ (80121d8 <_vfiprintf_r+0x21c>)
 801208c:	f7ee f8c8 	bl	8000220 <memchr>
 8012090:	9a04      	ldr	r2, [sp, #16]
 8012092:	b9d8      	cbnz	r0, 80120cc <_vfiprintf_r+0x110>
 8012094:	06d1      	lsls	r1, r2, #27
 8012096:	bf44      	itt	mi
 8012098:	2320      	movmi	r3, #32
 801209a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 801209e:	0713      	lsls	r3, r2, #28
 80120a0:	bf44      	itt	mi
 80120a2:	232b      	movmi	r3, #43	@ 0x2b
 80120a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80120a8:	f89a 3000 	ldrb.w	r3, [sl]
 80120ac:	2b2a      	cmp	r3, #42	@ 0x2a
 80120ae:	d015      	beq.n	80120dc <_vfiprintf_r+0x120>
 80120b0:	9a07      	ldr	r2, [sp, #28]
 80120b2:	4654      	mov	r4, sl
 80120b4:	2000      	movs	r0, #0
 80120b6:	f04f 0c0a 	mov.w	ip, #10
 80120ba:	4621      	mov	r1, r4
 80120bc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80120c0:	3b30      	subs	r3, #48	@ 0x30
 80120c2:	2b09      	cmp	r3, #9
 80120c4:	d94b      	bls.n	801215e <_vfiprintf_r+0x1a2>
 80120c6:	b1b0      	cbz	r0, 80120f6 <_vfiprintf_r+0x13a>
 80120c8:	9207      	str	r2, [sp, #28]
 80120ca:	e014      	b.n	80120f6 <_vfiprintf_r+0x13a>
 80120cc:	eba0 0308 	sub.w	r3, r0, r8
 80120d0:	fa09 f303 	lsl.w	r3, r9, r3
 80120d4:	4313      	orrs	r3, r2
 80120d6:	9304      	str	r3, [sp, #16]
 80120d8:	46a2      	mov	sl, r4
 80120da:	e7d2      	b.n	8012082 <_vfiprintf_r+0xc6>
 80120dc:	9b03      	ldr	r3, [sp, #12]
 80120de:	1d19      	adds	r1, r3, #4
 80120e0:	681b      	ldr	r3, [r3, #0]
 80120e2:	9103      	str	r1, [sp, #12]
 80120e4:	2b00      	cmp	r3, #0
 80120e6:	bfbb      	ittet	lt
 80120e8:	425b      	neglt	r3, r3
 80120ea:	f042 0202 	orrlt.w	r2, r2, #2
 80120ee:	9307      	strge	r3, [sp, #28]
 80120f0:	9307      	strlt	r3, [sp, #28]
 80120f2:	bfb8      	it	lt
 80120f4:	9204      	strlt	r2, [sp, #16]
 80120f6:	7823      	ldrb	r3, [r4, #0]
 80120f8:	2b2e      	cmp	r3, #46	@ 0x2e
 80120fa:	d10a      	bne.n	8012112 <_vfiprintf_r+0x156>
 80120fc:	7863      	ldrb	r3, [r4, #1]
 80120fe:	2b2a      	cmp	r3, #42	@ 0x2a
 8012100:	d132      	bne.n	8012168 <_vfiprintf_r+0x1ac>
 8012102:	9b03      	ldr	r3, [sp, #12]
 8012104:	1d1a      	adds	r2, r3, #4
 8012106:	681b      	ldr	r3, [r3, #0]
 8012108:	9203      	str	r2, [sp, #12]
 801210a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801210e:	3402      	adds	r4, #2
 8012110:	9305      	str	r3, [sp, #20]
 8012112:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80121e8 <_vfiprintf_r+0x22c>
 8012116:	7821      	ldrb	r1, [r4, #0]
 8012118:	2203      	movs	r2, #3
 801211a:	4650      	mov	r0, sl
 801211c:	f7ee f880 	bl	8000220 <memchr>
 8012120:	b138      	cbz	r0, 8012132 <_vfiprintf_r+0x176>
 8012122:	9b04      	ldr	r3, [sp, #16]
 8012124:	eba0 000a 	sub.w	r0, r0, sl
 8012128:	2240      	movs	r2, #64	@ 0x40
 801212a:	4082      	lsls	r2, r0
 801212c:	4313      	orrs	r3, r2
 801212e:	3401      	adds	r4, #1
 8012130:	9304      	str	r3, [sp, #16]
 8012132:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012136:	4829      	ldr	r0, [pc, #164]	@ (80121dc <_vfiprintf_r+0x220>)
 8012138:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 801213c:	2206      	movs	r2, #6
 801213e:	f7ee f86f 	bl	8000220 <memchr>
 8012142:	2800      	cmp	r0, #0
 8012144:	d03f      	beq.n	80121c6 <_vfiprintf_r+0x20a>
 8012146:	4b26      	ldr	r3, [pc, #152]	@ (80121e0 <_vfiprintf_r+0x224>)
 8012148:	bb1b      	cbnz	r3, 8012192 <_vfiprintf_r+0x1d6>
 801214a:	9b03      	ldr	r3, [sp, #12]
 801214c:	3307      	adds	r3, #7
 801214e:	f023 0307 	bic.w	r3, r3, #7
 8012152:	3308      	adds	r3, #8
 8012154:	9303      	str	r3, [sp, #12]
 8012156:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012158:	443b      	add	r3, r7
 801215a:	9309      	str	r3, [sp, #36]	@ 0x24
 801215c:	e76a      	b.n	8012034 <_vfiprintf_r+0x78>
 801215e:	fb0c 3202 	mla	r2, ip, r2, r3
 8012162:	460c      	mov	r4, r1
 8012164:	2001      	movs	r0, #1
 8012166:	e7a8      	b.n	80120ba <_vfiprintf_r+0xfe>
 8012168:	2300      	movs	r3, #0
 801216a:	3401      	adds	r4, #1
 801216c:	9305      	str	r3, [sp, #20]
 801216e:	4619      	mov	r1, r3
 8012170:	f04f 0c0a 	mov.w	ip, #10
 8012174:	4620      	mov	r0, r4
 8012176:	f810 2b01 	ldrb.w	r2, [r0], #1
 801217a:	3a30      	subs	r2, #48	@ 0x30
 801217c:	2a09      	cmp	r2, #9
 801217e:	d903      	bls.n	8012188 <_vfiprintf_r+0x1cc>
 8012180:	2b00      	cmp	r3, #0
 8012182:	d0c6      	beq.n	8012112 <_vfiprintf_r+0x156>
 8012184:	9105      	str	r1, [sp, #20]
 8012186:	e7c4      	b.n	8012112 <_vfiprintf_r+0x156>
 8012188:	fb0c 2101 	mla	r1, ip, r1, r2
 801218c:	4604      	mov	r4, r0
 801218e:	2301      	movs	r3, #1
 8012190:	e7f0      	b.n	8012174 <_vfiprintf_r+0x1b8>
 8012192:	ab03      	add	r3, sp, #12
 8012194:	9300      	str	r3, [sp, #0]
 8012196:	462a      	mov	r2, r5
 8012198:	4b12      	ldr	r3, [pc, #72]	@ (80121e4 <_vfiprintf_r+0x228>)
 801219a:	a904      	add	r1, sp, #16
 801219c:	4630      	mov	r0, r6
 801219e:	f7fc fca1 	bl	800eae4 <_printf_float>
 80121a2:	4607      	mov	r7, r0
 80121a4:	1c78      	adds	r0, r7, #1
 80121a6:	d1d6      	bne.n	8012156 <_vfiprintf_r+0x19a>
 80121a8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80121aa:	07d9      	lsls	r1, r3, #31
 80121ac:	d405      	bmi.n	80121ba <_vfiprintf_r+0x1fe>
 80121ae:	89ab      	ldrh	r3, [r5, #12]
 80121b0:	059a      	lsls	r2, r3, #22
 80121b2:	d402      	bmi.n	80121ba <_vfiprintf_r+0x1fe>
 80121b4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80121b6:	f7fd fc37 	bl	800fa28 <__retarget_lock_release_recursive>
 80121ba:	89ab      	ldrh	r3, [r5, #12]
 80121bc:	065b      	lsls	r3, r3, #25
 80121be:	f53f af1f 	bmi.w	8012000 <_vfiprintf_r+0x44>
 80121c2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80121c4:	e71e      	b.n	8012004 <_vfiprintf_r+0x48>
 80121c6:	ab03      	add	r3, sp, #12
 80121c8:	9300      	str	r3, [sp, #0]
 80121ca:	462a      	mov	r2, r5
 80121cc:	4b05      	ldr	r3, [pc, #20]	@ (80121e4 <_vfiprintf_r+0x228>)
 80121ce:	a904      	add	r1, sp, #16
 80121d0:	4630      	mov	r0, r6
 80121d2:	f7fc ff1f 	bl	800f014 <_printf_i>
 80121d6:	e7e4      	b.n	80121a2 <_vfiprintf_r+0x1e6>
 80121d8:	08012c99 	.word	0x08012c99
 80121dc:	08012ca3 	.word	0x08012ca3
 80121e0:	0800eae5 	.word	0x0800eae5
 80121e4:	08011f99 	.word	0x08011f99
 80121e8:	08012c9f 	.word	0x08012c9f

080121ec <__swbuf_r>:
 80121ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80121ee:	460e      	mov	r6, r1
 80121f0:	4614      	mov	r4, r2
 80121f2:	4605      	mov	r5, r0
 80121f4:	b118      	cbz	r0, 80121fe <__swbuf_r+0x12>
 80121f6:	6a03      	ldr	r3, [r0, #32]
 80121f8:	b90b      	cbnz	r3, 80121fe <__swbuf_r+0x12>
 80121fa:	f7fd facb 	bl	800f794 <__sinit>
 80121fe:	69a3      	ldr	r3, [r4, #24]
 8012200:	60a3      	str	r3, [r4, #8]
 8012202:	89a3      	ldrh	r3, [r4, #12]
 8012204:	071a      	lsls	r2, r3, #28
 8012206:	d501      	bpl.n	801220c <__swbuf_r+0x20>
 8012208:	6923      	ldr	r3, [r4, #16]
 801220a:	b943      	cbnz	r3, 801221e <__swbuf_r+0x32>
 801220c:	4621      	mov	r1, r4
 801220e:	4628      	mov	r0, r5
 8012210:	f000 f82a 	bl	8012268 <__swsetup_r>
 8012214:	b118      	cbz	r0, 801221e <__swbuf_r+0x32>
 8012216:	f04f 37ff 	mov.w	r7, #4294967295
 801221a:	4638      	mov	r0, r7
 801221c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801221e:	6823      	ldr	r3, [r4, #0]
 8012220:	6922      	ldr	r2, [r4, #16]
 8012222:	1a98      	subs	r0, r3, r2
 8012224:	6963      	ldr	r3, [r4, #20]
 8012226:	b2f6      	uxtb	r6, r6
 8012228:	4283      	cmp	r3, r0
 801222a:	4637      	mov	r7, r6
 801222c:	dc05      	bgt.n	801223a <__swbuf_r+0x4e>
 801222e:	4621      	mov	r1, r4
 8012230:	4628      	mov	r0, r5
 8012232:	f7ff fdc7 	bl	8011dc4 <_fflush_r>
 8012236:	2800      	cmp	r0, #0
 8012238:	d1ed      	bne.n	8012216 <__swbuf_r+0x2a>
 801223a:	68a3      	ldr	r3, [r4, #8]
 801223c:	3b01      	subs	r3, #1
 801223e:	60a3      	str	r3, [r4, #8]
 8012240:	6823      	ldr	r3, [r4, #0]
 8012242:	1c5a      	adds	r2, r3, #1
 8012244:	6022      	str	r2, [r4, #0]
 8012246:	701e      	strb	r6, [r3, #0]
 8012248:	6962      	ldr	r2, [r4, #20]
 801224a:	1c43      	adds	r3, r0, #1
 801224c:	429a      	cmp	r2, r3
 801224e:	d004      	beq.n	801225a <__swbuf_r+0x6e>
 8012250:	89a3      	ldrh	r3, [r4, #12]
 8012252:	07db      	lsls	r3, r3, #31
 8012254:	d5e1      	bpl.n	801221a <__swbuf_r+0x2e>
 8012256:	2e0a      	cmp	r6, #10
 8012258:	d1df      	bne.n	801221a <__swbuf_r+0x2e>
 801225a:	4621      	mov	r1, r4
 801225c:	4628      	mov	r0, r5
 801225e:	f7ff fdb1 	bl	8011dc4 <_fflush_r>
 8012262:	2800      	cmp	r0, #0
 8012264:	d0d9      	beq.n	801221a <__swbuf_r+0x2e>
 8012266:	e7d6      	b.n	8012216 <__swbuf_r+0x2a>

08012268 <__swsetup_r>:
 8012268:	b538      	push	{r3, r4, r5, lr}
 801226a:	4b29      	ldr	r3, [pc, #164]	@ (8012310 <__swsetup_r+0xa8>)
 801226c:	4605      	mov	r5, r0
 801226e:	6818      	ldr	r0, [r3, #0]
 8012270:	460c      	mov	r4, r1
 8012272:	b118      	cbz	r0, 801227c <__swsetup_r+0x14>
 8012274:	6a03      	ldr	r3, [r0, #32]
 8012276:	b90b      	cbnz	r3, 801227c <__swsetup_r+0x14>
 8012278:	f7fd fa8c 	bl	800f794 <__sinit>
 801227c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8012280:	0719      	lsls	r1, r3, #28
 8012282:	d422      	bmi.n	80122ca <__swsetup_r+0x62>
 8012284:	06da      	lsls	r2, r3, #27
 8012286:	d407      	bmi.n	8012298 <__swsetup_r+0x30>
 8012288:	2209      	movs	r2, #9
 801228a:	602a      	str	r2, [r5, #0]
 801228c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012290:	81a3      	strh	r3, [r4, #12]
 8012292:	f04f 30ff 	mov.w	r0, #4294967295
 8012296:	e033      	b.n	8012300 <__swsetup_r+0x98>
 8012298:	0758      	lsls	r0, r3, #29
 801229a:	d512      	bpl.n	80122c2 <__swsetup_r+0x5a>
 801229c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 801229e:	b141      	cbz	r1, 80122b2 <__swsetup_r+0x4a>
 80122a0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80122a4:	4299      	cmp	r1, r3
 80122a6:	d002      	beq.n	80122ae <__swsetup_r+0x46>
 80122a8:	4628      	mov	r0, r5
 80122aa:	f7fe fa29 	bl	8010700 <_free_r>
 80122ae:	2300      	movs	r3, #0
 80122b0:	6363      	str	r3, [r4, #52]	@ 0x34
 80122b2:	89a3      	ldrh	r3, [r4, #12]
 80122b4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80122b8:	81a3      	strh	r3, [r4, #12]
 80122ba:	2300      	movs	r3, #0
 80122bc:	6063      	str	r3, [r4, #4]
 80122be:	6923      	ldr	r3, [r4, #16]
 80122c0:	6023      	str	r3, [r4, #0]
 80122c2:	89a3      	ldrh	r3, [r4, #12]
 80122c4:	f043 0308 	orr.w	r3, r3, #8
 80122c8:	81a3      	strh	r3, [r4, #12]
 80122ca:	6923      	ldr	r3, [r4, #16]
 80122cc:	b94b      	cbnz	r3, 80122e2 <__swsetup_r+0x7a>
 80122ce:	89a3      	ldrh	r3, [r4, #12]
 80122d0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80122d4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80122d8:	d003      	beq.n	80122e2 <__swsetup_r+0x7a>
 80122da:	4621      	mov	r1, r4
 80122dc:	4628      	mov	r0, r5
 80122de:	f000 f883 	bl	80123e8 <__smakebuf_r>
 80122e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80122e6:	f013 0201 	ands.w	r2, r3, #1
 80122ea:	d00a      	beq.n	8012302 <__swsetup_r+0x9a>
 80122ec:	2200      	movs	r2, #0
 80122ee:	60a2      	str	r2, [r4, #8]
 80122f0:	6962      	ldr	r2, [r4, #20]
 80122f2:	4252      	negs	r2, r2
 80122f4:	61a2      	str	r2, [r4, #24]
 80122f6:	6922      	ldr	r2, [r4, #16]
 80122f8:	b942      	cbnz	r2, 801230c <__swsetup_r+0xa4>
 80122fa:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80122fe:	d1c5      	bne.n	801228c <__swsetup_r+0x24>
 8012300:	bd38      	pop	{r3, r4, r5, pc}
 8012302:	0799      	lsls	r1, r3, #30
 8012304:	bf58      	it	pl
 8012306:	6962      	ldrpl	r2, [r4, #20]
 8012308:	60a2      	str	r2, [r4, #8]
 801230a:	e7f4      	b.n	80122f6 <__swsetup_r+0x8e>
 801230c:	2000      	movs	r0, #0
 801230e:	e7f7      	b.n	8012300 <__swsetup_r+0x98>
 8012310:	20000208 	.word	0x20000208

08012314 <_raise_r>:
 8012314:	291f      	cmp	r1, #31
 8012316:	b538      	push	{r3, r4, r5, lr}
 8012318:	4605      	mov	r5, r0
 801231a:	460c      	mov	r4, r1
 801231c:	d904      	bls.n	8012328 <_raise_r+0x14>
 801231e:	2316      	movs	r3, #22
 8012320:	6003      	str	r3, [r0, #0]
 8012322:	f04f 30ff 	mov.w	r0, #4294967295
 8012326:	bd38      	pop	{r3, r4, r5, pc}
 8012328:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801232a:	b112      	cbz	r2, 8012332 <_raise_r+0x1e>
 801232c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8012330:	b94b      	cbnz	r3, 8012346 <_raise_r+0x32>
 8012332:	4628      	mov	r0, r5
 8012334:	f000 f830 	bl	8012398 <_getpid_r>
 8012338:	4622      	mov	r2, r4
 801233a:	4601      	mov	r1, r0
 801233c:	4628      	mov	r0, r5
 801233e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012342:	f000 b817 	b.w	8012374 <_kill_r>
 8012346:	2b01      	cmp	r3, #1
 8012348:	d00a      	beq.n	8012360 <_raise_r+0x4c>
 801234a:	1c59      	adds	r1, r3, #1
 801234c:	d103      	bne.n	8012356 <_raise_r+0x42>
 801234e:	2316      	movs	r3, #22
 8012350:	6003      	str	r3, [r0, #0]
 8012352:	2001      	movs	r0, #1
 8012354:	e7e7      	b.n	8012326 <_raise_r+0x12>
 8012356:	2100      	movs	r1, #0
 8012358:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801235c:	4620      	mov	r0, r4
 801235e:	4798      	blx	r3
 8012360:	2000      	movs	r0, #0
 8012362:	e7e0      	b.n	8012326 <_raise_r+0x12>

08012364 <raise>:
 8012364:	4b02      	ldr	r3, [pc, #8]	@ (8012370 <raise+0xc>)
 8012366:	4601      	mov	r1, r0
 8012368:	6818      	ldr	r0, [r3, #0]
 801236a:	f7ff bfd3 	b.w	8012314 <_raise_r>
 801236e:	bf00      	nop
 8012370:	20000208 	.word	0x20000208

08012374 <_kill_r>:
 8012374:	b538      	push	{r3, r4, r5, lr}
 8012376:	4d07      	ldr	r5, [pc, #28]	@ (8012394 <_kill_r+0x20>)
 8012378:	2300      	movs	r3, #0
 801237a:	4604      	mov	r4, r0
 801237c:	4608      	mov	r0, r1
 801237e:	4611      	mov	r1, r2
 8012380:	602b      	str	r3, [r5, #0]
 8012382:	f7ef fd57 	bl	8001e34 <_kill>
 8012386:	1c43      	adds	r3, r0, #1
 8012388:	d102      	bne.n	8012390 <_kill_r+0x1c>
 801238a:	682b      	ldr	r3, [r5, #0]
 801238c:	b103      	cbz	r3, 8012390 <_kill_r+0x1c>
 801238e:	6023      	str	r3, [r4, #0]
 8012390:	bd38      	pop	{r3, r4, r5, pc}
 8012392:	bf00      	nop
 8012394:	20000ab8 	.word	0x20000ab8

08012398 <_getpid_r>:
 8012398:	f7ef bd44 	b.w	8001e24 <_getpid>

0801239c <__swhatbuf_r>:
 801239c:	b570      	push	{r4, r5, r6, lr}
 801239e:	460c      	mov	r4, r1
 80123a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80123a4:	2900      	cmp	r1, #0
 80123a6:	b096      	sub	sp, #88	@ 0x58
 80123a8:	4615      	mov	r5, r2
 80123aa:	461e      	mov	r6, r3
 80123ac:	da0d      	bge.n	80123ca <__swhatbuf_r+0x2e>
 80123ae:	89a3      	ldrh	r3, [r4, #12]
 80123b0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80123b4:	f04f 0100 	mov.w	r1, #0
 80123b8:	bf14      	ite	ne
 80123ba:	2340      	movne	r3, #64	@ 0x40
 80123bc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80123c0:	2000      	movs	r0, #0
 80123c2:	6031      	str	r1, [r6, #0]
 80123c4:	602b      	str	r3, [r5, #0]
 80123c6:	b016      	add	sp, #88	@ 0x58
 80123c8:	bd70      	pop	{r4, r5, r6, pc}
 80123ca:	466a      	mov	r2, sp
 80123cc:	f000 f848 	bl	8012460 <_fstat_r>
 80123d0:	2800      	cmp	r0, #0
 80123d2:	dbec      	blt.n	80123ae <__swhatbuf_r+0x12>
 80123d4:	9901      	ldr	r1, [sp, #4]
 80123d6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80123da:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80123de:	4259      	negs	r1, r3
 80123e0:	4159      	adcs	r1, r3
 80123e2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80123e6:	e7eb      	b.n	80123c0 <__swhatbuf_r+0x24>

080123e8 <__smakebuf_r>:
 80123e8:	898b      	ldrh	r3, [r1, #12]
 80123ea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80123ec:	079d      	lsls	r5, r3, #30
 80123ee:	4606      	mov	r6, r0
 80123f0:	460c      	mov	r4, r1
 80123f2:	d507      	bpl.n	8012404 <__smakebuf_r+0x1c>
 80123f4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80123f8:	6023      	str	r3, [r4, #0]
 80123fa:	6123      	str	r3, [r4, #16]
 80123fc:	2301      	movs	r3, #1
 80123fe:	6163      	str	r3, [r4, #20]
 8012400:	b003      	add	sp, #12
 8012402:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012404:	ab01      	add	r3, sp, #4
 8012406:	466a      	mov	r2, sp
 8012408:	f7ff ffc8 	bl	801239c <__swhatbuf_r>
 801240c:	9f00      	ldr	r7, [sp, #0]
 801240e:	4605      	mov	r5, r0
 8012410:	4639      	mov	r1, r7
 8012412:	4630      	mov	r0, r6
 8012414:	f7fe fd22 	bl	8010e5c <_malloc_r>
 8012418:	b948      	cbnz	r0, 801242e <__smakebuf_r+0x46>
 801241a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801241e:	059a      	lsls	r2, r3, #22
 8012420:	d4ee      	bmi.n	8012400 <__smakebuf_r+0x18>
 8012422:	f023 0303 	bic.w	r3, r3, #3
 8012426:	f043 0302 	orr.w	r3, r3, #2
 801242a:	81a3      	strh	r3, [r4, #12]
 801242c:	e7e2      	b.n	80123f4 <__smakebuf_r+0xc>
 801242e:	89a3      	ldrh	r3, [r4, #12]
 8012430:	6020      	str	r0, [r4, #0]
 8012432:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8012436:	81a3      	strh	r3, [r4, #12]
 8012438:	9b01      	ldr	r3, [sp, #4]
 801243a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801243e:	b15b      	cbz	r3, 8012458 <__smakebuf_r+0x70>
 8012440:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8012444:	4630      	mov	r0, r6
 8012446:	f000 f81d 	bl	8012484 <_isatty_r>
 801244a:	b128      	cbz	r0, 8012458 <__smakebuf_r+0x70>
 801244c:	89a3      	ldrh	r3, [r4, #12]
 801244e:	f023 0303 	bic.w	r3, r3, #3
 8012452:	f043 0301 	orr.w	r3, r3, #1
 8012456:	81a3      	strh	r3, [r4, #12]
 8012458:	89a3      	ldrh	r3, [r4, #12]
 801245a:	431d      	orrs	r5, r3
 801245c:	81a5      	strh	r5, [r4, #12]
 801245e:	e7cf      	b.n	8012400 <__smakebuf_r+0x18>

08012460 <_fstat_r>:
 8012460:	b538      	push	{r3, r4, r5, lr}
 8012462:	4d07      	ldr	r5, [pc, #28]	@ (8012480 <_fstat_r+0x20>)
 8012464:	2300      	movs	r3, #0
 8012466:	4604      	mov	r4, r0
 8012468:	4608      	mov	r0, r1
 801246a:	4611      	mov	r1, r2
 801246c:	602b      	str	r3, [r5, #0]
 801246e:	f7ef fd41 	bl	8001ef4 <_fstat>
 8012472:	1c43      	adds	r3, r0, #1
 8012474:	d102      	bne.n	801247c <_fstat_r+0x1c>
 8012476:	682b      	ldr	r3, [r5, #0]
 8012478:	b103      	cbz	r3, 801247c <_fstat_r+0x1c>
 801247a:	6023      	str	r3, [r4, #0]
 801247c:	bd38      	pop	{r3, r4, r5, pc}
 801247e:	bf00      	nop
 8012480:	20000ab8 	.word	0x20000ab8

08012484 <_isatty_r>:
 8012484:	b538      	push	{r3, r4, r5, lr}
 8012486:	4d06      	ldr	r5, [pc, #24]	@ (80124a0 <_isatty_r+0x1c>)
 8012488:	2300      	movs	r3, #0
 801248a:	4604      	mov	r4, r0
 801248c:	4608      	mov	r0, r1
 801248e:	602b      	str	r3, [r5, #0]
 8012490:	f7ef fd40 	bl	8001f14 <_isatty>
 8012494:	1c43      	adds	r3, r0, #1
 8012496:	d102      	bne.n	801249e <_isatty_r+0x1a>
 8012498:	682b      	ldr	r3, [r5, #0]
 801249a:	b103      	cbz	r3, 801249e <_isatty_r+0x1a>
 801249c:	6023      	str	r3, [r4, #0]
 801249e:	bd38      	pop	{r3, r4, r5, pc}
 80124a0:	20000ab8 	.word	0x20000ab8

080124a4 <fmod>:
 80124a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80124a6:	ed2d 8b02 	vpush	{d8}
 80124aa:	ec57 6b10 	vmov	r6, r7, d0
 80124ae:	ec55 4b11 	vmov	r4, r5, d1
 80124b2:	f000 f825 	bl	8012500 <__ieee754_fmod>
 80124b6:	4622      	mov	r2, r4
 80124b8:	462b      	mov	r3, r5
 80124ba:	4630      	mov	r0, r6
 80124bc:	4639      	mov	r1, r7
 80124be:	eeb0 8a40 	vmov.f32	s16, s0
 80124c2:	eef0 8a60 	vmov.f32	s17, s1
 80124c6:	f7ee fb59 	bl	8000b7c <__aeabi_dcmpun>
 80124ca:	b990      	cbnz	r0, 80124f2 <fmod+0x4e>
 80124cc:	2200      	movs	r2, #0
 80124ce:	2300      	movs	r3, #0
 80124d0:	4620      	mov	r0, r4
 80124d2:	4629      	mov	r1, r5
 80124d4:	f7ee fb20 	bl	8000b18 <__aeabi_dcmpeq>
 80124d8:	b158      	cbz	r0, 80124f2 <fmod+0x4e>
 80124da:	f7fd fa79 	bl	800f9d0 <__errno>
 80124de:	2321      	movs	r3, #33	@ 0x21
 80124e0:	6003      	str	r3, [r0, #0]
 80124e2:	2200      	movs	r2, #0
 80124e4:	2300      	movs	r3, #0
 80124e6:	4610      	mov	r0, r2
 80124e8:	4619      	mov	r1, r3
 80124ea:	f7ee f9d7 	bl	800089c <__aeabi_ddiv>
 80124ee:	ec41 0b18 	vmov	d8, r0, r1
 80124f2:	eeb0 0a48 	vmov.f32	s0, s16
 80124f6:	eef0 0a68 	vmov.f32	s1, s17
 80124fa:	ecbd 8b02 	vpop	{d8}
 80124fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012500 <__ieee754_fmod>:
 8012500:	ec53 2b11 	vmov	r2, r3, d1
 8012504:	f023 4c00 	bic.w	ip, r3, #2147483648	@ 0x80000000
 8012508:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801250c:	ea52 040c 	orrs.w	r4, r2, ip
 8012510:	ec51 0b10 	vmov	r0, r1, d0
 8012514:	461e      	mov	r6, r3
 8012516:	4617      	mov	r7, r2
 8012518:	4696      	mov	lr, r2
 801251a:	d00c      	beq.n	8012536 <__ieee754_fmod+0x36>
 801251c:	4c77      	ldr	r4, [pc, #476]	@ (80126fc <__ieee754_fmod+0x1fc>)
 801251e:	f021 4800 	bic.w	r8, r1, #2147483648	@ 0x80000000
 8012522:	45a0      	cmp	r8, r4
 8012524:	4689      	mov	r9, r1
 8012526:	d806      	bhi.n	8012536 <__ieee754_fmod+0x36>
 8012528:	4254      	negs	r4, r2
 801252a:	4d75      	ldr	r5, [pc, #468]	@ (8012700 <__ieee754_fmod+0x200>)
 801252c:	4314      	orrs	r4, r2
 801252e:	ea4c 74d4 	orr.w	r4, ip, r4, lsr #31
 8012532:	42ac      	cmp	r4, r5
 8012534:	d909      	bls.n	801254a <__ieee754_fmod+0x4a>
 8012536:	f7ee f887 	bl	8000648 <__aeabi_dmul>
 801253a:	4602      	mov	r2, r0
 801253c:	460b      	mov	r3, r1
 801253e:	f7ee f9ad 	bl	800089c <__aeabi_ddiv>
 8012542:	ec41 0b10 	vmov	d0, r0, r1
 8012546:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801254a:	45e0      	cmp	r8, ip
 801254c:	4682      	mov	sl, r0
 801254e:	4604      	mov	r4, r0
 8012550:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8012554:	dc09      	bgt.n	801256a <__ieee754_fmod+0x6a>
 8012556:	dbf4      	blt.n	8012542 <__ieee754_fmod+0x42>
 8012558:	4282      	cmp	r2, r0
 801255a:	d8f2      	bhi.n	8012542 <__ieee754_fmod+0x42>
 801255c:	d105      	bne.n	801256a <__ieee754_fmod+0x6a>
 801255e:	4b69      	ldr	r3, [pc, #420]	@ (8012704 <__ieee754_fmod+0x204>)
 8012560:	eb03 7315 	add.w	r3, r3, r5, lsr #28
 8012564:	e9d3 0100 	ldrd	r0, r1, [r3]
 8012568:	e7eb      	b.n	8012542 <__ieee754_fmod+0x42>
 801256a:	4a65      	ldr	r2, [pc, #404]	@ (8012700 <__ieee754_fmod+0x200>)
 801256c:	ea19 0f02 	tst.w	r9, r2
 8012570:	d148      	bne.n	8012604 <__ieee754_fmod+0x104>
 8012572:	f1b8 0f00 	cmp.w	r8, #0
 8012576:	d13d      	bne.n	80125f4 <__ieee754_fmod+0xf4>
 8012578:	4963      	ldr	r1, [pc, #396]	@ (8012708 <__ieee754_fmod+0x208>)
 801257a:	4653      	mov	r3, sl
 801257c:	2b00      	cmp	r3, #0
 801257e:	dc36      	bgt.n	80125ee <__ieee754_fmod+0xee>
 8012580:	4216      	tst	r6, r2
 8012582:	d14f      	bne.n	8012624 <__ieee754_fmod+0x124>
 8012584:	f1bc 0f00 	cmp.w	ip, #0
 8012588:	d144      	bne.n	8012614 <__ieee754_fmod+0x114>
 801258a:	4a5f      	ldr	r2, [pc, #380]	@ (8012708 <__ieee754_fmod+0x208>)
 801258c:	463b      	mov	r3, r7
 801258e:	2b00      	cmp	r3, #0
 8012590:	dc3d      	bgt.n	801260e <__ieee754_fmod+0x10e>
 8012592:	485e      	ldr	r0, [pc, #376]	@ (801270c <__ieee754_fmod+0x20c>)
 8012594:	4281      	cmp	r1, r0
 8012596:	db4a      	blt.n	801262e <__ieee754_fmod+0x12e>
 8012598:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801259c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80125a0:	485a      	ldr	r0, [pc, #360]	@ (801270c <__ieee754_fmod+0x20c>)
 80125a2:	4282      	cmp	r2, r0
 80125a4:	db57      	blt.n	8012656 <__ieee754_fmod+0x156>
 80125a6:	f3c6 0613 	ubfx	r6, r6, #0, #20
 80125aa:	f446 1680 	orr.w	r6, r6, #1048576	@ 0x100000
 80125ae:	1a89      	subs	r1, r1, r2
 80125b0:	1b98      	subs	r0, r3, r6
 80125b2:	eba4 070e 	sub.w	r7, r4, lr
 80125b6:	2900      	cmp	r1, #0
 80125b8:	d162      	bne.n	8012680 <__ieee754_fmod+0x180>
 80125ba:	4574      	cmp	r4, lr
 80125bc:	bf38      	it	cc
 80125be:	f100 30ff 	addcc.w	r0, r0, #4294967295
 80125c2:	2800      	cmp	r0, #0
 80125c4:	bfa4      	itt	ge
 80125c6:	463c      	movge	r4, r7
 80125c8:	4603      	movge	r3, r0
 80125ca:	ea53 0104 	orrs.w	r1, r3, r4
 80125ce:	d0c6      	beq.n	801255e <__ieee754_fmod+0x5e>
 80125d0:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80125d4:	db69      	blt.n	80126aa <__ieee754_fmod+0x1aa>
 80125d6:	494d      	ldr	r1, [pc, #308]	@ (801270c <__ieee754_fmod+0x20c>)
 80125d8:	428a      	cmp	r2, r1
 80125da:	db6c      	blt.n	80126b6 <__ieee754_fmod+0x1b6>
 80125dc:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80125e0:	432b      	orrs	r3, r5
 80125e2:	f202 32ff 	addw	r2, r2, #1023	@ 0x3ff
 80125e6:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 80125ea:	4620      	mov	r0, r4
 80125ec:	e7a9      	b.n	8012542 <__ieee754_fmod+0x42>
 80125ee:	3901      	subs	r1, #1
 80125f0:	005b      	lsls	r3, r3, #1
 80125f2:	e7c3      	b.n	801257c <__ieee754_fmod+0x7c>
 80125f4:	4945      	ldr	r1, [pc, #276]	@ (801270c <__ieee754_fmod+0x20c>)
 80125f6:	ea4f 23c8 	mov.w	r3, r8, lsl #11
 80125fa:	2b00      	cmp	r3, #0
 80125fc:	ddc0      	ble.n	8012580 <__ieee754_fmod+0x80>
 80125fe:	3901      	subs	r1, #1
 8012600:	005b      	lsls	r3, r3, #1
 8012602:	e7fa      	b.n	80125fa <__ieee754_fmod+0xfa>
 8012604:	ea4f 5128 	mov.w	r1, r8, asr #20
 8012608:	f2a1 31ff 	subw	r1, r1, #1023	@ 0x3ff
 801260c:	e7b8      	b.n	8012580 <__ieee754_fmod+0x80>
 801260e:	3a01      	subs	r2, #1
 8012610:	005b      	lsls	r3, r3, #1
 8012612:	e7bc      	b.n	801258e <__ieee754_fmod+0x8e>
 8012614:	4a3d      	ldr	r2, [pc, #244]	@ (801270c <__ieee754_fmod+0x20c>)
 8012616:	ea4f 23cc 	mov.w	r3, ip, lsl #11
 801261a:	2b00      	cmp	r3, #0
 801261c:	ddb9      	ble.n	8012592 <__ieee754_fmod+0x92>
 801261e:	3a01      	subs	r2, #1
 8012620:	005b      	lsls	r3, r3, #1
 8012622:	e7fa      	b.n	801261a <__ieee754_fmod+0x11a>
 8012624:	ea4f 522c 	mov.w	r2, ip, asr #20
 8012628:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 801262c:	e7b1      	b.n	8012592 <__ieee754_fmod+0x92>
 801262e:	1a40      	subs	r0, r0, r1
 8012630:	281f      	cmp	r0, #31
 8012632:	dc0a      	bgt.n	801264a <__ieee754_fmod+0x14a>
 8012634:	f201 431e 	addw	r3, r1, #1054	@ 0x41e
 8012638:	fa08 f800 	lsl.w	r8, r8, r0
 801263c:	fa2a f303 	lsr.w	r3, sl, r3
 8012640:	ea43 0308 	orr.w	r3, r3, r8
 8012644:	fa0a f400 	lsl.w	r4, sl, r0
 8012648:	e7aa      	b.n	80125a0 <__ieee754_fmod+0xa0>
 801264a:	4b31      	ldr	r3, [pc, #196]	@ (8012710 <__ieee754_fmod+0x210>)
 801264c:	1a5b      	subs	r3, r3, r1
 801264e:	fa0a f303 	lsl.w	r3, sl, r3
 8012652:	2400      	movs	r4, #0
 8012654:	e7a4      	b.n	80125a0 <__ieee754_fmod+0xa0>
 8012656:	1a80      	subs	r0, r0, r2
 8012658:	281f      	cmp	r0, #31
 801265a:	dc0a      	bgt.n	8012672 <__ieee754_fmod+0x172>
 801265c:	f202 461e 	addw	r6, r2, #1054	@ 0x41e
 8012660:	fa0c fc00 	lsl.w	ip, ip, r0
 8012664:	fa27 f606 	lsr.w	r6, r7, r6
 8012668:	ea46 060c 	orr.w	r6, r6, ip
 801266c:	fa07 fe00 	lsl.w	lr, r7, r0
 8012670:	e79d      	b.n	80125ae <__ieee754_fmod+0xae>
 8012672:	4e27      	ldr	r6, [pc, #156]	@ (8012710 <__ieee754_fmod+0x210>)
 8012674:	1ab6      	subs	r6, r6, r2
 8012676:	fa07 f606 	lsl.w	r6, r7, r6
 801267a:	f04f 0e00 	mov.w	lr, #0
 801267e:	e796      	b.n	80125ae <__ieee754_fmod+0xae>
 8012680:	4574      	cmp	r4, lr
 8012682:	bf38      	it	cc
 8012684:	f100 30ff 	addcc.w	r0, r0, #4294967295
 8012688:	2800      	cmp	r0, #0
 801268a:	da05      	bge.n	8012698 <__ieee754_fmod+0x198>
 801268c:	0fe0      	lsrs	r0, r4, #31
 801268e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012692:	0064      	lsls	r4, r4, #1
 8012694:	3901      	subs	r1, #1
 8012696:	e78b      	b.n	80125b0 <__ieee754_fmod+0xb0>
 8012698:	ea50 0307 	orrs.w	r3, r0, r7
 801269c:	f43f af5f 	beq.w	801255e <__ieee754_fmod+0x5e>
 80126a0:	0ffb      	lsrs	r3, r7, #31
 80126a2:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80126a6:	007c      	lsls	r4, r7, #1
 80126a8:	e7f4      	b.n	8012694 <__ieee754_fmod+0x194>
 80126aa:	0fe1      	lsrs	r1, r4, #31
 80126ac:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80126b0:	0064      	lsls	r4, r4, #1
 80126b2:	3a01      	subs	r2, #1
 80126b4:	e78c      	b.n	80125d0 <__ieee754_fmod+0xd0>
 80126b6:	1a89      	subs	r1, r1, r2
 80126b8:	2914      	cmp	r1, #20
 80126ba:	dc0a      	bgt.n	80126d2 <__ieee754_fmod+0x1d2>
 80126bc:	f202 421e 	addw	r2, r2, #1054	@ 0x41e
 80126c0:	fa03 f202 	lsl.w	r2, r3, r2
 80126c4:	40cc      	lsrs	r4, r1
 80126c6:	4322      	orrs	r2, r4
 80126c8:	410b      	asrs	r3, r1
 80126ca:	ea43 0105 	orr.w	r1, r3, r5
 80126ce:	4610      	mov	r0, r2
 80126d0:	e737      	b.n	8012542 <__ieee754_fmod+0x42>
 80126d2:	291f      	cmp	r1, #31
 80126d4:	dc07      	bgt.n	80126e6 <__ieee754_fmod+0x1e6>
 80126d6:	f202 421e 	addw	r2, r2, #1054	@ 0x41e
 80126da:	40cc      	lsrs	r4, r1
 80126dc:	fa03 f202 	lsl.w	r2, r3, r2
 80126e0:	4322      	orrs	r2, r4
 80126e2:	462b      	mov	r3, r5
 80126e4:	e7f1      	b.n	80126ca <__ieee754_fmod+0x1ca>
 80126e6:	f1c2 427f 	rsb	r2, r2, #4278190080	@ 0xff000000
 80126ea:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 80126ee:	f502 427b 	add.w	r2, r2, #64256	@ 0xfb00
 80126f2:	32e2      	adds	r2, #226	@ 0xe2
 80126f4:	fa43 f202 	asr.w	r2, r3, r2
 80126f8:	e7f3      	b.n	80126e2 <__ieee754_fmod+0x1e2>
 80126fa:	bf00      	nop
 80126fc:	7fefffff 	.word	0x7fefffff
 8012700:	7ff00000 	.word	0x7ff00000
 8012704:	08012ce8 	.word	0x08012ce8
 8012708:	fffffbed 	.word	0xfffffbed
 801270c:	fffffc02 	.word	0xfffffc02
 8012710:	fffffbe2 	.word	0xfffffbe2

08012714 <_init>:
 8012714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012716:	bf00      	nop
 8012718:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801271a:	bc08      	pop	{r3}
 801271c:	469e      	mov	lr, r3
 801271e:	4770      	bx	lr

08012720 <_fini>:
 8012720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012722:	bf00      	nop
 8012724:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8012726:	bc08      	pop	{r3}
 8012728:	469e      	mov	lr, r3
 801272a:	4770      	bx	lr
